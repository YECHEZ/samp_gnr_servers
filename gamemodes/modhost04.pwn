//==============================================================================
//                            Основные настройки
//==============================================================================

#define MOD11INS 4 //настройка версии сервера:
//                 //MOD11INS 1 - версия 0.3e
//                 //MOD11INS 2 - версия 0.3x
//                 //MOD11INS 3 - версия 0.3z
//                 //MOD11INS 4 - версия 0.3.7

#define MOD22INS 1 //подключение плагина FileFunctions:
//                 //MOD22INS 0 - НЕ использовать плагин FileFunctions
//                 //MOD22INS 1 - использовать плагин FileFunctions

#define MOD33INS 2 //вызов игрового меню сервера:
//                 //MOD33INS 1 - кнопка "Y"
//                 //MOD33INS 2 - кнопки "левый Alt" или "2"

#define MOD44INS 1 //подключение кодексов сервера:
//                 //MOD44INS 0 - НЕ использовать кодексы сервера
//                 //MOD44INS 1 - использовать кодексы сервера

#define MOD4AINS 0 //авто-кик игроков-читеров за FLY-чит (или спидхак): *
//                 //MOD4AINS 0 - БЕЗ авто-кика
//                 //MOD4AINS 1 - С авто-киком

#define MOD4BINS 0 //авто-кик игроков-читеров за FLY-чит (или чит-телепорт): *
//                 //MOD4BINS 0 - БЕЗ авто-кика
//                 //MOD4BINS 1 - С авто-киком

#define MOD4CINS 1 //авто-кик игроков за спам в чате (или в командах) +
//                 //авто-кик игроков-читеров за спам вызовами функций:
//                 //MOD4CINS 0 - БЕЗ авто-кика
//                 //MOD4CINS 1 - С авто-киком

#define MOD55INS 0 //режим резервного копирования сервер-лога: **
//                 //MOD55INS 0 - БЕЗ резервного копирования
//                 //MOD55INS 1 - С резервным копированием

#define MOD66INS 3 //режим начального выбора скина и использования сканера собейта:
//                 //MOD66INS 1 - стандартный выбор скина БЕЗ использования сканера собейта
//                 //MOD66INS 2 - изменённый выбор скина БЕЗ использования сканера собейта
//                 //MOD66INS 3 - изменённый выбор скина С использованием сканера собейта

#define MOD77INS 1 //настройка команд /dataakk и /akksrc:
//                 //MOD77INS 0 - БЕЗ использования команд /dataakk и /akksrc
//                 //MOD77INS 1 - С использованием команд /dataakk и /akksrc

#define MOD90INS 0 //режим сохранения аккаунтов игроков: ***
//                 //MOD90INS 0 - стандартная файловая система SA-MP (fopen)
//                 //MOD90INS 1 - локальная база данных (SQLite)

#define MOD91INS 0 //создание новой (пустой) базы данных аккаунтов игроков: ****
//                 //MOD91INS 0 - НЕ создавать новую (пустую) базу данных (нормальный режим работы сервера)
//                 //MOD91INS 1 - создать новую (пустую) базу данных

// * ВНИМАНИЕ !!! т.к. FLY-чит на сервере определяется как "быстрое перемещение"
// (спидхак), И как "моментальное перемещение" (чит-телепорт) то, на сервере
// имеются ДВЕ контрольные системы для FLY-чита: FLY-чит (или спидхак)
// И FLY-чит (или чит-телепорт).

// ** ВНИМАНИЕ !!! Если включён режим резервного копирования сервер-лога
// (MOD55INS 1), то в папке сервера "scriptfiles" ОБЯЗАТЕЛЬНО создайте папку
// "server_log" !!! Иначе сервер, после вкючения, будет уходить в краш !!!

// *** ВНИМАНИЕ !!! Во избежание вайпа уже имеющихся серверов (на хостах), в данном
// моде реализована автоматическая миграция аккаунтов игроков: ИЗ стандартной
// файловой системы SA-MP (fopen) В локальную базу данных (SQLite) !!!

// **** ВНИМАНИЕ !!! Для создания новой (пустой) базы данных аккаунтов игроков
// измените настройку в строке 53 (MOD91INS 1) и включите (запустите) сервер.
// После сообщения сервера (в сервер-логе) о создании новой (пустой) базы
// данных аккаунтов игроков - выключите (закройте) сервер, и верните настройку
// в строке 53 в нормальный режим работы сервера (MOD91INS 0) !!!

//   ВНИМАНИЕ !!! после изменения настроек ОБЯЗАТЕЛЬНО откомпилировать !!!

//==============================================================================
//                              GarHouse
//==============================================================================
//                              Includes
//==============================================================================
//#include <a_samp> //
#include <streamer> //
#include <dini2> //
#include <dudb2> //
#include <sscanf2> //
//#pragma unused strtok //
#pragma dynamic 25000 //
//==============================================================================
//                              End GarHouse
//==============================================================================

#if (MOD11INS < 1)
	#undef MOD11INS
	#define MOD11INS 1
#endif
#if (MOD11INS > 4)
	#undef MOD11INS
	#define MOD11INS 4
#endif
#if (MOD22INS < 0)
	#undef MOD22INS
	#define MOD22INS 0
#endif
#if (MOD22INS > 1)
	#undef MOD22INS
	#define MOD22INS 1
#endif
#if (MOD33INS < 1)
	#undef MOD33INS
	#define MOD33INS 1
#endif
#if (MOD33INS > 2)
	#undef MOD33INS
	#define MOD33INS 2
#endif
#if (MOD44INS < 0)
	#undef MOD44INS
	#define MOD44INS 0
#endif
#if (MOD44INS > 1)
	#undef MOD44INS
	#define MOD44INS 1
#endif
#if (MOD4AINS < 0)
	#undef MOD4AINS
	#define MOD4AINS 0
#endif
#if (MOD4AINS > 1)
	#undef MOD4AINS
	#define MOD4AINS 1
#endif
#if (MOD4BINS < 0)
	#undef MOD4BINS
	#define MOD4BINS 0
#endif
#if (MOD4BINS > 1)
	#undef MOD4BINS
	#define MOD4BINS 1
#endif
#if (MOD4CINS < 0)
	#undef MOD4CINS
	#define MOD4CINS 0
#endif
#if (MOD4CINS > 1)
	#undef MOD4CINS
	#define MOD4CINS 1
#endif
#if (MOD55INS < 0)
	#undef MOD55INS
	#define MOD55INS 0
#endif
#if (MOD55INS > 1)
	#undef MOD55INS
	#define MOD55INS 1
#endif
#if (MOD66INS < 1)
	#undef MOD66INS
	#define MOD66INS 1
#endif
#if (MOD66INS > 3)
	#undef MOD66INS
	#define MOD66INS 3
#endif
#if (MOD77INS < 0)
	#undef MOD77INS
	#define MOD77INS 0
#endif
#if (MOD77INS > 1)
	#undef MOD77INS
	#define MOD77INS 1
#endif
#if (MOD90INS < 0)
	#undef MOD90INS
	#define MOD90INS 0
#endif
#if (MOD90INS > 1)
	#undef MOD90INS
	#define MOD90INS 1
#endif
#if (MOD91INS < 0)
	#undef MOD91INS
	#define MOD91INS 0
#endif
#if (MOD91INS > 1)
	#undef MOD91INS
	#define MOD91INS 1
#endif

#include <a_samp>
#include <utils>
//#include <MidoStream>
//#include <AutoGate>
#include <MXini>

#if (MOD22INS == 1)
	#include <FileFunctions>//античит-2
#endif

#pragma tabsize 0

#undef MAX_PLAYERS
#define MAX_PLAYERS 101 //максимум игроков на сервере + 1 (если 50 игроков, то пишем 51 !!!)

#if (MAX_PLAYERS > 501)
	#undef MAX_PLAYERS
	#define MAX_PLAYERS 501
#endif

#define MAX_GANGS 300 //максимум кланов + 2 (если 100 кланов, то пишем 102 !!!)
//----------------------------------------------------------------------
// Чтобы система кланов работала, создайте в папке сервера "scriptfiles"
// папку "gangs", а в папке "gangs" - создайте папки "idgn" и "players"
// ВНИМАНИЕ !!! В новой версии мода (после 24.11.2014) - папки "idgn"
// и "players" в папке "gangs" создавать НЕ нужно, НО, если у Вас УЖЕ
// есть файлы в папках "idgn" и "players", то мод сам (автоматически)
// будет переносить данные из этих папок, по мере подключения уже
// зарегистрированных игроков к серверу !!!
//----------------------------------------------------------------------

//------------------------------ BusSystem -------------------------------------
#define BUS_MAX 100 //максимум бизнесов на сервере (от 1 до 300)
#define BUS_PLAY 2 //максимум бизнесов, сколько может купить один игрок (от 1 до 5)
#define BUS_DAY 3 //число суток, сколько бизнес "закреплён" за игроком без права перекупки (от 1 до 5)

#if (BUS_MAX < 1)
	#undef BUS_MAX
	#define BUS_MAX 1
#endif
#if (BUS_MAX > 300)
	#undef BUS_MAX
	#define BUS_MAX 300
#endif
#if (BUS_PLAY < 1)
	#undef BUS_PLAY
	#define BUS_PLAY 1
#endif
#if (BUS_PLAY > 5)
	#undef BUS_PLAY
	#define BUS_PLAY 5
#endif
#if (BUS_DAY < 1)
	#undef BUS_DAY
	#define BUS_DAY 1
#endif
#if (BUS_DAY > 5)
	#undef BUS_DAY
	#define BUS_DAY 5
#endif
//---------------------------- End BusSystem -----------------------------------

//==============================================================================
//                              GarHouse
//==============================================================================
#define dcmd(%1,%2,%3) if (!strcmp((%3)[1], #%1, true, (%2)) && ((((%3)[(%2) + 1] == '\0') && (dcmd_%1(playerid, ""))) || (((%3)[(%2) + 1] == ' ') && (dcmd_%1(playerid, (%3)[(%2) + 2]))))) return 1
new FALSE = false, CMDSString[1000];
#define ShowInfoBox(%0,%1,%2,%3) do{format(CMDSString, 1000, %2, %3); ShowPlayerDialog(%0, 520, DIALOG_STYLE_MSGBOX, %1, CMDSString, "Close", "Cancel");}while(FALSE)
#define SendMSG(%0,%1,%2,%3,%4) do{new _str[%2]; format(_str,%2,%3,%4); SendClientMessage(%0,%1,_str);}while(FALSE)
#define Loop(%0,%1) for(new %0 = 0; %0 < %1; %0++)
#define TYPE_OUT (0)
#define TYPE_INT (1)
//==============================================================================
//                              Colours
//==============================================================================
#define COLOUR_INFO 0x00FFFFFF
#define COLOUR_SYSTEM 0xB60000FF
#define COLOUR_YELLOW 0xFFFF2AFF
#define COLOUR_GREEN 0x00BC00FF
//==============================================================================
//                              Configuration
//==============================================================================
//#define HOUSEMENU 21700 // ид диолога
#define SPAWN_IN_HOUSE // Комментарий Если вы не хотите, чтобы игрок spawn в своем доме в следующий раз он возвращается.
#define GH_USE_MAPICONS // Комментарий, если вы не хотите карте значками.
#define GH_HINTERIOR_UPGRADE // Комментарий, если вы не хотите, чтобы игроки были в состоянии модернизировать их домашнего интерьера.
#define HSPAWN_TIMER_RATE 1000 // После, как долго будет таймер вызова появляются в доме функции? (в мс)
#define MICON_VD 100.0 // Значок карты видимом диапазоне (drawdistance).
//#define MICON_VD 50.0 // Значок карты видимом диапазоне (drawdistance).
#define DEFAULT_H_INTERIOR 0 // DEFAULT домашнего интерьера при создании дома
#define DEFAULT_H_INTERIOR_PRICE 3000000 // По умолчанию домашнего интерьера цена при создании дома
#define GH_USE_WEAPONSTORAGE // Если определено владельца дома может хранить свое оружие в доме хранения.
#define GH_SAVE_ADMINWEPS // Если определено дом владелец может сохранить оружие, как пулемет, гранаты, РПГ и т.д..
#define GH_DEBUGGING // Если определена это позволит отладки печатает в консоли сервера.
//#define GH_HOUSECARS // Если определенный сценарий будет иметь дом автомобили (примечание: вам нужно добавить позицию дом автомобиля с помощью /addhcar)
// Примечание 2: Необходимо определить SPAWN_IN_HOUSE для того, чтобы создать housecar на первом spawn.
#define HCAR_COLOUR1 -1 // первый цвет housecar
#define HCAR_COLOUR2 -1 // Второй цвет housecar
#define HCAR_RESPAWN 60 // респаун задержки дом автомобиля (в секундах)
#define HCAR_RANGE 10.0 // Диапазон для проверки близлежащих транспортных средств при сохранении дома автомобиля.
#define MAX_HOUSES 500 // Макс дома создан
//#define MAX_HOUSES 250 // Макс дома создан
#define MAX_HOUSES_OWNED 4 // Макс домов, принадлежащих за игрока
//#define MAX_HOUSES_OWNED 1 // Макс домов, принадлежащих за игрока
#define PICKUP_MODEL_OUT (1273)
#define PICKUP_MODEL_INT (1272)
#define PICKUP_TYPE (1)
#define HOUSEFILE_LENGTH 30 // Длина housefile (по умолчанию /GarHouse/Houses/<0-MAX_HOUSES>.ini
#define MAX_VISIT_TIME 60 // Максимальное время игрок может быть посещения в (в секундах).
//#define MAX_VISIT_TIME 1 // Максимальное время игрок может быть посещения в (в минутах).
#define INVALID_HOWNER_NAME "*** INV_PL_ID" // "имя " хозяина дома, когда нет реального владельца дома (если это имело смысл)
//#define INVALID_HOWNER_NAME "INVALID_PLAYER_ID" // "имя " хозяина дома, когда нет реального владельца дома (если это имело смысл)
//#define TIME_BETWEEN_VISITS 2 // время игрок должен подождать, прежде чем просмотр нового интерьера дома (в минутах).
#define H_INT_0_VALUE 3000000 // Интерьер дома цена для домашнего интерьера 0
#define H_INT_1_VALUE 100000 //Интерьер дома цена для домашнего интерьера 1
#define H_INT_2_VALUE 1000000 // Интерьер дома цена для домашнего интерьера 2
#define H_INT_3_VALUE 1500000 // Интерьер дома цена для домашнего интерьера 3
#define H_INT_4_VALUE 1500000 // Интерьер дома цена для домашнего интерьера 4
#define H_INT_5_VALUE 2500000 // Интерьер дома цена для домашнего интерьера 5
#define H_INT_6_VALUE 3000000 // Интерьер дома цена для домашнего интерьера 6
#define H_INT_7_VALUE 5000000 // Интерьер дома цена для домашнего интерьера 7
#define H_INT_8_VALUE 7500000 // Интерьер дома цена для домашнего интерьера 8
#define H_INT_9_VALUE 10000000 // Интерьер дома цена для домашнего интерьера 9
#define H_INT_10_VALUE 25000000 // Интерьер дома цена для домашнего интерьера 10
#define HOUSE_SELLING_PROCENT 75 // количество дом значение игрок получит, когда дом продается.
#define HOUSE_SELLING_PROCENT2 6.5 // Общий процент близлежащих домов будет идти /down путем, когда дом продается /bought неподалеку.
#define RANGE_BETWEEN_HOUSES 200 // диапазон, используемый при увеличении /decreasing Значение близлежащих домов, когда дом купили /sold (значение 0 для отключения)
#define MAX_HOUSE_NAME 35 // Максимальная длина дом имя
#define MIN_HOUSE_NAME 4 // Mв длину дом имя
#define MAX_HOUSE_PASSWORD 35 // Максимальная длина пароля дом
#define MIN_HOUSE_PASSWORD 4 // Мин длина дом пароль
//#define MIN_HOUSE_PASSWORD 8 // Мин длина дом пароль
#define DEFAULT_HOUSE_NAME "Свободен" // имя по умолчанию, когда дом создан /sold
#define MIN_HOUSE_VALUE 500000 // Мин дома стоимость дома (OFC цены будут изменяться, когда дом купили /sold поблизости)
#define MAX_HOUSE_VALUE 25000000 // Макс дома стоимость дома (OFC цены будут изменяться, когда дом купили /sold поблизости)
#define CASE_SENSETIVE false // Используется в виде чеков STRCMP имя. Определить, как истинный /false [0/1]. Читайте вики для получения дополнительной информации
//#define CASE_SENSETIVE true // Используется в виде чеков STRCMP имя. Определить, как истинный /false [0/1]. Читайте вики для получения дополнительной информации

new HousePickupOut[MAX_HOUSES], HousePickupInt[MAX_HOUSES];
new Text3D:HouseLabel[MAX_HOUSES];
new Float:Xgh, Float:Ygh, Float:Zgh, Float:Anglegh;
#if defined GH_USE_MAPICONS
	new HouseMIcon[MAX_HOUSES];
#endif
#if defined GH_HOUSECARS
	new HouseCar[MAX_HOUSES];
#endif
//==============================================================================

//------------------------------------------------------------------------------
//                              Important.
//------------------------------------------------------------------------------
#define LABELTEXT1 "Дом: %s\nВладелец дома: Нет хозяина\nДом продаётся за: %d $\nДом ID: %d"
#define LABELTEXT2 "Имя дома: %s\nВладелец дома: %s\nДом куплен за: %d $\nДом ID: %d"
#define FILEPATH "/GarHouse/Houses/%d.ini"
#define INFORMATION_HEADER "Информация"
//------------------------------------------------------------------------------
// 				Информация и сообщения об ошибках
//------------------------------------------------------------------------------
#define E_NO_HOUSES_OWNED "Вы не являетесь владельцем этого дома."
#define I_HMENU "/housemenu - для доступа к меню дома."
#define E_H_ALREADY_OWNED "Этот дом уже принадлежит другому."
#define E_INVALID_HPASS_LENGTH "Неверная длина пароля."
#define E_INVALID_HPASS "Неверный пароль. Вы не можете использовать этот пароль."
#define E_INVALID_HNAME_LENGTH "Неверная длина имени дома."
#define I_HPASS_NO_CHANGE "Пароль для дома остался без изменений."
#define I_HPASS_REMOVED "Пароль дома был удален."
#define E_NOT_ENOUGH_PMONEY "У Вас нет столько денег!"
#define E_INVALID_AMOUNT "Неверная сумма."
#define E_HSTORAGE_L_REACHED "Вы не можете хранить в доме столько денег. (максимум 25000000 $)"
#define E_NOT_ENOUGH_HSMONEY "У Вас нет на хранении столько денег!"
#define E_NO_WEAPONS "У Вас нет оружия."
#define E_NO_HS_WEAPONS "У Вас нет оружия на хранении."
#define E_C_ACCESS_SE_HM "Вы не можете открыть меню дома, это не Ваш дом."
#define E_NOT_IN_HOUSE "Вы должны быть в доме для использования этой команды."
#define E_NOT_HOWNER "Вы должны быть владельцем дома для использования этой команды."
#define E_HCAR_NOT_IN_VEH "Вы должны быть в автомобиле. Добавить автомобиль возле дома."
#define E_INVALID_HID "Неверный дом ID. Этот дом ID не существует."
#define E_NO_HCAR "Этот дом ID не имеет автомобиля возле дома. Не удается удалить."
#define E_H_A_F_SALE "Этот дом уже на продаже. Вы не можете продать дом."
#define HMENU_ENTER_PASS "Имя дома: %s\nВладелец дома: %s\nДом продаётся за: %d $\nДом ID: %d\n\nЧтобы войти в дом, введите пароль:"
#define HMENU_BUY_HOUSE "%s, Вы хотите купить этот дом за %d $ ?"
#define HMENU_BUY_HINTERIOR "Вы хотите купить интерьер %s для дома за %d $ ?"
#define HMENU_SELL_HOUSE "%s, Вы уверены, что хотите продать свой дом %s за %d $ ?"
#define I_SELL_HOUSE1 "Вы успешно продали свой дом за %d $.\nОплата: %d $.\nВаши %d $ , находившиеся на хранении, были переданы Вам."
#define I_SELL_HOUSE2 "Вы успешно продали свой дом \"%s\" за %d $.\nОплата: %d $."
#define I_BUY_HOUSE "Вы успешно купили этот дом за %d $ !"
#define I_HPASSWORD_CHANGED "Вы успешно создали пароль для дома \"%s\"!"
#define I_HNAME_CHANGED "Вы успешно изменили имя дома на \"%s\"!"
#define E_ALREADY_HAVE_HINTERIOR "У Вас уже есть этот интерьер."
#define I_VISITING_HOUSEINT "Вы осматриваете интерьер %s.\nЭтот интерьер стоит %d $.\nВремя осмотра закончится через %d Сек."
//#define I_VISITING_HOUSEINT "Вы осматриваете интерьер %s.\nЭтот интерьер стоит %d $.\nВремя осмотра закончится через %d Сек. %s."
#define E_CANT_AFFORD_HINT "Вы не можете позволить себе купить интерьер %s.\nСтоимость интерьера: %d $.\nУ Вас есть: %d $.\nВам не хватает: %d $."
#define I_HINT_BOUGHT "Вы купили интерьер %s за %d $."
#define I_HINT_DEPOSIT1 "У Вас на хранении уже есть %d $.\n\nВведите сумму, которую вы хотите положить:"
#define I_HINT_WITHDRAW1 "У Вас на хранении есть %d $.\n\nВведите сумму, которую вы хотите снять:"
#define I_HINT_DEPOSIT2 "Вы успешно положили на хранение %d $.\nТекущий баланс: %d $."
#define I_HINT_WITHDRAW2 "Вы успешно сняли с хранения %d $.\nТекущий баланс: %d $."
#define I_HINT_CHECKBALANCE "У Вас на хранении лежит %d $."
#define E_HINT_WAIT_BEFORE_VISITING "Пожалуйста, подождите до осмотра следующего интерьера."
#define I_HS_WEAPONS1 "Успешно сохранено %d единицы оружия в Вашем доме."
//#define I_HS_WEAPONS1 "Успешно сохранен %d Оружие %s В вашем доме хранения."
#define I_HS_WEAPONS2 "Вы успешно сняли с хранения %d единицы оружия в Вашем доме."
//#define I_HS_WEAPONS2 "Успешно поступила %d Оружие %s От вашего дома хранения."
#define I_WRONG_HPASS1 "Вы не вошли в дом %s с использованием пароля \"%s\"."
#define I_WRONG_HPASS2 "Дом информация: %s [%d] попытался войти в дом с использованием пароля \"%s\"."
#define I_CORRECT_HPASS1 "Вы успешно вошли в дом %s используя пароль \"%s\"!"
#define I_CORRECT_HPASS2 "Дом информация: %s [%d] успешно вошёл в Ваш дом, используя пароль \"%s\"!"
#define E_TOO_MANY_HOUSES "Извините, но дом с максимальным ID %d уже создан.\nУдалите один из существующих или увеличите максимум домов."
#define E_INVALID_HVALUE "Неверная стоимость дома. Стоимость должна быть между 500,000 $ и 25,000,000 $."
#define I_H_CREATED "Дом ID %d Создан..."
#define I_HCAR_EXIST_ALREADY "Автомобиль возле дома ID %d уже есть. Замена текущего."
#define I_HCAR_CREATED "Автомобиль возле дома ID %d создан..."
#define I_H_DESTROYED "Дом ID %d удален..."
#define I_HCAR_REMOVED "Автомобиль возле дома ID %d Удалён..."
#define I_ALLH_DESTROYED "Все дома удалены. (%d в итоге)"
#define I_ALLHCAR_REMOVED "Все автомобили возле домов удалены. (%d в итоге)"
#define I_HSPAWN_CHANGED "Вы изменили позицию спавна и угол для дома ID %d."
#define I_TELEPORT_MSG "Вы телепортировались к дому ID %d."
#define I_H_SOLD "Вы продали дом ID %d..."
#define I_ALLH_SOLD "Все дома на сервере были проданы. (%d в итоге)"
#define I_H_PRICE_CHANGED "Стоимость дома ID %d была изменена на %d $."
#define I_ALLH_PRICE_CHANGED "Вы изменили стоимость всех домов на сервере на %d $. (%d в итоге)"
#define I_HINT_VISIT_OVER "Время осмотра закончилось.\nВы хотите купить интерьер %s за %d $ ?"
//#define I_HINT_VISIT_OVER "Ваше посещение время кончилось.\nВы хотите купить дом Интерьер %s Для $%d?"
#define E_INVALID_HCAR_MODEL "Неверный ID модели автомобиля. (ID модели должны быть от 400 и до 611)"
#define I_HCAR_CHANGED "ID модели автомобиля возле дома ID %d был изменён на %d."
//------------------------------------------------------------------------------
#define E_CMD_USAGE_CREATEHOUSE "Использование: /createhouse [стоимость] [дополнительно: интерьер дома]"
#define E_CMD_USAGE_ADDHCAR "Использование: /addhcar [ID дома]"
#define E_CMD_USAGE_REMOVEHOUSE "Использование: /removehouse [ID дома]"
#define E_CMD_USAGE_REMOVEHCAR "Использование: /removehcar [ID дома]"
#define E_CMD_USAGE_CHANGEHCAR "Использование: /changehcar [ID дома] [ID модели: 400-611]"
#define E_CMD_USAGE_CHANGESPAWN "Использование: /changespawn [ID дома]"
#define E_CMD_USAGE_GOTOHOUSE "Использование: /gotohouse [ID дома]"
#define E_CMD_USAGE_SELLHOUSE "Использование: /sellhouse [ID дома]"
#define E_CMD_USAGE_CHANGEPRICE "Использование: /changeprice [ID дома] [стоимость]"
#define E_CMD_USAGE_CHANGEALLPRICE "Использование: /changeallprices [стоимость]"
//------------------------------------------------------------------------------
//                          Отладочные сообщения
//------------------------------------------------------------------------------
#if defined GH_DEBUGGING
#define DEBUG_OP_DISCONNECT "[GarHouse] %s [%d] остался в своём доме (disconnect)"
#define DEBUG_OP_ED_CP1 "[GarHouse] %s [%d] вошёл в дом ID %d."
#define DEBUG_OP_ED_CP2 "[GarHouse] %s [%d] вышел из дома ID %d."
#define DEBUG_OP_PUD_PICKUP1 "[GarHouse] %s [%d] вошёл в дом ID %d."
#define DEBUG_OP_PUD_PICKUP2 "[GarHouse] %s [%d] вышел из дома ID %d."
#define DEBUG_ODR1 "[GarHouse] %s [%d] купил дом ID %d за %d $."
#define DEBUG_ODR2 "[GarHouse] %s [%d] изменил имя дома ID %d на %s ."
#define DEBUG_ODR3 "[GarHouse] %s [%d] купил интерьер %s за %d $ для дома ID %d."
#define DEBUG_ODR4 "[GarHouse] %s [%d] осматривает интерьер %s (дом ID %d)"
#define DEBUG_ODR5 "[GarHouse] для дома ID %d установлен интерьер %d."
#define DEBUG_ODR6 "[GarHouse] %s [%d] проверил сумму денег в доме ID %d (сумма: %d $)"
#define DEBUG_ODR7 "[GarHouse] %s [%d] положил на хранение %d $ в доме ID %d."
#define DEBUG_ODR8 "[GarHouse] %s [%d] снял с хранения %d $ в доме ID %d."
//#define DEBUG_ODR9 "[GarHouse] (OnDialogResponse) - %s [%d] Положить %d оружие%s В доме для хранения дома ID %d."
#define DEBUG_ODR10 "[GarHouse] %s [%d] положил на хранение %d единиц оружия в доме ID %d."
//#define DEBUG_ODR10 "[GarHouse] (OnDialogResponse) - %s [%d] Взять %d оружия%s В доме для хранения дома ID %d."
#define DEBUG_ODR11 "[GarHouse] %s [%d] снял с хранения %d единиц оружия в доме ID %d."
//#define DEBUG_ODR11 "[GarHouse] (OnDialogResponse) - %s [%d] Новое оружия %d оружия%s Из дома для хранения дома ID %d."
#define DEBUG_ODR12 "[GarHouse] %s [%d] успешно вошел в дом ID %d с использованием пароля."
#define DEBUG_ODR13 "[GarHouse] %s [%d] продал свой дом за %d $ (денег в доме: %d $ | дом ID %d)"
#define DEBUG_ODR14 "[GarHouse] %s [%d] изменил пароль для дома ID %d на (%s) FP: (%s) ."
#define DEBUG_OP_CMD1 "[GarHouse] %s [%d] создал дом (дом ID %d | стоимость: %d $ | всего домов: %d)"
#define DEBUG_OP_CMD2 "[GarHouse] %s [%d] создал автомобиль возле дома ID %d."
#define DEBUG_OP_CMD3 "[GarHouse] %s [%d] удалил дом ID %d."
#define DEBUG_OP_CMD4 "[GarHouse] %s [%d] удалил автомобиль возле дома ID %d."
#define DEBUG_OP_CMD5 "[GarHouse] %s [%d] удалил все дома (%d в итоге)"
#define DEBUG_OP_CMD6 "[GarHouse] %s [%d] удалил все автомобили возле домов (%d в итоге)"
#define DEBUG_OP_CMD7 "[GarHouse] %s [%d] изменил позицию спавна и угол для дома ID %d."
#define DEBUG_OP_CMD8 "[GarHouse] %s [%d] продал дом ID %d."
#define DEBUG_OP_CMD9 "[GarHouse] %s [%d] продал все дома (%d в итоге)"
#define DEBUG_OP_CMD10 "[GarHouse] %s [%d] изменил стоимость дома ID %d на %d $."
#define DEBUG_OP_CMD11 "[GarHouse] %s [%d] изменил стоимость всех домов на %d $ (%d в итоге)"
#define DEBUG_OP_CMD12 "[GarHouse] %s [%d] изменил ID модели автомобиля возле дома ID %d на %d."
#define DEBUG_OP_SPAWN "[GarHouse] %s [%d] Заспавнился в своём доме."
#endif

new lockpas[MAX_PLAYERS];//массив блокировок диалога ввода пароля
//разблокировать диалог ввода пароля
#define MAX_VW_HOUSE (999 + MAX_HOUSES)//максимальный виртуальный мир системы домов
//==============================================================================
//                              End GarHouse
//==============================================================================

new tgang[MAX_PLAYERS], gangskin[MAX_PLAYERS], play333[MAX_PLAYERS] = -1;//Clans system
new GangName[MAX_GANGS][130], Gang[MAX_GANGS], GangSA[MAX_GANGS],
GangLvl[MAX_PLAYERS], GName[MAX_GANGS][130], GColorDec[MAX_GANGS],
GColor[MAX_GANGS][16], PGang[MAX_PLAYERS], GColorHex[MAX_GANGS][16],
Float:GSpawnX[MAX_GANGS], Float:GSpawnY[MAX_GANGS], GTDReg[MAX_GANGS][32],
Float:GSpawnZ[MAX_GANGS], GSkin[MAX_GANGS][7], GHead[MAX_GANGS][64],
GInter[MAX_GANGS], GWorld[MAX_GANGS], GPlayers[MAX_GANGS], GangDopper[MAX_PLAYERS];
new locper3[MAX_PLAYERS];//вспомогательная переменная ID кланов для записи
new idgangsave[MAX_PLAYERS];//ID кланов для записи

#define VehicleSpeed_1       false//speedometer
#define VehicleSpeed_2       true

#define DRIFT_MINKAT 10.0//drift bonus
#define DRIFT_MAXKAT 90.0
#define DRIFT_SPEED 30.0

//----------------------------- Elevator - 1 -----------------------------------
#define ELEVATOR_SPEED      (3.0)   //скорость лифта
#define DOORS_SPEED         (1.0)   //скорость дверей
#define ELEVATOR_WAIT_TIME  (5000)  //время ожидания при транзитной остановке

#define X_DOOR_CLOSED       (1786.627685)
#define X_DOOR_R_OPENED     (1785.027685)
#define X_DOOR_L_OPENED     (1788.227685)
#define GROUND_Z_COORD      (14.511476)
#define ELEVATOR_OFFSET     (0.059523)
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	#define ELEVATOR_SPEED22      (3.0)   //скорость лифта
	#define DOORS_SPEED22         (1.0)   //скорость дверей
	#define ELEVATOR_WAIT_TIME22  (5000)  //время ожидания при транзитной остановке

	#define X_DOOR_CLOSED22       (287.9500)
	#define X_DOOR_R_OPENED22     (289.6500)
	#define X_DOOR_L_OPENED22     (286.2500)
	#define GROUND_Z_COORD22      (18.7000)
	#define ELEVATOR_OFFSET22     (0.059523)
//--------------------------- End Elevator - 2 ---------------------------------
#endif

#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_RED 0xAA3333AA
#define COLOR_RED3d 0xAA3333FF
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_CGREEN 0xBFF600AA
#define COLOR_CGREEN3d 0xBFF600FF
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_YELLOW3d 0xFFFF00FF
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_YELLOW23d 0xF5DEB3FF
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_PINK 0xFF66FFAA
#define COLOR_DBLUE 0x2641FEAA
#define COLOR_GREENISHGOLD 0xCCFFDD56
#define COLOR_LEMON 0xDDDD2357
#define COLOR_BASIC 0x0066FFAA

forward LevelUpdate();//drift bonus
forward Drift();
forward DriftCancellation(playerid);

//----------------------------- Elevator - 1 -----------------------------------
forward Elevator_MoveToFloor(floorid);
forward Elevator_Boost(floorid);
forward Elevator_TurnToIdle();
forward RemoveFirstQueueFloor();
forward Float:GetElevatorZCoordForFloor(floorid);
forward Float:GetDoorsZCoordForFloor(floorid);
forward StopMonit();
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	forward ElevTim22();
	forward Elevator_MoveToFloor22(floorid);
	forward Elevator_Boost22(floorid);
	forward Elevator_TurnToIdle22();
	forward RemoveFirstQueueFloor22();
	forward Float:GetElevatorZCoordForFloor22(floorid);
	forward Float:GetDoorsZCoordForFloor22(floorid);
	forward StopMonit22();
//--------------------------- End Elevator - 2 ---------------------------------
#endif

//------------------------------ BusSystem -------------------------------------
forward LoadBusSystem();//загрузка системы бизнесов
forward UnloadBusSystem();//выгрузка системы бизнесов
//---------------------------- End BusSystem -----------------------------------

forward DopAdmtp(playerid, target);//ТП к себе админа, если админ в тюрьме
forward ReadOpenIP();//чтение файла openip.ini
forward SaveOpenIP();//запись файла openip.ini
forward STATPlayer(playerid);//вывод частичной статистики игрока
forward TMPlayBanTimer(admlvl, target, dayban);//временный бан по таймеру
forward ProcUnban(per11);//вычисление дня разбана
forward AutoUnban();//автоматический разбан
forward ConvIP(ipadr[]);//конвертирование IP-адреса в имя файла
forward PlayBanList(playerid, reason[], idbanf);//заполнение бан-листа по ид игрока
forward IPBanList(ipadr[], reason[]);//заполнение бан-листа по IP игрока
forward PlayKickTimer(admlvl, target);//кик по таймеру
forward PlayBanTimer(admlvl, target);//бан по таймеру
forward SecSpa22(playerid);//дополнительный спавн игрока (только координаты И -30 жизни)
forward SecSpa(playerid);//спавн игрока
forward PolSec();//вспомогательный таймер 450 мс
forward ClearIP(playerid);//очистка IP вышедшего игрока
forward AdmUpdate(AdmName[], AdmLvl, AdmReas);//регистрация админов (объявление новой (пользовательской) функции)
forward ReadLogAdm();//чтение файла cash.ini
forward SaveLogAdm();//запись файла cash.ini
forward ReadServCon();//чтение файла servcon.ini
forward SaveServCon();//запись файла servcon.ini
forward DatCor();//коррекция даты
forward TimCor();//коррекция времени
forward ReadCorTime();//чтение файла cortime.ini
forward SaveCorTime();//запись файла cortime.ini
forward DestrCar(playerid);//удаление авто
forward StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//блокировка дрифт-счётчика
forward TelPort(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//флип, телепорт, телепорт с углом авто
forward LineOn1();//подключить трассу 1
forward LineOff1();//отключить трассу 1
forward LineOn2();//подключить трассу 2
forward LineOff2();//отключить трассу 2
forward LineOn3();//подключить трассу 3
forward LineOff3();//отключить трассу 3
forward LineOn4();//подключить трассу 4
forward LineOff4();//отключить трассу 4
forward LineOn5();//подключить трассу 5
forward LineOff5();//отключить трассу 5
forward ReadLine();//чтение файла line.ini
forward SaveLine();//запись файла line.ini
forward PlayDeport(playerid, target);
forward ResServ(per);
forward PlayKick(playerid);
forward PlayBan(playerid);
forward AdminsLvl(playerid);
forward RestartS();
forward OneSecOnd();
forward MinServ();//таймер минут на сервере
forward VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);//спавн транспорта
forward VehicSecSpawn(playerid, vehid, vehcol1, vehcol2, dispz);//спавн транспорта (доп)
forward OnPlayerRegister(playerid, password[]);
forward OnPlayerLogin(playerid,password[]);
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward OnPlayerSaveA(playerid);
forward FiveSecTimer();
forward ShowStats(playerid,targetid);
forward ClearChat(playerid, lines);
forward SendAdminMessage(color, string[]);
forward strtok(const string[],&index);
forward RepairCar();
forward object();
forward object22();

new bool:R_Vehicle[MAX_PLAYERS] = false;//speedometer
new PlayerText:VehicleSpeed[MAX_PLAYERS];
new Text:KMH;

new Text3D:Level3D[MAX_PLAYERS];//drift bonus
new LevelStats[MAX_PLAYERS];
new Text:leveldr[11];
//new Text:Textdraw0;
//new Text:Textdraw1;
new DriftPointsNow[MAX_PLAYERS];
new PlayerDriftCancellation[MAX_PLAYERS];
new Float:ppos[MAX_PLAYERS][3];
new	drifttimer;
new	leveltimer;

//----------------------------- Elevator - 1 -----------------------------------
static FloorNames[21][] =
{
	"1 этаж",
	"2 этаж",
	"3 этаж",
	"4 этаж",
	"5 этаж",
	"6 этаж",
	"7 этаж",
	"8 этаж",
	"9 этаж",
	"10 этаж",
	"11 этаж",
	"12 этаж",
	"13 этаж",
	"14 этаж",
	"15 этаж",
	"16 этаж",
	"17 этаж",
	"18 этаж",
	"19 этаж",
	"20 этаж",
	"Пентхаус"
};

static Float:FloorZOffsets[21] =
{
    0.0,		// 0.0,
    8.5479,		// 8.5479,
    13.99945,   // 8.5479 + (5.45155 * 1.0),
    19.45100,   // 8.5479 + (5.45155 * 2.0),
    24.90255,   // 8.5479 + (5.45155 * 3.0),
    30.35410,   // 8.5479 + (5.45155 * 4.0),
    35.80565,   // 8.5479 + (5.45155 * 5.0),
    41.25720,   // 8.5479 + (5.45155 * 6.0),
    46.70875,   // 8.5479 + (5.45155 * 7.0),
    52.16030,   // 8.5479 + (5.45155 * 8.0),
    57.61185,   // 8.5479 + (5.45155 * 9.0),
    63.06340,   // 8.5479 + (5.45155 * 10.0),
    68.51495,   // 8.5479 + (5.45155 * 11.0),
    73.96650,   // 8.5479 + (5.45155 * 12.0),
    79.41805,   // 8.5479 + (5.45155 * 13.0),
    84.86960,   // 8.5479 + (5.45155 * 14.0),
    90.32115,   // 8.5479 + (5.45155 * 15.0),
    95.77270,   // 8.5479 + (5.45155 * 16.0),
    101.22425,  // 8.5479 + (5.45155 * 17.0),
    106.67580,	// 8.5479 + (5.45155 * 18.0),
    112.12735	// 8.5479 + (5.45155 * 19.0)
};

new MovObj;
new Obj_Elevator, Obj_ElevatorDoors[2];
new	Obj_FloorDoors[21][2];
new Text3D:Label_Elevator, Text3D:Label_Floors[21], Text3D:Label2_Floors[21];
new ElevatorState;
new	ElevatorFloor;
new ElevatorQueue[21];
new	FloorRequestedBy[21];
new ElevatorBoostTimer;
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	static FloorNames22[14][] =
	{
		"Гараж",
		"1 этаж",
		"2 этаж",
		"3 этаж",
		"4 этаж",
		"5 этаж",
		"6 этаж",
		"7 этаж",
		"8 этаж",
		"9 этаж",
		"10 этаж",
		"11 этаж",
		"12 этаж",
		"13 этаж"
	};

	static Float:FloorZOffsets22[14] =
	{
    	0.0,		// 0.0,
    	15.0782,	// 15.0782,
    	29.1421,   // 15.0782 + 14.0639,
    	33.64325,   // 15.0782 + 14.0639 + (4.50115 * 1.0),
    	38.1444,   // 15.0782 + 14.0639 + (4.50115 * 2.0),
    	42.64555,   // 15.0782 + 14.0639 + (4.50115 * 3.0),
    	47.1467,   // 15.0782 + 14.0639 + (4.50115 * 4.0),
    	51.64785,   // 15.0782 + 14.0639 + (4.50115 * 5.0),
    	56.149,   // 15.0782 + 14.0639 + (4.50115 * 6.0),
    	60.65015,   // 15.0782 + 14.0639 + (4.50115 * 7.0),
    	65.1513,   // 15.0782 + 14.0639 + (4.50115 * 8.0),
    	69.65245,   // 15.0782 + 14.0639 + (4.50115 * 9.0),
    	74.1536,   // 15.0782 + 14.0639 + (4.50115 * 10.0),
    	78.65475   // 15.0782 + 14.0639 + (4.50115 * 11.0),
	};

	new MovObj22;
	new Obj_Elevator22, Obj_ElevatorDoors22[2];
	new	Obj_FloorDoors22[14][2];
	new Text3D:Label_Elevator22, Text3D:Label_Floors22[14], Text3D:Label2_Floors22[14];
	new ElevatorState22;
	new	ElevatorFloor22;
	new ElevatorQueue22[14];
	new	FloorRequestedBy22[14];
	new ElevatorBoostTimer22;
//--------------------------- End Elevator - 2 ---------------------------------
#endif

//------------------------------ BusSystem -------------------------------------
new playspabs[MAX_PLAYERS];//спавн игрока
new playIDbus[MAX_PLAYERS];//ИД бизнеса для игрока
new DelayPickup[MAX_PLAYERS];//задержка вызовов паблика пикапов
new buscount[BUS_MAX];//0- бизнес не создан, 1- бизнес создан
new busidplay[BUS_MAX];//-600- если владелец бизнеса офф-лайн, ИД игрока- если владелец бизнеса он-лайн
new busmoney[BUS_MAX];//счётчик минут бизнеса (если игрок он-лайн)
new busname[BUS_MAX][64];//название бизнеса
new busplayname[BUS_MAX][MAX_PLAYER_NAME];//имя владельца бизнеса
new buscost[BUS_MAX];//стоимость бизнеса
new busminute[BUS_MAX];//через сколько минут бизнес будет приносить доход
new busincome[BUS_MAX];//доход от бизнеса
new busday[BUS_MAX];//дата окончания срока без права перекупки
new busvw[BUS_MAX];//виртуальный мир бизнеса
new busint[BUS_MAX];//интерьер бизнеса
new Float:buscordx[BUS_MAX];//координаты бизнеса
new Float:buscordy[BUS_MAX];
new Float:buscordz[BUS_MAX];
new PickupID[BUS_MAX];//массив ИД пикапов
new MapIconID[BUS_MAX];//массив ИД мап-иконок
new Text3D:Nbus[BUS_MAX];//массив ИД 3D-текстов
//---------------------------- End BusSystem -----------------------------------

new ct9control[MAX_PLAYERS];//античит управления чужим транспортом
new ct9delay;
new Float:ct9concord[3][4][MAX_PLAYERS];
new Float:ct9dopcord[3][MAX_PLAYERS];
new Float:ct9dltcord[2][MAX_PLAYERS];
new conconTD[MAX_PLAYERS];//блокировка создания текст-дравов при подключении игрока
new StopHidrav[MAX_PLAYERS];//переменная задержки гидравлики
#if (MOD11INS >= 3)
	new crash8str[64];//антикрашер - 8
	new Float:crash8dn[6];//антикрашер - 8
#endif
new crash8count[MAX_PLAYERS];//контроль антикрашера - 8
new crash7count[MAX_PLAYERS];//контроль антикрашера - 7
#if (MOD11INS >= 3)
	new Float:crash7vx[MAX_PLAYERS];
	new Float:crash7vy[MAX_PLAYERS];
	new Float:crash7vz[MAX_PLAYERS];
#endif
new crash6[MAX_PLAYERS];//контроль антикрашера - 6
new crash5count[MAX_PLAYERS];//контроль антикрашера - 5
new dopadm[MAX_PLAYERS];//дополнительные переменные админок
new Text:HMS22;//текстдравы максимальной горизонтальной скорости
new PlayerText:HMS44[MAX_PLAYERS];
new HMS77[212] = {176, 164, 208, 123, 149, 183, 123, 166, 112, 177,//400-409//массив максимальной горизонтальной скорости
145, 247, 188, 123, 118, 215, 172, 150, 129, 167,//410-419
162, 172, 157, 111, 151, 200, 194, 185, 175, 225,//420-429
208, 146, 106, 124, 187, 64, 167, 176, 160, 188,//430-439
152, 85, 156, 141, 124, 183, 297, 160, 125, 202,//440-449
59, 216, 205, 65, 149, 176, 119, 107, 176, 152,//450-459
233, 180, 125, 161, 68, 63, 164, 157, 161, 151,//460-469
175, 123, 141, 121, 167, 193, 300, 208, 132, 156,//470-479
206, 82, 175, 137, 72, 112, 73, 201, 200, 156,//480-489
175, 167, 157, 202, 240, 197, 182, 212, 121, 138,//490-499
157, 41, 240, 240, 193, 156, 200, 185, 121, 89,//500-509
114, 200, 200, 250, 135, 159, 176, 176, 184, 300,//510-519
300, 180, 197, 170, 146, 179, 176, 167, 197, 167,//520-529
68, 79, 123, 187, 188, 177, 193, 202, 202, 115,//530-539
167, 227, 184, 169, 166, 164, 167, 160, 150, 172,//540-549
162, 176, 136, 300, 161, 177, 124, 124, 174, 199,//550-559
189, 172, 199, 150, 99, 184, 179, 193, 164, 1,//560-569
1, 105, 68, 124, 68, 176, 176, 300, 146, 176,//570-579
171, 170, 152, 96, 41, 171, 161, 184, 121, 182,//580-589
800, 64, 300, 200, 69, 132, 196, 196, 196, 177,//590-599
169, 124, 189, 191, 164, 169, 111, 111, 4, 121,//600-609
21, 111};//610-611
new TrainID[8];//ИД поездов на сервере
new TrainID22[8];//дополнительные ИД поездов на сервере
new ColorPlay[MAX_PLAYERS];//переменная цвета игрока
new StopGMoney[MAX_PLAYERS];//переменная задержки команды /givemoney
#if (MOD22INS == 1 && MOD55INS == 1)
	new File:inLog;//сервер-лог
	new File:outLog;//резервная копия сервер-лога
	new position;//последний размер сервер-лога
#endif
#if (MOD66INS > 1)
	new playspacount[MAX_PLAYERS];//задержка контроля игрока на ошибку координат спавна
	new playspascan[MAX_PLAYERS];//переменная спавна игрока 2
#endif
	new playlogcount[MAX_PLAYERS];//задержка контроля игрока на спавн без логирования
#if (MOD66INS == 3)
	new Float:sposcheck[MAX_PLAYERS][3];//сканер собейта
#endif
new EnterTick[MAX_PLAYERS];//антикрашер игроков - 3 (январь 2015)
new EnterTick33[MAX_PLAYERS];//переменная обхода антикрашера - 3
new carplmod[MAX_PLAYERS];//модель транспорта игрока для обхода антикрашера - 3
new Text3D:fantxt;//переменная для хранения 3D-текста с несущесвующим ИД
#if (MOD90INS == 1)
	new migration[MAX_PLAYERS];//переменные миграции аккаунтов ИЗ fopen В SQLite
	new DB:playerdb;//переменная базы данных аккаунтов игроков
	new DBResult:querydb[MAX_PLAYERS];//переменные запросов базы данных аккаунтов игроков
	new DBResult:querydbau;//переменная запроса базы данных автоматического разбана
	new EndConD;//дата последнего посещения сервера игроками
	new EndConM;
	new EndConY;
#endif
new Wind1SA;//переменные "окна" автосохранения аккаунтов
new Wind2SA;
new WWindSA;//ширина "окна" автосохранения аккаунтов
new DerbyID[MAX_PLAYERS];//переменная дерби-режима
new Float:PlayCX[MAX_PLAYERS];//переменные контроля координат игроков (FLY-чит (или чит-телепорт))
new Float:PlayCY[MAX_PLAYERS];
new Float:PlayCZ[MAX_PLAYERS];
new PlayCINT[MAX_PLAYERS];
new PlayCVW[MAX_PLAYERS];
new PlayCRTP[MAX_PLAYERS];
new locper33[MAX_PLAYERS];//переменные обхода авто-бана подключения двух (и более) игроков с одного и того же IP
new locper44[MAX_PLAYERS];
new clipip[MAX_PLAYERS][64];
new ipper44[MAX_PLAYERS][4][32];//массив для команды /openip
new OpenIP22[40];//массив максимумов подключений с заданного IP-адреса (обход авто-бана подключения двух (и более) игроков с одного и того же IP)
new OpenIP[40][256];//массив IP-адресов (обход авто-бана подключения двух (и более) игроков с одного и того же IP)
new mapiconid[MAX_PLAYERS];//массив ID мап иконок наблюдения
new ipper[MAX_PLAYERS][4][32];//массив для команды /banlst
new StopHeal[MAX_PLAYERS];//переменная задержки команды /heal
new GlTime;//переменные времени, погоды, и гравитации
new GlWeat;
new Float:GlGrav;
#if (MOD4AINS == 1)
	new Float:CoefGrav;
#endif
new Float:CoefGrav22;
new LocTime[MAX_PLAYERS];
new PlayLock1[3][MAX_PLAYERS];//переменные блокировки игрока
new Float:PlayLock2[4][MAX_PLAYERS];
new NETrecCon;//переменные контроля сети и AFK
new NETsenCon;
new NETrecPl[MAX_PLAYERS];
new NETsenPl[MAX_PLAYERS];
new NETafkPl[MAX_PLAYERS][6];
new LockSpawn[MAX_PLAYERS];//блокировка заполнения слотов оружия и предметов
new DataCheat1[40][MAX_PLAYER_NAME];//таблица ников читов
new restrest;//переменная рестарта сервера
new pertrain;//разрешение на вождение поездов
new prisoncount[MAX_PLAYERS];//задержка контроля игрока в тюрьме
new passrcon[MAX_PLAYERS];//бан взлома RCON-пароля
new oneminkick[MAX_PLAYERS];//кик - если не заспавнился
new RealName[MAX_PLAYERS][MAX_PLAYER_NAME];//реальный ник игрока
new NameClick[MAX_PLAYERS];//признак бана или кика по таймеру
new ReasonTarget[MAX_PLAYERS][256];//причина бана или кика по таймеру
new NameAdmin[MAX_PLAYERS][MAX_PLAYER_NAME];//ник админа по таймеру
new NameTarget[MAX_PLAYERS][MAX_PLAYER_NAME];//ник игрока по таймеру
new fbanreason[MAX_PLAYERS][256];//причина бана
#if (MOD11INS <= 3)
	new ObjGam[39];//массив стандартных объектов
#endif
#if (MOD11INS == 4)
	new ObjGam[40];//массив стандартных объектов
#endif
new dddrift[MAX_PLAYERS];//переменная контроля дрифта
new scrmod[5][MAX_PLAYERS];//переменная режимов экрана
#if (MOD22INS == 1)
	new File:ServerLogFile;//античит-2
	new AntCh1[128];//античит-2
	new AntCh2[128];//античит-2
	new AntCh3[128];//античит-2
	new AntCh4;//античит-2
	new ParaAntCh1;//античит-2
	new ParaAntCh2;//античит-2
	new ParaAntCh3;//античит-2
	new ParaAntCh4;//античит-2
#endif
new timpolsec;//переменная таймера 450 мс
new snowobj[MAX_PLAYERS];//переменная снега 1
new SnowONOFF[MAX_PLAYERS];//переменная снега 2
new nucexplos;//переменная ядерного взрыва
new nucexptime;//переменная таймера ядерного взрыва
new perfrost[MAX_PLAYERS];//переменная заморозки
new locper1[MAX_PLAYERS];//вспомогательная переменная IP вышедшего игрока
new locper2[MAX_PLAYERS];//вспомогательная переменная IP вышедшего игрока
new twoIP[MAX_PLAYERS][126];//переменная для IP вышедшего игрока
new playspa[MAX_PLAYERS];//переменная спавна игрока
new LogAdm[100][256];//переменная регистрации админов
new LogAdmcnt[MAX_PLAYERS];//переменная регистрации админов-2
new exitcheat[MAX_PLAYERS];//0-игрок - НЕ чит, 1-игрок - чит
new servname[256];//переменная управления сервером 1
new servpass[256];//переменная управления сервером 2
new servmap[256];//переменная управления сервером 3
new servurl[256];//переменная управления сервером 4
new status;//переменная управления сервером 5
new relfs[16][256];//переменная управления сервером 6
new servchas;//переменная управления сервером 7
new packlim;//переменная управления сервером 8
new razresh[MAX_PLAYERS];//переменная управления кланом
new functioncon[MAX_PLAYERS];//контрольная переменная функций
new chatcon[MAX_PLAYERS];//контрольная переменная чата
new oldhour;//переменная реального времени
new timecor[9];//переменная коррекции времени 2
new CorTime[5];//переменная коррекции времени 1
new compdrift[MAX_PLAYERS];//переменная дрифт-соревнования
new LineObj1[88];//объекты трассы 1
new LineObj2[54];//объекты трассы 2
new LineObj3[62];//объекты трассы 3
new LineObj4[31];//объекты трассы 4
new LineObj5[84];//объекты трассы 5
new LineStat[6];//переменная статуса трасс (0-отключена, 1-подключена)
new resauto;//переменная авторестарта сервера
new livdop[MAX_PLAYERS];//переменная выключения бессмертия
new tpdrift[MAX_PLAYERS];//переменная сброса дрифт-очков при ТП
new Float:TelSpec[MAX_PLAYERS][3];//координаты возврата при снятии наблюдения
new admper1[MAX_PLAYERS];//переменная наблюдения 1
new admper2[MAX_PLAYERS];//переменная наблюдения 2
new admper3[MAX_PLAYERS];//переменная наблюдения 3
new admper4[MAX_PLAYERS];//переменная наблюдения 4
new admper5[MAX_PLAYERS];//переменная наблюдения 5
new admper6[MAX_PLAYERS];//переменная наблюдения 6
new tabladm[MAX_PLAYERS][MAX_PLAYERS][80];//он-лайн админы
new contover[MAX_PLAYERS];
new countadm[MAX_PLAYERS];
new count2adm[MAX_PLAYERS];
new NamAdm[20][80];//массив функции AdminsLvl
new onsectimer;//переменная таймера
new minsertimer;//переменная таймера
new countdown[MAX_PLAYERS];
new play2weap[MAX_PLAYERS][13];//массив оружия при входе на сервер
new play2ammo[MAX_PLAYERS][13];//массив количества патронов при входе на сервер
new weapstatplay[MAX_PLAYERS];//вспомогательная переменная заполнения слотов оружия
new playweap[MAX_PLAYERS][13];//массив оружия
new playammo[MAX_PLAYERS][13];//массив количества патронов
new	tunset[MAX_PLAYERS];//0-тюнинг в любом транспорте, 1-тюнинг в своём транспорте
new Float:playspax[6] = {-312.7, 417.29, 2169.01, 1243.24, 2492.34, -1981.07};//координаты x случайного спавна игрока
new Float:playspay[6] = {1532.72, 2503.67, 1676.55, 118.28, -1666.33, 444.14};//координаты y случайного спавна игрока
new Float:playspaz[6] = {75.36, 16.48, 10.82, 20.39, 13.34, 35.17};//координаты z случайного спавна игрока
new Float:playspaa[6] = {182.77, 89.17, 82.77, 338.63, 83.28, 359.52};//угол поворота случайного спавна игрока
new ColNick[19] = {0xFF0000FF, 0xFF3F3FFF, 0xFF3F00FF, 0xBF3F00FF, 0xFF7F3FFF, 0xFF7F00FF, 0xFFFF00FF, 0x3FFF3FFF, 0x00FF00FF,
	0x00BF00FF, 0x00FFFFFF, 0x00BFFFFF, 0x3F3FFFFF, 0x0000FFFF, 0x7F3FFFFF, 0x7F00FFFF, 0xFF00FFFF, 0x7F7F7FFF, 0x00FF0000};//массив
	//цветов ника и цветов на радаре
new neon[MAX_PLAYERS][3];
new skinstatplay[MAX_PLAYERS];//0-у игрока ещё нет скина, 1-скин получен
new nickstatcol[MAX_PLAYERS];//0-у игрока ещё нет случайного цвета ника и цвета на радаре, 1-цвета получены
new nick5col = 0;//переменная таймера FunNickCol
new tpspa;//случайный индекс выборки из массива координат спавна игрока
new col4car;//номер случайного цвета при спавне транспорта
new playcar[MAX_PLAYERS];//ид транспорта игрока
//new hour, minute;
new gPlayerAccount[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new fivesectimer;
new player[MAX_PLAYERS];
new playtarget[MAX_PLAYERS][MAX_PLAYER_NAME];
new autorepair[MAX_PLAYERS];
new autorepaircar;
new restart;
new Float:TpDestA[MAX_PLAYERS][4];
new TpPosA[MAX_PLAYERS][2];
new Float:TpDestP[MAX_PLAYERS][4];
new timeobject;
new timeobject22;
//new caravto[MAX_PLAYERS];

enum PlayerData//drift bonus
{
	Level[200]
};
new Playerdr[MAX_PLAYERS][PlayerData];
enum Float:Pos
{
	Float:sX,
	Float:sY,
	Float:sZ,
	Float:dltX,
	Float:dltY,
	Float:dltZ
};
new Float:SavedPos[MAX_PLAYERS][Pos];

enum pInfo
{
	pKey[128],
	pTDReg[256],
	pIPAdr[126],
	pMinlog,
	pAdmin,
	pAdmshad,
	pAdmlive,
	pReg,
	pPrison,
	pPrisonsec,
	pMuted,
	pMutedsec,
	pKills,
	pDeaths,
 	pVIP,
 	pLock
// 	pPISTOL,
//	pPISTOL_SILENCED,
//	pDESERT_EAGLE,
//	pSHOTGUN,
//	pSAWNOFF_SHOTGUN,
//	pSPAS12_SHOTGUN,
//	pMICRO_UZI,
//	pMP5,
//	pAK47,
//	pM4,
//	pSNIPERRIFLE
};
new PlayerInfo[MAX_PLAYERS][pInfo];

//---------------- замена стандартной функции SetPlayerSkin --------------------
//-------------------- на её прототип S_SetPlayerSkin --------------------------
stock S_SetPlayerSkin(const playerid, const skinid)
{
	if(playspa[playerid] == 1)//если игрок уже заспавнился, то:
	{
		ClearAnimations(playerid);//меняем игроку скин с задержкой
		TogglePlayerControllable(playerid, 0);
		SetTimerEx("S22_SetPlayerSkin", 2000, 0, "ii", playerid, skinid);
	}
	else//иначе:
	{
		SetPlayerSkin(playerid, skinid);//меняем игроку скин без задержки
	}
	return 1;
}
forward S22_SetPlayerSkin(playerid, skinid);
public S22_SetPlayerSkin(playerid, skinid)
{
	SetPlayerSkin(playerid, skinid);
	if(perfrost[playerid] == 600)//если игрок НЕ был заморожен админом, то:
	{
		TogglePlayerControllable(playerid, 1);//разморозить игрока
	}
	return 1;
}
#define SetPlayerSkin S_SetPlayerSkin
//------------------------------------------------------------------------------

main()
{
	print(" ");
	print("----------------------------------");
	print("        Drift non-DM Server         ");
	print("----------------------------------\n");
}

public OnGameModeInit()
{
	SetGameModeText("Drift non-DM Server");
	SendRconCommand("timestamp 1");//RCON-команда печати времени в каждой строке сервер-лога
	SendRconCommand("chatlogging 1");//RCON-команда печати чата игроков в сервер-логе

	fantxt = Create3DTextLabel(" ",0xFFFFFFAA,0.000,0.000,-4.000,18.0,0,1);//создаём 3D-текст с несущесвующим ИД
	EnableStuntBonusForAll(0);//убираем бонусы за трюки
	Wind1SA = 0;//начало "окна" автосохранения аккаунтов
#if (MOD90INS == 0)
	WWindSA = 30;//ширина "окна" автосохранения аккаунтов
#endif
#if (MOD90INS == 1)
	WWindSA = 3;//ширина "окна" автосохранения аккаунтов
#endif
	Wind2SA = WWindSA;//задаём конец "окна" автосохранения аккаунтов
	SetWeather(1);//устанавливаем ID погоды на 1
	GlWeat = 1;
	SetGravity(0.008000);//устанавливаем гравитацию на 0.008
	GlGrav = 0.008000;
	restrest = 0;//переменная рестарта сервера
	nucexplos = 0;//переменная ядерного взрыва
	nucexptime = 0;//переменная таймера ядерного взрыва
	oldhour = 0;//подготовка переменной реального времени
	ReadCorTime();//чтение коррекции времени
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты
	oldhour = timecor[0];
	if(timecor[8] == 1)//если включено реальное время, то:
	{
		SetWorldTime(timecor[0]);
		GlTime = timecor[0];
	}
	else//иначе:
	{
		SetWorldTime(12);//устанавливаем 12 часов
		GlTime = 12;
	}
	print(" ");
	print("++++++++++++++++++++++++++++++++++++++");
	print(" ");
	printf("Server Start: %02d:%02d %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
	printf("Time Correct: %02d:%02d", CorTime[0], CorTime[1]);
	print(" ");
	print("++++++++++++++++++++++++++++++++++++++");
	print(" ");

	new Float:kgrav22;
	kgrav22 = GlGrav;
	if(kgrav22 == 1.000000) {kgrav22 = 0.999;}
#if (MOD4AINS == 1)
	CoefGrav = floatmul(floatdiv(1.00, floatlog(floatdiv(1.00, kgrav22))), 1300.00);
#endif
	CoefGrav22 = floatmul(floatdiv(1.00, floatlog(floatdiv(1.00, kgrav22))), 750.00);

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
	for(new mm = 0; mm < 100; mm++)
	{
		strdel(LogAdm[mm], 0, 256);
	}
//---------------------------------- конец -------------------------------------
	new string[256];
	ReadServCon();//чтение конфигурации сервера
	if(strlen(servname))//если есть имя сервера, то:
	{
		strcat(string, "hostname ");//сборка RCON-команды имени сервера
		strcat(string, servname);
		SendRconCommand(string);//RCON-команда имени сервера
	}
	strdel(string,0,256);
	if(strlen(servpass) == 0 || (strlen(servpass) == 1 && servpass[0] == '0'))//если нет пароля сервера, то:
	{
		new para77;
		para77++;
		para77--;
	}
	else//иначе, (если есть пароль сервера), то:
	{
		strcat(string, "password ");//сборка RCON-команды пароля сервера
		strcat(string, servpass);
		SendRconCommand(string);//RCON-команда пароля сервера
	}
	strdel(string,0,256);
	if(strlen(servmap))//если есть имя карты сервера, то:
	{
		strcat(string, "mapname ");//сборка RCON-команды имени карты сервера
		strcat(string, servmap);
		SendRconCommand(string);//RCON-команда имени карты сервера
	}
	strdel(string,0,256);
	if(strlen(servurl))//если есть имя web-страницы сервера, то:
	{
		strcat(string, "weburl ");//сборка RCON-команды имени web-страницы сервера
		strcat(string, servurl);
		SendRconCommand(string);//RCON-команда имени web-страницы сервера
	}
	if(status == 0)//если RCON-доступ запрещён, то:
	{
		SendRconCommand("rcon 0");//RCON-команда запрета RCON-доступа
	}
	else//иначе:
	{
		SendRconCommand("rcon 1");//RCON-команда разрешения RCON-доступа
	}
#if (MOD11INS == 4)
	SendRconCommand("language Russian");//RCON-команда языка сервера
	SendRconCommand("cookielogging 0");//отключение cookie в сервер-логе (для сервера 0.3.7-R2 и выше)
#endif
	SendRconCommand("announce 1");//RCON-команда анонсирования в интернете
	SetTimer("ContFS", 1000, 0);//перезагрузка с 0-го по 15-й слот FS
	SetTimer("ContSobj", 9000, 0);//загрузка объектов, 3D-текстов, и текст-дравов сервера
#if (MOD11INS >= 3)
	SendRconCommand("minconnectiontime 1000");//защита от флуд-коннекта (для сервера 0.3z-R3 и выше)
	if(packlim >= 200 && packlim <= 8000)//если лимит пакетов в допустимых пределах (200-8000), то:
	{
		new dopstr[32];
		strdel(dopstr,0,32);
		valstr(dopstr, packlim);//преобразование лимита пакетов в строку
		strdel(string,0,256);
		strcat(string, "messageholelimit ");//сборка RCON-команды лимита пакетов
		strcat(string, dopstr);
		SendRconCommand(string);//RCON-команда лимита пакетов
	}
	if(packlim < 200)//если лимит пакетов меньше 200, то:
	{
		packlim = 200;
		SaveServCon();//запись конфигурации сервера
		ReadServCon();//чтение конфигурации сервера
		new dopstr[32];
		strdel(dopstr,0,32);
		valstr(dopstr, packlim);//преобразование лимита пакетов в строку
		strdel(string,0,256);
		strcat(string, "messageholelimit ");//сборка RCON-команды лимита пакетов
		strcat(string, dopstr);
		SendRconCommand(string);//RCON-команда лимита пакетов
	}
	if(packlim > 8000)//если лимит пакетов больше 8000, то:
	{
		packlim = 8000;
		SaveServCon();//запись конфигурации сервера
		ReadServCon();//чтение конфигурации сервера
		new dopstr[32];
		strdel(dopstr,0,32);
		valstr(dopstr, packlim);//преобразование лимита пакетов в строку
		strdel(string,0,256);
		strcat(string, "messageholelimit ");//сборка RCON-команды лимита пакетов
		strcat(string, dopstr);
		SendRconCommand(string);//RCON-команда лимита пакетов
	}
#endif
	ReadLine();//чтение статуса трасс
	ReadOpenIP();//чтение IP-слотов
//	SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
#if (MOD90INS == 0)
	AutoUnban();//автоматический разбан
#endif
#if (MOD90INS == 1 && MOD91INS == 0)
	playerdb = db_open("players/players.db");//подключаем базу данных аккаунтов игроков к серверу
	SetTimer("AutoUnban", 300, 0);//автоматический разбан
#endif
#if (MOD90INS == 1 && MOD91INS == 1)
	if(fexist("players/players.db"))//если есть файл базы данных аккаунтов игроков, то:
	{
		fremove("players/players.db");//удаляем старую базу данных аккаунтов игроков
	}
	SetTimer("CreateDB", 300, 0);//создаём новую (пустую) базу данных аккаунтов игроков
#endif

#if (MOD22INS == 1)
	ServerLogFile = fileOpen("server_log.txt", io_Read);//античит-2
#endif

#if (MOD22INS == 1 && MOD55INS == 1)
	position = 0;//обнуляем последний размер сервер-лога
	inLog = fileOpen("server_log.txt", io_Read);//открываем сервер-лог
	if(!fexist("server_log/server_log.txt"))//если нет резервной копии сервер-лога, то:
	{
		new File:crFile;//создаём пустой файл резервной копии сервер-лога
		crFile = fopen("server_log/server_log.txt", io_write);
		fclose(crFile);
	}
	outLog = fileOpen("scriptfiles/server_log/server_log.txt", io_Append);//открываем резервную копию сервер-лога

	new para;
	para = fileLength(inLog);//узнаём размер сервер-лога
	if(para > 20000)//если размер больше 20000 байт (вероятность, что остался
	{//старый сервер-лог), то:
		SLCopy(1);//делаем резервную копию конца старого сервер-лога
	}
#endif

    resauto = 0;//подготовка к авторестарту
	ReadLogAdm();//чтение регистрации админов

	TrainID[0] = AddStaticVehicle(538,1695.89,-1953.89,13.55,210.00,-1,-1);//создание поездов
	TrainID[1] = AddStaticVehicle(537,788.96,-1342.98,-1.58,210.00,-1,-1);
	TrainID[2] = AddStaticVehicle(538,-1944.39,87.14,25.72,30.00,-1,-1);
	TrainID[3] = AddStaticVehicle(537,563.61,1262.98,12.04,119.34,-1,-1);
	TrainID[4] = AddStaticVehicle(538,1461.08,2632.25,10.82,271.17,-1,-1);
	TrainID[5] = AddStaticVehicle(537,2864.71,1260.95,10.82,210.00,-1,-1);
	TrainID[6] = AddStaticVehicle(538,2823.83,82.16,26.52,8.13,-1,-1);
	TrainID[7] = AddStaticVehicle(537,2174.10,-1946.94,13.55,30.00,-1,-1);
	for(new i = 0; i < 8; i++)
	{
		TrainID22[i] = TrainID[i] + 3;
	}
	pertrain = 1;//разрешить всем игрокам водить поезда

	for(new i = 0; i < 40; i++)
	{
		strdel(DataCheat1[i], 0, MAX_PLAYER_NAME);//очистка таблицы ников читов
	}

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		NameClick[i] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[i], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[i], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[i], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		playspa[i] = 0;//обнуление переменных спавна игроков
		mapiconid[i] = -600;//очистка ID мап иконок наблюдения
		ct9control[i] = 0;
	}
	ct9delay = 0;

	for(new i=0;i<MAX_PLAYERS;i++)//Clans system
	{
		idgangsave[i] = 0;//обнуление ID кланов для записи
		conconTD[i] = 0;//снятие блокировки создания текст-дравов при подключении игрока
	}

	timpolsec = SetTimer("PolSec", 443, 1);//вспомогательный таймер 450 мс
	autorepaircar = SetTimer("RepairCar", 1987, 1);
	fivesectimer = SetTimer("FiveSecTimer", 4983, 1);
	onsectimer = SetTimer("OneSecOnd",997,1);
	timeobject = SetTimer("object", 17000, 1);
	timeobject22 = SetTimer("object22", 25000, 1);
	minsertimer = SetTimer("MinServ",60000,1);//таймер минут на сервере

    GangLoad();//Clans system
	print(" ");
	print("--------------------------------------------");
	print("	ClansSystem успешно загружена! ");
	print("--------------------------------------------\n");

    print(" ");//speedometer
    print("**************************************");
	print("     Vehicle Speedometer Load...      ");
	print("**************************************\n");
	VehicleSpeedTextDraw_R();

	drifttimer = SetTimer("Drift", 200, true);//drift bonus
	leveltimer = SetTimer("LevelUpdate",1991,1);

	AddPlayerClass(0,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);//скины на спавне
	AddPlayerClass(2,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(3,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(7,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(11,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(12,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(19,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(21,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(22,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(23,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(26,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(28,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(29,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(30,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(37,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(41,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(47,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(91,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(93,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(101,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(103,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(104,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(105,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(106,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(108,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(109,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(115,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(116,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(117,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(121,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(122,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(150,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(151,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(152,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(169,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(170,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(176,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(179,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(188,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(190,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(192,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(193,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(194,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(195,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(217,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(233,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(269,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(270,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(271,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(292,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(293,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
    AddPlayerClass(295,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);

	AddPlayerClass(254,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);//скины паркур мода FR_Story_2.1
	AddPlayerClass(255,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(256,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(257,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(280,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(281,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(282,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(283,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(284,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(285,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(286,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(287,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);
	AddPlayerClass(288,2497.3, -1666.5, 13.34, 0,0,0,0,0,0,0);

	return 1;
}

public OnGameModeExit()
{
	if(restrest == 0)//если нету рестарта сервера, то:
	{

//		FiveSecTimer();
		KillTimer(fivesectimer);
		KillTimer(restart);
		KillTimer(autorepaircar);
//		KillTimer(timeobject);
//		KillTimer(timeobject22);
		KillTimer(timpolsec);
		KillTimer(onsectimer);
		KillTimer(minsertimer);
		KillTimer(drifttimer);
		KillTimer(leveltimer);

		new string[256];//выгрузка с 0-го по 15-й слот FS
		for(new j=0; j<16; j++)
		{
			if(strlen(relfs[j]))//если строка НЕ пустая, то:
			{
				strdel(string,0,256);//очистка переменной string
				strcat(string, "unloadfs ");//сборка RCON-команды выгрузки фильтрскрипта
				strcat(string, relfs[j]);
				SendRconCommand(string);//RCON-команда выгрузки фильтрскрипта
			}
		}

 		for(new i = 0; i < MAX_PLAYERS; i++)
		{
    		if(mapiconid[i] != -600)//если ID мап иконки наблюдения НЕ пустой, то:
    		{
				DestroyDynamicMapIcon(mapiconid[i]);//удаление мап иконки наблюдения
			}
			mapiconid[i] = -600;//очистка ID мап иконки наблюдения
			if(IsPlayerConnected(i))
			{
//		    	DisablePlayerCheckpoint(i);
				PlayKick(i);
//    			Kick(i);
			}
		}

		Delete3DTextLabel(fantxt);//удаляем 3D-текст с несущесвующим ИД

 		for(new i = 0; i < 8; i++)
		{
			DestroyVehicle(TrainID[i]);
		}
 		for(new i = 0; i < 88; i++)
		{
			DestroyDynamicObject(LineObj1[i]);
		}
 		for(new i = 0; i < 54; i++)
		{
			DestroyDynamicObject(LineObj2[i]);
		}
 		for(new i = 0; i < 62; i++)
		{
			DestroyDynamicObject(LineObj3[i]);
		}
 		for(new i = 0; i < 31; i++)
		{
			DestroyDynamicObject(LineObj4[i]);
		}
 		for(new i = 0; i < 84; i++)
		{
			DestroyDynamicObject(LineObj5[i]);
		}
#if (MOD11INS <= 3)
 		for(new i = 0; i < 39; i++)
		{
			DestroyObject(ObjGam[i]);
		}
#endif
#if (MOD11INS == 4)
 		for(new i = 0; i < 40; i++)
		{
			DestroyObject(ObjGam[i]);
		}
#endif

		for(new i=0; i<11; i++)//drift bonus
		{
			TextDrawDestroy(leveldr[i]);
		}
//		TextDrawDestroy(Textdraw0);
//		TextDrawDestroy(Textdraw1);
		new Max = GetMaxPlayers();
		for(new i=0; i<Max; i++)
		{
			Delete3DTextLabel(Level3D[i]);
		}

		for(new i = 0; i < MAX_PLAYERS; i++)//speedometer
		{
		    PlayerTextDrawHide(i, VehicleSpeed[i]);
		    TextDrawHideForPlayer(i, KMH);
			TextDrawHideForPlayer(i, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
			PlayerTextDrawHide(i, HMS44[i]);
			if(IsPlayerConnected(i))
			{
				PlayerTextDrawDestroy(i, VehicleSpeed[i]);
				PlayerTextDrawDestroy(i, HMS44[i]);//удаляем текстдравы максимальной горизонтальной скорости
			}
			conconTD[i] = 0;//снятие блокировки создания текст-дравов при подключении игрока
		}
		TextDrawDestroy(KMH);
		TextDrawDestroy(HMS22);//удаляем текстдрав максимальной горизонтальной скорости

//==============================================================================
//                              GarHouse
//==============================================================================
		new file[HOUSEFILE_LENGTH], tmp;
		Loop(i, MAX_PLAYERS)
		{
	    	if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	    	{
	        	tmp = GetPVarInt(i, "LastHouseCP");
				format(file, sizeof(file), FILEPATH, tmp);
		    	if(!strcmp(GetHouseOwner(tmp), RealName[i], CASE_SENSETIVE) && GetPVarInt(i, "IsInHouse") == 1 && dini_Exists(file))
				{
			    	dini_IntSet(file, "QuitInHouse", 1);
			    	#if defined GH_HOUSECARS
			    		SaveHouseCar(tmp);
		        	#endif
				}
			}
		}
    	UnloadHouses(); // Выгрузка домов (также разгружает дом автомобили)
//==============================================================================
//                              End GarHouse
//==============================================================================

//----------------------------- Elevator - 1 -----------------------------------
		DestroyObject(Obj_Elevator);
		DestroyObject(Obj_ElevatorDoors[0]);
		DestroyObject(Obj_ElevatorDoors[1]);
		DestroyDynamic3DTextLabel(Label_Elevator);

		for(new i; i < sizeof(Obj_FloorDoors); i ++)
		{
	    	DestroyDynamicObject(Obj_FloorDoors[i][0]);
			DestroyDynamicObject(Obj_FloorDoors[i][1]);
			DestroyDynamic3DTextLabel(Label_Floors[i]);
			DestroyDynamic3DTextLabel(Label2_Floors[i]);
		}
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
		DestroyObject(Obj_Elevator22);
		DestroyObject(Obj_ElevatorDoors22[0]);
		DestroyObject(Obj_ElevatorDoors22[1]);
		DestroyDynamic3DTextLabel(Label_Elevator22);

		for(new i; i < sizeof(Obj_FloorDoors22); i ++)
		{
	    	DestroyDynamicObject(Obj_FloorDoors22[i][0]);
			DestroyDynamicObject(Obj_FloorDoors22[i][1]);
			DestroyDynamic3DTextLabel(Label_Floors22[i]);
			DestroyDynamic3DTextLabel(Label2_Floors22[i]);
		}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

		UnloadBusSystem();//выгрузка системы бизнесов//BusSystem

#if (MOD22INS == 1)
		fileClose(ServerLogFile);//античит-2
#endif

#if (MOD22INS == 1 && MOD55INS == 1)
		fileClose(inLog);//закрываем сервер-лог
		fileClose(outLog);//закрываем резервную копию сервер-лога
#endif

#if (MOD90INS == 1)
		db_close(playerdb);//отключаем базу данных аккаунтов игроков от сервера
#endif

	}
	restrest = 0;//переменная рестарта сервера
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
#if (MOD66INS == 1)
	SetPlayerCameraPos(playerid, 2501.3, -1666.5, 14.34);
	SetPlayerCameraLookAt(playerid, 2497.3, -1666.5, 13.34);
	SetPlayerPos(playerid, 2497.3, -1666.5, 13.34);
	return 1;
#endif
#if (MOD66INS > 1)
	SetSpawnInfo(playerid, 0, 0, 2497.3, -1666.5, 13.34, -90.00, 0, 0, 0, 0, 0, 0);
	return SpawnPlayer(playerid);//отключение стандартного спавна игрока
#endif
}

public OnPlayerConnect(playerid)
{
#if (MOD4CINS == 0)
	if(functioncon[playerid] < 0)//если счётчик секунд меньше нуля, то:
	{
		return 1;//завершаем функцию
	}
	if(functioncon[playerid] > 5)//если игрок вызвал функции более 5-и раз за 1 секунду, то:
	{
		functioncon[playerid] = -5;//устанавливаем счётчик 5-и секунд
	}
#endif
	functioncon[playerid]++;//прибавляем 1 к контрольной переменной функций

	if(conconTD[playerid] == 0)
	{//если создание текст-дравов НЕ заблокировано, то:
		VehicleSpeed[playerid] = CreatePlayerTextDraw(playerid,565.000000,106.000000,"_");//speedometer
		PlayerTextDrawAlignment(playerid,VehicleSpeed[playerid],0);
		PlayerTextDrawBackgroundColor(playerid,VehicleSpeed[playerid],0x0000ff66);
		PlayerTextDrawFont(playerid,VehicleSpeed[playerid],2);
		PlayerTextDrawLetterSize(playerid,VehicleSpeed[playerid],0.699999,2.699999);
		PlayerTextDrawColor(playerid,VehicleSpeed[playerid],0xffffffff);
		PlayerTextDrawSetOutline(playerid,VehicleSpeed[playerid],1);
		PlayerTextDrawSetProportional(playerid,VehicleSpeed[playerid],1);
		PlayerTextDrawSetShadow(playerid,VehicleSpeed[playerid],1);

		HMS44[playerid] = CreatePlayerTextDraw(playerid,560.000000,324.000000,"_");//создаём текстдрав максимальной горизонтальной скорости
		PlayerTextDrawAlignment(playerid,HMS44[playerid],0);
		PlayerTextDrawBackgroundColor(playerid,HMS44[playerid],0x0000ff66);
		PlayerTextDrawFont(playerid,HMS44[playerid],2);
		PlayerTextDrawLetterSize(playerid,HMS44[playerid],0.699999,2.699999);
		PlayerTextDrawColor(playerid,HMS44[playerid],0xffffffff);
		PlayerTextDrawSetOutline(playerid,HMS44[playerid],1);
		PlayerTextDrawSetProportional(playerid,HMS44[playerid],1);
		PlayerTextDrawSetShadow(playerid,HMS44[playerid],1);
	}
	conconTD[playerid] = 1;//блокировка создания текст-дравов при подключении игрока

    PGang[playerid] = 0;//Clans system
	SetPVarInt(playerid, "PlGng", PGang[playerid]);//глобальная переменная ID клана игрока
    GangLvl[playerid] = 0;
	SetPVarInt(playerid, "PlGLvl", GangLvl[playerid]);//глобальная переменная Lvl игрока в клане
	tgang[playerid] = -1600;

    new pname[MAX_PLAYER_NAME];
	SetPVarInt(playerid, "DlgCont", -600);//глобальная переменная ИДа диалога
#if (MOD66INS > 1)
	playspacount[playerid] = 0;//задержка контроля игрока на ошибку координат спавна
	playspascan[playerid] = 0;//переменная спавна игрока 2
#endif
	playlogcount[playerid] = 0;//задержка контроля игрока на спавн без логирования
	playspa[playerid] = 0;//переменная спавна игрока

	new ip[126];
	GetPlayerIp(playerid, ip, sizeof(ip));
	PlayerInfo[playerid][pIPAdr] = ip;

#if (MOD90INS == 1)
	migration[playerid] = 0;//обнулить режим миграции аккаунта
#endif
	LevelStats[playerid] = 0;//drift bonus
	DerbyID[playerid] = 0;//обнулить дерби-режим
#if (MOD33INS == 1)
	SetPVarInt(playerid, "MnMode", 1);//глобальная переменная режима меню
#endif
#if (MOD33INS == 2)
	SetPVarInt(playerid, "MnMode", 2);//глобальная переменная режима меню
#endif
	LogAdmcnt[playerid] = 0;//обнуляем переменную регистрации админов-2
	PlayCRTP[playerid] = 1;//блокировка контроля координат
	mapiconid[playerid] = -600;//очистка ID мап иконки наблюдения
	StopGMoney[playerid] = 0;//переменная задержки команды /givemoney
	StopHeal[playerid] = 0;//переменная задержки команды /heal
	LocTime[playerid] = GlTime;//передать общее время в локальное
	PlayLock1[0][playerid] = 600;//отключить блокировку игрока
	NETrecPl[playerid] = 0;//обнулить контроль сети
	NETsenPl[playerid] = 0;
	NETafkPl[playerid][1] = 0;//обнулить время AFK
	LockSpawn[playerid] = 0;//разблокировать заполнение слотов оружия и предметов
	idgangsave[playerid] = 0;//очистка ID клана для записи
	prisoncount[playerid] = 0;//задержка контроля игрока в тюрьме
	passrcon[playerid] = 0;//бан взлома RCON-пароля
	oneminkick[playerid] = 0;//кик - если не заспавнился
	countdown[playerid] = -1;//очистка обратного отсчёта
	strdel(PlayerInfo[playerid][pTDReg], 0, 256);//очистка времени и даты регистрации
	strdel(fbanreason[playerid], 0, 256);//очистка причины бана
    gPlayerLogTries[playerid] = 0;
    gPlayerLogged[playerid] = 0;

    PlayerInfo[playerid][pDeaths] = 0;
    PlayerInfo[playerid][pKills] = 0;
    PlayerInfo[playerid][pVIP] = 0;
    PlayerInfo[playerid][pAdmin] = 0;
	SetPVarInt(playerid, "AdmLvl", PlayerInfo[playerid][pAdmin]);//записываем в глобальную переменную уровень админки
	PlayerInfo[playerid][pAdmshad] = 0;//переменная скрытого админа
    PlayerInfo[playerid][pLock] = 0;

	PlayerInfo[playerid][pPrison] = 0;
	PlayerInfo[playerid][pPrisonsec] = 0;
	SetPVarInt(playerid, "SecPris", PlayerInfo[playerid][pPrisonsec]);//записываем в глобальную переменную секунды тюрьмы
	PlayerInfo[playerid][pMuted] = 0;
	PlayerInfo[playerid][pMutedsec] = 0;
	SetPVarInt(playerid, "SecMute", PlayerInfo[playerid][pMutedsec]);//записываем в глобальную переменную секунды затыка

	SetPVarInt(playerid, "PlMon", 1000);//глобальная переменная денег игрока
	SetPVarInt(playerid, "PlSkin", 0);//глобальная переменная скина игрока
	SetPVarInt(playerid, "PlFrost", 0);//глобальная переменная заморозки игрока

	SetPVarInt(playerid, "PlCRct9", 0);//глобальная переменная блокировки античита управления чужим транспортом
	ct9control[playerid] = 0;
	ct9concord[0][1][playerid] = 0.0;//обнуление баз конвеера
	ct9concord[1][1][playerid] = 0.0;
	ct9concord[2][1][playerid] = 0.0;
	ct9concord[0][2][playerid] = 0.0;
	ct9concord[1][2][playerid] = 0.0;
	ct9concord[2][2][playerid] = 0.0;
	ct9concord[0][3][playerid] = 0.0;
	ct9concord[1][3][playerid] = 0.0;
	ct9concord[2][3][playerid] = 0.0;

	//вход на сервер
	new string[256];
	GetPlayerName(playerid,pname,sizeof(pname));
	strdel(RealName[playerid],0,MAX_PLAYER_NAME);//очистить реальный ник игрока
	new aa333[64];//доработка для использования Русских ников
	format(aa333, sizeof(aa333), "%s", pname);//доработка для использования Русских ников
	strcat(RealName[playerid], aa333);//запомнить реальный ник игрока (доработка для использования Русских ников)
//	strcat(RealName[playerid], pname);//запомнить реальный ник игрока
	if(GetPVarInt(playerid, "Ban2Mon") == 0)
	{
		format(string,sizeof(string),"* %s [%d] присоединился к серверу.",pname,playerid);
		SendClientMessageToAll(COLOR_GREEN,string);
	}
	printf("* Игрок %s [%d] присоединился к серверу.",aa333,playerid);
	ColorPlay[playerid] = ColNick[17];//присвоить игроку серый цвет (до спавна)
	SetPlayerColor(playerid, ColorPlay[playerid]);

//------------------------------ BusSystem -------------------------------------
	playspabs[playerid] = 0;//игрок не заспавнился
	playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
//---------------------------- End BusSystem -----------------------------------

	exitcheat[playerid] = 0;//присоединившийся игрок - НЕ чит
	locper1[playerid] = 0;
	locper2[playerid] = 0;
	locper33[playerid] = 0;//сборка шаблона IP-адреса игрока
	locper44[playerid] = 0;
	while(locper33[playerid] <= strlen(PlayerInfo[playerid][pIPAdr]))
	{
		if(PlayerInfo[playerid][pIPAdr][locper33[playerid]] == 46) { locper44[playerid]++; }
		clipip[playerid][locper33[playerid]] = PlayerInfo[playerid][pIPAdr][locper33[playerid]];
		locper33[playerid]++;
		if(locper44[playerid] == 2) { break; }
	}
	clipip[playerid][locper33[playerid]] = 42;
	locper33[playerid]++;
	clipip[playerid][locper33[playerid]] = 46;
	locper33[playerid]++;
	clipip[playerid][locper33[playerid]] = 42;
	locper33[playerid]++;
	clipip[playerid][locper33[playerid]] = 0;
	locper33[playerid]++;
	clipip[playerid][locper33[playerid]] = 0;
	locper44[playerid] = 1;//устанавливаем максимум подключений для заданного IP-адреса = 1
	for(new m = 0; m < 40; m++)//поиск IP-адреса игрока в IP-слотах
	{
		if((strcmp(PlayerInfo[playerid][pIPAdr], OpenIP[m], false) == 0 || strcmp(clipip[playerid], OpenIP[m], false) == 0) && strlen(OpenIP[m]) != 0)
		{//если IP-адреса игрока был найден в IP-слотах, то:
			locper44[playerid] = OpenIP22[m];//запоминаем новый максимум подключений для заданного IP-адреса
		}
	}
	while (locper1[playerid] < MAX_PLAYERS)//цикл для всех игроков
	{
		if(strcmp(PlayerInfo[playerid][pIPAdr], twoIP[locper1[playerid]], true) == 0 && strlen(twoIP[locper1[playerid]]) != 0)
		{//сравниваем IP игрока с IP вышедших игроков
			locper2[playerid] = 1;
			break;
		}
		locper1[playerid]++;
	}
	if(locper2[playerid] == 1)
	{//если игрок зашёл меньше чем через 100 миллисекунд после своего выхода, то бан чита
		exitcheat[playerid] = 1;//присоединившийся игрок - чит
		print("[AntiCheatSys] ---------- 2 ----------");
		new banst[128];//бан чита
		format(string,sizeof(string),"* IP игрока %s [%d] был забанен за чит (2), мешающий работе сервера !",RealName[playerid],playerid);
		print(string);
		SendClientMessageToAll(COLOR_RED,string);
		strdel(fbanreason[playerid], 0, 256);//очистка причины бана
		strcat(fbanreason[playerid], "* Чит (2), мешающий работе сервера.");
		IPBanList(PlayerInfo[playerid][pIPAdr], fbanreason[playerid]);
		strdel(banst, 0, 128);//сборка RCON-команды бана
		strcat(banst, "banip ");
		strcat(banst, PlayerInfo[playerid][pIPAdr]);
		Kick(playerid);
		SendRconCommand(banst);//RCON-команда бана
		SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
//		Ban(playerid);
		return 1;
	}
	locper33[playerid] = 0;//контрольная переменная максимума подключений для заданного IP-адреса = 0
	for(new k=0;k<MAX_PLAYERS;k++)//цикл для всех игроков
	{
		if(IsPlayerConnected(k))//дальнейшее выполняем если игрок в коннекте
		{//сравниваем IP игрока с уже "подключенными" IP
			if(strcmp(PlayerInfo[playerid][pIPAdr], PlayerInfo[k][pIPAdr], true) == 0)
			{
				locper33[playerid]++;//прибавляем 1 к контрольной переменной максимума подключений для заданного IP-адреса
			}
		}
	}
	if(locper33[playerid] > locper44[playerid])
	{//если число подключений для заданного IP-адреса больше допустимого максимума подключений, то бан чита
		exitcheat[playerid] = 1;//присоединившийся игрок - чит
		print("[AntiCheatSys] ---------- 1 ----------");
		new banst[128];//бан чита
		format(string,sizeof(string),"* IP игрока %s [%d] был забанен за чит (1), мешающий работе сервера !",RealName[playerid],playerid);
		print(string);
		SendClientMessageToAll(COLOR_RED,string);
		strdel(fbanreason[playerid], 0, 256);//очистка причины бана
		strcat(fbanreason[playerid], "* Чит (1), мешающий работе сервера.");
		IPBanList(PlayerInfo[playerid][pIPAdr], fbanreason[playerid]);
		strdel(banst, 0, 128);//сборка RCON-команды бана
		strcat(banst, "banip ");
		strcat(banst, PlayerInfo[playerid][pIPAdr]);
		Kick(playerid);
		SendRconCommand(banst);//RCON-команда бана
		SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
//		Ban(playerid);
		return 1;
	}

	scrmod[0][playerid] = 0;//переменная режимов экрана
	scrmod[1][playerid] = 0;//переменная режимов экрана
	scrmod[2][playerid] = 0;//переменная режимов экрана
	scrmod[3][playerid] = 0;//переменная режимов экрана
	scrmod[4][playerid] = 0;//переменная режимов экрана
	SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);//установить нормальный стиль боя
    perfrost[playerid] = 600;//отключение заморозки
	compdrift[playerid] = -1000000;//отключение от дрифт-соревнования
//	caravto[playerid] = 0;
	playcar[playerid] = 0;
	tunset[playerid] = 1;//0-тюнинг в любом транспорте, 1-тюнинг в своём транспорте
    autorepair[playerid] = 1;

    PlayerInfo[playerid][pMinlog] = 0;//минут на сервере

	StopHidrav[playerid] = 0;//переменная задержки гидравлики
	crash8count[playerid] = 0;//обнуляем контроль антикрашера - 8
	crash7count[playerid] = 0;//обнуляем контроль антикрашера - 7
	crash6[playerid] = 0;//обнуляем контроль антикрашера - 6
	crash5count[playerid] = 0;//обнуляем контроль антикрашера - 5
	razresh[playerid] = 0;//снимаем разрешения управления кланом
	chatcon[playerid] = 0;//обнуляем контрольную переменную чата
	SetPVarInt(playerid, "CComAc0", 0);
	SetPVarInt(playerid, "CComAc1", 0);
	SetPVarInt(playerid, "CComAc2", 0);
	SetPVarInt(playerid, "CComAc3", 0);
	SetPVarInt(playerid, "CComAc4", 0);
	SetPVarInt(playerid, "CComAc5", 0);
	SetPVarInt(playerid, "CComAc6", 0);
	SetPVarInt(playerid, "CComAc7", 0);
	SetPVarInt(playerid, "CComAc8", 0);
	SetPVarInt(playerid, "CComAc9", 0);
	SetPVarInt(playerid, "CComAc10", 0);
	SetPVarInt(playerid, "CComAc11", 0);
	SetPVarInt(playerid, "CComAc12", 0);
	SetPVarInt(playerid, "CComAc13", 0);
	SetPVarInt(playerid, "CComAc14", 0);
	SetPVarInt(playerid, "CComAc15", 0);
	PlayerInfo[playerid][pAdmlive] = 0;//убрать бессмертие
	livdop[playerid] = 0;
	admper1[playerid] = 600;//переменная наблюдения 1
	SetPVarInt(playerid, "AdmSpect", admper1[playerid]);//глобальная переменная статуса наблюдения админа
	admper6[playerid] = 0;//переменная наблюдения 6
	SetPVarInt(playerid, "PlDeport", 0);//глобальная переменная депортации игрока
	neon[playerid][0] = 0;//присваиваем неону несуществующий номер объекта
	neon[playerid][1] = 0;//присваиваем неону несуществующий номер объекта
	neon[playerid][2] = 0;//несуществующий ид транспорта с неоном

//	PlayerInfo[playerid][pPISTOL] = 1;
//	PlayerInfo[playerid][pPISTOL_SILENCED] = 1;
//	PlayerInfo[playerid][pDESERT_EAGLE] = 1;
//	PlayerInfo[playerid][pSHOTGUN] = 1;
//	PlayerInfo[playerid][pSAWNOFF_SHOTGUN] = 1;
//	PlayerInfo[playerid][pSPAS12_SHOTGUN] = 1;
//	PlayerInfo[playerid][pMICRO_UZI] = 1;
//	PlayerInfo[playerid][pMP5] = 1;
//	PlayerInfo[playerid][pAK47] = 1;
//	PlayerInfo[playerid][pM4] = 1;
//	PlayerInfo[playerid][pSNIPERRIFLE] = 1;

//	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1);
//	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 1);

//==============================================================================
//                              GarHouse
//==============================================================================

	lockpas[playerid] = 0;//разблокировать диалог ввода пароля
	SetPVarInt(playerid, "HousePrevTime", 0);//обнуление важных глобальных переменных !!!
	SetPVarInt(playerid, "HousePreview", 0);
	SetPVarInt(playerid, "IsHouseVisiting", 0);
	SetPVarInt(playerid, "LastHouseCP", 0);
	SetPVarInt(playerid, "IsInHouse", 0);
	SetPVarInt(playerid, "HousePrevInt", 0);
	SetPVarInt(playerid, "IsHouseVisiting", 0);
	SetPVarInt(playerid, "ChangeHouseInt", 0);
	SetPVarInt(playerid, "HouseIntUpgradeMod", 0);
	SetPVarInt(playerid, "JustCreatedHouse", 0);
	SetPVarInt(playerid, "FirstSpawn", 0);

//==============================================================================
//                              End GarHouse
//==============================================================================

	TpDestA[playerid][0] = playspax[tpspa];//установка случайных телепортов
	TpDestA[playerid][1] = playspay[tpspa];
	TpDestA[playerid][2] = playspaz[tpspa];
	TpDestA[playerid][3] = playspaa[tpspa];
	TpPosA[playerid][0] = 0;
	TpPosA[playerid][1] = 0;
	TpDestP[playerid][0] = playspax[tpspa];
	TpDestP[playerid][1] = playspay[tpspa];
	TpDestP[playerid][2] = playspaz[tpspa];
	TpDestP[playerid][3] = playspaa[tpspa];

	for(new i=0;i<13;i++)//обнуление слотов оружия
	{
		playweap[playerid][i] = 0;
		playammo[playerid][i] = 0;
	}

	if(exitcheat[playerid] == 0)//если присоединившийся игрок - НЕ чит, то:
	{
#if (MOD90INS == 0)
		format(string, sizeof(string), "players/%s.ini", RealName[playerid]);
//		format(string, sizeof(string), "%s.ini", playrname);
		if(fexist(string))
		{
    		gPlayerAccount[playerid] = 1;
 			ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"Вход в аккаунт","Добро пожаловать на Drift non-DM сервер.\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
			SetPVarInt(playerid, "DlgCont", 1);
		}
		else
		{
    		gPlayerAccount[playerid] = 0;
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_INPUT,"Регистрация","Добро пожаловать на Drift non-DM сервер.\nВы не зарегистрированы на нашем сервере.\n\nДля продолжения, введите Ваш пароль в поле.","Войти","Отмена");
			SetPVarInt(playerid, "DlgCont", 0);
 		}
#endif
#if (MOD90INS == 1)
		format(string, sizeof(string), "players/%s.ini", RealName[playerid]);
//		format(string, sizeof(string), "%s.ini", playrname);
		if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
		{
    		migration[playerid] = 1;//делаем отметку о миграции аккаунта в SQLite,
    		gPlayerAccount[playerid] = 1;//и входим в аккаунт
 			ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"Вход в аккаунт","Добро пожаловать на Drift non-DM сервер.\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
			SetPVarInt(playerid, "DlgCont", 1);
		}
		else//иначе:
		{
			format(string, sizeof(string), "SELECT * FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, string);//отправляем запрос БД
			if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
			{//если число строк = 0 (такого аккаунта в БД нет), то - регистрация аккаунта
    			gPlayerAccount[playerid] = 0;
				ShowPlayerDialog(playerid,0,DIALOG_STYLE_INPUT,"Регистрация","Добро пожаловать на Drift non-DM сервер.\nВы не зарегистрированы на нашем сервере.\n\nДля продолжения, введите Ваш пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 0);
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
			}
			else//иначе - вход в аккаунт
			{
    			gPlayerAccount[playerid] = 1;
 				ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"Вход в аккаунт","Добро пожаловать на Drift non-DM сервер.\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 1);
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
 			}
 		}
#endif
	}
	else//иначе:
	{
		SendClientMessage(playerid,0xA9C4E4FF,"Server closed the connection.");
	}
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{

//==============================================================================
//                              GarHouse
//==============================================================================

	if(GetPVarInt(playerid, "HousePrevTime") != 0)
	{//если игрок осматривает интерьер, то сбросить таймер осмотра интерьера
	    SetPVarInt(playerid, "HousePreview", 0);
	    KillTimer(GetPVarInt(playerid, "HousePrevTimer"));
	    SetPVarInt(playerid, "IsHouseVisiting", 0);
		SetPVarInt(playerid, "HousePrevTime", 0);
	}
	if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 1)
	{//если игрок был в режиме осмотра интерьера, то вернуть старый интерьер
		new file555[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP");
		format(file555, sizeof(file555), FILEPATH, h);

  		DestroyHouseEntrance(h, TYPE_INT);
		CreateCorrectHouseExitCP(h);
		Loop(i, MAX_PLAYERS)
		{
  			if(GetPVarInt(i, "LastHouseCP") == h && GetPVarInt(i, "IsInHouse") == 1)
  			{
				SetPlayerHouseInterior(i, h);
			}
		}
//		#if defined GH_DEBUGGING
//			printf(DEBUG_ODR5, h, GetPVarInt(playerid, "HousePrevInt"));
//		#endif
	}
	SetPVarInt(playerid, "HouseIntUpgradeMod", 0);

	new file[HOUSEFILE_LENGTH];
	format(file, sizeof(file), FILEPATH, GetPVarInt(playerid, "LastHouseCP"));
    if(!strcmp(GetHouseOwner(GetPVarInt(playerid, "LastHouseCP")), RealName[playerid], CASE_SENSETIVE) && GetPVarInt(playerid, "IsInHouse") == 1 && dini_Exists(file))
	{
	    dini_IntSet(file, "QuitInHouse", 1);
	    #if defined GH_HOUSECARS
	    	SaveHouseCar(GetPVarInt(playerid, "LastHouseCP"));
	    	UnloadHouseCar(GetPVarInt(playerid, "LastHouseCP"));
        #endif
	    #if defined GH_DEBUGGING
	    	printf(DEBUG_OP_DISCONNECT, RealName[playerid], playerid);
    	#endif
	}
//==============================================================================
//                              End GarHouse
//==============================================================================

    new string[256];
	if(restrest == 0)//если нету рестарта сервера, то:
	{
		if(GetPVarInt(playerid, "Ban2Mon") == 0)
		{
			format(string,sizeof(string),"* %s [%d] вышел с сервера.",RealName[playerid],playerid);
			switch(reason)
			{
				case 0: format(string,sizeof(string),"%s (вылет (чит или инет тупанул))",string);
				case 1: format(string,sizeof(string),"%s (вышел)",string);
				case 2: format(string,sizeof(string),"%s (кик/бан)",string);
			}
			SendClientMessageToAll(COLOR_GREEN,string);
		}
		format(string,sizeof(string),"* Игрок %s [%d] вышел с сервера.",RealName[playerid],playerid);
		switch(reason)
		{
			case 0: format(string,sizeof(string),"%s (вылет (чит или инет тупанул))",string);
			case 1: format(string,sizeof(string),"%s (вышел)",string);
			case 2: format(string,sizeof(string),"%s (кик/бан)",string);
		}
		print(string);
	}
	else//иначе:
	{
		if(GetPVarInt(playerid, "Ban2Mon") == 0)
		{
			format(string,sizeof(string),"* %s [%d] вышел с сервера. (кик по рестарту)",RealName[playerid],playerid);
			SendClientMessageToAll(COLOR_GREEN,string);
		}
		format(string,sizeof(string),"* Игрок %s [%d] вышел с сервера. (кик по рестарту)",RealName[playerid],playerid);
		print(string);
	}
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
		AdmUpdate(RealName[playerid], PlayerInfo[playerid][pAdmin], 5);
	}
    if(mapiconid[playerid] != -600)//если ID мап иконки наблюдения НЕ пустой, то:
    {
		DestroyDynamicMapIcon(mapiconid[playerid]);//удаление мап иконки наблюдения
	}
	mapiconid[playerid] = -600;//очистка ID мап иконки наблюдения
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(admper1[i] == playerid)//если есть админ ведущий наблюдение за игроком, то:
			{
				if(admper5[i] == 1)//если админ наблюдал за транспортом, то:
				{
					PlayerTextDrawHide(i, VehicleSpeed[i]);//отключаем текстдравы спидометра
					TextDrawHideForPlayer(i, KMH);
					TextDrawHideForPlayer(i, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
					PlayerTextDrawHide(i, HMS44[i]);
				}
				TogglePlayerSpectating(i, 0);//запретить наблюдение для админа
				admper6[i] = 0;//обнуляем отметку о переключении наблюдения
				ShowPlayerDialog(i,2,0,"Информация.","Наблюдение было автоматически отключено !\
				\n( игрок, за кем Вы наблюдали - вышел с сервера )","OK","");
				SetPVarInt(i, "DlgCont", 2);
			}
		}
	}
	admper1[playerid] = 600;//переменная наблюдения 1
	admper6[playerid] = 0;//переменная наблюдения 6
	PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);//отключаем текстдравы спидометра
	TextDrawHideForPlayer(playerid, KMH);
	PlayerTextDrawDestroy(playerid, VehicleSpeed[playerid]);//удаляем текстдрав спидометра
	TextDrawHideForPlayer(playerid, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
	PlayerTextDrawHide(playerid, HMS44[playerid]);
	PlayerTextDrawDestroy(playerid, HMS44[playerid]);//удаляем текстдрав максимальной горизонтальной скорости
	for(new j = 0; j < 13; j++)
	{
		if(PlayerInfo[playerid][pPrisonsec] > 0 || DerbyID[playerid] == 2)//если игрок в тюрьме,
		{//или в зоне дерби, то: сохраняем в файле слоты оружия из вспомогательных переменных
			playweap[playerid][j] = play2weap[playerid][j];
			playammo[playerid][j] = play2ammo[playerid][j];
		}
		else
		{
			GetPlayerWeaponData(playerid, j, playweap[playerid][j], playammo[playerid][j]);//если игрок НЕ в тюрьме,
		}//и НЕ на территории X-зоны, и НЕ в зоне дерби, то: сохраняем в файле его текущие слоты оружия
	}
	OnPlayerSaveA(playerid);//сохраняем аккаунт игрока
	if(idgangsave[playerid] > 0)
	{
		GangSave(idgangsave[playerid]);//запись ID клана в файл
	}
    if(exitcheat[playerid] == 0)//если игрок - НЕ чит, то:
    {
    	if(PlayerInfo[playerid][pVIP] == 3)
    	{
        	format(string, sizeof(string), "* Игрок %s [%d] вышел с сервера со статусом депортации.",RealName[playerid],playerid);
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
    	if(PlayerInfo[playerid][pPrisonsec] > 0)
    	{
			new dopcis;
			dopcis = FCislit(PlayerInfo[playerid][pPrisonsec]);
	    	if(PlayerInfo[playerid][pPrisonsec] == 0)
	    	{
				format(string, sizeof(string), "* Игрок %s [%d] вышел с сервера с %d секунд тюрьмы.",RealName[playerid],playerid,PlayerInfo[playerid][pPrisonsec]);
			}
			else
			{
				switch(dopcis)
				{
					case 0, 2: format(string, sizeof(string), "* Игрок %s [%d] вышел с сервера с %d секундами тюрьмы.",RealName[playerid],playerid,PlayerInfo[playerid][pPrisonsec]);
					case 1: format(string, sizeof(string), "* Игрок %s [%d] вышел с сервера с %d секундой тюрьмы.",RealName[playerid],playerid,PlayerInfo[playerid][pPrisonsec]);
				}
			}
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
    	if(PlayerInfo[playerid][pMutedsec] > 0)
    	{
			new dopcis;
			dopcis = FCislit(PlayerInfo[playerid][pMutedsec]);
	    	if(PlayerInfo[playerid][pMutedsec] == 0)
	    	{
				format(string, sizeof(string), "* Игрок %s [%d] вышел с сервера с %d секунд затыка.",RealName[playerid],playerid,PlayerInfo[playerid][pMutedsec]);
			}
			else
			{
				switch(dopcis)
				{
					case 0, 2: format(string, sizeof(string), "* Игрок %s [%d] вышел с сервера с %d секундами затыка.",RealName[playerid],playerid,PlayerInfo[playerid][pMutedsec]);
					case 1: format(string, sizeof(string), "* Игрок %s [%d] вышел с сервера с %d секундой затыка.",RealName[playerid],playerid,PlayerInfo[playerid][pMutedsec]);
				}
			}
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
	}
	exitcheat[playerid] = 0;//обнуляем переменную чита

	R_Vehicle[playerid] = VehicleSpeed_1;//speedometer

//------------------------------ BusSystem -------------------------------------
	playspabs[playerid] = 0;//игрок не заспавнился
	for(new j; j < BUS_MAX; j++)//цикл для всех бизнесов
	{
		if(buscount[j] == 1 && strcmp(RealName[playerid], busplayname[j], false) == 0)//если бизнес существует,
		{//и это бизнес игрока, то:
			busidplay[j] = -600;//даём бизнесу несуществующий ИД игрока
			busmoney[j] = 0;//обнуляем счётчик минут бизнеса
		}
	}
	playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
//---------------------------- End BusSystem -----------------------------------

	conconTD[playerid] = 0;//снятие блокировки создания текст-дравов при подключении игрока
	scrmod[0][playerid] = 0;//переменная режимов экрана
	scrmod[1][playerid] = 0;//переменная режимов экрана
	scrmod[2][playerid] = 0;//переменная режимов экрана
	if(scrmod[3][playerid] == 1)
	{
		Level3D[playerid] = Create3DTextLabel(" ",0xFFFFFFAA,0.000,0.000,-4.000,18.0,0,1);
		LevelStats[playerid] = 0;
	}
	scrmod[3][playerid] = 0;//переменная режимов экрана
	scrmod[4][playerid] = 0;//переменная режимов экрана
	razresh[playerid] = 0;//снимаем разрешения управления кланом
	compdrift[playerid] = -1000000;//отключение от дрифт-соревнования
	ClearAnimations(playerid);//остановить анимацию
    perfrost[playerid] = 600;//отключение заморозки
	TogglePlayerControllable(playerid, 1);//разморозить ид вышедшего игрока
	if(neon[playerid][0] != 0) { DestroyObject(neon[playerid][0]); }//убрать неон
	if(neon[playerid][1] != 0) { DestroyObject(neon[playerid][1]); }//убрать неон
	neon[playerid][0] = 0;//присваиваем неону несуществующий номер объекта
	neon[playerid][1] = 0;//присваиваем неону несуществующий номер объекта
	neon[playerid][2] = 0;//несуществующий ид транспорта с неоном
	if(playcar[playerid] != 0)//если у игрока есть свой транспорт, то:
	{
		for(new i=0;i<MAX_PLAYERS;i++)//поиск и удаление чужого неона И обход антикрашера - 3
		{
			if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
			{
				if(GetPlayerVehicleID(i) == playcar[playerid])
				{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
					EnterTick33[i] = 1;//обход антикрашера - 3
				}
			}
			if(playcar[playerid] == neon[i][2])
			{
				DestroyObject(neon[i][0]);//убрать неон
				DestroyObject(neon[i][1]);//убрать неон
				neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
				neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
				neon[i][2] = 0;//несуществующий ид транспорта с неоном
 			}
		}
		DestroyVehicle(playcar[playerid]);//уничтожить свой транспорт
		playcar[playerid] = 0;//несуществующий ид транспорта
	}
	SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);//установить нормальный стиль боя
	gPlayerLogged[playerid] = 0;//запретить запись аккаунта
	playspa[playerid] = 0;//переменная спавна игрока
#if (MOD66INS > 1)
	playspascan[playerid] = 0;//переменная спавна игрока 2
	playspacount[playerid] = 0;//задержка контроля игрока на ошибку координат спавна
#endif
	playlogcount[playerid] = 0;//задержка контроля игрока на спавн без логирования
#if (MOD66INS == 3)
	DeletePVar(playerid, "sobcheck");//удаляем глобальную переменную сканера собейта
#endif
	DeletePVar(playerid, "DlgCont");//удаляем глобальную переменную ИДа диалога
	countdown[playerid] = -1;//очистка обратного отсчёта
	oneminkick[playerid] = 0;//кик - если не заспавнился
	passrcon[playerid] = 0;//бан взлома RCON-пароля
	prisoncount[playerid] = 0;//задержка контроля игрока в тюрьме
	DeletePVar(playerid, "PlDeport");//удаляем глобальную переменную депортации игрока
	DeletePVar(playerid, "AdmSpect");//удаляем глобальную переменную статуса наблюдения админа
	DeletePVar(playerid, "PlFrost");//удаляем глобальную переменную заморозки игрока
	DeletePVar(playerid, "PlSkin");//удаляем глобальную переменную скина игрока
	DeletePVar(playerid, "PlMon");//удаляем глобальную переменную денег игрока
	DeletePVar(playerid, "SecPris");//удаляем глобальную переменную секунд тюрьмы
	DeletePVar(playerid, "SecMute");//удаляем глобальную переменную секунд затыка
	DeletePVar(playerid, "AdmLvl");//удаляем глобальную переменную уровня админки
	DeletePVar(playerid, "PlGLvl");//удаляем глобальную переменную Lvl игрока в клане
	DeletePVar(playerid, "PlGng");//удаляем глобальную переменную ID клана игрока
	DeletePVar(playerid, "PlCRTp");//удаляем глобальную переменную блокировки координат
	DeletePVar(playerid, "CComAc0");//удаляем глобальные переменные контроля чата
	DeletePVar(playerid, "CComAc1");
	DeletePVar(playerid, "CComAc2");
	DeletePVar(playerid, "CComAc3");
	DeletePVar(playerid, "CComAc4");
	DeletePVar(playerid, "CComAc5");
	DeletePVar(playerid, "CComAc6");
	DeletePVar(playerid, "CComAc7");
	DeletePVar(playerid, "CComAc8");
	DeletePVar(playerid, "CComAc9");
	DeletePVar(playerid, "CComAc10");
	DeletePVar(playerid, "CComAc11");
	DeletePVar(playerid, "CComAc12");
	DeletePVar(playerid, "CComAc13");
	DeletePVar(playerid, "CComAc14");
	DeletePVar(playerid, "CComAc15");
	strdel(RealName[playerid],0,MAX_PLAYER_NAME);//очистить реальный ник игрока
	ct9control[playerid] = 0;
	DeletePVar(playerid, "PlCRct9");//удаляем глобальную переменную блокировки античита управления чужим транспортом
	crash5count[playerid] = 0;//обнуляем контроль антикрашера - 5
	crash6[playerid] = 0;//обнуляем контроль антикрашера - 6
	crash7count[playerid] = 0;//обнуляем контроль антикрашера - 7
	crash8count[playerid] = 0;//обнуляем контроль антикрашера - 8
	StopHidrav[playerid] = 0;//переменная задержки гидравлики
	functioncon[playerid] = 0;//обнуляем контрольную переменную функций
	chatcon[playerid] = 0;//обнуляем контрольную переменную чата
	strdel(fbanreason[playerid], 0, 256);//очистка причины бана
	LockSpawn[playerid] = 0;//разблокировать заполнение слотов оружия и предметов
	NETafkPl[playerid][1] = 0;//обнулить время AFK
	NETrecPl[playerid] = 0;//обнулить контроль сети
	NETsenPl[playerid] = 0;
	PlayLock1[0][playerid] = 600;//отключить блокировку игрока
	LocTime[playerid] = GlTime;//передать общее время в локальное
	StopHeal[playerid] = 0;//переменная задержки команды /heal
	StopGMoney[playerid] = 0;//переменная задержки команды /givemoney
	PlayCRTP[playerid] = 1;//блокировка контроля координат
	LogAdmcnt[playerid] = 0;//обнуляем переменную регистрации админов-2
	DeletePVar(playerid, "MnMode");//удаляем глобальную переменную режима меню
	DerbyID[playerid] = 0;//обнулить дерби-режим
	LevelStats[playerid] = 0;//drift bonus
    PlayerInfo[playerid][pMinlog] = 0;//обнулить число минут на сервере
	PlayerInfo[playerid][pAdmlive] = 0;//обнулить бессмертие
	livdop[playerid] = 0;
    PlayerInfo[playerid][pAdmin] = 0;//обнулить админку
	PlayerInfo[playerid][pAdmshad] = 0;//обнулить скрытость админа
#if (MOD90INS == 1)
	migration[playerid] = 0;//обнулить режим миграции аккаунта
#endif
	if(SnowONOFF[playerid] == 1)//если на сервере ядерный взрыв, то:
	{//удаляем объект снега
		DestroyPlayerObject(playerid,snowobj[playerid]);
		SnowONOFF[playerid] = 0;
	}
	strdel(twoIP[playerid],0,126);//запоминаем IP вышедшего игрока на 100 миллисекунд
	strcat(twoIP[playerid],PlayerInfo[playerid][pIPAdr]);
	SetTimerEx("ClearIP", 100, 0, "i", playerid);
	SetTimerEx("OutOut", 300, 0, "i", playerid);//задержка, на время записи аккаунта клана
	return 1;
}

forward OutOut(playerid);//Clans system
public OutOut(playerid)
{
	if(idgangsave[playerid] > 0)//если ID клана для записи - активен, то:
	{
		idgangsave[playerid] = 0;//очистка ID клана для записи
		locper3[playerid] = 0;
		while(locper3[playerid] < MAX_PLAYERS)//цикл для всех игроков
		{
			if(PGang[playerid] > 0 && PGang[playerid] == PGang[locper3[playerid]] && playerid != locper3[playerid])
			{//если есть хотя бы один игрок из клана выходящего, то:
				idgangsave[locper3[playerid]] = PGang[playerid];
				break;
			}
			locper3[playerid]++;
		}
	}
	idgangsave[playerid] = 0;//очистка ID клана для записи

	PGang[playerid] = 0;
	GangLvl[playerid] = 0;
	return 1;
}

public SendAdminMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pAdmin] >= 1)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

public OnPlayerSpawn(playerid)
{
#if (MOD4CINS == 0)
	if(functioncon[playerid] < 0)//если счётчик секунд меньше нуля, то:
	{
		return 1;//завершаем функцию
	}
	if(functioncon[playerid] > 5)//если игрок вызвал функции более 5-и раз за 1 секунду, то:
	{
		functioncon[playerid] = -5;//устанавливаем счётчик 5-и секунд
	}
#endif
	functioncon[playerid]++;//прибавляем 1 к контрольной переменной функций
	PlayCRTP[playerid] = 1;//блокировка контроля координат
	new string[256];
    if(PlayerInfo[playerid][pLock] == 1) { return 1; }
    if(gPlayerLogged[playerid] == 0)
	{
#if (MOD66INS > 1)
		SetPlayerVirtualWorld(playerid, playerid + 5000);//создаём игроку виртуальный спавн
		SetPlayerCameraPos(playerid, 2501.3, -1666.5, 14.34);
		SetPlayerCameraLookAt(playerid, 2497.3, -1666.5, 13.34);
		SetPlayerPos(playerid, 2497.3, -1666.5, 13.34);
		SetPlayerFacingAngle(playerid, -90.00);
#endif
		format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
		ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
		SetPVarInt(playerid, "DlgCont", 3);
		return 1;
	}
#if (MOD66INS == 2)
	if (playspascan[playerid] == 0)//если игрок не прошёл начальный выбор скина, то:
	{
		SetPlayerCameraPos(playerid, 2501.3, -1666.5, 14.34);//создаём игроку виртуальный спавн
		SetPlayerCameraLookAt(playerid, 2497.3, -1666.5, 13.34);
		SetPlayerPos(playerid, 2497.3, -1666.5, 13.34);
		SetPlayerFacingAngle(playerid, -90.00);
		new s[512];
#endif
#if (MOD33INS == 1 && MOD44INS == 0 && MOD66INS == 2)
		format(s,sizeof(s),"Управление:\n	Игровое меню - Y\n	( или   /menu )\n\nПомощь по командам:\n	/help\n\nПомощь по командам админа:\n	/ahelp\n\nОзнакомтесь с правилами:\n	Игровое меню -> Правила сервера.");
#endif
#if (MOD33INS == 1 && MOD44INS == 1 && MOD66INS == 2)
		format(s,sizeof(s),"Управление:\n	Игровое меню - Y\n	( или   /menu )\n\nПомощь по командам:\n	/help\n\nПомощь по командам админа:\n	/ahelp\n\nОзнакомтесь с правилами:\n	Игровое меню -> Кодекс игроков.");
#endif
#if (MOD33INS == 2 && MOD44INS == 0 && MOD66INS == 2)
		format(s,sizeof(s),"Управление:\n	Пешком:\n		Игровое меню - Левый ALT\n	В транспорте:\n		Игровое меню - 2 или NUM_+\n	( или   /menu )\n\nПомощь по командам:\n	/help\n\nПомощь по командам админа:\n	/ahelp\n\nОзнакомтесь с правилами:\n	Игровое меню -> Правила сервера.");
#endif
#if (MOD33INS == 2 && MOD44INS == 1 && MOD66INS == 2)
		format(s,sizeof(s),"Управление:\n	Пешком:\n		Игровое меню - Левый ALT\n	В транспорте:\n		Игровое меню - 2 или NUM_+\n	( или   /menu )\n\nПомощь по командам:\n	/help\n\nПомощь по командам админа:\n	/ahelp\n\nОзнакомтесь с правилами:\n	Игровое меню -> Кодекс игроков.");
#endif
#if (MOD66INS == 2)
		ShowPlayerDialog(playerid, 57, DIALOG_STYLE_MSGBOX,"Управление и правила",s,"OK","");//показываем игроку диалог "Управление и правила" на его виртуальном спавне
		SetPVarInt(playerid, "DlgCont", 57);
		return 1;
	}
#endif
#if (MOD66INS == 3)
	if (playspascan[playerid] == 0)//если игрок не прошёл сканер собейта, то:
	{
		OnPlayerSpawnScan(playerid);//отправляем игрока на сканер собейта
		return 1;
	}
#endif

//==============================================================================
//                              GarHouse
//==============================================================================
    if(GetPVarInt(playerid, "FirstSpawn") == 0)
    {
        // Используется для того, чтобы плеер spawn в их доме, если они уходят в их доме (только призвал к первому spawn)
		#if defined SPAWN_IN_HOUSE
    		SetTimerEx("HouseSpawning", HSPAWN_TIMER_RATE, false, "i", playerid);
    	#endif
    	// Увеличение скорости таймера, если ваш режимы игры OnPlayerSpawn вызывается после таймер закончился
    }
//==============================================================================
//                              End GarHouse
//==============================================================================

	R_Vehicle[playerid] = VehicleSpeed_1;//speedometer
/*
	TextDrawHideForPlayer(playerid,Textdraw0);//drift bonus
	TextDrawHideForPlayer(playerid,Textdraw1);
	new Score = GetPVarInt(playerid, "PlMon");
	if(Score >= 0 && Score < 100000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}1{FFFFFF}.*\n*{00CCFF}Нуб в дрифтинге{FFFFFF}*");
	if(Score >= 100000 && Score < 200000) format(Playerdr[playerid][Level],200,"{FFFFFF}*Игрок{FFFFFF}*\n*Уровень: {00CCFF}2{FFFFFF}.*\n*{00CCFF}Новичок{FFFFFF}*");
	if(Score >= 200000 && Score < 300000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}3{FFFFFF}.*\n*{00CCFF}Начинающий дрифтер{FFFFFF}*");
	if(Score >= 300000 && Score < 400000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}4{FFFFFF}.*\n*{00CCFF}Проживающий{FFFFFF}*");
	if(Score >= 400000 && Score < 500000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}5{FFFFFF}.*\n*{00CCFF}Свой{FFFFFF}*");
	if(Score >= 500000 && Score < 600000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}6{FFFFFF}.*\n*{00CCFF}Пахан{FFFFFF}*");
	if(Score >= 600000 && Score < 700000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}7{FFFFFF}.*\n*{00CCFF}Pro Drifter{FFFFFF}*");
	if(Score >= 700000 && Score < 800000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}8{FFFFFF}.*\n*{00CCFF}VIP{FFFFFF}*");
	if(Score >= 800000 && Score < 900000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}9{FFFFFF}.*\n*{00CCFF}Гловарь{FFFFFF}*");
	if(Score >= 900000 ) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}*10*{FFFFFF}.*\n*{00CCFF}Король дрифта{FFFFFF}*");
	if(scrmod[3][playerid] == 0)
	{
		if(LevelStats[playerid] == 0) Attach3DTextLabelToPlayer(Level3D[playerid],playerid,0.0,0.0,1.00);
//		if(LevelStats[playerid] == 0) Attach3DTextLabelToPlayer(Level3D[playerid],playerid,0.0,0.0,0.47);
		Update3DTextLabelText(Level3D[playerid],0x00FF00FF,Playerdr[playerid][Level]);
		LevelStats[playerid] = 1;
	}
*/

//------------------------------ BusSystem -------------------------------------
	if(playspabs[playerid] == 0)//если игрок ещё не заспавнился, то:
	{
		for(new j; j < BUS_MAX; j++)//цикл для всех бизнесов
		{
			if(buscount[j] == 1 && strcmp(RealName[playerid], busplayname[j], false) == 0)//если бизнес существует,
			{//и это бизнес игрока, то:
				busidplay[j] = playerid;//даём бизнесу ИД он-лайн игрока - владельца бизнеса
				busmoney[j] = 0;//обнуляем счётчик минут бизнеса
			}
		}
	}
	playspabs[playerid] = 1;//игрок заспавнился
//---------------------------- End BusSystem -----------------------------------

	SetPVarInt(playerid, "PlCRct9", 1);//блокировка античита управления чужим транспортом
	if(PlayLock1[0][playerid] != 600 && PlayerInfo[playerid][pPrisonsec] == 0)
	{//если игрок заблокирован, и не сидит в тюрьме, то заменяем данные блокировки на данные полицейского участка
		PlayLock1[1][playerid] = 3;//интерьер полицейского участка
		PlayLock1[2][playerid] = 0;//виртуальный мир 0
		PlayLock2[0][playerid] = 202.65;//координаты полицейского участка
		PlayLock2[1][playerid] = 179.72;
		PlayLock2[2][playerid] = 1003.03;
		PlayLock2[3][playerid] = 96.66;//угол спавна в полицейском участке
		SetCameraBehindPlayer(playerid);//камера за спиной
	}
	else//иначе - спавн игрока
	{
		if(admper1[playerid] != 600)//спавн админа после снятия наблюдения
		{
			new cordz = 0;
			if(admper4[playerid] == 3)
			{
				cordz = 5;
			}
			admper1[playerid] = 600;//установить статус выключенного наблюдения
			SetPlayerInterior(playerid, admper2[playerid]);//вернуть интерьер админа
			SetPlayerVirtualWorld(playerid, admper3[playerid]);//вернуть мир админа
			SetPlayerPos(playerid, TelSpec[playerid][0] + admper4[playerid],TelSpec[playerid][1] + admper4[playerid],TelSpec[playerid][2] + cordz);//вернуть координаты админа
			SetCameraBehindPlayer(playerid);//расположить камеру за админом (игроком)
    		if(mapiconid[playerid] != -600)//если ID мап иконки наблюдения НЕ пустой, то:
    		{
				DestroyDynamicMapIcon(mapiconid[playerid]);//удаление мап иконки наблюдения
			}
			mapiconid[playerid] = -600;//очистка ID мап иконки наблюдения
		}
		else
		{

			if(PGang[playerid] > 0 && strlen(GName[PGang[playerid]]) == 0)//Clans system
			{//если игрок состоит в клане, и в названии клана нет ни одного символа (клан удалён), то:
				PGang[playerid] = 0;//обнулить игроку статус клана, и заспавнить игрока как обычного
    			GangLvl[playerid] = 0;
				SendClientMessage(playerid, 0xFF0000FF, "Ваш клан был удалён !");
 				SetPlayerInterior(playerid, 0);//установка интерьера 0
				SetPlayerVirtualWorld(playerid, 0);//установка виртуального мира 0
				SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);//случайные координаты спавна игрока
				SetPlayerFacingAngle(playerid, playspaa[tpspa]);//случайный угол спавна игрока
 				SetCameraBehindPlayer(playerid);//расположить камеру за игроком
			}
			else//иначе - проверить на наличие спавна из клана
			{
				if(PGang[playerid] > 0 && (GSpawnX[PGang[playerid]] != 0.0 || GSpawnY[PGang[playerid]] != 0.0 || GSpawnZ[PGang[playerid]] != 0.0))
				{//если игрок состоит в клане, и в клане установлены координаты спавна, то:
 					SetPlayerInterior(playerid, GInter[PGang[playerid]]);//установка интерьера из клана
					SetPlayerVirtualWorld(playerid, GWorld[PGang[playerid]]);//установка виртуального мира из клана
					SetPlayerPos(playerid, GSpawnX[PGang[playerid]], GSpawnY[PGang[playerid]], GSpawnZ[PGang[playerid]]);//координаты спавна игрока из клана
 					SetCameraBehindPlayer(playerid);//расположить камеру за игроком
				}
				else//иначе - случайный спавн
				{
 					SetPlayerInterior(playerid, 0);//установка интерьера 0
					SetPlayerVirtualWorld(playerid, 0);//установка виртуального мира 0
					SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);//случайные координаты спавна игрока
					SetPlayerFacingAngle(playerid, playspaa[tpspa]);//случайный угол спавна игрока
 					SetCameraBehindPlayer(playerid);//расположить камеру за игроком
				}
				if(playspa[playerid] == 0)//если это первый спавн игрока, то:
				{
					SetTimerEx("Logg333", 1000, 0, "i", playerid);//задержка, на время чтения аккаунта клана
					SetTimerEx("ct9spawn", 2000, 0, "i", playerid);
				}
			}

		}
	}
	if (weapstatplay[playerid] == 0)//заполнение слотов оружия и предметов
	{
		for(new i=0;i<13;i++)
		{
			GivePlayerWeapon(playerid, play2weap[playerid][i], play2ammo[playerid][i]);
		}
		weapstatplay[playerid] = 1;
	}
	else
	{
		if (LockSpawn[playerid] == 0)//заполнение слотов оружия и предметов (если НЕТ блокировки)
		{
			for(new i=0;i<13;i++)
			{
				GivePlayerWeapon(playerid, playweap[playerid][i], playammo[playerid][i]);
			}
		}
		LockSpawn[playerid] = 0;//разблокировать заполнение слотов оружия и предметов
	}

	if(PGang[playerid] > 0 && GangLvl[playerid] <= 0)//Clans system
	{//если игрок состоит в клане, и его уровень в клане меньше 1, то:
		GangLvl[playerid] = 1;//даём игроку уровень 1
	}
	if(PGang[playerid] > 0 && GSkin[PGang[playerid]][GangLvl[playerid]-1] < 500)
	{//если игрок состоит в клане, и в клане установлен скин, то:
		if (skinstatplay[playerid] == 0)//присваивание скина игроку из клана
		{
			SetPVarInt(playerid, "PlSkin", GSkin[PGang[playerid]][GangLvl[playerid]-1]);
			skinstatplay[playerid] = 1;
		}
		SetPlayerSkin(playerid, GetPVarInt(playerid, "PlSkin"));
	}
	else//иначе - присваивание скина игроку
	{
		if (skinstatplay[playerid] == 0)//присваивание скина игроку
		{
			SetPVarInt(playerid, "PlSkin", GetPlayerSkin(playerid));
			skinstatplay[playerid] = 1;
		}
		SetPlayerSkin(playerid, GetPVarInt(playerid, "PlSkin"));
	}

 	SetPlayerHealth(playerid,100);
 	SetPlayerArmour(playerid,100);

	if(PGang[playerid] > 0)//Clans system - если игрок состоит в клане, то:
	{
		if (nickstatcol[playerid] == 0)//присваивание цвета ника и цвета маркера игроку из клана
		{
			ColorPlay[playerid] = GColorDec[PGang[playerid]];
			SetPlayerColor(playerid, ColorPlay[playerid]);//устанавливаем цвет ника
			for(new i=0;i<MAX_PLAYERS;i++)//устанавливаем цвет маркера для всех игроков
			{
				SetPlayerMarkerForPlayer(i, playerid, GColorDec[PGang[playerid]]);
			}
			nickstatcol[playerid] = 1;
		}
	}
	else//иначе - присваивание цвета ника и цвета маркера игроку
	{
		if (nickstatcol[playerid] == 0)//присваивание цвета ника и цвета маркера игроку
		{
			ColorPlay[playerid] = ColNick[nick5col];
			SetPlayerColor(playerid, ColorPlay[playerid]);//устанавливаем цвет ника
			for(new i=0;i<MAX_PLAYERS;i++)//устанавливаем цвет маркера для всех игроков
			{
				SetPlayerMarkerForPlayer(i, playerid, ColorPlay[playerid]);
			}
			nickstatcol[playerid] = 1;
		}
	}

	if (PlayerInfo[playerid][pPrisonsec] > 0)//посадка в тюрьму
	{
		ResetPlayerWeapons(playerid);//отобрать оружие
		SetPlayerInterior(playerid, 3);//интерьер тюрьмы
		SetPlayerVirtualWorld(playerid, 0);//виртуальный мир 0
		SetPlayerPos(playerid, 193.31, 173.87, 1003.02);//координаты тюрьмы
		SetPlayerFacingAngle(playerid, 0.44);//угол спавна в тюрьме
		SetCameraBehindPlayer(playerid);//камера за спиной
	}
	if (perfrost[playerid] != 600)//включение заморозки
	{
		TogglePlayerControllable(playerid,0);
	}
	if(nucexplos == 1 && SnowONOFF[playerid] == 0)//если на сервере ядерный взрыв,
	{//И игрок только зашёл на сервер, то: саздаём объект снега
		new Float:sx,Float:sy,Float:sz;
		GetPlayerCameraPos(playerid,sx,sy,sz);
		snowobj[playerid] = CreatePlayerObject(playerid,18864, sx, sy, sz-5, 0.0, 0.0, 0.0, 300.0);
		SnowONOFF[playerid] = 1;
	}
	if (playspa[playerid] == 0)
	{
		printf("* Игрок %s [%d] --> (спавн) .", RealName[playerid], playerid);
    	if(PlayerInfo[playerid][pVIP] == 3)
    	{
        	format(string, sizeof(string),"* У игрока %s [%d] статус депортации.",RealName[playerid],playerid);
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
		if(PlayerInfo[playerid][pPrisonsec] > 0)
		{
			new dopcis;
			dopcis = FCislit(PlayerInfo[playerid][pPrisonsec]);
			switch(dopcis)
			{
				case 0: format(string,sizeof(string),"* У игрока %s [%d] %d секунд тюрьмы.",RealName[playerid],playerid,PlayerInfo[playerid][pPrisonsec]);
				case 1: format(string,sizeof(string),"* У игрока %s [%d] %d секунда тюрьмы.",RealName[playerid],playerid,PlayerInfo[playerid][pPrisonsec]);
				case 2: format(string,sizeof(string),"* У игрока %s [%d] %d секунды тюрьмы.",RealName[playerid],playerid,PlayerInfo[playerid][pPrisonsec]);
			}
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			new dopcis;
			dopcis = FCislit(PlayerInfo[playerid][pMutedsec]);
			switch(dopcis)
			{
				case 0: format(string,sizeof(string),"* У игрока %s [%d] %d секунд затыка.",RealName[playerid],playerid,PlayerInfo[playerid][pMutedsec]);
				case 1: format(string,sizeof(string),"* У игрока %s [%d] %d секунда затыка.",RealName[playerid],playerid,PlayerInfo[playerid][pMutedsec]);
				case 2: format(string,sizeof(string),"* У игрока %s [%d] %d секунды затыка.",RealName[playerid],playerid,PlayerInfo[playerid][pMutedsec]);
			}
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
	}
	playspa[playerid] = 1;//переменная спавна игрока
	return 1;
}

#if (MOD66INS == 3)
	forward OnPlayerSpawnScan(playerid);
	public OnPlayerSpawnScan(playerid)//спавн для сканера собейта
	{
		SetPlayerVirtualWorld(playerid, playerid + 5000);//создаём игроку виртуальный спавн
		SetPlayerPos(playerid, 2497.3, -1666.5, 13.34);//для сканера собейта
		SetPlayerFacingAngle(playerid, 90.00);
		SetCameraBehindPlayer(playerid);
		SetPVarInt(playerid, "sobcheck", 60);
		TogglePlayerControllable(playerid, false);
		ScanSobeit(playerid);//отправляем игрока на сканер собейта
		return 1;
	}

	forward ScanSobeit(playerid);
	public ScanSobeit(playerid)//сканер собейта
	{
		new string[256];
		if(GetPVarInt(playerid, "sobcheck") > 1)
		{
			SetPVarInt(playerid, "sobcheck", GetPVarInt(playerid, "sobcheck")-1);
			format(string,sizeof string,"{FFFFFF}Пожалуйста подождите !\nСчётчик контроля: {FF0000}%d", GetPVarInt(playerid, "sobcheck"));
			ShowPlayerDialog(playerid,2,DIALOG_STYLE_MSGBOX,"Сканер собейта",string,"OK","");
			SetPVarInt(playerid, "DlgCont", 2);
			return SetTimerEx("ScanSobeit", 100, false, "i",playerid);
		}
		GetPlayerCameraFrontVector(playerid,sposcheck[playerid][0],sposcheck[playerid][1],sposcheck[playerid][2]);
		if(GetPVarInt(playerid, "sobcheck") == 1)
		{
			SetPVarInt(playerid, "sobcheck", GetPVarInt(playerid, "sobcheck")-1);
			if(sposcheck[playerid][2] < -0.35)
			{
				ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"HideDialog","text","Close","");
				TogglePlayerControllable(playerid, true);
				format(string,sizeof(string),"* Игрок %s [%d] был кикнут - обнаружение собейта !", RealName[playerid], playerid);
				print(string);
	    		SendClientMessageToAll(COLOR_RED, string);
				SetTimerEx("PlayKick", 300, 0, "i", playerid);
			}
			else
			{
				ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"HideDialog","text","Close","");
				SetPlayerCameraPos(playerid, 2501.3, -1666.5, 14.34);//создаём игроку виртуальный спавн
				SetPlayerCameraLookAt(playerid, 2497.3, -1666.5, 13.34);
				SetPlayerPos(playerid, 2497.3, -1666.5, 13.34);
				SetPlayerFacingAngle(playerid, -90.00);
				new s[512];
#endif
#if (MOD33INS == 1 && MOD44INS == 0 && MOD66INS == 3)
				format(s,sizeof(s),"Управление:\n	Игровое меню - Y\n	( или   /menu )\n\nПомощь по командам:\n	/help\n\nПомощь по командам админа:\n	/ahelp\n\nОзнакомтесь с правилами:\n	Игровое меню -> Правила сервера.");
#endif
#if (MOD33INS == 1 && MOD44INS == 1 && MOD66INS == 3)
				format(s,sizeof(s),"Управление:\n	Игровое меню - Y\n	( или   /menu )\n\nПомощь по командам:\n	/help\n\nПомощь по командам админа:\n	/ahelp\n\nОзнакомтесь с правилами:\n	Игровое меню -> Кодекс игроков.");
#endif
#if (MOD33INS == 2 && MOD44INS == 0 && MOD66INS == 3)
				format(s,sizeof(s),"Управление:\n	Пешком:\n		Игровое меню - Левый ALT\n	В транспорте:\n		Игровое меню - 2 или NUM_+\n	( или   /menu )\n\nПомощь по командам:\n	/help\n\nПомощь по командам админа:\n	/ahelp\n\nОзнакомтесь с правилами:\n	Игровое меню -> Правила сервера.");
#endif
#if (MOD33INS == 2 && MOD44INS == 1 && MOD66INS == 3)
				format(s,sizeof(s),"Управление:\n	Пешком:\n		Игровое меню - Левый ALT\n	В транспорте:\n		Игровое меню - 2 или NUM_+\n	( или   /menu )\n\nПомощь по командам:\n	/help\n\nПомощь по командам админа:\n	/ahelp\n\nОзнакомтесь с правилами:\n	Игровое меню -> Кодекс игроков.");
#endif
#if (MOD66INS == 3)
				ShowPlayerDialog(playerid, 57, DIALOG_STYLE_MSGBOX,"Управление и правила",s,"OK","");//показываем игроку диалог "Управление и правила" на его виртуальном спавне
				SetPVarInt(playerid, "DlgCont", 57);
			}
		}
		return 1;
	}
#endif

forward Logg333(playerid);//Clans system
public Logg333(playerid)
{
	new dopper = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)//подготовка к записи ID клана
	{
		if(PGang[playerid] > 0 && PGang[playerid] == idgangsave[i])
		{//если игрок состоит в клане, и ID его клана уже есть в списке, то:
			dopper = 1;
		}
	}
	if(PGang[playerid] > 0 && dopper == 0)
	{//если игрок состоит в клане, и ID его клана НЕ был найден в списке, то:
		idgangsave[playerid] = PGang[playerid];//записываем в список ID клана игрока
	}
	return 1;
}

forward ct9spawn(playerid);
public ct9spawn(playerid)
{
	ct9control[playerid] = 1;
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
#if (MOD4CINS == 0)
	if(functioncon[playerid] < 0)//если счётчик секунд меньше нуля, то:
	{
		return 1;//завершаем функцию
	}
	if(functioncon[playerid] > 5)//если игрок вызвал функции более 5-и раз за 1 секунду, то:
	{
		functioncon[playerid] = -5;//устанавливаем счётчик 5-и секунд
	}
#endif
	functioncon[playerid]++;//прибавляем 1 к контрольной переменной функций
	new Float:PosX, Float:PosY, Float:PosZ;//проверка игрока в X-зоне
	GetPlayerPos(playerid, PosX, PosY, PosZ);//чтение координат (playerid) игрока
	if((-1602 < PosX < -1193 && 840 < PosY < 1158 && 973 < PosZ < 1101) ||
	(-1547 < PosX < -1247 && 1506 < PosY < 1705 && 1002 < PosZ < 1123))//сравниваем координаты
	{//игрок в зоне дерби
		LockSpawn[playerid] = 1;//если игрок умер в зоне дерби, то блокируем заполнение слотов оружия и предметов
	}

	R_Vehicle[playerid] = VehicleSpeed_1;//speedometer
/*
	if(IsPlayerConnected(killerid) && killerid != INVALID_PLAYER_ID)//drift bonus
	{
	new Score = GetPVarInt(killerid, "PlMon");
	if(Score >= 0 && Score < 100000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}1{FFFFFF}.*\n*{00CCFF}Нуб в дрифтинге{FFFFFF}*");
	if(Score >= 100000 && Score < 200000) format(Playerdr[killerid][Level],200,"{FFFFFF}*Игрок{FFFFFF}*\n*Уровень: {00CCFF}2{FFFFFF}.*\n*{00CCFF}Новичок{FFFFFF}*");
	if(Score >= 200000 && Score < 300000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}3{FFFFFF}.*\n*{00CCFF}Начинающий дрифтер{FFFFFF}*");
	if(Score >= 300000 && Score < 400000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}4{FFFFFF}.*\n*{00CCFF}Проживающий{FFFFFF}*");
	if(Score >= 400000 && Score < 500000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}5{FFFFFF}.*\n*{00CCFF}Свой{FFFFFF}*");
	if(Score >= 500000 && Score < 600000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}6{FFFFFF}.*\n*{00CCFF}Пахан{FFFFFF}*");
	if(Score >= 600000 && Score < 700000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}7{FFFFFF}.*\n*{00CCFF}Pro Drifter{FFFFFF}*");
	if(Score >= 700000 && Score < 800000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}8{FFFFFF}.*\n*{00CCFF}VIP{FFFFFF}*");
	if(Score >= 800000 && Score < 900000) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}9{FFFFFF}.*\n*{00CCFF}Гловарь{FFFFFF}*");
	if(Score >= 900000 ) format(Playerdr[killerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}*10*{FFFFFF}.*\n*{00CCFF}Король дрифта{FFFFFF}*");
	Update3DTextLabelText(Level3D[killerid],0x00FF00FF,Playerdr[killerid][Level]);
	}
*/
    SendDeathMessage(killerid,playerid,reason);
	if(killerid != INVALID_PLAYER_ID)
	{
		PlayerInfo[killerid][pKills] += 1;
		PlayerInfo[playerid][pDeaths] += 1;
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
//	SetVehicleToRespawn(vehicleid);
	return 1;
}

public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
		strdel(PlayerInfo[playerid][pTDReg], 0, 256);//очистка времени и даты регистрации
		gettime(timecor[0], timecor[1]);
		getdate(timecor[2], timecor[3], timecor[4]);
		TimCor();//коррекция времени
		DatCor();//коррекция даты
		format(PlayerInfo[playerid][pTDReg], 256, "%02d:%02d - %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
#if (MOD90INS == 0)
		new string3[64];
//		new playername3[MAX_PLAYER_NAME];
//		GetPlayerName(playerid, playername3, sizeof(playername3));
		format(string3, sizeof(string3), "players/%s.ini", RealName[playerid]);//реальный ник игрока
//		format(string3, sizeof(string3), "players/%s.ini", playername3);
//		format(string3, sizeof(string3), "%s.ini", playername3);
		new File: hFile = fopen(string3, io_write);
		if (hFile)
		{
			strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
			new var[32];
			PlayerInfo[playerid][pReg] = 0;
			format(var, 32, "Key=%s\n",PlayerInfo[playerid][pKey]);fwrite(hFile, var);
			format(var, 32, "TDReg=%s\n",PlayerInfo[playerid][pTDReg]);fwrite(hFile, var);
			format(var, 32, "IPAdr=%s\n",PlayerInfo[playerid][pIPAdr]);fwrite(hFile, var);
			format(var, 32, "MinLog=%d\n",PlayerInfo[playerid][pMinlog]);fwrite(hFile, var);
			format(var, 32, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
			format(var, 32, "AdminShadow=%d\n",PlayerInfo[playerid][pAdmshad]);fwrite(hFile, var);
			format(var, 32, "AdminLive=%d\n",PlayerInfo[playerid][pAdmlive]);fwrite(hFile, var);
			format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
			format(var, 32, "Prison=%d\n",PlayerInfo[playerid][pPrison]);fwrite(hFile, var);
			format(var, 32, "Prisonsec=%d\n",PlayerInfo[playerid][pPrisonsec]);fwrite(hFile, var);
			format(var, 32, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
			format(var, 32, "Mutedsec=%d\n",PlayerInfo[playerid][pMutedsec]);fwrite(hFile, var);
			format(var, 32, "Money=%d\n",GetPVarInt(playerid, "PlMon"));fwrite(hFile, var);
			format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
			format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
			format(var, 32, "VIP=%d\n",PlayerInfo[playerid][pVIP]);fwrite(hFile, var);
			format(var, 32, "Lock=%d\n",PlayerInfo[playerid][pLock]);fwrite(hFile, var);
			format(var, 32, "Gang=%d\n",PGang[playerid]);fwrite(hFile, var);
			format(var, 32, "GangLvl=%d\n",GangLvl[playerid]);fwrite(hFile, var);
//			format(var, 32, "PISTOL=%d\n",PlayerInfo[playerid][pPISTOL]);fwrite(hFile, var);
//			format(var, 32, "PISTOL_SILENCED=%d\n",PlayerInfo[playerid][pPISTOL_SILENCED]);fwrite(hFile, var);
//			format(var, 32, "DESERT_EAGLE=%d\n",PlayerInfo[playerid][pDESERT_EAGLE]);fwrite(hFile, var);
//			format(var, 32, "SHOTGUN=%d\n",PlayerInfo[playerid][pSHOTGUN]);fwrite(hFile, var);
//			format(var, 32, "SAWNOFF_SHOTGUN=%d\n",PlayerInfo[playerid][pSAWNOFF_SHOTGUN]);fwrite(hFile, var);
//			format(var, 32, "SPAS12_SHOTGUN=%d\n",PlayerInfo[playerid][pSPAS12_SHOTGUN]);fwrite(hFile, var);
//			format(var, 32, "MICRO_UZI=%d\n",PlayerInfo[playerid][pMICRO_UZI]);fwrite(hFile, var);
//			format(var, 32, "MP5=%d\n",PlayerInfo[playerid][pMP5]);fwrite(hFile, var);
//			format(var, 32, "AK47=%d\n",PlayerInfo[playerid][pAK47]);fwrite(hFile, var);
//			format(var, 32, "M4=%d\n",PlayerInfo[playerid][pM4]);fwrite(hFile, var);
//			format(var, 32, "SNIPERRIFLE=%d\n",PlayerInfo[playerid][pSNIPERRIFLE]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot0=%d\n",playweap[playerid][0]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot1=%d\n",playweap[playerid][1]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot2=%d\n",playweap[playerid][2]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot3=%d\n",playweap[playerid][3]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot4=%d\n",playweap[playerid][4]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot5=%d\n",playweap[playerid][5]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot6=%d\n",playweap[playerid][6]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot7=%d\n",playweap[playerid][7]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot8=%d\n",playweap[playerid][8]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot9=%d\n",playweap[playerid][9]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot10=%d\n",playweap[playerid][10]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot11=%d\n",playweap[playerid][11]);fwrite(hFile, var);
			format(var, 32, "Weapon_slot12=%d\n",playweap[playerid][12]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot0=%d\n",playammo[playerid][0]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot1=%d\n",playammo[playerid][1]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot2=%d\n",playammo[playerid][2]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot3=%d\n",playammo[playerid][3]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot4=%d\n",playammo[playerid][4]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot5=%d\n",playammo[playerid][5]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot6=%d\n",playammo[playerid][6]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot7=%d\n",playammo[playerid][7]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot8=%d\n",playammo[playerid][8]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot9=%d\n",playammo[playerid][9]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot10=%d\n",playammo[playerid][10]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot11=%d\n",playammo[playerid][11]);fwrite(hFile, var);
			format(var, 32, "Ammo_slot12=%d\n",playammo[playerid][12]);fwrite(hFile, var);
			fclose(hFile);

			printf("* Игрок %s [%d] --> (регистрация, пароль: (%s)) .", RealName[playerid], playerid, password);
			gPlayerAccount[playerid] = 1;
			OnPlayerLogin(playerid,password);
		}
#endif
#if (MOD90INS == 1)
		new strdln[5000];
		strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
		PlayerInfo[playerid][pReg] = 0;
		format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
		format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
		format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
		format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
		format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
		format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
		format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, RealName[playerid],PlayerInfo[playerid][pKey],PlayerInfo[playerid][pTDReg]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,'%s',", strdln, EndConD,EndConM,EndConY,PlayerInfo[playerid][pIPAdr]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pMinlog],PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][pAdmshad]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pAdmlive],PlayerInfo[playerid][pReg],PlayerInfo[playerid][pPrison]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pPrisonsec],PlayerInfo[playerid][pMuted],PlayerInfo[playerid][pMutedsec]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, GetPVarInt(playerid, "PlMon"),PlayerInfo[playerid][pKills],PlayerInfo[playerid][pDeaths]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, PlayerInfo[playerid][pVIP],PlayerInfo[playerid][pLock],PGang[playerid],GangLvl[playerid]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, playweap[playerid][0],playweap[playerid][1],playweap[playerid][2],playweap[playerid][3]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, playweap[playerid][4],playweap[playerid][5],playweap[playerid][6],playweap[playerid][7]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, playweap[playerid][8],playweap[playerid][9],playweap[playerid][10],playweap[playerid][11]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, playweap[playerid][12],playammo[playerid][0],playammo[playerid][1],playammo[playerid][2]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, playammo[playerid][3],playammo[playerid][4],playammo[playerid][5],playammo[playerid][6]);
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, playammo[playerid][7],playammo[playerid][8],playammo[playerid][9],playammo[playerid][10]);
		format(strdln, sizeof(strdln), "%s%d,%d)", strdln, playammo[playerid][11],playammo[playerid][12]);
		db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

		printf("* Игрок %s [%d] --> (регистрация, пароль: (%s)) .", RealName[playerid], playerid, password);
		gPlayerAccount[playerid] = 1;
		OnPlayerLogin(playerid,password);
#endif
	}
	return 1;
}

public OnPlayerSaveA(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(gPlayerLogged[playerid])
		{
#if (MOD90INS == 0)
			new string3[64];
//			new playername3[MAX_PLAYER_NAME];
//			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "players/%s.ini", RealName[playerid]);//реальный ник игрока
//			format(string3, sizeof(string3), "players/%s.ini", playername3);
//			format(string3, sizeof(string3), "%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n",PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				format(var, 32, "TDReg=%s\n",PlayerInfo[playerid][pTDReg]);fwrite(hFile, var);
				format(var, 32, "IPAdr=%s\n",PlayerInfo[playerid][pIPAdr]);fwrite(hFile, var);
				format(var, 32, "MinLog=%d\n",PlayerInfo[playerid][pMinlog]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
				format(var, 32, "AdminShadow=%d\n",PlayerInfo[playerid][pAdmshad]);fwrite(hFile, var);
				format(var, 32, "AdminLive=%d\n",PlayerInfo[playerid][pAdmlive]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 32, "Prison=%d\n",PlayerInfo[playerid][pPrison]);fwrite(hFile, var);
				format(var, 32, "Prisonsec=%d\n",PlayerInfo[playerid][pPrisonsec]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
				format(var, 32, "Mutedsec=%d\n",PlayerInfo[playerid][pMutedsec]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",GetPVarInt(playerid, "PlMon"));fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 32, "VIP=%d\n",PlayerInfo[playerid][pVIP]);fwrite(hFile, var);
				format(var, 32, "Lock=%d\n",PlayerInfo[playerid][pLock]);fwrite(hFile, var);
				format(var, 32, "Gang=%d\n",PGang[playerid]);fwrite(hFile, var);
				format(var, 32, "GangLvl=%d\n",GangLvl[playerid]);fwrite(hFile, var);
//				format(var, 32, "PISTOL=%d\n",PlayerInfo[playerid][pPISTOL]);fwrite(hFile, var);
//				format(var, 32, "PISTOL_SILENCED=%d\n",PlayerInfo[playerid][pPISTOL_SILENCED]);fwrite(hFile, var);
//				format(var, 32, "DESERT_EAGLE=%d\n",PlayerInfo[playerid][pDESERT_EAGLE]);fwrite(hFile, var);
//				format(var, 32, "SHOTGUN=%d\n",PlayerInfo[playerid][pSHOTGUN]);fwrite(hFile, var);
//				format(var, 32, "SAWNOFF_SHOTGUN=%d\n",PlayerInfo[playerid][pSAWNOFF_SHOTGUN]);fwrite(hFile, var);
//				format(var, 32, "SPAS12_SHOTGUN=%d\n",PlayerInfo[playerid][pSPAS12_SHOTGUN]);fwrite(hFile, var);
//				format(var, 32, "MICRO_UZI=%d\n",PlayerInfo[playerid][pMICRO_UZI]);fwrite(hFile, var);
//				format(var, 32, "MP5=%d\n",PlayerInfo[playerid][pMP5]);fwrite(hFile, var);
//				format(var, 32, "AK47=%d\n",PlayerInfo[playerid][pAK47]);fwrite(hFile, var);
//				format(var, 32, "M4=%d\n",PlayerInfo[playerid][pM4]);fwrite(hFile, var);
//				format(var, 32, "SNIPERRIFLE=%d\n",PlayerInfo[playerid][pSNIPERRIFLE]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot0=%d\n",playweap[playerid][0]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot1=%d\n",playweap[playerid][1]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot2=%d\n",playweap[playerid][2]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot3=%d\n",playweap[playerid][3]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot4=%d\n",playweap[playerid][4]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot5=%d\n",playweap[playerid][5]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot6=%d\n",playweap[playerid][6]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot7=%d\n",playweap[playerid][7]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot8=%d\n",playweap[playerid][8]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot9=%d\n",playweap[playerid][9]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot10=%d\n",playweap[playerid][10]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot11=%d\n",playweap[playerid][11]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot12=%d\n",playweap[playerid][12]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot0=%d\n",playammo[playerid][0]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot1=%d\n",playammo[playerid][1]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot2=%d\n",playammo[playerid][2]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot3=%d\n",playammo[playerid][3]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot4=%d\n",playammo[playerid][4]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot5=%d\n",playammo[playerid][5]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot6=%d\n",playammo[playerid][6]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot7=%d\n",playammo[playerid][7]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot8=%d\n",playammo[playerid][8]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot9=%d\n",playammo[playerid][9]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot10=%d\n",playammo[playerid][10]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot11=%d\n",playammo[playerid][11]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot12=%d\n",playammo[playerid][12]);fwrite(hFile, var);
				fclose(hFile);
			}
#endif
#if (MOD90INS == 1)
			new strdln[5000];
			format(strdln, sizeof(strdln), "UPDATE Players SET Key = '%s',TDReg = '%s',",PlayerInfo[playerid][pKey],PlayerInfo[playerid][pTDReg]);//создаём запрос БД
			format(strdln, sizeof(strdln), "%sDEndConD = %d,DEndConM = %d,DEndConY = %d,", strdln, EndConD,EndConM,EndConY);
			format(strdln, sizeof(strdln), "%sIPAdr = '%s',MinLog = %d,", strdln, PlayerInfo[playerid][pIPAdr],PlayerInfo[playerid][pMinlog]);
			format(strdln, sizeof(strdln), "%sAdminLevel = %d,AdminShadow = %d,", strdln, PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][pAdmshad]);
			format(strdln, sizeof(strdln), "%sAdminLive = %d,Registered = %d,", strdln, PlayerInfo[playerid][pAdmlive],PlayerInfo[playerid][pReg]);
			format(strdln, sizeof(strdln), "%sPrison = %d,Prisonsec = %d,", strdln, PlayerInfo[playerid][pPrison],PlayerInfo[playerid][pPrisonsec]);
			format(strdln, sizeof(strdln), "%sMuted = %d,Mutedsec = %d,", strdln, PlayerInfo[playerid][pMuted],PlayerInfo[playerid][pMutedsec]);
			format(strdln, sizeof(strdln), "%sMoney = %d,Kills = %d,", strdln, GetPVarInt(playerid, "PlMon"),PlayerInfo[playerid][pKills]);
			format(strdln, sizeof(strdln), "%sDeaths = %d,VIP = %d,", strdln, PlayerInfo[playerid][pDeaths],PlayerInfo[playerid][pVIP]);
			format(strdln, sizeof(strdln), "%sLock = %d,Gang = %d,GangLvl = %d,", strdln, PlayerInfo[playerid][pLock],PGang[playerid],GangLvl[playerid]);
			format(strdln, sizeof(strdln), "%sWeapon_slot0 = %d,Weapon_slot1 = %d,", strdln, playweap[playerid][0],playweap[playerid][1]);
			format(strdln, sizeof(strdln), "%sWeapon_slot2 = %d,Weapon_slot3 = %d,", strdln, playweap[playerid][2],playweap[playerid][3]);
			format(strdln, sizeof(strdln), "%sWeapon_slot4 = %d,Weapon_slot5 = %d,", strdln, playweap[playerid][4],playweap[playerid][5]);
			format(strdln, sizeof(strdln), "%sWeapon_slot6 = %d,Weapon_slot7 = %d,", strdln, playweap[playerid][6],playweap[playerid][7]);
			format(strdln, sizeof(strdln), "%sWeapon_slot8 = %d,Weapon_slot9 = %d,", strdln, playweap[playerid][8],playweap[playerid][9]);
			format(strdln, sizeof(strdln), "%sWeapon_slot10 = %d,Weapon_slot11 = %d,", strdln, playweap[playerid][10],playweap[playerid][11]);
			format(strdln, sizeof(strdln), "%sWeapon_slot12 = %d,Ammo_slot0 = %d,", strdln, playweap[playerid][12],playammo[playerid][0]);
			format(strdln, sizeof(strdln), "%sAmmo_slot1 = %d,Ammo_slot2 = %d,", strdln, playammo[playerid][1],playammo[playerid][2]);
			format(strdln, sizeof(strdln), "%sAmmo_slot3 = %d,Ammo_slot4 = %d,", strdln, playammo[playerid][3],playammo[playerid][4]);
			format(strdln, sizeof(strdln), "%sAmmo_slot5 = %d,Ammo_slot6 = %d,", strdln, playammo[playerid][5],playammo[playerid][6]);
			format(strdln, sizeof(strdln), "%sAmmo_slot7 = %d,Ammo_slot8 = %d,", strdln, playammo[playerid][7],playammo[playerid][8]);
			format(strdln, sizeof(strdln), "%sAmmo_slot9 = %d,Ammo_slot10 = %d,", strdln, playammo[playerid][9],playammo[playerid][10]);
			format(strdln, sizeof(strdln), "%sAmmo_slot11 = %d,Ammo_slot12 = %d ", strdln, playammo[playerid][11],playammo[playerid][12]);
			format(strdln, sizeof(strdln), "%sWHERE (Name = '%s')", strdln, RealName[playerid]);
			db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
		}
	}
	return 1;
}

public ClearChat(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, COLOR_WHITE, " ");
		}
	}
	return 1;
}

public OnPlayerLogin(playerid,password[])
{
	strdel(PlayerInfo[playerid][pTDReg], 0, 256);//очистка времени и даты регистрации
   	new string[256];
	if(strcmp(" ",password, true ) == 0)
	{
    	format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   		ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
		SetPVarInt(playerid, "DlgCont", 3);
	    return 1;
	}
#if (MOD90INS == 0)
    new string2[64];
	format(string2, sizeof(string2), "players/%s.ini", RealName[playerid]);//реальный ник игрока
//	format(string2, sizeof(string2), "players/%s.ini", playername2);
//	format(string2, sizeof(string2), "%s.ini", playername2);
	new File: UserFile = fopen(string2, io_read);
	if ( UserFile )
	{
	    new PassData[256];
	    new keytmp[256], valtmp[256];
	    fread( UserFile , PassData , sizeof( PassData ) );
	    keytmp = ini_GetKey( PassData );
	    if( strcmp( keytmp , "Key" , true ) == 0 )
		{
			valtmp = ini_GetValue( PassData );
			strmid(PlayerInfo[playerid][pKey], valtmp, 0, strlen(valtmp)-1, 255);
		}
		if(strcmp(PlayerInfo[playerid][pKey],password, false ) == 0 && strlen(PlayerInfo[playerid][pKey]) != 0 )
		{
  			new key[ 256 ] , val[ 256 ];
	    	new Data[ 256 ];
		    while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "TDReg" , true ) == 0 ) { PlayerInfo[playerid][pTDReg] = ini_GetValue( Data ); }
				if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMinlog] = strval( val ); }
				if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmin] = strval( val ); }
				if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmshad] = strval( val ); }
				if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmlive] = strval( val ); }
				if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
				if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPrison] = strval( val ); }
				if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPrisonsec] = strval( val ); }
				if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMuted] = strval( val ); }
				if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMutedsec] = strval( val ); }
				if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); SetPVarInt(playerid, "PlMon", strval( val )); }
				if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKills] = strval( val ); }
				if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
				if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVIP] = strval( val ); }
				if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLock] = strval( val ); }
				if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); PGang[playerid] = strval( val ); }
				if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); GangLvl[playerid] = strval( val ); }
//				if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPISTOL] = strval( val ); }
//				if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPISTOL_SILENCED] = strval( val ); }
//				if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDESERT_EAGLE] = strval( val ); }
//				if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSHOTGUN] = strval( val ); }
//				if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSAWNOFF_SHOTGUN] = strval( val ); }
//				if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSPAS12_SHOTGUN] = strval( val ); }
//				if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMICRO_UZI] = strval( val ); }
//				if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMP5] = strval( val ); }
//				if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAK47] = strval( val ); }
//				if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pM4] = strval( val ); }
//				if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSNIPERRIFLE] = strval( val ); }
				if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][0] = strval( val ); }
				if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][1] = strval( val ); }
				if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][2] = strval( val ); }
				if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][3] = strval( val ); }
				if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][4] = strval( val ); }
				if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][5] = strval( val ); }
				if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][6] = strval( val ); }
				if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][7] = strval( val ); }
				if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][8] = strval( val ); }
				if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][9] = strval( val ); }
				if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][10] = strval( val ); }
				if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][11] = strval( val ); }
				if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][12] = strval( val ); }
				if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][0] = strval( val ); }
				if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][1] = strval( val ); }
				if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][2] = strval( val ); }
				if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][3] = strval( val ); }
				if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][4] = strval( val ); }
				if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][5] = strval( val ); }
				if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][6] = strval( val ); }
				if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][7] = strval( val ); }
				if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][8] = strval( val ); }
				if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][9] = strval( val ); }
				if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][10] = strval( val ); }
				if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][11] = strval( val ); }
				if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][12] = strval( val ); }
			}
			fclose(UserFile);

			LoadGangAcc(playerid);//Clans system //строка оставлена для совместимости с ранней версией мода !!!

			strdel(PlayerInfo[playerid][pTDReg], strlen(PlayerInfo[playerid][pTDReg])-1, strlen(PlayerInfo[playerid][pTDReg]));
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			if(strlen(PlayerInfo[playerid][pTDReg]) == 0)
			{
				strins(PlayerInfo[playerid][pTDReg], "---", 0, 256);
			}
//---------------------------------- конец -------------------------------------
		}
		else
		{
    		format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   			ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
			SetPVarInt(playerid, "DlgCont", 3);
	        fclose(UserFile);
	        gPlayerLogTries[playerid] += 1;
	        if(gPlayerLogTries[playerid] == 10)
			{
				format(string,sizeof(string),"* IP игрока %s [%d] был забанен - попытка взлома аккаунта !",RealName[playerid],playerid);
				print(string);
				SendClientMessageToAll(COLOR_RED,string);
				strdel(fbanreason[playerid], 0, 256);//очистка причины бана
				strcat(fbanreason[playerid], "* Попытка взлома аккаунта.");
				new reason333[256];
				format(reason333, sizeof(reason333), "* Попытка взлома аккаунта [%s] .", RealName[playerid]);
				IPBanList(PlayerInfo[playerid][pIPAdr], reason333);
				SetTimerEx("PlayBan", 300, 0, "i", playerid);
//				Ban(playerid);
			}
	        return 1;
		}
	}
#endif
#if (MOD90INS == 1)
	new strdln[5000];
	if(migration[playerid] == 1)//если включен режим миграции аккаунта, то:
	{//читаем аккаунт из fopen
    	new string2[64];
		format(string2, sizeof(string2), "players/%s.ini", RealName[playerid]);//реальный ник игрока
//		format(string2, sizeof(string2), "players/%s.ini", playername2);
//		format(string2, sizeof(string2), "%s.ini", playername2);
		new File: UserFile = fopen(string2, io_read);
		if ( UserFile )
		{
	    	new PassData[256];
	    	new keytmp[256], valtmp[256];
	    	fread( UserFile , PassData , sizeof( PassData ) );
	    	keytmp = ini_GetKey( PassData );
	    	if( strcmp( keytmp , "Key" , true ) == 0 )
			{
				valtmp = ini_GetValue( PassData );
				strmid(PlayerInfo[playerid][pKey], valtmp, 0, strlen(valtmp)-1, 255);
			}
			if(strcmp(PlayerInfo[playerid][pKey],password, false ) == 0 && strlen(PlayerInfo[playerid][pKey]) != 0 )//если пароль из fopen сходится с набранным паролем,
			{//И пароль из fopen содержит хотя бы 1 символ, то: читаем аккаунт из fopen
  				new key[ 256 ] , val[ 256 ];
	    		new Data[ 256 ];
		    	while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "TDReg" , true ) == 0 ) { PlayerInfo[playerid][pTDReg] = ini_GetValue( Data ); }
					if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMinlog] = strval( val ); }
					if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmin] = strval( val ); }
					if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmshad] = strval( val ); }
					if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmlive] = strval( val ); }
					if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
					if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPrison] = strval( val ); }
					if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPrisonsec] = strval( val ); }
					if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMuted] = strval( val ); }
					if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMutedsec] = strval( val ); }
					if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); SetPVarInt(playerid, "PlMon", strval( val )); }
					if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKills] = strval( val ); }
					if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
					if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVIP] = strval( val ); }
					if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLock] = strval( val ); }
					if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); PGang[playerid] = strval( val ); }
					if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); GangLvl[playerid] = strval( val ); }
//					if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPISTOL] = strval( val ); }
//					if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPISTOL_SILENCED] = strval( val ); }
//					if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDESERT_EAGLE] = strval( val ); }
//					if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSHOTGUN] = strval( val ); }
//					if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSAWNOFF_SHOTGUN] = strval( val ); }
//					if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSPAS12_SHOTGUN] = strval( val ); }
//					if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMICRO_UZI] = strval( val ); }
//					if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMP5] = strval( val ); }
//					if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAK47] = strval( val ); }
//					if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pM4] = strval( val ); }
//					if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSNIPERRIFLE] = strval( val ); }
					if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][0] = strval( val ); }
					if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][1] = strval( val ); }
					if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][2] = strval( val ); }
					if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][3] = strval( val ); }
					if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][4] = strval( val ); }
					if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][5] = strval( val ); }
					if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][6] = strval( val ); }
					if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][7] = strval( val ); }
					if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][8] = strval( val ); }
					if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][9] = strval( val ); }
					if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][10] = strval( val ); }
					if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][11] = strval( val ); }
					if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); play2weap[playerid][12] = strval( val ); }
					if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][0] = strval( val ); }
					if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][1] = strval( val ); }
					if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][2] = strval( val ); }
					if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][3] = strval( val ); }
					if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][4] = strval( val ); }
					if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][5] = strval( val ); }
					if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][6] = strval( val ); }
					if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][7] = strval( val ); }
					if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][8] = strval( val ); }
					if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][9] = strval( val ); }
					if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][10] = strval( val ); }
					if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][11] = strval( val ); }
					if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); play2ammo[playerid][12] = strval( val ); }
				}
				fclose(UserFile);

				LoadGangAcc(playerid);//Clans system //строка оставлена для совместимости с ранней версией мода !!!

				strdel(PlayerInfo[playerid][pTDReg], strlen(PlayerInfo[playerid][pTDReg])-1, strlen(PlayerInfo[playerid][pTDReg]));
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				if(strlen(PlayerInfo[playerid][pTDReg]) == 0)
				{
					strins(PlayerInfo[playerid][pTDReg], "---", 0, 256);
				}
//---------------------------------- конец -------------------------------------
				format(string, sizeof(string), "DELETE FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
				db_query(playerdb, string);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

				PlayerInfo[playerid][pReg] = 1;//делаем отметку, что аккаунт УЖЕ зарегистрирован
				format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
				format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
				format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
				format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
				format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, RealName[playerid],PlayerInfo[playerid][pKey],PlayerInfo[playerid][pTDReg]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,'%s',", strdln, EndConD,EndConM,EndConY,PlayerInfo[playerid][pIPAdr]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pMinlog],PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][pAdmshad]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pAdmlive],PlayerInfo[playerid][pReg],PlayerInfo[playerid][pPrison]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, PlayerInfo[playerid][pPrisonsec],PlayerInfo[playerid][pMuted],PlayerInfo[playerid][pMutedsec]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, GetPVarInt(playerid, "PlMon"),PlayerInfo[playerid][pKills],PlayerInfo[playerid][pDeaths]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, PlayerInfo[playerid][pVIP],PlayerInfo[playerid][pLock],PGang[playerid],GangLvl[playerid]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, playweap[playerid][0],playweap[playerid][1],playweap[playerid][2],playweap[playerid][3]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, playweap[playerid][4],playweap[playerid][5],playweap[playerid][6],playweap[playerid][7]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, playweap[playerid][8],playweap[playerid][9],playweap[playerid][10],playweap[playerid][11]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, playweap[playerid][12],playammo[playerid][0],playammo[playerid][1],playammo[playerid][2]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, playammo[playerid][3],playammo[playerid][4],playammo[playerid][5],playammo[playerid][6]);
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, playammo[playerid][7],playammo[playerid][8],playammo[playerid][9],playammo[playerid][10]);
				format(strdln, sizeof(strdln), "%s%d,%d)", strdln, playammo[playerid][11],playammo[playerid][12]);
				db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

				migration[playerid] = 0;//обнуляем режим миграции аккаунта
				if(fexist(string2))//если аккаунт в fopen обнаружен, то:
				{
					fremove(string2);//удаляем аккаунт из fopen
				}
			}
			else//иначе - НЕ читаем аккаунт из fopen
			{
    			format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   				ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
				SetPVarInt(playerid, "DlgCont", 3);
	        	fclose(UserFile);
	        	gPlayerLogTries[playerid] += 1;
	        	if(gPlayerLogTries[playerid] == 10)
				{
					format(string,sizeof(string),"* IP игрока %s [%d] был забанен - попытка взлома аккаунта !",RealName[playerid],playerid);
					print(string);
					SendClientMessageToAll(COLOR_RED,string);
					strdel(fbanreason[playerid], 0, 256);//очистка причины бана
					strcat(fbanreason[playerid], "* Попытка взлома аккаунта.");
					new reason333[256];
					format(reason333, sizeof(reason333), "* Попытка взлома аккаунта [%s] .", RealName[playerid]);
					IPBanList(PlayerInfo[playerid][pIPAdr], reason333);
					SetTimerEx("PlayBan", 300, 0, "i", playerid);
//					Ban(playerid);
				}
	        	return 1;
			}
		}
	}
	else//иначе - если НЕ включен режим миграции аккаунта, то:
	{//читаем аккаунт из SQLite
		format(string, sizeof(string), "SELECT * FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
		querydb[playerid] = db_query(playerdb, string);//отправляем запрос на чтение аккаунта из БД
		db_get_field(querydb[playerid], 2, PlayerInfo[playerid][pKey], 128);//читаем пароль из БД
//		new loccor = 0;//переводим коды символов пароля из отрицательного диапазона чисел в положительный диапазон
//		while(loccor <= 128)//(в БД, коды символов от 128 до 255 - представляются в отрицательном диапазоне чисел !!!
//		{//(коды символов Русских букв))
//	    	if(PlayerInfo[playerid][pKey][loccor] == 0) { break; }
//	    	if(PlayerInfo[playerid][pKey][loccor] < 0) { PlayerInfo[playerid][pKey][loccor] = PlayerInfo[playerid][pKey][loccor] + 256; }
//			loccor++;
//		}
		if(strcmp(PlayerInfo[playerid][pKey], password, false) == 0 && strlen(PlayerInfo[playerid][pKey]) != 0)//если пароль из БД сходится с набранным паролем,
		{//И пароль из БД содержит хотя бы 1 символ, то: читаем аккаунт из БД
			new buffer[32];
			db_get_field(querydb[playerid], 3, PlayerInfo[playerid][pTDReg], 256);
			db_get_field(querydb[playerid], 8, buffer, 32); PlayerInfo[playerid][pMinlog] = strval(buffer);
			db_get_field(querydb[playerid], 9, buffer, 32); PlayerInfo[playerid][pAdmin] = strval(buffer);
			db_get_field(querydb[playerid], 10, buffer, 32); PlayerInfo[playerid][pAdmshad] = strval(buffer);
			db_get_field(querydb[playerid], 11, buffer, 32); PlayerInfo[playerid][pAdmlive] = strval(buffer);
			db_get_field(querydb[playerid], 12, buffer, 32); PlayerInfo[playerid][pReg] = strval(buffer);
			db_get_field(querydb[playerid], 13, buffer, 32); PlayerInfo[playerid][pPrison] = strval(buffer);
			db_get_field(querydb[playerid], 14, buffer, 32); PlayerInfo[playerid][pPrisonsec] = strval(buffer);
			db_get_field(querydb[playerid], 15, buffer, 32); PlayerInfo[playerid][pMuted] = strval(buffer);
			db_get_field(querydb[playerid], 16, buffer, 32); PlayerInfo[playerid][pMutedsec] = strval(buffer);
			db_get_field(querydb[playerid], 17, buffer, 32); SetPVarInt(playerid, "PlMon", strval(buffer));
			db_get_field(querydb[playerid], 18, buffer, 32); PlayerInfo[playerid][pKills] = strval(buffer);
			db_get_field(querydb[playerid], 19, buffer, 32); PlayerInfo[playerid][pDeaths] = strval(buffer);
			db_get_field(querydb[playerid], 20, buffer, 32); PlayerInfo[playerid][pVIP] = strval(buffer);
			db_get_field(querydb[playerid], 21, buffer, 32); PlayerInfo[playerid][pLock] = strval(buffer);
			db_get_field(querydb[playerid], 22, buffer, 32); PGang[playerid] = strval(buffer);
			db_get_field(querydb[playerid], 23, buffer, 32); GangLvl[playerid] = strval(buffer);
			db_get_field(querydb[playerid], 24, buffer, 32); play2weap[playerid][0] = strval(buffer);
			db_get_field(querydb[playerid], 25, buffer, 32); play2weap[playerid][1] = strval(buffer);
			db_get_field(querydb[playerid], 26, buffer, 32); play2weap[playerid][2] = strval(buffer);
			db_get_field(querydb[playerid], 27, buffer, 32); play2weap[playerid][3] = strval(buffer);
			db_get_field(querydb[playerid], 28, buffer, 32); play2weap[playerid][4] = strval(buffer);
			db_get_field(querydb[playerid], 29, buffer, 32); play2weap[playerid][5] = strval(buffer);
			db_get_field(querydb[playerid], 30, buffer, 32); play2weap[playerid][6] = strval(buffer);
			db_get_field(querydb[playerid], 31, buffer, 32); play2weap[playerid][7] = strval(buffer);
			db_get_field(querydb[playerid], 32, buffer, 32); play2weap[playerid][8] = strval(buffer);
			db_get_field(querydb[playerid], 33, buffer, 32); play2weap[playerid][9] = strval(buffer);
			db_get_field(querydb[playerid], 34, buffer, 32); play2weap[playerid][10] = strval(buffer);
			db_get_field(querydb[playerid], 35, buffer, 32); play2weap[playerid][11] = strval(buffer);
			db_get_field(querydb[playerid], 36, buffer, 32); play2weap[playerid][12] = strval(buffer);
			db_get_field(querydb[playerid], 37, buffer, 32); play2ammo[playerid][0] = strval(buffer);
			db_get_field(querydb[playerid], 38, buffer, 32); play2ammo[playerid][1] = strval(buffer);
			db_get_field(querydb[playerid], 39, buffer, 32); play2ammo[playerid][2] = strval(buffer);
			db_get_field(querydb[playerid], 40, buffer, 32); play2ammo[playerid][3] = strval(buffer);
			db_get_field(querydb[playerid], 41, buffer, 32); play2ammo[playerid][4] = strval(buffer);
			db_get_field(querydb[playerid], 42, buffer, 32); play2ammo[playerid][5] = strval(buffer);
			db_get_field(querydb[playerid], 43, buffer, 32); play2ammo[playerid][6] = strval(buffer);
			db_get_field(querydb[playerid], 44, buffer, 32); play2ammo[playerid][7] = strval(buffer);
			db_get_field(querydb[playerid], 45, buffer, 32); play2ammo[playerid][8] = strval(buffer);
			db_get_field(querydb[playerid], 46, buffer, 32); play2ammo[playerid][9] = strval(buffer);
			db_get_field(querydb[playerid], 47, buffer, 32); play2ammo[playerid][10] = strval(buffer);
			db_get_field(querydb[playerid], 48, buffer, 32); play2ammo[playerid][11] = strval(buffer);
			db_get_field(querydb[playerid], 49, buffer, 32); play2ammo[playerid][12] = strval(buffer);
			db_free_result(querydb[playerid]);//очищаем результат запроса БД
		}
		else//иначе - НЕ читаем аккаунт из БД
		{
			db_free_result(querydb[playerid]);//очищаем результат запроса БД (после чтения пароля)
			format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
			ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
			SetPVarInt(playerid, "DlgCont", 3);
			gPlayerLogTries[playerid] += 1;
			if(gPlayerLogTries[playerid] == 10)
			{
				format(string,sizeof(string),"* IP игрока %s [%d] был забанен - попытка взлома аккаунта !",RealName[playerid],playerid);
				print(string);
				SendClientMessageToAll(COLOR_RED,string);
				strdel(fbanreason[playerid], 0, 256);//очистка причины бана
				strcat(fbanreason[playerid], "* Попытка взлома аккаунта.");
				new reason333[256];
				format(reason333, sizeof(reason333), "* Попытка взлома аккаунта [%s] .", RealName[playerid]);
				IPBanList(PlayerInfo[playerid][pIPAdr], reason333);
				SetTimerEx("PlayBan", 300, 0, "i", playerid);
//				Ban(playerid);
			}
			return 1;
		}
	}
#endif
	printf("* Игрок %s [%d] --> (логирование) .", RealName[playerid], playerid);

	ResetPlayerMoney(playerid);
	if(PlayerInfo[playerid][pReg] == 0)
	{
		PlayerInfo[playerid][pAdmin] = 0;
		PlayerInfo[playerid][pAdmshad] = 0;
		PlayerInfo[playerid][pKills] = 0;
		PlayerInfo[playerid][pDeaths] = 0;
		SetPVarInt(playerid, "PlMon", 1000);
		PlayerInfo[playerid][pVIP] = 0;
		PlayerInfo[playerid][pAdmlive] = 0;
		livdop[playerid] = 0;

//		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 0);
//		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 0);
//		SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 0);
//		SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 0);
//		SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 0);
//		SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 0);
//		SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 0);
//		SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 0);
//		SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 0);
//		SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 0);
//		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 0);

		PlayerInfo[playerid][pMinlog] = 0;
		PlayerInfo[playerid][pPrison] = 0;
		PlayerInfo[playerid][pPrisonsec] = 0;
		PlayerInfo[playerid][pMuted] = 0;
		PlayerInfo[playerid][pMutedsec] = 0;
		PlayerInfo[playerid][pLock] = 0;
		PlayerInfo[playerid][pReg] = 1;
	}
	if(PlayerInfo[playerid][pLock] == 1)
	{
		format(string,sizeof(string),"* Игрок %s [%d] был кикнут - аккаунт заблокирован !",RealName[playerid],playerid);
		print(string);
		SendClientMessageToAll(COLOR_RED,string);
		SendClientMessage(playerid,COLOR_RED,"* Для выяснения причин свяжитесь с администрацией сервера !");
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
//		Kick(playerid);
		return 1;
	}
	if(PlayerInfo[playerid][pPrisonsec] == 1){PlayerInfo[playerid][pPrisonsec] = 2;}
	if(PlayerInfo[playerid][pMutedsec] == 1){PlayerInfo[playerid][pMutedsec] = 2;}
	if(PlayerInfo[playerid][pAdmin] < 0)
	{
		dopadm[playerid] = PlayerInfo[playerid][pAdmin] * -1;
	}
	else
	{
		dopadm[playerid] = PlayerInfo[playerid][pAdmin];
	}
	if (dopadm[playerid] == 0 && (PlayerInfo[playerid][pAdmshad] == 1 || PlayerInfo[playerid][pAdmlive] == 1))
	{
		PlayerInfo[playerid][pAdmshad] = 0;
		PlayerInfo[playerid][pAdmlive] = 0;
	}
	if (dopadm[playerid] > 0)
	{
		format(string, sizeof(string), "* Админка %d уровня загружена.",dopadm[playerid]);
		SendClientMessage(playerid, COLOR_WHITE,string);
		AdmUpdate(RealName[playerid], dopadm[playerid], 4);
		if(dopadm[playerid] >= 2)
		{
			new twenlim, restlim;
			Fmadmins(2, RealName[playerid], 0, twenlim, restlim);
			format(string, sizeof(string), " Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]",twenlim,restlim);
			SendClientMessage(playerid, COLOR_RED,string);
		}
		if (PlayerInfo[playerid][pAdmshad] == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Скрытость выключена.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREEN, " Скрытость включена.");
		}
		if (dopadm[playerid] >= 3)
		{
			if (PlayerInfo[playerid][pAdmlive] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Бессмертие выключено.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, " Бессмертие включено.");
			}
		}
		else
		{
			PlayerInfo[playerid][pAdmlive] = 0;//убрать бессмертие
			livdop[playerid] = 0;
		}
		if (PlayerInfo[playerid][pVIP] != 0 && PlayerInfo[playerid][pVIP] != 4)
		{
			PlayerInfo[playerid][pVIP] = 0;
		}
		if (PlayerInfo[playerid][pVIP] == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Приём PM от игроков запрещён.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREEN, " Приём PM от игроков разрешён.");
		}
	}
	if(dopadm[playerid] <= 1)
	{
		new twenlim, restlim;
		Fmadmins(0, RealName[playerid], 0, twenlim, restlim);
	}
	if (dopadm[playerid] == 0 && (PlayerInfo[playerid][pVIP] < 0 || PlayerInfo[playerid][pVIP] > 3))
	{
		PlayerInfo[playerid][pVIP] = 0;
	}
	if (PlayerInfo[playerid][pVIP] == 1 || PlayerInfo[playerid][pVIP] == 2)
	{
		format(string, sizeof(string), "* VIP-ка %d уровня загружена.",PlayerInfo[playerid][pVIP]);
		SendClientMessage(playerid, COLOR_WHITE,string);
	}
	if(PlayerInfo[playerid][pAdmin] < 0)
	{
		PlayerInfo[playerid][pAdmin] = dopadm[playerid];
		SendClientMessage(playerid, COLOR_RED, "* Рекомендация: В целях безопасности и защиты своего (АДМИНИСТРАТИВНОГО)");
		SendClientMessage(playerid, COLOR_RED, "* аккаунта - измените свой пароль !!! И НЕ используйте пароль от своего");
		SendClientMessage(playerid, COLOR_RED, "* административного аккаунта на других серверах !!!");
	}
#if (MOD66INS == 1)
	new s[512];
#endif
#if (MOD33INS == 1 && MOD44INS == 0 && MOD66INS == 1)
	format(s,sizeof(s),"Управление:\n	Игровое меню - Y\n	( или   /menu )\n\nПомощь по командам:\n	/help\n\nПомощь по командам админа:\n	/ahelp\n\nОзнакомтесь с правилами:\n	Игровое меню -> Правила сервера.");
#endif
#if (MOD33INS == 1 && MOD44INS == 1 && MOD66INS == 1)
	format(s,sizeof(s),"Управление:\n	Игровое меню - Y\n	( или   /menu )\n\nПомощь по командам:\n	/help\n\nПомощь по командам админа:\n	/ahelp\n\nОзнакомтесь с правилами:\n	Игровое меню -> Кодекс игроков.");
#endif
#if (MOD33INS == 2 && MOD44INS == 0 && MOD66INS == 1)
	format(s,sizeof(s),"Управление:\n	Пешком:\n		Игровое меню - Левый ALT\n	В транспорте:\n		Игровое меню - 2 или NUM_+\n	( или   /menu )\n\nПомощь по командам:\n	/help\n\nПомощь по командам админа:\n	/ahelp\n\nОзнакомтесь с правилами:\n	Игровое меню -> Правила сервера.");
#endif
#if (MOD33INS == 2 && MOD44INS == 1 && MOD66INS == 1)
	format(s,sizeof(s),"Управление:\n	Пешком:\n		Игровое меню - Левый ALT\n	В транспорте:\n		Игровое меню - 2 или NUM_+\n	( или   /menu )\n\nПомощь по командам:\n	/help\n\nПомощь по командам админа:\n	/ahelp\n\nОзнакомтесь с правилами:\n	Игровое меню -> Кодекс игроков.");
#endif
#if (MOD66INS == 1)
	ShowPlayerDialog(playerid, 2, DIALOG_STYLE_MSGBOX,"Управление и правила",s,"OK","");
	SetPVarInt(playerid, "DlgCont", 2);
#endif
	weapstatplay[playerid] = 0;
	skinstatplay[playerid] = 0;
	nickstatcol[playerid] = 0;

	gPlayerLogged[playerid] = 1;
	gPlayerAccount[playerid] = 1;
	new dopper;
	dopper = 0;
	OnPlayerRequestClass(playerid, dopper);
//	SpawnPlayer(playerid);
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	return 1;
}

public OnPlayerText(playerid, text[])
{
	if(chatcon[playerid] < 0)//если счётчик секунд меньше нуля, то:
	{
		new dopcis, sstr[256];
		dopcis = FCislit(chatcon[playerid]);
		switch(dopcis)
		{
			case 0: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунд !", chatcon[playerid] * -1);
			case 1: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунду !", chatcon[playerid] * -1);
			case 2: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунды !", chatcon[playerid] * -1);
		}
		SendClientMessage(playerid, COLOR_RED, sstr);
		return 0;//завершаем функцию
	}
	chatcon[playerid]++;//прибавляем 1 к контрольной переменной чата
	new string[256];
	if(playspa[playerid] == 0)//игрок НЕ заспавнился
	{
		printf("-----[Игрок не заспавнился] %s [%d]: %s", RealName[playerid], playerid, text); // Отправляем сообщение в сервер-лог
/*
		format(string, sizeof(string), "* Игрок %s [%d] был кикнут - сообщение в чат без спавна !", sendername, playerid);
		print(string);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
*/
		SendClientMessage(playerid,COLOR_RED," Вы ещё не заспавнились, и не можете писать в чат !");
		return 0;
	}
	if(PlayerInfo[playerid][pVIP] == 3)
	{
		SendClientMessage(playerid, COLOR_RED, "* Вы не можете говорить, пока дело о Вашей депортации на слушании !");
		SendClientMessage(playerid, COLOR_RED, "* Все сообщения отправляйте в админ-чат ( /a [текст] ) !");
		printf("-----[Игрок на депортации] %s [%d]: %s", RealName[playerid], playerid, text); // Отправляем сообщение в сервер-лог
		return 0;
	}
	if(PlayerInfo[playerid][pMutedsec] > 0)
	{
		SendClientMessage(playerid, COLOR_RED, "* Вы не можете говорить, Вас заткнули !");
		printf("-----[Игрок заткнут] %s [%d]: %s", RealName[playerid], playerid, text); // Отправляем сообщение в сервер-лог
		return 0;
	}
	if(playspa[playerid] == 1 && PGang[playerid] <= 0)//игрок УЖЕ заспавнился
	{
		SetPlayerChatBubble(playerid, text, COLOR_WHITE, 15.0, 6000);
		format(string, sizeof(string), "%s [%d]: {FFFFFF}%s", RealName[playerid], playerid, text); // Прикрепляем ид к нику
		SendClientMessageToAll(ColorPlay[playerid], string); // Отправляем сообщение
		return 0;
	}

	if(playspa[playerid] == 1 && PGang[playerid] > 0 && GangLvl[playerid] == 6)//Clans system
	{
		SetPlayerChatBubble(playerid, text, COLOR_WHITE, 15.0, 6000);
		format(string, sizeof(string), "[Глава: %s] %s [%d]: {FFFFFF}%s", GName[PGang[playerid]], RealName[playerid], playerid, text);
		SendClientMessageToAll(GColorDec[PGang[playerid]], string);
		return 0;
	}
	if(playspa[playerid] == 1 && PGang[playerid] > 0 && GangLvl[playerid] < 6)
	{
		SetPlayerChatBubble(playerid, text, COLOR_WHITE, 15.0, 6000);
		format(string, sizeof(string), "[Клан: %s] %s [%d]: {FFFFFF}%s", GName[PGang[playerid]], RealName[playerid], playerid, text);
		SendClientMessageToAll(GColorDec[PGang[playerid]], string);
		return 0;
	}

	return 1;
}

stock ini_GetKey( line[] )
{
	new keyRes[256];
	keyRes[0] = 0;
    if ( strfind( line , "=" , true ) == -1 ) return keyRes;
    strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
    return keyRes;
}

stock ini_GetValue( line[] )
{
	new valRes[256];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[30];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	if(chatcon[playerid] < 0)//если счётчик секунд меньше нуля, то:
	{
		new dopcis, sstr[256];
		dopcis = FCislit(chatcon[playerid]);
		switch(dopcis)
		{
			case 0: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунд !", chatcon[playerid] * -1);
			case 1: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунду !", chatcon[playerid] * -1);
			case 2: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунды !", chatcon[playerid] * -1);
		}
		SendClientMessage(playerid, COLOR_RED, sstr);
		return 1;//завершаем функцию
	}
	chatcon[playerid]++;//прибавляем 1 к контрольной переменной чата
	//new giveplayerid;
	new idx;
	idx = 0;
	new string[256];
	new strdln[5000];
	strdln[0]++;
	strdln[0]--;
   	new akk[256],ssss[256],igkey[256],tdreg[256],adrip[256];
	//new playermoney;
	//new sendername[MAX_PLAYER_NAME];
	//new giveplayer[MAX_PLAYER_NAME];
	//new playername[MAX_PLAYER_NAME];
	new cmd[256];
	new tmp[256];
	cmd = strtok(cmdtext, idx);
	if(PlayerInfo[playerid][pMutedsec] == 0)
	{
		printf(" Игрок %s [%d] ввёл команду %s .",RealName[playerid],playerid,cmdtext);
	}
	if(PlayerInfo[playerid][pMutedsec] > 0)
	{
		printf(" Игрок %s [%d] (заткнут) ввёл команду: %s .",RealName[playerid],playerid,cmdtext);
	}
	if(strcmp(cmd, "/help", true) == 0 && playspa[playerid] == 0)
	{//если игрок НЕ заспавнился
		SendClientMessage(playerid,COLOR_GRAD1," ----------------------------- Помощь ----------------------------- ");
		SendClientMessage(playerid,COLOR_GREEN,"   Если нет возможности выбора скина и спавна,");
		SendClientMessage(playerid,COLOR_GREEN,"                  используйте команду   /spawn");
		SendClientMessage(playerid,COLOR_GRAD1," ------------------------------------------------------------------------ ");
    	return 1;
	}
	if (strcmp("/spawn", cmdtext, true, 10) == 0 && playspa[playerid] == 0)
	{//если игрок НЕ заспавнился
		SendClientMessage(playerid,COLOR_GREEN," Вы заспавнились !");
		if(IsPlayerInAnyVehicle(playerid))
		{
			new Float:x, Float:y, Float:z;
			tpdrift[playerid] = 1;
			GetPlayerPos(playerid,x,y,z);
			SetPlayerPos(playerid,x,y,z+5);
			SetTimerEx("SecSpaDop", 300, 0, "i", playerid);
		}
		else
		{
			SpawnPlayer(playerid);
		}
    	return 1;
    }
	if(playspa[playerid] == 0)//игрок НЕ заспавнился
	{
		printf("-----[Игрок не заспавнился] %s [%d]: ввёл команду %s .", RealName[playerid], playerid, cmdtext); // Отправляем команду в сервер-лог
/*
		format(string, sizeof(string), "* Игрок %s [%d] был кикнут - команда без спавна !", sendername, playerid);
		print(string);
    	SendClientMessageToAll(COLOR_LIGHTRED, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
*/
		SendClientMessage(playerid,COLOR_RED," Вы ещё не заспавнились ! введите команду /help !");
		return 1;
	}

//==============================================================================
//                              GarHouse
//==============================================================================
    dcmd(removeallhouses, 15, cmdtext);
	dcmd(changeallprices, 15, cmdtext);
	dcmd(removeallhcars, 14, cmdtext);
	dcmd(sellallhouses, 13, cmdtext);
    dcmd(createhouse, 11, cmdtext);
    dcmd(passhouse, 9, cmdtext);//просмотр пароля дома
    dcmd(relhouses, 9, cmdtext);//перезагрузка системы домов
    dcmd(lchouse, 7, cmdtext);//блокировка дома по его ИД
	dcmd(removehouse, 11, cmdtext);
	dcmd(changeprice, 11, cmdtext);
	dcmd(changespawn, 11, cmdtext);
	dcmd(removehcar, 10, cmdtext);
	dcmd(changehcar, 10, cmdtext);
	dcmd(sellhouse, 9, cmdtext);
	dcmd(housemenu, 9, cmdtext);
	dcmd(gotohouse, 9, cmdtext);
	dcmd(addhcar, 7, cmdtext);
	dcmd(ghcmds, 6, cmdtext);
//==============================================================================
//                              End GarHouse
//==============================================================================

	if(strcmp(cmd, "/achat", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_RED, "* Вы не можете говорить, Вас заткнули !");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pVIP] >= 1)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Админ-чат: (/a)chat [текст]");
				return 1;
			}
			new per55 = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(PlayerInfo[playerid][pAdmin] >= 1 && i != playerid && IsPlayerConnected(i) &&
				(PlayerInfo[i][pAdmin] >= 1 || PlayerInfo[i][pVIP] == 3)) {per55 = 1;}//если пишет админ, и есть любой другой админ или депортированный игрок, то - отправить сообщение
				if(PlayerInfo[playerid][pAdmin] == 0 && (PlayerInfo[playerid][pVIP] == 1 || PlayerInfo[playerid][pVIP] == 2) &&
                IsPlayerConnected(i) && PlayerInfo[i][pAdmin] >= 1 &&
				PlayerInfo[i][pAdmshad] == 0) {per55 = 1;}//если пишет VIP, и есть любой НЕ скрытый админ, то - отправить сообщение
				if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pVIP] == 3 &&
                IsPlayerConnected(i) && PlayerInfo[i][pAdmin] >= 1) {per55 = 1;}//если пишет депортированный игрок, и есть любой админ, то - отправить сообщение
			}
			if(per55 == 0)
			{
				if(PlayerInfo[playerid][pAdmin] >= 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Сейчас на сервере нет других админов !");
				}
				if(PlayerInfo[playerid][pAdmin] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Сейчас на сервере нет админов !");
				}
				return 1;
			}
			new dopper;//подмена 5-го левела на 4-й
			dopper = PlayerInfo[playerid][pAdmin];
			if (dopper == 5)
			{
				dopper = 4;
			}
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				printf(" <AC> Админ %s [%d] (%d LVL): %s", RealName[playerid], playerid, PlayerInfo[playerid][pAdmin], result);
				format(string, sizeof(string), " <AC> Админ %s [%d] (%d LVL): {FFFFFF}%s", RealName[playerid], playerid, dopper, result);
				SendAdminMessage(COLOR_YELLOW, string);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
		    			if(PlayerInfo[i][pVIP] == 3)
		    			{
							SendClientMessage(i, COLOR_YELLOW, string);
						}
					}
				}
			}
			else
			{
				if (PlayerInfo[playerid][pVIP] == 3)
				{
					printf(" <AC> [Deport] %s [%d]: %s", RealName[playerid], playerid, result);
					format(string, sizeof(string), " <AC> {AA3333}[Deport] {FFFF00}%s [%d]: {FFFFFF}%s", RealName[playerid], playerid, result);
					SendAdminMessage(COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
				else
				{
					printf(" <AC> VIP %s [%d] (%d LVL): %s", RealName[playerid], playerid, PlayerInfo[playerid][pVIP], result);
					format(string, sizeof(string), " <AC> VIP %s [%d] (%d LVL): {FFFFFF}%s", RealName[playerid], playerid, PlayerInfo[playerid][pVIP], result);
					SendAdminMessage(COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
			SendClientMessage(playerid, COLOR_RED, " ( Вам нужно иметь VIP-уровень, или быть админом )");
		}
		return 1;
	}
    if(strcmp(cmd, "/pm", true) == 0)
	{
    	if(PlayerInfo[playerid][pVIP] == 3)
    	{
			SendClientMessage(playerid, COLOR_RED, "* Вы не можете говорить, пока дело о Вашей депортации на слушании !");
			SendClientMessage(playerid, COLOR_RED, "* Все сообщения отправляйте в админ-чат ( /a [текст] ) !");
			return 1;
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_RED, "* Вы не можете говорить, Вас заткнули !");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /pm [ид игрока] [текст]");
			return 1;
		}
		new playset;
		playset = strval(tmp);
		if(playset == playerid)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы не можете послать сообщение самому себе !");
			return 1;
		}
		if(IsPlayerConnected(playset))
		{
			if ((PlayerInfo[playset][pAdmin] >= 1 && PlayerInfo[playset][pAdmshad] == 0 && PlayerInfo[playset][pVIP] != 4) && PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Сообщение админам можно послать");
				SendClientMessage(playerid, COLOR_RED, " только через общий чат !");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /pm [ид игрока] [текст]");
				return 1;
			}
			printf(" <PM> %s [%d] --> %s [%d]: %s", RealName[playerid], playerid, RealName[playset], playset, result);
			format(string, sizeof(string), " <PM> %s [%d] --> %s [%d]: {FFFFFF}%s", RealName[playerid], playerid, RealName[playset], playset, result);
			new locper = 0;
			if(NETafkPl[playset][5] == 1) { locper = 1; }
			new stringdop[256];
			format(stringdop, sizeof(stringdop), " <PM> игрок-получатель сообщения {FF6347}%s [%d] {FFFF00}в AFK !!!", RealName[playset], playset);
			if(PlayerInfo[playerid][pAdmin] <= 3)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
		    			if(PlayerInfo[i][pAdmin] >= 1 && playerid != i && playset != i)
		    			{
							SendClientMessage(i, COLOR_YELLOW, string);
							if(locper == 1)
							{
								SendClientMessage(i, COLOR_YELLOW, stringdop);
							}
						}
					}
				}
			}
			format(string, sizeof(string), " <PM> от %s [%d]: {FFFFFF}%s", RealName[playerid], playerid, result);
			SendClientMessage(playset, COLOR_YELLOW, string);
			format(string, sizeof(string), " <PM> для %s [%d]: {FFFFFF}%s", RealName[playset], playset, result);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			if(locper == 1)
			{
				printf(" <PM> игрок-получатель сообщения %s [%d] в AFK !!!", RealName[playset], playset);
				SendClientMessage(playerid, COLOR_YELLOW, stringdop);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
		}
    	return 1;
	}
	if(strcmp(cmd, "/statpl", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /statpl 600 или /statpl [ид игрока]");
			return 1;
		}
		new para1 = strval(tmp);
		if(para1 == playerid)
		{
			SendClientMessage(playerid, COLOR_RED, " Для просмотра собственной статистики используйте: /statpl 600 !");
			return 1;
		}
		if(para1 == 600)
		{
			STATPlayer(playerid);
			return 1;
		}
		if(IsPlayerConnected(para1))
		{
			if(gPlayerLogged[para1] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
				return 1;
			}
			if(PlayerInfo[para1][pAdmin] >= 1 && PlayerInfo[para1][pAdmshad] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок - админ !");
				return 1;
			}
			if(PlayerInfo[para1][pVIP] == 3)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок на депортации !");
				return 1;
			}
			new para2;
			if(PlayerInfo[para1][pAdmin] >= 1)
			{
				para2 = 2;
			}
			else
			{
				para2 = PlayerInfo[para1][pVIP];
			}
			switch(para2)
			{
				case 0: format(string, sizeof(string), " Игрок %s [%d]: {FFFF00}НЕ имеет VIP-уровня.", RealName[para1], para1);
				case 1: format(string, sizeof(string), " Игрок %s [%d]: {FFFF00}VIP 1-го уровня.", RealName[para1], para1);
				case 2: format(string, sizeof(string), " Игрок %s [%d]: {FFFF00}VIP 2-го уровня.", RealName[para1], para1);
			}
			printf(" --> Игрок %s [%d] просмотрел статистику игрока %s [%d] .", RealName[playerid], playerid, RealName[para1], para1);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
			SendClientMessage(playerid, COLOR_GREEN, string);
			new sstr1[128], sstr2[128], dopcis;
			dopcis = FCislit(PlayerInfo[para1][pMutedsec]);
			switch(dopcis)
			{
				case 0: format(sstr1, sizeof(sstr1), " Время затыка: {FFFF00}%d секунд. ", PlayerInfo[para1][pMutedsec]);
				case 1: format(sstr1, sizeof(sstr1), " Время затыка: {FFFF00}%d секунда. ", PlayerInfo[para1][pMutedsec]);
				case 2: format(sstr1, sizeof(sstr1), " Время затыка: {FFFF00}%d секунды. ", PlayerInfo[para1][pMutedsec]);
			}
			dopcis = FCislit(PlayerInfo[para1][pPrisonsec]);
			switch(dopcis)
			{
				case 0: format(sstr2, sizeof(sstr2), "{33AA33}Время тюрьмы: {FFFF00}%d секунд.", PlayerInfo[para1][pPrisonsec]);
				case 1: format(sstr2, sizeof(sstr2), "{33AA33}Время тюрьмы: {FFFF00}%d секунда.", PlayerInfo[para1][pPrisonsec]);
				case 2: format(sstr2, sizeof(sstr2), "{33AA33}Время тюрьмы: {FFFF00}%d секунды.", PlayerInfo[para1][pPrisonsec]);
			}
			format(string, sizeof(string), "%s%s", sstr1, sstr2);
			SendClientMessage(playerid, COLOR_GREEN, string);
			if(pertrain == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Всем игрокам ЗАПРЕЩЕНО водить поезда !");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, " Всем игрокам РАЗРЕШЕНО водить поезда !");
			}
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
		}
    	return 1;
	}
	if(PlayerInfo[playerid][pPrisonsec] > 0)
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок в тюрьме.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_RED, " В тюрьме команды не работают !");
		return 1;
	}
	if(perfrost[playerid] != 600)
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок заморожен.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
		return 1;
	}
	if(PlayLock1[0][playerid] != 600)
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок заблокирован.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заблокированы !");
		return 1;
	}
	if(CallRemoteFunction("raceplfunc", "d", playerid) != 0)//чтение статуса участника из системы гонок
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок в системе гонок.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_RED, " В системе гонок команды не работают !");
		return 1;
	}
	if(CallRemoteFunction("raceplfunc2", "d", playerid) != 0)//чтение статуса участника из системы гонок-2
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок в системе гонок-2.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_RED, " В системе гонок-2 команды не работают !");
		return 1;
	}
	if(CallRemoteFunction("mpsysplfunc", "d", playerid) != 0)//чтение статуса участника из системы МП
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок в системе МП.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_RED, " В системе МП команды не работают !");
		return 1;
	}
	if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок в системе дерби-сумо.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_RED, " В системе дерби-сумо команды не работают !");
		return 1;
	}
	if(CallRemoteFunction("banksysplfunc", "d", playerid) != 0)//чтение статуса участника из системы банков
	{
		format(string, sizeof(string), "* Команда игрока %s [%d] не обработана , т.к. игрок в системе банков.", RealName[playerid], playerid);
		print(string);
		SendClientMessage(playerid, COLOR_RED, " В системе банков команды не работают !");
		return 1;
	}
	if (strcmp("/kill", cmdtext, true, 10) == 0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		SetPlayerArmour(playerid,0);
		SetPlayerHealth(playerid,0);
		return 1;
	}
	if (strcmp("/iadminset", cmdtext, true, 10) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] == 4)
			{
				SendClientMessage(playerid, COLOR_RED, " У Вас уже есть уровень главного админа сервера !");
				return 1;
			}
			new dopper;
			format(string, sizeof(string), " *** Игрок %s [%d] сделал себя главным админом на сервере.", RealName[playerid], playerid);
			print(string);
			SendClientMessage(playerid,COLOR_GREY," *** Вы сделали себя главным админом на сервере.");
			PlayerInfo[playerid][pVIP] = 0;//убрать VIP
			dopper = PlayerInfo[playerid][pAdmin];
			PlayerInfo[playerid][pAdmin] = 4;
			AdmUpdate(RealName[playerid], PlayerInfo[playerid][pAdmin], 1);
			new twenlim = 0;
			new restlim = 0;
			Fmadmins(1, RealName[playerid], 0, twenlim, restlim);
			if (dopper <= 2)
			{
				PlayerInfo[playerid][pAdmlive] = 1;//установить бессмертие
				SendClientMessage(playerid, COLOR_GREEN, " Бессмертие включено.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/makeadmin", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /makeadmin [ид игрока/часть ника] [левел(0-4)]");
				SendClientMessage(playerid, COLOR_GRAD2, " ( дополнительно: [сумма] )");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
 			if(IsPlayerConnected(para1))
 			{
				if(gPlayerLogged[para1] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				if(PlayerInfo[para1][pVIP] == 3)
				{
					SendClientMessage(playerid, COLOR_RED, " Нельзя, игрок находится на депортации !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [левел(0-4)] ( дополнительно: [сумма] ) !");
					return 1;
				}
				new level;
				level = strval(tmp);
				if(level < 0 || level > 4)
				{
	 				SendClientMessage(playerid, COLOR_RED, " Уровень админа должен быть от 0 до 4 !");
					return 1;
				}
				new summ1, summ2;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					summ1 = 0;
				}
				else
				{
					summ1 = 1;
					summ2 = strval(tmp);
				}
				new dopper;
				dopper = PlayerInfo[para1][pAdmin];
				if(dopper == level)
				{
	 				SendClientMessage(playerid, COLOR_RED, " У игрока уже есть назначаемый уровень админа !");
					return 1;
				}
				PlayerInfo[para1][pAdmin] = level;//изменение уровня админки
				AdmUpdate(RealName[para1], PlayerInfo[para1][pAdmin], 2);
				new dopper44;
				dopper44 = GetPVarInt(para1, "PlMon");
				if(PlayerInfo[para1][pAdmin] == 0)
				{
					PlayerInfo[para1][pVIP] = 0;//убрать VIP
					PlayerInfo[para1][pAdmshad] = 0;//убрать скрытость
					format(string, sizeof(string), " *** Админ %s снял админку с игрока %s .", RealName[playerid], RealName[para1]);
					print(string);
					SendAdminMessage(COLOR_RED, string);
					format(string, sizeof(string), " *** Админ %s снял с Вас админку.", RealName[playerid]);
					SendClientMessage(para1, COLOR_RED, string);
					if(summ1 == 1 && summ2 != GetPVarInt(para1, "PlMon"))
					{
						SetPVarInt(para1, "PlMon", summ2);//изменение личного счёта
						format(string, sizeof(string), " *** Личный счёт игрока %s был изменён на: %d $ .", RealName[para1], GetPVarInt(para1, "PlMon"));
						print(string);
						SendAdminMessage(COLOR_RED, string);
						format(string, sizeof(string), " *** Ваш личный счёт был изменён на: %d $ .", GetPVarInt(para1, "PlMon"));
						SendClientMessage(para1, COLOR_RED, string);
						printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[para1], para1, dopper44);
					}
				}
				else
				{
					PlayerInfo[para1][pVIP] = 0;//убрать VIP
					format(string, sizeof(string), " *** Админ %s дал игроку %s админку %d уровня.", RealName[playerid], RealName[para1], level);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					if(summ1 == 1 && summ2 != GetPVarInt(para1, "PlMon"))
					{
						SetPVarInt(para1, "PlMon", summ2);//изменение личного счёта
						format(string, sizeof(string), " *** Личный счёт игрока %s был изменён на: %d $ .", RealName[para1], GetPVarInt(para1, "PlMon"));
						print(string);
						SendAdminMessage(COLOR_YELLOW, string);
						printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[para1], para1, dopper44);
					}
				}
				if(PlayerInfo[para1][pAdmin] <= 1 && dopper >= 2)
				{
					new twenlim, restlim;
					Fmadmins(0, RealName[para1], 0, twenlim, restlim);
				}
				if(PlayerInfo[para1][pAdmin] >= 2 && dopper <= 1)
				{
					new twenlim = 0;
					new restlim = 0;
					Fmadmins(1, RealName[para1], 0, twenlim, restlim);
				}
				if(PlayerInfo[para1][pAdmin] >= 3 && dopper <= 2)
				{
					PlayerInfo[para1][pAdmlive] = 1;//установить бессмертие
					SendClientMessage(para1, COLOR_GREEN, " Бессмертие включено.");
				}
				if(PlayerInfo[para1][pAdmin] <= 2 && dopper >= 3)
				{
					PlayerInfo[para1][pAdmlive] = 0;//убрать бессмертие
					SendClientMessage(para1, COLOR_RED, " Бессмертие выключено.");
				}
				if(PlayerInfo[para1][pAdmin] >= 1 && dopper == 0)
				{
					SendClientMessage(para1, COLOR_RED, "* Рекомендация: В целях безопасности и защиты своего (АДМИНИСТРАТИВНОГО)");
					SendClientMessage(para1, COLOR_RED, "* аккаунта - измените свой пароль !!! И НЕ используйте пароль от своего");
					SendClientMessage(para1, COLOR_RED, "* административного аккаунта на других серверах !!!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
 	if(strcmp(cmd, "/money", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /money [ид игрока/часть ника] [сумма] [причина]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не указали сумму и причину !");
				return 1;
			}
			money = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
   			if(IsPlayerConnected(playa))
		    {
				if(gPlayerLogged[playa] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				if(PlayerInfo[playa][pVIP] == 3)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок на депортации !");
					return 1;
				}
				new dopper44;
				dopper44 = GetPVarInt(playa, "PlMon");
				if(money < 0)
				{
					money = money * -1;
					SetPVarInt(playa, "PlMon", GetPVarInt(playa, "PlMon") - money);
					format(string, 256, " *** Админ %s изъял у игрока %s %d $ , причина: %s", RealName[playerid],RealName[playa],money,result);
					print(string);
					if (PlayerInfo[playa][pAdmin] >= 1)
					{
						SendAdminMessage(COLOR_RED, string);
					}
					else
					{
						SendClientMessageToAll(COLOR_RED, string);
					}
					printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playa], playa, dopper44);
				}
				else
				{
					new twenlim, restlim;
					if(Fmadmins(2, RealName[playerid], money, twenlim, restlim) == 1)
					{
						SetPVarInt(playa, "PlMon", GetPVarInt(playa, "PlMon") + money);
						format(string, 256, " *** Админ %s дал игроку %s %d $ , причина: %s (вернуть с процентами ;)))", RealName[playerid],RealName[playa],money,result);
						print(string);
						if (PlayerInfo[playa][pAdmin] >= 1)
						{
							SendAdminMessage(COLOR_YELLOW, string);
						}
						else
						{
							SendClientMessageToAll(COLOR_YELLOW, string);
						}
						printf(" *** Админ %s >> Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", RealName[playerid],twenlim,restlim);
						printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playa], playa, dopper44);
					}
					else
					{
						if(restlim == 0)
						{
							SendClientMessage(playerid, COLOR_RED, " Нельзя ! Вы израсходовали суточный денежный лимит !");
						}
						else
						{
							SendClientMessage(playerid, COLOR_RED, " Нельзя ! У Вас недостаточный остаток денежного лимита !");
						}
					}
					if(twenlim != 0)
					{
						format(string, 256, " Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", twenlim,restlim);
						SendClientMessage(playerid, COLOR_RED, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/cmchat", true) == 0)
	{
		ClearChat(playerid,150);
		SendClientMessage(playerid, COLOR_GRAD1, " Вы очистили свой чат.");
		return 1;
	}
	if(strcmp(cmd, "/entercar", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /entercar [ид транспорта]");
				return 1;
			}
			new testcar = strval(tmp);
			new modelcar = GetVehicleModel(testcar);
			if(modelcar == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид транспорта] на сервере нет !");
				return 1;
			}
			if(modelcar == 570 || modelcar == 569)
			{
				SendClientMessage(playerid, COLOR_RED, " В вагоне поезда нет места для водителя !");
			}
			else
			{
				if(IsPlayerInAnyVehicle(playerid))
				{//если игрок в авто, то:
					new Float:igx, Float:igy, Float:igz;
					GetPlayerPos(playerid, igx, igy, igz);//выйти самому из авто
					SetPlayerPos(playerid, igx+3, igy+3, igz);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
						{
							if(admper1[i] != 600 && admper1[i] == playerid)//если есть админ ведущий наблюдение,
							{//И этот админ наблюдает за игроком, то:
								admper5[i] = 2;//устанавливаем переключение наблюдения
							}
						}
					}
				}
				SetTimerEx("entcar22", 300, 0, "ii", playerid, testcar);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/time", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /time [время(0-23)]");
				return 1;
			}
			new hour1;
			hour1 = strval(tmp);
			if (hour1 < 0 || hour1 > 23)
			{
				SendClientMessage(playerid, COLOR_RED, " Время: от 0 до 23 !");
				return 1;
			}
			SetWorldTime(hour1);
			GlTime = hour1;
			TimePlay(hour1);
			format(string, sizeof(string), " *** Админ %s установил время на %d часов.", RealName[playerid], hour1);
			print(string);
			SendClientMessageToAll(COLOR_YELLOW,string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/vers", true) == 0)
	{
		SendClientMessage(playerid,COLOR_GREEN," Версия мода: 3.5");
		return 1;
	}
	if(strcmp(cmd, "/gmx", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			format(string, sizeof(string), " *** Админ %s [%d] инициализировал рестарт сервера !", RealName[playerid], playerid);
			print(string);
			SendClientMessageToAll(COLOR_RED,string);
			SendClientMessageToAll(COLOR_RED," Внимание ! Через 30 секунд произойдёт рестарт сервера !");
			restart = SetTimer("RestartS", 30000, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/heal", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		if(StopHeal[playerid] != 0 && PlayerInfo[playerid][pAdmin] == 0)//если переменная задержки НЕ равна 0,
		{//И игрок НЕ админ, то:
			new dopcis;
			dopcis = FCislit(StopHeal[playerid]);
			switch(dopcis)
			{
				case 0: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунд !", StopHeal[playerid]);
				case 1: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунду !", StopHeal[playerid]);
				case 2: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунды !", StopHeal[playerid]);
			}
			SendClientMessage(playerid,COLOR_RED,string);
		}
		else//иначе:
		{
			SetPlayerHealth(playerid,100);
			SetPlayerArmour(playerid,100);
			if(PlayerInfo[playerid][pAdmin] == 0)//если игрок НЕ админ, то:
			{
				StopHeal[playerid] = 5;//устанавливаем переменную задержки на 5 секунд
			}
			SendClientMessage(playerid,COLOR_GRAD1," Вы пополнили себе жизнь и броню.");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/drift1", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
  		SetPlayerPos(playerid,2805.03,-1449.16,40.03);
  		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 1");
		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift2", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
 		SetPlayerPos(playerid,2262.4363,1398.1263,42.8203);
 		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 2");
 		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift3", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
  		SetPlayerPos(playerid,2221.8330,1961.9558,31.7797);
  		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 3");
  		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift4", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
    	SetPlayerPos(playerid,1147.8013,2179.0205,10.8203);
    	SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 4");
		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift5", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
  		SetPlayerPos(playerid,-761.3758,2755.0085,45.7734);
  		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 5");
  		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift6", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
  		SetPlayerPos(playerid,-2130.9165,920.9220,79.8516);
  		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 6");
		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift7", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
  		SetPlayerPos(playerid,-2668.0022,577.6458,14.4592);
  		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 7");
		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift8", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
  		SetPlayerPos(playerid,-2703.9224,403.8004,4.3672);
    	SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 8");
		return 1;
	}
//-----------------------------------------------------------------------------
	if(strcmp(cmdtext, "/drift9", true)==0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
  		SetPlayerPos(playerid,-2427.9668,-602.8188,132.5560);
  		SendClientMessage(playerid,COLOR_GREENISHGOLD," Добро пожаловать на дрифт зону 9");
		return 1;
	}
	if(strcmp(cmd, "/help", true) == 0 && playspa[playerid] == 1)
	{
		SendClientMessage(playerid,COLOR_GRAD1," ---------------------------- Помощь по командам ---------------------------- ");
		SendClientMessage(playerid,COLOR_GREEN,"   /help   /menu   /vers   /drift[1-9]   /spawn   /count [секунды]");
		SendClientMessage(playerid,COLOR_GREEN,"   /kill   /heal   /tp   /cmchat   /admins   /givemoney [ид] [сумма]");
		SendClientMessage(playerid,COLOR_GREEN,"   /pm [ид] [текст]   /getid   /ondr   /offdr   /resdr   /statdr [ид]");
		SendClientMessage(playerid,COLOR_GREEN,"   /a [текст]   /statpl 600   /statpl [ид]   /scrmd [режим]   /mmd");
		SendClientMessage(playerid,COLOR_GREEN,"   /svt   /rdt   /ocam");
		SendClientMessage(playerid,COLOR_GRAD1," ------------------------------------------------------------------------------------------ ");

		format(strdln, sizeof(strdln), "/help - Помощь по командам\
		\n/menu - Игровое меню\
		\n/vers - Просмотреть версию мода\
		\n/drift[1-9] - ТП к местам дрифта");
		format(strdln, sizeof(strdln), "%s\n/spawn - Заспавниться\
		\n/count [секунды] - Запустить обратный отсчёт\
		\n/kill - Умереть\
		\n/heal - Пополнить себе жизнь и броню", strdln);
		format(strdln, sizeof(strdln), "%s\n/tp - Точка телепорта от клана [Gn_R]\
		\n/cmchat - Очистить свой чат\
		\n/admins - Просмотреть On-Line админов\
		\n/givemoney [ид] [сумма] - Передать деньги другому игроку", strdln);
		format(strdln, sizeof(strdln), "%s\n/pm [ид] [текст] - Написать личное сообщение другому игроку\
		\n/getid - Просмотреть ID транспорта и его модель\
		\n/ondr - Подключить себя к дрифт-соревнованию\
		\n/offdr - Отключить себя от дрифт-соревнования", strdln);
		format(strdln, sizeof(strdln), "%s\n/resdr - Обнулить свои очки дрифт-соревнования\
		\n/statdr [ид] - Просмотреть статус подключения другого\
		\n		игрока к дрифт-соревнованию\
		\n/a [текст] - Написать сообщение в админ-чат", strdln);
#if (MOD33INS == 1)
		format(strdln, sizeof(strdln), "%s\n/statpl 600 - Просмотреть свою частичную статистику\
		\n/statpl [ид] - Просмотреть частичную статистику другого игрока\
		\n/scrmd [режим] - Установить (временно) режимы экрана\
		\n/mmd - Включить / отключить (временно) Alt & 2 -режим вызова меню", strdln);
#endif
#if (MOD33INS == 2)
		format(strdln, sizeof(strdln), "%s\n/statpl 600 - Просмотреть свою частичную статистику\
		\n/statpl [ид] - Просмотреть частичную статистику другого игрока\
		\n/scrmd [режим] - Установить (временно) режимы экрана\
		\n/mmd - Включить / отключить (временно) Y -режим вызова меню", strdln);
#endif
		format(strdln, sizeof(strdln), "%s\n/svt - Сохранить временную точку телепорта\
		\n/rdt - ТП на временную точку телепорта\
		\n/ocam - Админ-меню оперативных команд", strdln);
		ShowPlayerDialog(playerid, 2, 0, "Помощь по командам", strdln, "OK", "");
		SetPVarInt(playerid, "DlgCont", 2);

    	return 1;
	}
	if(strcmp(cmd, "/cord", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new Float:x, Float:y, Float:z, Float:Angle;
			GetPlayerPos(playerid, x, y, z);
			if(GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3)
			{
				new VID = GetPlayerVehicleID(playerid);
				GetVehicleZAngle(VID, Angle);
			}
			else
			{
				GetPlayerFacingAngle(playerid, Angle);
			}
			format(string, sizeof(string), "x = %f   y = %f   z = %f   поворот = %f   интерьер = %d   виртуальный мир = %d",
			x, y, z, Angle, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
			SendClientMessage(playerid, COLOR_WHITE, string);
			printf(" *** Админ %s использовал команду /cord .", RealName[playerid]);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
    if(strcmp(cmd, "/givemoney", true) == 0)
	{
    	if(PlayerInfo[playerid][pVIP] == 3)
    	{
			SendClientMessage(playerid, COLOR_RED, "* Ваш личный счёт заморожен, пока дело о Вашей депортации на слушании !");
			return 1;
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_RED, "* Вы не можете использовать эту команду, Вас заткнули !");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /givemoney [ид игрока] [сумма]");
			return 1;
		}
		if(StopGMoney[playerid] != 0 && PlayerInfo[playerid][pAdmin] == 0)//если переменная задержки НЕ равна 0,
		{//И игрок НЕ админ, то:
			new dopcis;
			dopcis = FCislit(StopGMoney[playerid]);
			switch(dopcis)
			{
				case 0: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунд !", StopGMoney[playerid]);
				case 1: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунду !", StopGMoney[playerid]);
				case 2: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунды !", StopGMoney[playerid]);
			}
			SendClientMessage(playerid,COLOR_RED,string);
			return 1;
		}
		new playset;
		playset = strval(tmp);
		if(playset == playerid)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы не можете передать деньги самому себе !");
			return 1;
		}
		if(IsPlayerConnected(playset))
		{
			if(gPlayerLogged[playset] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
				return 1;
			}
			if(PlayerInfo[playset][pVIP] == 3)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок на депортации !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не указали сумму !");
				return 1;
			}
			new money;
			money = strval(tmp);
			if(money < 0) { SendClientMessage(playerid, COLOR_RED, " Сумма не может быть отрицательным числом !"); return 1; }
			if(money == 0) { SendClientMessage(playerid, COLOR_RED, " Вы не указали сумму !"); return 1; }
			if(GetPVarInt(playerid, "PlMon") < money) { SendClientMessage(playerid, COLOR_RED, " У Вас нет такой суммы."); return 1; }
			new dopper44, dopper55, dopper77;
			dopper44 = GetPVarInt(playerid, "PlMon");
			dopper55 = GetPVarInt(playset, "PlMon");
			dopper77 = dopper55 + money;
			if(dopper77 < dopper55)
			{
				format(string, sizeof(string), " У игрока %s [%d] слишком большая сумма !", RealName[playset], playset);
				SendClientMessage(playerid, COLOR_RED, string);
				return 1;
			}
			SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - money);
			SetPVarInt(playset, "PlMon", GetPVarInt(playset, "PlMon") + money);
			format(string, sizeof(string), " Игрок %s [%d] передал игроку %s [%d] %d $", RealName[playerid], playerid, RealName[playset], playset, money);
			print(string);
			SendAdminMessage(COLOR_YELLOW, string);
			if (PlayerInfo[playerid][pAdmin] == 0)
			{
				format(string, sizeof(string), " Вы передали игроку %s [%d] %d $", RealName[playset], playset, money);
				SendClientMessage(playerid, COLOR_YELLOW, string);
			}
			if (PlayerInfo[playset][pAdmin] == 0)
			{
				format(string, sizeof(string), " Игрок %s [%d] передал Вам %d $", RealName[playerid], playerid, money);
				SendClientMessage(playset, COLOR_YELLOW, string);
			}
			if(PlayerInfo[playerid][pAdmin] == 0)//если игрок НЕ админ, то:
			{
				StopGMoney[playerid] = 5;//устанавливаем переменную задержки на 5 секунд
			}
			printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, dopper44);
			printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playset], playset, dopper55);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
		}
    	return 1;
	}
    if(strcmp(cmd, "/count", true) == 0)
	{
    	if(PlayerInfo[playerid][pVIP] == 3)
    	{
			SendClientMessage(playerid, COLOR_RED, "* Вы не можете использовать эту команду,");
			SendClientMessage(playerid, COLOR_RED, "* пока дело о Вашей депортации на слушании !");
			return 1;
		}
		if(PlayerInfo[playerid][pMutedsec] > 0)
		{
			SendClientMessage(playerid, COLOR_RED, "* Вы не можете использовать эту команду, Вас заткнули !");
			return 1;
		}
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			SendClientMessage(playerid, COLOR_RED," Вы должны быть в транспорте.");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /count [секунды(2-12)]");
			return 1;
		}
		new persec;
		persec = strval(tmp);
		if (persec < 2 || persec > 12)
		{
			SendClientMessage(playerid, COLOR_RED, " Секунды: от 2 до 12 !");
			return 1;
		}
		format(string, sizeof(string), " Игрок %s [%d] запустил отсчёт от %d секунд.", RealName[playerid], playerid, persec);
		print(string);
		SendClientMessageToAll(COLOR_PURPLE, string);
		new Float: X, Float:Y, Float: Z, playint, playvw;
		GetPlayerPos(playerid, X, Y, Z);
		playint = GetPlayerInterior(playerid);
		playvw = GetPlayerVirtualWorld(playerid);
		persec++;
		countdown[playerid] = persec;
		for(new i = 0; i < MAX_PLAYERS ; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsPlayerInRangeOfPoint(i,20.0,X,Y,Z) && GetPlayerInterior(i) == playint &&
				GetPlayerVirtualWorld(i) == playvw)
				{
					if(GetPlayerState(i) != PLAYER_STATE_ONFOOT && countdown[i] == -1) countdown[i] = persec;
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/weat", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /weat [ид погоды]");
				return 1;
			}
			new testwea = strval(tmp);
			SetWeather(testwea);
			GlWeat = testwea;
			format(string, sizeof(string), " *** Админ %s установил ID погоды на %d", RealName[playerid], testwea);
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
 	if(strcmp(cmd, "/setmon", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /setmon [ид игрока/часть ника] [сумма]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не указали сумму !");
				return 1;
			}
			money = strval(tmp);
   			if(IsPlayerConnected(playa))
		    {
				if(gPlayerLogged[playa] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				if(PlayerInfo[playa][pVIP] == 3)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок на депортации !");
					return 1;
				}
				if(money < 0) { SendClientMessage(playerid, COLOR_RED, " Сумма не может быть отрицательным числом !"); return 1; }
				new dopper44;
				dopper44 = GetPVarInt(playa, "PlMon");
				new twenlim, restlim;
				if(Fmadmins(2, RealName[playerid], money, twenlim, restlim) == 1)
				{
					SetPVarInt(playa, "PlMon", money);
					format(string, 256, " *** Админ %s установил игроку %s %d $", RealName[playerid],RealName[playa],money);
					print(string);
					if (PlayerInfo[playa][pAdmin] >= 1)
					{
						SendAdminMessage(COLOR_YELLOW, string);
					}
					else
					{
						SendClientMessageToAll(COLOR_YELLOW, string);
					}
					printf(" *** Админ %s >> Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", RealName[playerid],twenlim,restlim);
					printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playa], playa, dopper44);
				}
				else
				{
					if(restlim == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя ! Вы израсходовали суточный денежный лимит !");
					}
					else
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя ! У Вас недостаточный остаток денежного лимита !");
					}
				}
				if(twenlim != 0)
				{
					format(string, 256, " Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", twenlim,restlim);
					SendClientMessage(playerid, COLOR_RED, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/grav", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /grav [гравитация(0.0001-1)]");
				return 1;
			}
			new dopper, dopper22, dopper33, testgra, Float:flgra;
			dopper = strlen(tmp);
			if (dopper < 1 || dopper > 8)
			{
				SendClientMessage(playerid, COLOR_RED, " Гравитация: от 0.0001 до 1 !");
				return 1;
			}
			dopper22 = 0;
			dopper33 = 0;
			for(new i = 0; i < dopper; i++)
			{
				if(tmp[i] < 46 || tmp[i] == 47 || tmp[i] > 57)
				{
					dopper22 = 1;
				}
				if(tmp[i] == 46)
				{
					dopper33++;
				}
			}
			if (dopper22 == 1 || dopper33 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Гравитация: от 0.0001 до 1 !");
				return 1;
			}
			flgra = floatstr(tmp);
			testgra = 0;
			testgra = floatcmp(0.000100, flgra);
			if(testgra == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Гравитация: от 0.0001 до 1 !");
				return 1;
			}
			testgra = 0;
			testgra = floatcmp(flgra, 1.000000);
			if(testgra == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Гравитация: от 0.0001 до 1 !");
				return 1;
			}
			SetGravity(flgra);
			GlGrav = flgra;
			new Float:kgrav22;
			kgrav22 = GlGrav;
			if(kgrav22 == 1.000000) {kgrav22 = 0.999;}
#if (MOD4AINS == 1)
			CoefGrav = floatmul(floatdiv(1.00, floatlog(floatdiv(1.00, kgrav22))), 1300.00);
#endif
			CoefGrav22 = floatmul(floatdiv(1.00, floatlog(floatdiv(1.00, kgrav22))), 750.00);
			format(string, sizeof(string), " *** Админ %s установил гравитацию на %f", RealName[playerid], flgra);
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/admins", true) == 0)
	{
        AdminsLvl(playerid);
    	return 1;
	}
	if(strcmp(cmd, "/shad", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /shad [ид игрока/часть ника] [0-убрать скрытость, 1-скрыть]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
 			if(IsPlayerConnected(para1))
 			{
				if(gPlayerLogged[para1] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				if (PlayerInfo[para1][pAdmin] != 0)
				{
					if (PlayerInfo[para1][pAdmin] >= 4 && PlayerInfo[playerid][pAdmin] == 3)
					{
						SendClientMessage(playerid, COLOR_RED, " Вы не можете изменять скрытость админа 4 уровня !");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_RED, " [0-убрать скрытость, 1-скрыть] !");
						return 1;
					}
					new stat;
					stat = strval(tmp);
					if(stat < 0 || stat > 1)
					{
	 					SendClientMessage(playerid, COLOR_RED, " 0-убрать скрытость, 1-скрыть !");
						return 1;
					}
					if(stat == 0 && PlayerInfo[para1][pAdmshad] == 0)
					{
	 					SendClientMessage(playerid, COLOR_RED, " У выбранного админа уже нет скрытости !");
						return 1;
					}
					if(stat == 1 && PlayerInfo[para1][pAdmshad] == 1)
					{
	 					SendClientMessage(playerid, COLOR_RED, " У выбранного админа уже есть скрытость !");
						return 1;
					}
					PlayerInfo[para1][pAdmshad] = stat;
					if(PlayerInfo[para1][pAdmshad] == 1)
					{
                    	PlayerInfo[para1][pVIP] = 0;//убрать действие функции /openpm
						format(string, sizeof(string), " *** Админ %s дал админу %s статус скрытости.", RealName[playerid], RealName[para1]);
						print(string);
						SendAdminMessage(COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), " *** Админ %s убрал с админа %s статус скрытости.", RealName[playerid], RealName[para1]);
						print(string);
						SendAdminMessage(COLOR_RED, string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок - не админ !");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/live", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			if (PlayerInfo[playerid][pAdmlive] == 1)
			{
				PlayerInfo[playerid][pAdmlive] = 0;
				format(string,sizeof(string)," *** Админ %s выключил собственное бессмертие.", RealName[playerid]);
				print(string);
				SendAdminMessage(COLOR_RED, string);
				return 1;
			}
			else
			{
				PlayerInfo[playerid][pAdmlive] = 1;
				format(string,sizeof(string)," *** Админ %s включил собственное бессмертие.", RealName[playerid]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/unbanakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 3)
    	{
   			new data2[54],dopper;
			data2[53] = 0;//переменная проверки блокировки аккаунта
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /unbanakk [имя аккаунта]");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
#if (MOD90INS == 0)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))
			{
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
#endif
#if (MOD90INS == 1)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
			{//проверим регистрацию в SQLite
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
					return 1;
				}
				else
				{
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
#if (MOD90INS == 0)
			new File: UserFile = fopen(string, io_read);//чтение аккаунта
			new key[ 256 ] , val[ 256 ];
			new Data[ 256 ];
			while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
				if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
				if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
				if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
				if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
				if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
				if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
				if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
				if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
				if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
				if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
				if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
				if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
				if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
				if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
				if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//				if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//				if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//				if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//				if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//				if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//				if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//				if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//				if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//				if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//				if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//				if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
				if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
				if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
				if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
				if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
				if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
				if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
				if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
				if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
				if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
				if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
				if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
				if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
				if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
				if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
				if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
				if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
				if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
				if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
				if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
				if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
				if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
				if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
				if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
				if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
				if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
				if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
			}
			fclose(UserFile);
			strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
			strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
			strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
#endif
#if (MOD90INS == 1)
			new mgrakk = 0;
			if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
			{
				mgrakk = 1;
				new File: UserFile = fopen(string, io_read);//чтение аккаунта
			    new key[ 256 ] , val[ 256 ];
			    new Data[ 256 ];
				while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
					if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
					if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
					if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    	if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    	if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
			        if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
			        if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
			        if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
			        if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
			        if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
			        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
			        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
			        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
			        if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
			        if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
			        if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
			        if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			        if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			        if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			        if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			        if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			        if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			        if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			        if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			        if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			        if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			        if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			        if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
			        if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
			        if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
			        if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
			        if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
			        if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
			        if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
			        if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
			        if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
			        if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
			        if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
			        if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
			        if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
			        if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
			        if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
			        if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
			        if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
			        if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
			        if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
			        if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
			        if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
					if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
			        if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
			        if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
			        if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
			        if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
			        if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
                }
                fclose(UserFile);
				strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
				strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
				strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
			}
			else//иначе: (если аккаунт зарегистрирован в SQLite)
			{
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Ошибка чтения аккаунта игрока из БД !");
					return 1;
				}
				else//иначе: (если аккаунт зарегистрирован в БД)
				{
					new buffer[32];//читаем данные из БД
					db_get_field(querydb[playerid], 7, adrip, 256);//IPAdr
					db_get_field(querydb[playerid], 9, buffer, 32); data2[1] = strval(buffer);//AdminLevel
					db_get_field(querydb[playerid], 20, buffer, 32); data2[12] = strval(buffer);//VIP
					db_get_field(querydb[playerid], 21, buffer, 32); data2[13] = strval(buffer);//Lock
					db_get_field(querydb[playerid], 22, buffer, 32); data2[14] = strval(buffer);//Gang
					db_get_field(querydb[playerid], 23, buffer, 32); data2[15] = strval(buffer);//GangLvl
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
				if(IsPlayerConnected(i))
				{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Ошибка в имени аккаунта, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
			new fadm;
			if(data2[1] < 0)
			{
				fadm = data2[1] * -1;
			}
			else
			{
				fadm = data2[1];
			}
			if(fadm >= 1 && PlayerInfo[playerid][pAdmin] == 3)//проверка аккаунта на админку
			{
				if(fadm == 5)//подмена 5-го левела на 4-й
				{
					dopper = 4;
				}
				else
				{
					dopper = fadm;
				}
				format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] - админ %d LVL !", akk, dopper);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			if(data2[13] == 1 && data2[12] == 3)//если аккаунт заблокирован, и у игорока статус депортации, то:
			{
				data2[12] = 0;//убрать статус депортации
			}
			if(data2[13] == 0)//если аккаунт НЕ был заблокирован, то:
			{
				data2[53] = 1;//записываем в переменную проверки блокировки аккаунта 1
			}
			data2[13] = 0;//сброс блокировки аккаунта
			strdel(ssss, 0, 256);//сборка RCON-команды разбана
			strcat(ssss, "unbanip ");
			strcat(ssss, adrip);
			SendRconCommand(ssss);//RCON-команда разбана
			SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			new gngakkrd = 0;
			new string999[256];
			format(string999,sizeof(string999),"gangs/players/%s.ini",akk);
			if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
			{
				gngakkrd = 1;
				new string333[256];
				format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
				new File: UserFile333 = fopen(string333, io_read);//чтение файла
				new key333[ 256 ] , val333[ 256 ];
				new Data333[ 256 ];
				while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
				{
					key333 = ini_GetKey( Data333 );
					if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
					if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
				}
				fclose(UserFile333);
			}
//---------------------------------- конец -------------------------------------
#if (MOD90INS == 0)
			new File: hFile = fopen(string, io_write);//запись изменённого аккаунта
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
				format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
				format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
				format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
				format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
				format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
				format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
				format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
				format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
				format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
				format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
				format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
				format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//				format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//				format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//				format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//				format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//				format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//				format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//				format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//				format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//				format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//				format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//				format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
				fclose(hFile);
			}
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			if(gngakkrd == 1)
			{
				fremove(string999);
			}
//---------------------------------- конец -------------------------------------
#endif
#if (MOD90INS == 1)
			if(mgrakk == 1)//если аккаунт был зарегистрирован в fopen, то:
			{
				format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", akk);//миграция аккаунта в БД, создаём запрос БД
				db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

				format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
				format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
				format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
				format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
				format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, akk,igkey,tdreg);//IDCopy,Name,Key,TDReg
				format(strdln, sizeof(strdln), "%s0,0,0,'%s',", strdln, adrip);//DEndConD,DEndConM,DEndConY,IPAdr
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[0],data2[1],data2[2]);//MinLog,AdminLevel,AdminShadow
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[3],data2[4],data2[5]);//AdminLive,Registered,Prison
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[6],data2[7],data2[8]);//Prisonsec,Muted,Mutedsec
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[9],data2[10],data2[11]);//Money,Kills,Deaths
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[12],data2[13],data2[14],data2[15]);//VIP,Lock,Gang,GangLvl
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[27],data2[28],data2[29],data2[30]);//Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[31],data2[32],data2[33],data2[34]);//Weapon_slot4,Weapon_slot5,Weapon_slot6,Weapon_slot7
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[35],data2[36],data2[37],data2[38]);//Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[39],data2[40],data2[41],data2[42]);//Weapon_slot12,Ammo_slot0,Ammo_slot1,Ammo_slot2
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[43],data2[44],data2[45],data2[46]);//Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[47],data2[48],data2[49],data2[50]);//Ammo_slot7,Ammo_slot8,Ammo_slot9,Ammo_slot10
				format(strdln, sizeof(strdln), "%s%d,%d)", strdln, data2[51],data2[52]);//Ammo_slot11,Ammo_slot12
				db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				if(gngakkrd == 1)
				{
					fremove(string999);
				}
//---------------------------------- конец -------------------------------------
				if(fexist(string))
				{
					fremove(string);//удаляем аккаунт из fopen
				}
			}
			else//иначе: (если аккаунт был зарегистрирован в SQLite)
			{
				if(gngakkrd == 1)//если был найден аккаунт клана, то:
				{
					format(strdln, sizeof(strdln), "UPDATE Players SET VIP = %d,Lock = %d,",data2[12],data2[13]);//создаём запрос БД
					format(strdln, sizeof(strdln), "%sGang = %d,GangLvl = %d WHERE (Name = '%s')", strdln, data2[14],data2[15],akk);
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД

					if(gngakkrd == 1)
					{
						fremove(string999);
					}
				}
				else//иначе: (если НЕ был найден аккаунт клана)
				{
					format(strdln, sizeof(strdln), "UPDATE Players SET VIP = %d,Lock = %d WHERE (Name = '%s')",data2[12],data2[13],akk);//создаём запрос БД
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
				}
			}
#endif
			if(data2[53] == 1)//если переменная проверки блокировки аккаунта = 1, то:
			{
				format(ssss,sizeof(ssss)," Аккаунт игрока [%s] не заблокирован (не забанен) !", akk);
				print(ssss);
				SendClientMessage(playerid, COLOR_RED, ssss);
				format(ssss,sizeof(ssss)," ( IP: [%s] был удалён из файла samp.ban ) !", adrip);
				print(ssss);
				SendClientMessage(playerid, COLOR_GREEN, ssss);
			}
			else//иначе:
			{
				format(ssss,sizeof(ssss)," *** Админ %s разбанил аккаунт игрока [%s] ( IP: [%s] ) .", RealName[playerid], akk, adrip);
				print(ssss);
				SendAdminMessage(COLOR_GREEN, ssss);
				format(ssss,sizeof(ssss)," *** Админ %s разбанил аккаунт игрока [%s] .", RealName[playerid], akk);
				for(new i=0;i<MAX_PLAYERS;i++)//отправка сообщения НЕ админам
				{
					if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] == 0)
					{
						SendClientMessage(i, COLOR_GREEN, ssss);
					}
				}
			}

			new string222[256], string333[256], idfile;
			idfile = 0;
			new ip333[128];
			ip333 = ConvIP(adrip);
			format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
			if(fexist(string222))//читаем аккаунт из бан-листа (если файл существует)
			{
				new File: UserFile44 = fopen(string222, io_read);//чтение аккаунта из бан-листа
				new key44[ 256 ] , val44[ 256 ];
				new Data44[ 256 ];
				while ( fread( UserFile44 , Data44 , sizeof( Data44 ) ) )
				{
					key44 = ini_GetKey( Data44 );
					if( strcmp( key44 , "Data" , true ) == 0 ) { string333 = ini_GetValue( Data44 ); }
					if( strcmp( key44 , "IDFile" , true ) == 0 ) { val44 = ini_GetValue( Data44 ); idfile = strval( val44 ); }
				}
				fclose(UserFile44);
				strdel(string333, strlen(string333)-1, strlen(string333));//корректировка причины бана
			}
			format(string222,sizeof(string222),"bantime/%d.ini",idfile);
			if(fexist(string222))//если файл временного бана существует, то:
			{
				fremove(string222);//удаление ид-файла временного бана
				printf("[BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) .", akk, idfile);
				format(ssss,sizeof(ssss)," ( Файл временного бана игрока [%s] был удалён ) !", akk);
				SendClientMessage(playerid, COLOR_GREEN, ssss);
			}
			format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
			if(fexist(string222))
			{
				fremove(string222);//удаляем аккаунт из бан-листа
				format(ssss,sizeof(ssss)," ( Аккаунт игрока [%s] был удалён из бан-листа ) !", akk);
				print(ssss);
				SendClientMessage(playerid, COLOR_GREEN, ssss);
			}
			format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
			if(fexist(string222))
			{
				fremove(string222);//удаляем IP-адрес из бан-листа
				format(ssss,sizeof(ssss)," ( IP-адрес [%s] был удалён из бан-листа ) !", adrip);
				print(ssss);
				SendClientMessage(playerid, COLOR_GREEN, ssss);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/admtp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			new dopper2 = 0;
			new Float:PosX, Float:PosY, Float:PosZ;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(playspa[i] == 1 && (PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAdmin] <= 4) && i != playerid)
					{
						dopper2 = 1;
						if(PlayerInfo[i][pPrisonsec] > 0)//если админ в тюрьме, то:
						{
							PlayerInfo[i][pPrison]--;
							PlayerInfo[i][pPrisonsec] = 0;
							weapstatplay[i] = 0;
							SpawnPlayer(i);//респавн админа
							SendClientMessage(i, COLOR_GREEN, "* Амнистия ( по команде /admtp )");
							SetTimerEx("DopAdmtp", 1000, 0, "ii", playerid, i);
						}
						else
						{
							if(PlayLock1[0][i] != 600)//если админ заблокирован, то:
							{
								tpdrift[i] = 1;
								PlayLock1[1][i] = GetPlayerInterior(playerid);//изменение интерьера блокировки
								PlayLock1[2][i] = GetPlayerVirtualWorld(playerid);//изменение виртуального мира блокировки
								GetPlayerPos(playerid, PlayLock2[0][i], PlayLock2[1][i], PlayLock2[2][i]);//изменение координат блокировки
								PlayLock2[1][i] = PlayLock2[1][i] + 1;
							}
							else
							{
								if(admper1[i] != 600)//если админ в наблюдении, то:
								{
									TogglePlayerSpectating(i, 0);//запретить наблюдение для админа
									admper6[i] = 0;//обнуляем отметку о переключении наблюдения
									SetTimerEx("DopAdmtp", 1000, 0, "ii", playerid, i);
								}
								else
								{
									EnterTick33[i] = 1;//обход антикрашера - 3
									tpdrift[i] = 1;
			 						SetPlayerInterior(i, GetPlayerInterior(playerid));
									SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
			   						GetPlayerPos(playerid, PosX, PosY, PosZ);
									SetPlayerPos(i, PosX, PosY+1, PosZ+1);
								}
							}
						}
					}
				}
			}
            if(dopper2 == 1)
            {
				format(string,256," *** Админ %s телепортировал всех админов к себе.",RealName[playerid]);
				print(string);
				SendAdminMessage(COLOR_RED, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Нет доступных админов для ТП к себе !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/mess", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /mess [цвет(0-19)] [сообщение] , или /mess 600");
				return 1;
			}
			new color;
			color = strval(tmp);
			if(color < 0 || (color > 19 && color < 600) || color > 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Цвет(0-19) , или 600 !");
				return 1;
			}
			if(color == 600)
			{
				format(strdln, sizeof(strdln), "{A9C4E4}0 - {FF0000}Красный\
				\n{A9C4E4}1 - {FF3F3F}Светло-красный\
				\n{A9C4E4}2 - {FF3F00}Кирпичный\
				\n{A9C4E4}3 - {BF3F00}Коричневый");
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}4 - {FF7F3F}Светло-коричневый\
				\n{A9C4E4}5 - {FF7F00}Оранжевый\
				\n{A9C4E4}6 - {FFFF00}Жёлтый\
				\n{A9C4E4}7 - {3FFF3F}Светло-зелёный", strdln);
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}8 - {00FF00}Зелёный\
				\n{A9C4E4}9 - {00BF00}Тёмно-зелёный\
				\n{A9C4E4}10 - {00FFFF}Бирюзовый\
				\n{A9C4E4}11 - {00BFFF}Голубой", strdln);
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}12 - {3F3FFF}Светло-синий\
				\n{A9C4E4}13 - {0000FF}Синий\
				\n{A9C4E4}14 - {7F3FFF}Светло-фиолетовый\
				\n{A9C4E4}15 - {7F00FF}Фиолетовый", strdln);
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}16 - {FF00FF}Сиреневый\
				\n{A9C4E4}17 - {7F7F7F}Серый\
				\n{A9C4E4}18 - {FFFFFF}Белый\
				\n{A9C4E4}19 - {333333}Чёрный", strdln);
				ShowPlayerDialog(playerid, 2, 0, "Цвет:", strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new idx22 = idx;
			new result[256];
			while ((idx22 < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				if (cmdtext[idx22] == 123 && cmdtext[idx22 + 1] == 44)
				{
					result[idx - offset] = cmdtext[idx22];
					idx++;
					idx22++;
					idx22++;
				}
				else
				{
					result[idx - offset] = cmdtext[idx22];
					idx++;
					idx22++;
				}
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не написали сообщение !");
				return 1;
			}
			format(string, sizeof(string), "(/mess) Админ %s [%d]: %s", RealName[playerid], playerid, result);
			print(string);
			switch(color)
			{
				case 0: format(string, sizeof(string), "{FF0000}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 1: format(string, sizeof(string), "{FF3F3F}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 2: format(string, sizeof(string), "{FF3F00}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 3: format(string, sizeof(string), "{BF3F00}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 4: format(string, sizeof(string), "{FF7F3F}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 5: format(string, sizeof(string), "{FF7F00}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 6: format(string, sizeof(string), "{FFFF00}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 7: format(string, sizeof(string), "{3FFF3F}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 8: format(string, sizeof(string), "{00FF00}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 9: format(string, sizeof(string), "{00BF00}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 10: format(string, sizeof(string), "{00FFFF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 11: format(string, sizeof(string), "{00BFFF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 12: format(string, sizeof(string), "{3F3FFF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 13: format(string, sizeof(string), "{0000FF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 14: format(string, sizeof(string), "{7F3FFF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 15: format(string, sizeof(string), "{7F00FF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 16: format(string, sizeof(string), "{FF00FF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 17: format(string, sizeof(string), "{7F7F7F}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 18: format(string, sizeof(string), "{FFFFFF}Админ %s [%d]: %s", RealName[playerid], playerid, result);
				case 19: format(string, sizeof(string), "{333333}Админ %s [%d]: %s", RealName[playerid], playerid, result);
			}
			SendClientMessageToAll(COLOR_WHITE, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/fmess", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /fmess [цвет(0-19)] [сообщение] , или /fmess 600");
				return 1;
			}
			new color;
			color = strval(tmp);
			if(color < 0 || (color > 19 && color < 600) || color > 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Цвет(0-19) , или 600 !");
				return 1;
			}
			if(color == 600)
			{
				format(strdln, sizeof(strdln), "{A9C4E4}0 - {FF0000}Красный\
				\n{A9C4E4}1 - {FF3F3F}Светло-красный\
				\n{A9C4E4}2 - {FF3F00}Кирпичный\
				\n{A9C4E4}3 - {BF3F00}Коричневый");
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}4 - {FF7F3F}Светло-коричневый\
				\n{A9C4E4}5 - {FF7F00}Оранжевый\
				\n{A9C4E4}6 - {FFFF00}Жёлтый\
				\n{A9C4E4}7 - {3FFF3F}Светло-зелёный", strdln);
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}8 - {00FF00}Зелёный\
				\n{A9C4E4}9 - {00BF00}Тёмно-зелёный\
				\n{A9C4E4}10 - {00FFFF}Бирюзовый\
				\n{A9C4E4}11 - {00BFFF}Голубой", strdln);
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}12 - {3F3FFF}Светло-синий\
				\n{A9C4E4}13 - {0000FF}Синий\
				\n{A9C4E4}14 - {7F3FFF}Светло-фиолетовый\
				\n{A9C4E4}15 - {7F00FF}Фиолетовый", strdln);
				format(strdln, sizeof(strdln), "%s\n{A9C4E4}16 - {FF00FF}Сиреневый\
				\n{A9C4E4}17 - {7F7F7F}Серый\
				\n{A9C4E4}18 - {FFFFFF}Белый\
				\n{A9C4E4}19 - {333333}Чёрный", strdln);
				ShowPlayerDialog(playerid, 2, 0, "Цвет:", strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new idx22 = idx;
			new result[256];
			while ((idx22 < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				if (cmdtext[idx22] == 123 && cmdtext[idx22 + 1] == 44)
				{
					result[idx - offset] = cmdtext[idx22];
					idx++;
					idx22++;
					idx22++;
				}
				else
				{
					result[idx - offset] = cmdtext[idx22];
					idx++;
					idx22++;
				}
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не написали сообщение !");
				return 1;
			}
			format(string, sizeof(string), "(/fmess) Админ %s [%d]: %s", RealName[playerid], playerid, result);
			print(string);
			switch(color)
			{
				case 0: format(string, sizeof(string), "{FF0000}%s", result);
				case 1: format(string, sizeof(string), "{FF3F3F}%s", result);
				case 2: format(string, sizeof(string), "{FF3F00}%s", result);
				case 3: format(string, sizeof(string), "{BF3F00}%s", result);
				case 4: format(string, sizeof(string), "{FF7F3F}%s", result);
				case 5: format(string, sizeof(string), "{FF7F00}%s", result);
				case 6: format(string, sizeof(string), "{FFFF00}%s", result);
				case 7: format(string, sizeof(string), "{3FFF3F}%s", result);
				case 8: format(string, sizeof(string), "{00FF00}%s", result);
				case 9: format(string, sizeof(string), "{00BF00}%s", result);
				case 10: format(string, sizeof(string), "{00FFFF}%s", result);
				case 11: format(string, sizeof(string), "{00BFFF}%s", result);
				case 12: format(string, sizeof(string), "{3F3FFF}%s", result);
				case 13: format(string, sizeof(string), "{0000FF}%s", result);
				case 14: format(string, sizeof(string), "{7F3FFF}%s", result);
				case 15: format(string, sizeof(string), "{7F00FF}%s", result);
				case 16: format(string, sizeof(string), "{FF00FF}%s", result);
				case 17: format(string, sizeof(string), "{7F7F7F}%s", result);
				case 18: format(string, sizeof(string), "{FFFFFF}%s", result);
				case 19: format(string, sizeof(string), "{333333}%s", result);
			}
			SendClientMessageToAll(COLOR_WHITE, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/percl", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /percl [ид игрока/часть ника] [ид разрешения]");
				SendClientMessage(playerid, COLOR_GRAD2, " (0- отменить разрешение, 1- создать клан, 2- изменить название клана,");
				SendClientMessage(playerid, COLOR_GRAD2, " 3- смена главы клана, 4- удалить клан, 5- просмотреть разрешение)");
				return 1;
			}
			new para1, dopper;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /percl [ид игрока/часть ника] [ид разрешения]");
				SendClientMessage(playerid, COLOR_GRAD2, " (0- отменить разрешение, 1- создать клан, 2- изменить название клана,");
				SendClientMessage(playerid, COLOR_GRAD2, " 3- смена главы клана, 4- удалить клан, 5- просмотреть разрешение)");
				return 1;
			}
			dopper = strval(tmp);
			if (dopper < 0 || dopper > 5)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид развешения от 0 до 4 или 5 !");
				return 1;
			}
			if(IsPlayerConnected(para1))
			{
				if (dopper == 5)
				{
					switch(razresh[para1])
					{
						case 0: format(string, sizeof(string), " Игрок %s [%d] - нет разрешения.", RealName[para1], para1);
						case 1: format(string, sizeof(string), " Игрок %s [%d] - разрешение на создание клана.", RealName[para1], para1);
						case 2: format(string, sizeof(string), " Игрок %s [%d] - разрешение на изменение названия клана.", RealName[para1], para1);
						case 3: format(string, sizeof(string), " Игрок %s [%d] - разрешение на смену главы клана.", RealName[para1], para1);
						case 4: format(string, sizeof(string), " Игрок %s [%d] - разрешение на удаление клана.", RealName[para1], para1);
					}
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					printf(" *** Админ %s просмотрел разрешение управления кланом игрока %s", RealName[playerid], RealName[para1]);
					return 1;
				}
				if (dopper == 0 && razresh[para1] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Разрешение уже отменено !");
					return 1;
				}
				if (dopper == razresh[para1])
				{
					SendClientMessage(playerid, COLOR_RED, " Ид развешения уже в действии !");
					return 1;
				}
				if (dopper == 0)
				{
					razresh[para1] = dopper;
					format(string, sizeof(string), " *** Админ %s отменил игроку %s [%d] разрешение управления кланом.", RealName[playerid], RealName[para1], para1);
					print(string);
					SendAdminMessage(COLOR_RED, string);
					if (PlayerInfo[para1][pAdmin] == 0)
					{
						format(string, sizeof(string), " *** Админ %s отменил Вам разрешение управления кланом.", RealName[playerid]);
						SendClientMessage(para1, COLOR_RED, string);
					}
				}
				if (dopper == 1)
				{
					if (PGang[para1] > 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя, игрок уже состоит в клане !");
						return 1;
					}
					if (GetPVarInt(para1, "PlMon") < 1000000)
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя, у игрока недостаточно денег !");
						return 1;
					}
					razresh[para1] = dopper;
					format(string, sizeof(string), " *** Админ %s дал игроку %s [%d] разрешение на создание клана.", RealName[playerid], RealName[para1], para1);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
					if (PlayerInfo[para1][pAdmin] == 0)
					{
						format(string, sizeof(string), " *** Админ %s дал Вам разрешение на создание клана.", RealName[playerid]);
						SendClientMessage(para1, COLOR_GREEN, string);
					}
				}
				if (dopper == 2)
				{
					if (PGang[para1] == 0 || PGang[para1] == -600 || GangLvl[para1] != 6)
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя, игрок не состоит в клане, или не является главой клана !");
						return 1;
					}
					razresh[para1] = dopper;
					format(string, sizeof(string), " *** Админ %s дал игроку %s [%d] разрешение на изменение названия клана.", RealName[playerid], RealName[para1], para1);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
					if (PlayerInfo[para1][pAdmin] == 0)
					{
						format(string, sizeof(string), " *** Админ %s дал Вам разрешение на изменение названия клана.", RealName[playerid]);
						SendClientMessage(para1, COLOR_GREEN, string);
					}
				}
				if (dopper == 3)
				{
					if (PGang[para1] == 0 || PGang[para1] == -600 || GangLvl[para1] != 6)
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя, игрок не состоит в клане, или не является главой клана !");
						return 1;
					}
					razresh[para1] = dopper;
					format(string, sizeof(string), " *** Админ %s дал игроку %s [%d] разрешение на смену главы клана.", RealName[playerid], RealName[para1], para1);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
					if (PlayerInfo[para1][pAdmin] == 0)
					{
						format(string, sizeof(string), " *** Админ %s дал Вам разрешение на смену главы клана.", RealName[playerid]);
						SendClientMessage(para1, COLOR_GREEN, string);
					}
				}
				if (dopper == 4)
				{
					if (PGang[para1] == 0 || PGang[para1] == -600 || GangLvl[para1] != 6)
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя, игрок не состоит в клане, или не является главой клана !");
						return 1;
					}
					razresh[para1] = dopper;
					format(string, sizeof(string), " *** Админ %s дал игроку %s [%d] разрешение на удаление клана.", RealName[playerid], RealName[para1], para1);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
					if (PlayerInfo[para1][pAdmin] == 0)
					{
						format(string, sizeof(string), " *** Админ %s дал Вам разрешение на удаление клана.", RealName[playerid]);
						SendClientMessage(para1, COLOR_GREEN, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/banakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 1)
    	{
   			new data2[53],dopper;
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /banakk [имя аккаунта] [причина]");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
#if (MOD90INS == 0)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))
			{
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
#endif
#if (MOD90INS == 1)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
			{//проверим регистрацию в SQLite
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
					return 1;
				}
				else
				{
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
#if (MOD90INS == 0)
			new File: UserFile = fopen(string, io_read);//чтение аккаунта
			new key[ 256 ] , val[ 256 ];
			new Data[ 256 ];
			while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
				if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
				if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
				if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
				if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
				if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
				if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
				if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
				if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
				if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
				if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
				if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
				if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
				if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
				if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
				if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//				if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//				if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//				if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//				if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//				if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//				if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//				if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//				if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//				if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//				if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//				if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
				if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
				if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
				if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
				if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
				if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
				if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
				if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
				if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
				if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
				if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
				if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
				if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
				if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
				if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
				if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
				if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
				if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
				if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
				if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
				if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
				if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
				if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
				if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
				if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
				if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
				if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
			}
			fclose(UserFile);
			strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
			strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
			strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
#endif
#if (MOD90INS == 1)
			new mgrakk = 0;
			if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
			{
				mgrakk = 1;
				new File: UserFile = fopen(string, io_read);//чтение аккаунта
			    new key[ 256 ] , val[ 256 ];
			    new Data[ 256 ];
				while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
					if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
					if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
					if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    	if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    	if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
			        if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
			        if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
			        if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
			        if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
			        if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
			        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
			        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
			        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
			        if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
			        if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
			        if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
			        if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			        if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			        if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			        if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			        if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			        if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			        if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			        if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			        if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			        if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			        if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			        if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
			        if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
			        if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
			        if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
			        if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
			        if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
			        if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
			        if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
			        if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
			        if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
			        if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
			        if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
			        if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
			        if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
			        if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
			        if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
			        if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
			        if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
			        if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
			        if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
			        if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
					if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
			        if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
			        if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
			        if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
			        if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
			        if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
                }
                fclose(UserFile);
				strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
				strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
				strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
			}
			else//иначе: (если аккаунт зарегистрирован в SQLite)
			{
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Ошибка чтения аккаунта игрока из БД !");
					return 1;
				}
				else//иначе: (если аккаунт зарегистрирован в БД)
				{
					new buffer[32];//читаем данные из БД
					db_get_field(querydb[playerid], 7, adrip, 256);//IPAdr
					db_get_field(querydb[playerid], 9, buffer, 32); data2[1] = strval(buffer);//AdminLevel
					db_get_field(querydb[playerid], 21, buffer, 32); data2[13] = strval(buffer);//Lock
					db_get_field(querydb[playerid], 22, buffer, 32); data2[14] = strval(buffer);//Gang
					db_get_field(querydb[playerid], 23, buffer, 32); data2[15] = strval(buffer);//GangLvl
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
   				if(IsPlayerConnected(i))
		    	{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
			new fadm;
			if(data2[1] < 0)
			{
				fadm = data2[1] * -1;
			}
			else
			{
				fadm = data2[1];
			}
			if(fadm >= 1 && (PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 3))//проверка аккаунта на админку
			{
				if(fadm == 5)//подмена 5-го левела на 4-й
				{
					dopper = 4;
				}
				else
				{
					dopper = fadm;
				}
				format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] - админ %d LVL !", akk, dopper);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			if(data2[13] == 1)//если аккаунт был заблокирован, то:
			{
				format(ssss,sizeof(ssss)," Аккаунт игрока [%s] уже заблокирован (забанен) !", akk);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			data2[13] = 1;//блокировка аккаунта
			strdel(ssss, 0, 256);//сборка RCON-команды бана
			strcat(ssss, "banip ");
			strcat(ssss, adrip);
			SendRconCommand(ssss);//RCON-команда бана
			SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			new gngakkrd = 0;
			new string888[256];
			format(string888,sizeof(string888),"gangs/players/%s.ini",akk);
			if(fexist(string888))//читаем аккаунт из системы кланов (если файл существует)
			{
				gngakkrd = 1;
				new string333[256];
				format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
				new File: UserFile333 = fopen(string333, io_read);//чтение файла
				new key333[ 256 ] , val333[ 256 ];
				new Data333[ 256 ];
				while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
				{
					key333 = ini_GetKey( Data333 );
					if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
					if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
				}
				fclose(UserFile333);
			}
//---------------------------------- конец -------------------------------------
#if (MOD90INS == 0)
			new File: hFile = fopen(string, io_write);//запись изменённого аккаунта
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
				format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
				format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
				format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
				format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
				format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
				format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
				format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
				format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
				format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
				format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
				format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
				format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//				format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//				format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//				format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//				format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//				format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//				format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//				format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//				format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//				format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//				format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//				format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
				fclose(hFile);
			}
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			if(gngakkrd == 1)
			{
				fremove(string888);
			}
//---------------------------------- конец -------------------------------------
#endif
#if (MOD90INS == 1)
			if(mgrakk == 1)//если аккаунт был зарегистрирован в fopen, то:
			{
				format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", akk);//миграция аккаунта в БД, создаём запрос БД
				db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

				format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
				format(strdln, sizeof(strdln), "sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
				format(strdln, sizeof(strdln), "sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
				format(strdln, sizeof(strdln), "sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
				format(strdln, sizeof(strdln), "sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
				format(strdln, sizeof(strdln), "sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
				format(strdln, sizeof(strdln), "sVALUES (1,'%s','%s','%s',", strdln, akk,igkey,tdreg);//IDCopy,Name,Key,TDReg
				format(strdln, sizeof(strdln), "s0,0,0,'%s',", strdln, adrip);//DEndConD,DEndConM,DEndConY,IPAdr
				format(strdln, sizeof(strdln), "s%d,%d,%d,", strdln, data2[0],data2[1],data2[2]);//MinLog,AdminLevel,AdminShadow
				format(strdln, sizeof(strdln), "s%d,%d,%d,", strdln, data2[3],data2[4],data2[5]);//AdminLive,Registered,Prison
				format(strdln, sizeof(strdln), "s%d,%d,%d,", strdln, data2[6],data2[7],data2[8]);//Prisonsec,Muted,Mutedsec
				format(strdln, sizeof(strdln), "s%d,%d,%d,", strdln, data2[9],data2[10],data2[11]);//Money,Kills,Deaths
				format(strdln, sizeof(strdln), "s%d,%d,%d,%d,", strdln, data2[12],data2[13],data2[14],data2[15]);//VIP,Lock,Gang,GangLvl
				format(strdln, sizeof(strdln), "s%d,%d,%d,%d,", strdln, data2[27],data2[28],data2[29],data2[30]);//Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3
				format(strdln, sizeof(strdln), "s%d,%d,%d,%d,", strdln, data2[31],data2[32],data2[33],data2[34]);//Weapon_slot4,Weapon_slot5,Weapon_slot6,Weapon_slot7
				format(strdln, sizeof(strdln), "s%d,%d,%d,%d,", strdln, data2[35],data2[36],data2[37],data2[38]);//Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11
				format(strdln, sizeof(strdln), "s%d,%d,%d,%d,", strdln, data2[39],data2[40],data2[41],data2[42]);//Weapon_slot12,Ammo_slot0,Ammo_slot1,Ammo_slot2
				format(strdln, sizeof(strdln), "s%d,%d,%d,%d,", strdln, data2[43],data2[44],data2[45],data2[46]);//Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6
				format(strdln, sizeof(strdln), "s%d,%d,%d,%d,", strdln, data2[47],data2[48],data2[49],data2[50]);//Ammo_slot7,Ammo_slot8,Ammo_slot9,Ammo_slot10
				format(strdln, sizeof(strdln), "s%d,%d)", strdln, data2[51],data2[52]);//Ammo_slot11,Ammo_slot12
				db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				if(gngakkrd == 1)
				{
					fremove(string888);
				}
//---------------------------------- конец -------------------------------------
				if(fexist(string))
				{
					fremove(string);//удаляем аккаунт из fopen
				}
			}
			else//иначе: (если аккаунт был зарегистрирован в SQLite)
			{
				if(gngakkrd == 1)//если был найден аккаунт клана, то:
				{
					format(strdln, sizeof(strdln), "UPDATE Players SET Lock = %d,",data2[13]);//создаём запрос БД
					format(strdln, sizeof(strdln), "%sGang = %d,GangLvl = %d WHERE (Name = '%s')", strdln, data2[14],data2[15],akk);
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД

					if(gngakkrd == 1)
					{
						fremove(string888);
					}
				}
				else//иначе: (если НЕ был найден аккаунт клана)
				{
					format(strdln, sizeof(strdln), "UPDATE Players SET Lock = %d WHERE (Name = '%s')",data2[13],akk);//создаём запрос БД
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
				}
			}
#endif
			format(ssss,sizeof(ssss)," *** Админ %s забанил аккаунт игрока [%s] ( IP: [%s] ) , причина: %s", RealName[playerid], akk, adrip, result);
			print(ssss);
			SendAdminMessage(COLOR_RED, ssss);
			format(ssss,sizeof(ssss)," *** Админ %s забанил аккаунт игрока [%s] , причина: %s", RealName[playerid], akk, result);
			for(new i=0;i<MAX_PLAYERS;i++)//отправка сообщения НЕ админам
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] == 0)
				{
					SendClientMessage(i, COLOR_RED, ssss);
				}
			}

			new reason[128];
    		if(!strlen(result))//делаем отметку, если причина не указана
			{
				format(reason, 128, "* Причина не указана. (команда /banakk) Админ: [ %s ]", RealName[playerid]);
			}
			else
			{
				format(reason, 128, "%s (команда /banakk) Админ: [ %s ]", result, RealName[playerid]);
			}

			gettime(timecor[0], timecor[1]);
			getdate(timecor[2], timecor[3], timecor[4]);
			TimCor();//коррекция времени
			DatCor();//коррекция даты

			new string999[256], stringdop[256];
			format(stringdop,256,"%s [%02d:%02d | %02d/%02d/%04d] - %s",adrip,timecor[0],timecor[1],timecor[4],timecor[3],timecor[2],reason);
			format(string999,sizeof(string999),"banlist/players/%s.ini",akk);
			new File: hFile44 = fopen(string999, io_write);//запись файла бан-листа
			if (hFile44)
			{
				new var[256];
				format(var, 256, "Data=%s\n",stringdop);fwrite(hFile44, var);
				format(var, 256, "IDFile=%d\n",0);fwrite(hFile44, var);
				fclose(hFile44);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/banakktm", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 1)
    	{
   			new data2[53],dopper,csut,csut22;
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /banakktm [имя аккаунта] [число суток] [причина]");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			csut = strval(tmp);
			if(csut < 1 || csut > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Число суток бана должно быть от 1 до 25 !");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
#if (MOD90INS == 0)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))
			{
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
#endif
#if (MOD90INS == 1)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
			{//проверим регистрацию в SQLite
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
					return 1;
				}
				else
				{
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
#if (MOD90INS == 0)
			new File: UserFile = fopen(string, io_read);//чтение аккаунта
			new key[ 256 ] , val[ 256 ];
			new Data[ 256 ];
			while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
				if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
				if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
				if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
				if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
				if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
				if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
				if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
				if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
				if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
				if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
				if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
				if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
				if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
				if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
				if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//				if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//				if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//				if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//				if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//				if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//				if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//				if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//				if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//				if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//				if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//				if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
				if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
				if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
				if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
				if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
				if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
				if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
				if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
				if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
				if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
				if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
				if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
				if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
				if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
				if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
				if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
				if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
				if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
				if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
				if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
				if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
				if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
				if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
				if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
				if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
				if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
				if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
			}
			fclose(UserFile);
			strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
			strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
			strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
#endif
#if (MOD90INS == 1)
			new mgrakk = 0;
			if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
			{
				mgrakk = 1;
				new File: UserFile = fopen(string, io_read);//чтение аккаунта
			    new key[ 256 ] , val[ 256 ];
			    new Data[ 256 ];
				while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
					if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
					if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
					if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    	if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    	if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
			        if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
			        if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
			        if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
			        if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
			        if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
			        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
			        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
			        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
			        if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
			        if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
			        if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
			        if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			        if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			        if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			        if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			        if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			        if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			        if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			        if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			        if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			        if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			        if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			        if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
			        if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
			        if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
			        if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
			        if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
			        if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
			        if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
			        if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
			        if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
			        if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
			        if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
			        if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
			        if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
			        if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
			        if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
			        if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
			        if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
			        if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
			        if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
			        if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
			        if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
					if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
			        if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
			        if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
			        if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
			        if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
			        if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
                }
                fclose(UserFile);
				strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
				strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
				strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
			}
			else//иначе: (если аккаунт зарегистрирован в SQLite)
			{
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Ошибка чтения аккаунта игрока из БД !");
					return 1;
				}
				else//иначе: (если аккаунт зарегистрирован в БД)
				{
					new buffer[32];//читаем данные из БД
					db_get_field(querydb[playerid], 7, adrip, 256);//IPAdr
					db_get_field(querydb[playerid], 9, buffer, 32); data2[1] = strval(buffer);//AdminLevel
					db_get_field(querydb[playerid], 21, buffer, 32); data2[13] = strval(buffer);//Lock
					db_get_field(querydb[playerid], 22, buffer, 32); data2[14] = strval(buffer);//Gang
					db_get_field(querydb[playerid], 23, buffer, 32); data2[15] = strval(buffer);//GangLvl
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
   				if(IsPlayerConnected(i))
		    	{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
			new fadm;
			if(data2[1] < 0)
			{
				fadm = data2[1] * -1;
			}
			else
			{
				fadm = data2[1];
			}
			if(fadm >= 1 && (PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 3))//проверка аккаунта на админку
			{
				if(fadm == 5)//подмена 5-го левела на 4-й
				{
					dopper = 4;
				}
				else
				{
					dopper = fadm;
				}
				format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] - админ %d LVL !", akk, dopper);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			if(data2[13] == 1)//если аккаунт был заблокирован, то:
			{
				format(ssss,sizeof(ssss)," Аккаунт игрока [%s] уже заблокирован (забанен) !", akk);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			data2[13] = 1;//блокировка аккаунта
			strdel(ssss, 0, 256);//сборка RCON-команды бана
			strcat(ssss, "banip ");
			strcat(ssss, adrip);
			SendRconCommand(ssss);//RCON-команда бана
			SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			new gngakkrd = 0;
			new string888[256];
			format(string888,sizeof(string888),"gangs/players/%s.ini",akk);
			if(fexist(string888))//читаем аккаунт из системы кланов (если файл существует)
			{
				gngakkrd = 1;
				new string333[256];
				format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
				new File: UserFile333 = fopen(string333, io_read);//чтение файла
				new key333[ 256 ] , val333[ 256 ];
				new Data333[ 256 ];
				while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
				{
					key333 = ini_GetKey( Data333 );
					if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
					if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
				}
				fclose(UserFile333);
			}
//---------------------------------- конец -------------------------------------
#if (MOD90INS == 0)
			new File: hFile = fopen(string, io_write);//запись изменённого аккаунта
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
				format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
				format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
				format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
				format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
				format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
				format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
				format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
				format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
				format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
				format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
				format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
				format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//				format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//				format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//				format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//				format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//				format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//				format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//				format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//				format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//				format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//				format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//				format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
				fclose(hFile);
			}
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			if(gngakkrd == 1)
			{
				fremove(string888);
			}
//---------------------------------- конец -------------------------------------
#endif
#if (MOD90INS == 1)
			if(mgrakk == 1)//если аккаунт был зарегистрирован в fopen, то:
			{
				format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", akk);//миграция аккаунта в БД, создаём запрос БД
				db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

				format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
				format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
				format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
				format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
				format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, akk,igkey,tdreg);//IDCopy,Name,Key,TDReg
				format(strdln, sizeof(strdln), "%s0,0,0,'%s',", strdln, adrip);//DEndConD,DEndConM,DEndConY,IPAdr
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[0],data2[1],data2[2]);//MinLog,AdminLevel,AdminShadow
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[3],data2[4],data2[5]);//AdminLive,Registered,Prison
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[6],data2[7],data2[8]);//Prisonsec,Muted,Mutedsec
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[9],data2[10],data2[11]);//Money,Kills,Deaths
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[12],data2[13],data2[14],data2[15]);//VIP,Lock,Gang,GangLvl
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[27],data2[28],data2[29],data2[30]);//Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[31],data2[32],data2[33],data2[34]);//Weapon_slot4,Weapon_slot5,Weapon_slot6,Weapon_slot7
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[35],data2[36],data2[37],data2[38]);//Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[39],data2[40],data2[41],data2[42]);//Weapon_slot12,Ammo_slot0,Ammo_slot1,Ammo_slot2
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[43],data2[44],data2[45],data2[46]);//Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[47],data2[48],data2[49],data2[50]);//Ammo_slot7,Ammo_slot8,Ammo_slot9,Ammo_slot10
				format(strdln, sizeof(strdln), "%s%d,%d)", strdln, data2[51],data2[52]);//Ammo_slot11,Ammo_slot12
				db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				if(gngakkrd == 1)
				{
					fremove(string888);
				}
//---------------------------------- конец -------------------------------------
				if(fexist(string))
				{
					fremove(string);//удаляем аккаунт из fopen
				}
			}
			else//иначе: (если аккаунт был зарегистрирован в SQLite)
			{
				if(gngakkrd == 1)//если был найден аккаунт клана, то:
				{
					format(strdln, sizeof(strdln), "UPDATE Players SET Lock = %d,",data2[13]);//создаём запрос БД
					format(strdln, sizeof(strdln), "%sGang = %d,GangLvl = %d WHERE (Name = '%s')", strdln, data2[14],data2[15],akk);
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД

					if(gngakkrd == 1)
					{
						fremove(string888);
					}
				}
				else//иначе: (если НЕ был найден аккаунт клана)
				{
					format(strdln, sizeof(strdln), "UPDATE Players SET Lock = %d WHERE (Name = '%s')",data2[13],akk);//создаём запрос БД
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
				}
			}
#endif
			format(ssss,sizeof(ssss)," *** Админ %s забанил аккаунт игрока [%s] на %d суток ( IP: [%s] ) , причина: %s", RealName[playerid], akk, csut, adrip, result);
			print(ssss);
			SendAdminMessage(COLOR_RED, ssss);
			format(ssss,sizeof(ssss)," *** Админ %s забанил аккаунт игрока [%s] на %d суток , причина: %s", RealName[playerid], akk, csut, result);
			for(new i=0;i<MAX_PLAYERS;i++)//отправка сообщения НЕ админам
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] == 0)
				{
					SendClientMessage(i, COLOR_RED, ssss);
				}
			}

			new reason[128];
    		if(!strlen(result))//делаем отметку, если причина не указана
			{
				format(reason, 128, "* Причина не указана. (/banakktm на %d суток) Админ: [ %s ]", csut, RealName[playerid]);
			}
			else
			{
				format(reason, 128, "%s (/banakktm на %d суток) Админ: [ %s ]", result, csut, RealName[playerid]);
			}

			gettime(timecor[0], timecor[1]);
			getdate(timecor[2], timecor[3], timecor[4]);
			TimCor();//коррекция времени
			DatCor();//коррекция даты

			new string999[256];
			csut22 = ProcUnban(csut);//вычисление дня разбана
			new doplll, doplll22, doplll33;//запись ид-файла временного бана
			doplll = 1;//переменная цикла
			doplll22 = 0;//маркерная переменная
			while(doplll < 1001)//создаём неполный цикл
			{
				format(string999,sizeof(string999),"bantime/%d.ini",doplll);
				if(!fexist(string999))//если файла с именем ид-переменной (doplll) нету, то:
				{//создаём такой файл
					doplll22 = 1;//устанавливаем маркерную переменную
					new File: hFile55 = fopen(string999, io_write);//запись файла
					if (hFile55)
					{
						new var[64];
						format(var, 64, "Login=%s\n",akk);fwrite(hFile55, var);
						format(var, 64, "IPAdr=%s\n",adrip);fwrite(hFile55, var);
						format(var, 64, "Dataunban=%d\n",csut22);fwrite(hFile55, var);
						fclose(hFile55);
					}
					printf("[BanTime] Временному бану игрока [%s] был присвоен ид [%d] .", akk, doplll);
					break;//завершаем неполный цикл
				}
				doplll++;//инкрементируем переменную цикла, и продолжаем цикл
			}
			doplll33 = doplll;//подготовка ид-файла к записи в бан-лист
			if(doplll22 == 0)//если после окончания цикла, маркерная переменная НЕ была установлена, то:
			{//передаём админам сообщение о переполнении таблицы временных банов
				doplll33 = 0;//ид-файла = 0 (файл НЕ создан)
				print("[BanTime] Превышен лимит файлов в таблице временных банов !!!");
				SendAdminMessage(COLOR_RED, " * Превышен лимит файлов в таблице временных банов !!!");
				print("[BanTime] Временный бан НЕ был сохранён !!!");
				SendAdminMessage(COLOR_RED, " * Временный бан НЕ был сохранён !!!");
			}

			new stringdop[256];
			format(stringdop,256,"%s [%02d:%02d | %02d/%02d/%04d] - %s",adrip,timecor[0],timecor[1],timecor[4],timecor[3],timecor[2],reason);
			format(string999,sizeof(string999),"banlist/players/%s.ini",akk);
			new File: hFile44 = fopen(string999, io_write);//запись файла бан-листа
			if (hFile44)
			{
				new var[256];
				format(var, 256, "Data=%s\n",stringdop);fwrite(hFile44, var);
				format(var, 256, "IDFile=%d\n",doplll33);fwrite(hFile44, var);
				fclose(hFile44);
			}

		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/line", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /line 0 , или");
				SendClientMessage(playerid, COLOR_GRAD2, " /line [трасса(1-5)] [0-отключить, 1-подключить] ,");
				SendClientMessage(playerid, COLOR_GRAD2, " или /line 100 - отключить ВСЕ трассы");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if ((para1 < 0 || para1 > 5) && para1 != 100)
			{
				SendClientMessage(playerid, COLOR_RED, " Номер трассы от 1 до 5 , или 0 , или 100 !");
				return 1;
			}
			if (para1 == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, " --- Статистика трасс ---");
				format(string,sizeof(string)," Тр.1-[%d] Тр.2-[%d] Тр.3-[%d] Тр.4-[%d] Тр.5-[%d]", LineStat[1], LineStat[2],
				LineStat[3], LineStat[4], LineStat[5]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				printf(" *** Админ %s просмотрел статистику трасс.", RealName[playerid]);
				return 1;
			}
			if (para1 == 100)
			{
				LineOff1();
				LineOff2();
				LineOff3();
				LineOff4();
				LineOff5();
				LineStat[1] = 0;
				LineStat[2] = 0;
				LineStat[3] = 0;
				LineStat[4] = 0;
				LineStat[5] = 0;
				SaveLine();//запись статуса трасс
				format(string,sizeof(string)," *** Админ %s отключил ВСЕ трассы.", RealName[playerid]);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [0-отключить, 1-подключить] !");
				return 1;
			}
			new stat;
			stat = strval(tmp);
			if (stat < 0 || stat > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " 0-отключить, 1-подключить !");
				return 1;
			}
			if (stat == LineStat[para1] && stat == 0)
			{
				format(string,sizeof(string)," Трасса %d уже отключена !", para1);
				SendClientMessage(playerid, COLOR_RED, string);
				return 1;
			}
			if (stat == LineStat[para1] && stat == 1)
			{
				format(string,sizeof(string)," Трасса %d уже подключена !", para1);
				SendClientMessage(playerid, COLOR_RED, string);
				return 1;
			}
			if (stat == 0)
			{
				LineStat[para1] = stat;
				SaveLine();//запись статуса трасс
				format(string,sizeof(string)," *** Админ %s отключил трассу %d .", RealName[playerid], para1);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				if(para1 == 1) { LineOff1(); }
				if(para1 == 2) { LineOff2(); }
				if(para1 == 3) { LineOff3(); }
				if(para1 == 4) { LineOff4(); }
				if(para1 == 5) { LineOff5(); }
				return 1;
			}
			if (stat == 1)
			{
				LineStat[para1] = stat;
				SaveLine();//запись статуса трасс
				format(string,sizeof(string)," *** Админ %s подключил трассу %d .", RealName[playerid], para1);
				print(string);
				SendClientMessageToAll(COLOR_GREEN, string);
				if(para1 == 1) { LineOn1(); }
				if(para1 == 2) { LineOn2(); }
				if(para1 == 3) { LineOn3(); }
				if(para1 == 4) { LineOn4(); }
				if(para1 == 5) { LineOn5(); }
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if (strcmp("/untouch", cmdtext, true, 10) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] == 5)
			{
				SendClientMessage(playerid, COLOR_RED, " У Вас уже есть уровень главного (неприкасаемого) админа сервера !");
				return 1;
			}
			new dopper;
			format(string, sizeof(string), " *** Игрок %s [%d] сделал себя главным (неприкасаемым) админом на сервере.", RealName[playerid], playerid);
			print(string);
			SendClientMessage(playerid,COLOR_GREY," *** Вы сделали себя главным (неприкасаемым) админом на сервере.");
			PlayerInfo[playerid][pVIP] = 0;//убрать VIP
			dopper = PlayerInfo[playerid][pAdmin];
			PlayerInfo[playerid][pAdmin] = 5;
			AdmUpdate(RealName[playerid], PlayerInfo[playerid][pAdmin], 1);
			new twenlim = 0;
			new restlim = 0;
			Fmadmins(1, RealName[playerid], 0, twenlim, restlim);
			if (dopper <= 2)
			{
				PlayerInfo[playerid][pAdmlive] = 1;//установить бессмертие
				SendClientMessage(playerid, COLOR_GREEN, " Бессмертие включено.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/openpm", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /openpm [0-запретить приём PM, 1-разрешить приём PM]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if (para1 < 0 || para1 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " [0-запретить приём PM, 1-разрешить приём PM] !");
				return 1;
			}
			if (PlayerInfo[playerid][pAdmshad] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " У скрытого админа данная функция не работает,");
				SendClientMessage(playerid, COLOR_RED, " т.к. приём PM от игроков уже разрешён !");
				return 1;
			}
			if (PlayerInfo[playerid][pVIP] == 0 && para1 == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Приём PM от игроков уже запрещён !");
				return 1;
			}
			if (PlayerInfo[playerid][pVIP] == 4 && para1 == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Приём PM от игроков уже разрешён !");
				return 1;
			}
			if(para1 == 0)
			{
				PlayerInfo[playerid][pVIP] = 0;
				format(string, sizeof(string), " *** Админ %s запретил для себя приём PM от игроков.", RealName[playerid]);
				print(string);
				SendAdminMessage(COLOR_RED, string);
			}
			else
			{
				PlayerInfo[playerid][pVIP] = 4;
				format(string, sizeof(string), " *** Админ %s разрешил для себя приём PM от игроков.", RealName[playerid]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/admakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 4)
    	{
   			new data2[54];
#if (MOD90INS == 1)
   			new dddata2[3];
#endif
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /admakk [имя аккаунта] [левел(0-4)] ( дополнительно:");
				SendClientMessage(playerid, COLOR_GRAD2, " [VIP(0-2), депортация(3), разрешение приёма PM(4)] [скрытость] [сумма] ),");
#if (MOD90INS == 1)
				SendClientMessage(playerid, COLOR_GRAD2, " или /admakk [имя аккаунта] 98 - экспортировать аккаунт в файл,");
#endif
				SendClientMessage(playerid, COLOR_GRAD2, " или /admakk [имя аккаунта] 99 [пароль] - сменить пароль,");
				SendClientMessage(playerid, COLOR_GRAD2, " или /admakk [имя аккаунта] 100 - просмотреть аккаунт");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
#if (MOD90INS == 0)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))
			{
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
#endif
#if (MOD90INS == 1)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
			{//проверим регистрацию в SQLite
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
					return 1;
				}
				else
				{
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
			new entpass[256], level, oldlevel, vipur1, vipur2;
			new scrit1, scrit2, summ1, summ2, dopper;
			dopper = 0;
			tmp = strtok(cmdtext, idx);
#if (MOD90INS == 0)
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [левел(0-4), или 99, или 100] ( дополнительно: [VIP(0-2),");
				SendClientMessage(playerid, COLOR_RED, " депортация(3), разрешение приёма PM(4)] [скрытость] [сумма] ) !");
				return 1;
			}
			level = strval(tmp);
			if((level < 0 || level > 4) && level != 99 && level != 100)
			{
				SendClientMessage(playerid, COLOR_RED, " Уровень админа должен быть от 0 до 4 , (или 99, или 100) !");
				return 1;
			}
#endif
#if (MOD90INS == 1)
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [левел(0-4), или 98, или 99, или 100] ( дополнительно: [VIP(0-2),");
				SendClientMessage(playerid, COLOR_RED, " депортация(3), разрешение приёма PM(4)] [скрытость] [сумма] ) !");
				return 1;
			}
			level = strval(tmp);
			if((level < 0 || level > 4) && level != 98 && level != 99 && level != 100)
			{
				SendClientMessage(playerid, COLOR_RED, " Уровень админа должен быть от 0 до 4 , (или 98, или 99, или 100) !");
				return 1;
			}
#endif
			if(level == 99)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " /admakk [имя аккаунта] 99 [пароль] !");
					return 1;
				}
 				if(strlen(tmp) < 3 || strlen(tmp) > 20)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина пароля должна быть от 3 до 20 символов !");
					return 1;
				}
 				if(PassControl(tmp) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " В пароле можно использовать ТОЛЬКО латинские");
					SendClientMessage(playerid, COLOR_RED, " символы: от a до z , от A до Z , и цифры от 0 до 9 !");
					return 1;
				}
				strdel(entpass, 0, 256);
				strcat(entpass, tmp);
			}
			else
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					vipur1 = 0;
				}
				else
				{
					vipur1 = 1;
					vipur2 = strval(tmp);
					if(vipur2 < 0 || vipur2 > 4)
					{
	 					SendClientMessage(playerid, COLOR_RED, " Параметр должен быть от 0 до 4 !");
						return 1;
					}
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					scrit1 = 0;
				}
				else
				{
					scrit1 = 1;
					scrit2 = strval(tmp);
					if(scrit2 < 0 || scrit2 > 1)
					{
	 					SendClientMessage(playerid, COLOR_RED, " Скрытость должна быть 0 или 1 !");
						return 1;
					}
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					summ1 = 0;
				}
				else
				{
					summ1 = 1;
					summ2 = strval(tmp);
				}
			}
#if (MOD90INS == 0)
			new File: UserFile = fopen(string, io_read);//чтение аккаунта
			new key[ 256 ] , val[ 256 ];
			new Data[ 256 ];
			while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
				if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
				if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
				if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
				if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
				if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
				if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
				if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
				if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
				if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
				if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
				if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
				if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
				if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
				if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
				if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//				if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//				if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//				if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//				if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//				if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//				if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//				if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//				if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//				if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//				if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//				if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
				if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
				if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
				if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
				if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
				if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
				if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
				if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
				if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
				if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
				if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
				if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
				if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
				if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
				if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
				if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
				if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
				if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
				if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
				if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
				if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
				if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
				if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
				if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
				if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
				if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
				if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
			}
			fclose(UserFile);
			strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
			strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
			strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			new gngakkrd = 0;
			new string999[256];
			format(string999,sizeof(string999),"gangs/players/%s.ini",akk);
			if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
			{
				gngakkrd = 1;
				new string333[256];
				format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
				new File: UserFile333 = fopen(string333, io_read);//чтение файла
				new key333[ 256 ] , val333[ 256 ];
				new Data333[ 256 ];
				while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
				{
					key333 = ini_GetKey( Data333 );
					if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
					if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
				}
				fclose(UserFile333);
			}
			if(gngakkrd == 1)
			{
				new File: hFile = fopen(string, io_write);//запись изменённого аккаунта
				if (hFile)
				{
					new var[32];
					format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
					format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
					format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
					format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
					format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
					format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
					format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
					format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
					format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
					format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
					format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
					format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
					format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
					format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
					format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
					format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
					format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
					format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
					format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//					format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//					format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//					format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//					format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//					format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//					format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//					format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//					format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//					format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//					format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//					format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
					fclose(hFile);
				}
				fremove(string999);
			}
//---------------------------------- конец -------------------------------------
#endif
#if (MOD90INS == 1)
			if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
			{
				new File: UserFile = fopen(string, io_read);//чтение аккаунта
			    new key[ 256 ] , val[ 256 ];
			    new Data[ 256 ];
				while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
					if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
					if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
					if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    	if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    	if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
			        if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
			        if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
			        if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
			        if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
			        if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
			        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
			        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
			        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
			        if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
			        if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
			        if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
			        if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			        if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			        if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			        if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			        if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			        if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			        if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			        if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			        if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			        if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			        if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			        if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
			        if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
			        if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
			        if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
			        if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
			        if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
			        if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
			        if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
			        if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
			        if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
			        if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
			        if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
			        if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
			        if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
			        if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
			        if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
			        if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
			        if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
			        if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
			        if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
			        if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
					if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
			        if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
			        if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
			        if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
			        if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
			        if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
                }
                fclose(UserFile);
				strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
				strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
				strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				new gngakkrd = 0;
				new string999[256];
				format(string999,sizeof(string999),"gangs/players/%s.ini",akk);
				if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
				{
					gngakkrd = 1;
					new string333[256];
					format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
					new File: UserFile333 = fopen(string333, io_read);//чтение файла
					new key333[ 256 ] , val333[ 256 ];
					new Data333[ 256 ];
					while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
					{
						key333 = ini_GetKey( Data333 );
						if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
						if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
					}
					fclose(UserFile333);
				}
//---------------------------------- конец -------------------------------------

				format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", akk);//миграция аккаунта в БД, создаём запрос БД
				db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

				format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
				format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
				format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
				format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
				format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, akk,igkey,tdreg);//IDCopy,Name,Key,TDReg
				format(strdln, sizeof(strdln), "%s0,0,0,'%s',", strdln, adrip);//DEndConD,DEndConM,DEndConY,IPAdr
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[0],data2[1],data2[2]);//MinLog,AdminLevel,AdminShadow
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[3],data2[4],data2[5]);//AdminLive,Registered,Prison
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[6],data2[7],data2[8]);//Prisonsec,Muted,Mutedsec
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[9],data2[10],data2[11]);//Money,Kills,Deaths
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[12],data2[13],data2[14],data2[15]);//VIP,Lock,Gang,GangLvl
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[27],data2[28],data2[29],data2[30]);//Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[31],data2[32],data2[33],data2[34]);//Weapon_slot4,Weapon_slot5,Weapon_slot6,Weapon_slot7
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[35],data2[36],data2[37],data2[38]);//Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[39],data2[40],data2[41],data2[42]);//Weapon_slot12,Ammo_slot0,Ammo_slot1,Ammo_slot2
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[43],data2[44],data2[45],data2[46]);//Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[47],data2[48],data2[49],data2[50]);//Ammo_slot7,Ammo_slot8,Ammo_slot9,Ammo_slot10
				format(strdln, sizeof(strdln), "%s%d,%d)", strdln, data2[51],data2[52]);//Ammo_slot11,Ammo_slot12
				db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

				dddata2[0] = 0;//обнуляем дату последнего входа на сервер (для мониторинга)
				dddata2[1] = 0;
				dddata2[2] = 0;
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				if(gngakkrd == 1)
				{
					fremove(string999);//удаляем аккаунт из системы кланов
				}
//---------------------------------- конец -------------------------------------
				if(fexist(string))
				{
					fremove(string);//удаляем аккаунт из fopen
				}
			}
			else//иначе: (если аккаунт зарегистрирован в SQLite)
			{
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Ошибка чтения аккаунта игрока из БД !");
					return 1;
				}
				else//иначе: (если аккаунт зарегистрирован в БД)
				{
					new buffer[32];//читаем данные из БД
					db_get_field(querydb[playerid], 2, igkey, 256);//Key
					db_get_field(querydb[playerid], 3, tdreg, 256);//TDReg
					db_get_field(querydb[playerid], 4, buffer, 32); dddata2[0] = strval(buffer);//DEndConD
					db_get_field(querydb[playerid], 5, buffer, 32); dddata2[1] = strval(buffer);//DEndConM
					db_get_field(querydb[playerid], 6, buffer, 32); dddata2[2] = strval(buffer);//DEndConY
					db_get_field(querydb[playerid], 7, adrip, 256);//IPAdr
					db_get_field(querydb[playerid], 8, buffer, 32); data2[0] = strval(buffer);//MinLog
					db_get_field(querydb[playerid], 9, buffer, 32); data2[1] = strval(buffer);//AdminLevel
					db_get_field(querydb[playerid], 10, buffer, 32); data2[2] = strval(buffer);//AdminShadow
					db_get_field(querydb[playerid], 11, buffer, 32); data2[3] = strval(buffer);//AdminLive
					db_get_field(querydb[playerid], 13, buffer, 32); data2[5] = strval(buffer);//Prison
					db_get_field(querydb[playerid], 14, buffer, 32); data2[6] = strval(buffer);//Prisonsec
					db_get_field(querydb[playerid], 15, buffer, 32); data2[7] = strval(buffer);//Muted
					db_get_field(querydb[playerid], 16, buffer, 32); data2[8] = strval(buffer);//Mutedsec
					db_get_field(querydb[playerid], 17, buffer, 32); data2[9] = strval(buffer);//Money
					db_get_field(querydb[playerid], 18, buffer, 32); data2[10] = strval(buffer);//Kills
					db_get_field(querydb[playerid], 19, buffer, 32); data2[11] = strval(buffer);//Deaths
					db_get_field(querydb[playerid], 20, buffer, 32); data2[12] = strval(buffer);//VIP
					db_get_field(querydb[playerid], 21, buffer, 32); data2[13] = strval(buffer);//Lock
					db_get_field(querydb[playerid], 22, buffer, 32); data2[14] = strval(buffer);//Gang
					db_get_field(querydb[playerid], 23, buffer, 32); data2[15] = strval(buffer);//GangLvl
					db_get_field(querydb[playerid], 24, buffer, 32); data2[27] = strval(buffer);//Weapon_slot0
					db_get_field(querydb[playerid], 25, buffer, 32); data2[28] = strval(buffer);//Weapon_slot1
					db_get_field(querydb[playerid], 26, buffer, 32); data2[29] = strval(buffer);//Weapon_slot2
					db_get_field(querydb[playerid], 27, buffer, 32); data2[30] = strval(buffer);//Weapon_slot3
					db_get_field(querydb[playerid], 28, buffer, 32); data2[31] = strval(buffer);//Weapon_slot4
					db_get_field(querydb[playerid], 29, buffer, 32); data2[32] = strval(buffer);//Weapon_slot5
					db_get_field(querydb[playerid], 30, buffer, 32); data2[33] = strval(buffer);//Weapon_slot6
					db_get_field(querydb[playerid], 31, buffer, 32); data2[34] = strval(buffer);//Weapon_slot7
					db_get_field(querydb[playerid], 32, buffer, 32); data2[35] = strval(buffer);//Weapon_slot8
					db_get_field(querydb[playerid], 33, buffer, 32); data2[36] = strval(buffer);//Weapon_slot9
					db_get_field(querydb[playerid], 34, buffer, 32); data2[37] = strval(buffer);//Weapon_slot10
					db_get_field(querydb[playerid], 35, buffer, 32); data2[38] = strval(buffer);//Weapon_slot11
					db_get_field(querydb[playerid], 36, buffer, 32); data2[39] = strval(buffer);//Weapon_slot12
					db_get_field(querydb[playerid], 37, buffer, 32); data2[40] = strval(buffer);//Ammo_slot0
					db_get_field(querydb[playerid], 38, buffer, 32); data2[41] = strval(buffer);//Ammo_slot1
					db_get_field(querydb[playerid], 39, buffer, 32); data2[42] = strval(buffer);//Ammo_slot2
					db_get_field(querydb[playerid], 40, buffer, 32); data2[43] = strval(buffer);//Ammo_slot3
					db_get_field(querydb[playerid], 41, buffer, 32); data2[44] = strval(buffer);//Ammo_slot4
					db_get_field(querydb[playerid], 42, buffer, 32); data2[45] = strval(buffer);//Ammo_slot5
					db_get_field(querydb[playerid], 43, buffer, 32); data2[46] = strval(buffer);//Ammo_slot6
					db_get_field(querydb[playerid], 44, buffer, 32); data2[47] = strval(buffer);//Ammo_slot7
					db_get_field(querydb[playerid], 45, buffer, 32); data2[48] = strval(buffer);//Ammo_slot8
					db_get_field(querydb[playerid], 46, buffer, 32); data2[49] = strval(buffer);//Ammo_slot9
					db_get_field(querydb[playerid], 47, buffer, 32); data2[50] = strval(buffer);//Ammo_slot10
					db_get_field(querydb[playerid], 48, buffer, 32); data2[51] = strval(buffer);//Ammo_slot11
					db_get_field(querydb[playerid], 49, buffer, 32); data2[52] = strval(buffer);//Ammo_slot12
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
			new fadm;
			if(data2[1] < 0)
			{
				fadm = data2[1] * -1;
			}
			else
			{
				fadm = data2[1];
			}
			new dopdata2;
			if(data2[14] == -600)
			{
				dopdata2 = 0;
			}
			else
			{
				dopdata2 = data2[14];
			}
#if (MOD90INS == 1)
			if(level == 98)
			{
				new locstr[128];
				format(locstr, sizeof(locstr), "players/export/%s.ini", akk);
				if(fexist(locstr))//если аккаунт уже был экспортирован, то:
				{
					fremove(locstr);//удаляем старый экспортированный аккаунт
				}
				new File: hFile = fopen(locstr, io_write);//запись экспортированного аккаунта
				if (hFile)
				{
					new var[32];
					format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
					format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
					format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
					format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
					format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
					format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
					format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
					format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
					format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
					format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
					format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
					format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
					format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
					format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
					format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
					format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
					format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
					format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
					format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//					format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//					format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//					format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//					format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//					format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//					format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//					format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//					format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//					format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//					format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//					format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
					fclose(hFile);
				}
				if(!fexist(locstr))//если аккаунт НЕ был экспортирован, то:
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка !! Аккаунт НЕ был экспортирован ! Для экспортирования");
					SendClientMessage(playerid, COLOR_RED, " аккаунта создайте путь: scriptfiles/players/export/ !");
				}
				else//иначе, (если аккаунта был экспортирован), то:
				{
					printf(" *** Админ %s экспортировал аккаунт игрока [%s] .", RealName[playerid], akk);
					format(ssss, sizeof(ssss), " Вы экспортировали аккаунт игрока [%s] .", akk);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, ssss);
				}
				return 1;
			}
#endif
			if(level == 100)
			{
				new dopdata44;
				dopdata44 = 0;
				for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
				{
	   				if(IsPlayerConnected(i))
			    	{
						if(strcmp(akk, RealName[i], false) == 0) { dopdata44 = 1; }
					}
				}
				data2[53] = 0;//депортация = 0
				if(data2[12] == 3)//если VIP = 3, то:
				{
					data2[53] = 1;//депортация = 1
				}
				printf(" *** Админ %s [%d] просмотрел аккаунт игрока %s .", RealName[playerid], playerid, akk);

				SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
				format(ssss,sizeof(ssss),"           *** Аккаунт игрока [%s] ***", akk);
				SendClientMessage(playerid, COLOR_WHITE, ssss);
				if(dopdata44 == 1)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, " Внимание !!! Аккаунт игрока On-Line !");
				}
				format(ssss,sizeof(ssss)," Время и дата регистрации: [ %s ]", tdreg);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
#if (MOD90INS == 1)
				format(ssss,sizeof(ssss)," Дата последнего входа на сервер: [ %02d/%02d/%04d ]", dddata2[0],dddata2[1],dddata2[2]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
#endif
				format(ssss,sizeof(ssss)," Пароль: [%s] IP: [%s] Админ LVL: [%d] Скрытость админа: [%d]", igkey,adrip,fadm,data2[2]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				format(ssss,sizeof(ssss)," Посадок в тюрьму: [%d] Секунд тюрьмы: [%d] Число затыков: [%d] Секунд затыка: [%d]", data2[5],data2[6],data2[7],data2[8]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				format(ssss,sizeof(ssss)," Денег: [%d $] Убийств: [%d] Смертей: [%d] VIP LVL: [%d] Блокировка аккаунта: [%d]", data2[9],data2[10],data2[11],data2[12],data2[13]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				format(ssss,sizeof(ssss)," Минут на сервере: [%d] Бессмертие: [%d] ( дополнительно: Депортация: [%d] )", data2[0],data2[3],data2[53]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				if(fadm >= 2)
				{
					new twenlim, restlim;
					Fmadmins(2, akk, 0, twenlim, restlim);
					format(ssss,sizeof(ssss)," Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", twenlim,restlim);
					SendClientMessage(playerid, COLOR_GRAD1, ssss);
				}
				format(ssss,sizeof(ssss)," ID клана: [%d] Уровень в клане: [%d]", dopdata2,data2[15]);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");

				new string222[256];
				new ip333[128];
				ip333 = ConvIP(adrip);
				format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
				if(fexist(string222))
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, " Внимание !!! Аккаунт обнаружен в бан-листе !");
				}
				format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
				if(fexist(string222))
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, " Внимание !!! IP-адрес обнаружен в бан-листе !");
				}

				return 1;
			}
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
   				if(IsPlayerConnected(i))
		    	{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
			if(level == 99)
			{
				if(strcmp(igkey, entpass, false) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Аккаунт игрока остался без изменений !");
					return 1;
				}
				printf(" *** Админ %s сменил пароль аккаунту игрока [%s] на (%s) FP: (%s) .", RealName[playerid], akk, entpass, igkey);
				format(ssss, sizeof(ssss), " Вы сменили пароль аккаунту игрока [%s] на (%s) FP: (%s) .", akk, entpass, igkey);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, ssss);
				strdel(igkey, 0, 256);
				strcat(igkey, entpass);
			}
			else
			{
				if(level == fadm && (vipur1 == 0 || vipur2 == data2[12]) && (scrit1 == 0 || scrit2 == data2[2]) && (summ1 == 0 || summ2 == data2[9]))
				{
	 				SendClientMessage(playerid, COLOR_RED, " Аккаунт игрока остался без изменений !");
					return 1;
				}
				if(level == 0 && level != fadm)
				{
					dopper = 1;
					AdmUpdate(akk, level, 3);
					data2[2] = 0;//убрать скрытость
					data2[3] = 0;//убрать бессмертие
					data2[12] = 0;//убрать VIP
					data2[1] = level;//изменение уровня админки
					format(ssss, sizeof(ssss), " *** Админ %s снял админку с аккаунта игрока [%s] .", RealName[playerid], akk);
					print(ssss);
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					new twenlim, restlim;
					Fmadmins(0, akk, 0, twenlim, restlim);
				}
				if(level > 0 && level != fadm)
				{
					dopper = 1;
					AdmUpdate(akk, level, 3);
					oldlevel = fadm;//сохранение старого уровня админки
					data2[2] = 0;//убрать скрытость
					data2[12] = 0;//убрать VIP
					if(data2[1] <= 0)//изменение уровня админки
					{
						data2[1] = level * -1;
					}
					else
					{
						data2[1] = level;
					}
					format(ssss, sizeof(ssss), " *** Админ %s дал аккаунту игрока [%s] админку %d уровня.", RealName[playerid], akk, level);
					print(ssss);
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					if(level <= 1 && oldlevel >= 2)
					{
						new twenlim, restlim;
						Fmadmins(0, akk, 0, twenlim, restlim);
					}
					if(level >= 2 && oldlevel <= 1)
					{
						new twenlim = 0;
						new restlim = 0;
						Fmadmins(1, akk, 0, twenlim, restlim);
					}
					if(level <= 2 && oldlevel >= 3)
					{
						data2[3] = 0;//выключить бессмертие
					}
					if(level >= 3 && oldlevel <= 2)
					{
						data2[3] = 1;//включить бессмертие
					}
				}
				if(vipur1 == 1 && vipur2 == 0 && vipur2 != data2[12] && level == 0)
				{
					dopper = 1;
					data2[12] = vipur2;//изменение VIP
					format(ssss, sizeof(ssss), " *** Админ %s снял с аккаунта игрока [%s] VIP уровень.", RealName[playerid], akk);
					print(ssss);
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
				}
				if(vipur1 == 1 && vipur2 == 0 && vipur2 != data2[12] && level != 0)
				{
					dopper = 1;
					data2[12] = vipur2;//изменение VIP
					format(ssss, sizeof(ssss), " *** Админ %s запретил аккаунту игрока [%s] прием PM.", RealName[playerid], akk);
					print(ssss);
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
				}
				if(vipur1 == 1 && (vipur2 > 0 && vipur2 <= 2) && vipur2 != data2[12] && level == 0)
				{
					dopper = 1;
					data2[12] = vipur2;//изменение VIP
					format(ssss, sizeof(ssss), " *** Админ %s дал аккаунту игрока [%s] VIP %d уровня.", RealName[playerid], akk, data2[12]);
					print(ssss);
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
				}
				if(vipur1 == 1 && vipur2 == 3 && vipur2 != data2[12])
				{
					dopper = 1;
					data2[1] = 0;//убрать админ LVL
					data2[2] = 0;//убрать скрытость
					data2[3] = 0;//убрать бессмертие
					data2[9] = 1000;//установка личного счёта
					data2[12] = vipur2;//изменение VIP
					format(ssss, sizeof(ssss), " *** Админ %s дал аккаунту игрока [%s] статус депортации.", RealName[playerid], akk);
					print(ssss);
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
				}
				if(vipur1 == 1 && vipur2 == 4 && vipur2 != data2[12] && level != 0 &&
				(data2[2] == 0 || (scrit1 == 1 && scrit2 == 0)))
				{
					dopper = 1;
					data2[12] = vipur2;//изменение VIP
					format(ssss, sizeof(ssss), " *** Админ %s разрешил аккаунту игрока [%s] прием PM.", RealName[playerid], akk);
					print(ssss);
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
				}
				if(scrit1 == 1 && scrit2 != data2[2] && level != 0)
				{
					dopper = 1;
					data2[2] = scrit2;//установить скрытость
					if(data2[2] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s убрал с аккаунта игрока [%s] статус скрытости.", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					else
					{
                    	data2[12] = 0;//изменение VIP (убрать действие функции /openpm)
						format(ssss, sizeof(ssss), " *** Админ %s дал аккаунту игрока [%s] статус скрытости.", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
				}
				if(summ1 == 1 && summ2 != data2[9] && data2[12] != 3)
				{
					new dopper44;
					dopper44 = data2[9];
					dopper = 1;
					data2[9] = summ2;//изменение личного счёта
					format(ssss, sizeof(ssss), " *** Личный счёт аккаунта игрока [%s] был изменён на: %d $ .", akk, data2[9]);
					print(ssss);
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					printf("[moneysys] Предыдущая сумма аккаунта игрока %s : %d $", akk, dopper44);
				}
				if(dopper == 0)
				{
	 				SendClientMessage(playerid, COLOR_RED, " Аккаунт игрока остался без изменений !");
					return 1;
				}
			}
#if (MOD90INS == 0)
			new File: hFile = fopen(string, io_write);//запись изменённого аккаунта
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
				format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
				format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
				format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
				format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
				format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
				format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
				format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
				format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
				format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
				format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
				format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
				format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//				format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//				format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//				format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//				format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//				format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//				format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//				format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//				format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//				format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//				format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//				format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
				fclose(hFile);
			}
#endif
#if (MOD90INS == 1)
			format(strdln, sizeof(strdln), "UPDATE Players SET Key = '%s',TDReg = '%s',",igkey,tdreg);//создаём запрос БД
			format(strdln, sizeof(strdln), "%sDEndConD = %d,DEndConM = %d,DEndConY = %d,", strdln, dddata2[0],dddata2[1],dddata2[2]);
			format(strdln, sizeof(strdln), "%sIPAdr = '%s',MinLog = %d,", strdln, adrip,data2[0]);
			format(strdln, sizeof(strdln), "%sAdminLevel = %d,AdminShadow = %d,", strdln, data2[1],data2[2]);
			format(strdln, sizeof(strdln), "%sAdminLive = %d,", strdln, data2[3]);
			format(strdln, sizeof(strdln), "%sPrison = %d,Prisonsec = %d,", strdln, data2[5],data2[6]);
			format(strdln, sizeof(strdln), "%sMuted = %d,Mutedsec = %d,", strdln, data2[7],data2[8]);
			format(strdln, sizeof(strdln), "%sMoney = %d,Kills = %d,", strdln, data2[9],data2[10]);
			format(strdln, sizeof(strdln), "%sDeaths = %d,VIP = %d,", strdln, data2[11],data2[12]);
			format(strdln, sizeof(strdln), "%sLock = %d,Gang = %d,GangLvl = %d ", strdln, data2[13],data2[14],data2[15]);
			format(strdln, sizeof(strdln), "%sWHERE (Name = '%s')", strdln, akk);
			db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/cortime", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /cortime 2 , или");
				SendClientMessage(playerid, COLOR_GRAD2, " /cortime [реальное время(0-выключить, 1-включить)] ...");
				SendClientMessage(playerid, COLOR_GRAD2, " ... [часы(-23 - 23)] [минуты(-59 - 59)] ...");
				SendClientMessage(playerid, COLOR_GRAD2, " ... [число(-30 - 30)] [месяц(-11 - 11)] [год(-99 - 99)]");
				return 1;
			}
			new perrt, per1, per2, per3, per4, per5;
			perrt = strval(tmp);
			tmp = strtok(cmdtext, idx);
			per1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			per2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			per3 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			per4 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			per5 = strval(tmp);
			if (perrt < 0 || perrt > 2)
			{
				SendClientMessage(playerid, COLOR_RED, " Реальное время [0-выключить, 1-включить] , или 2 !");
				return 1;
			}
			if (per1 < -23 || per1 > 24)
			{
				SendClientMessage(playerid, COLOR_RED, " Часы от -23 до 23 !");
				return 1;
			}
			if (per2 < -59 || per2 > 59)
			{
				SendClientMessage(playerid, COLOR_RED, " Минуты от -59 до 59 !");
				return 1;
			}
			if (per3 < -30 || per3 > 30)
			{
				SendClientMessage(playerid, COLOR_RED, " Число от -30 до 30 !");
				return 1;
			}
			if (per4 < -11 || per4 > 11)
			{
				SendClientMessage(playerid, COLOR_RED, " Месяц от -11 до 11 !");
				return 1;
			}
			if (per5 < -99 || per5 > 99)
			{
				SendClientMessage(playerid, COLOR_RED, " Год от -99 до 99 !");
				return 1;
			}
			if (perrt == 2)
			{
				ReadCorTime();//чтение коррекции времени
				gettime(timecor[0], timecor[1]);
				getdate(timecor[2], timecor[3], timecor[4]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "------------------------------------------------------------------------------------------");
				format(string,sizeof(string)," Время сервера: %02d:%02d %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Данные коррекции: Статус реального времени: [%d]", timecor[8]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Часы: [%d] Минуты: [%d] Число: [%d] Месяц: [%d] Год: [%d]", CorTime[0], CorTime[1], CorTime[2], CorTime[3], CorTime[4]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				TimCor();//коррекция времени
				DatCor();//коррекция даты
				format(string,sizeof(string)," Время после коррекции: %02d:%02d %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "------------------------------------------------------------------------------------------");
				format(string,sizeof(string)," *** Админ %s [%d] просмотрел настройки коррекции времени сервера.", RealName[playerid], playerid);
				print(string);
				return 1;
			}
			new dopdata;
			dopdata = 0;
			if(perrt != timecor[8])
			{
			    dopdata = 1;
			}
            timecor[8] = perrt;
			CorTime[0] = per1;
			CorTime[1] = per2;
			CorTime[2] = per3;
			CorTime[3] = per4;
			CorTime[4] = per5;
			SaveCorTime();//запись коррекции времени
			ReadCorTime();//чтение коррекции времени
			new per;
			CallRemoteFunction("dopfunction", "d", per);//чтение коррекции времени фильтрскриптом keyscan
			format(string,sizeof(string)," *** Админ %s [%d] скорректировал время и дату (RT: [%d] , %d , %d , %d , %d , %d) .", RealName[playerid], playerid, timecor[8], CorTime[0], CorTime[1], CorTime[2], CorTime[3], CorTime[4]);
			print(string);
			gettime(timecor[0], timecor[1]);
			getdate(timecor[2], timecor[3], timecor[4]);
			SendClientMessage(playerid, COLOR_GREEN, "------------------------------------------------------------------------------------------");
			SendClientMessage(playerid, COLOR_GREEN, " Данные коррекции были успешно записаны :");
			format(string,sizeof(string)," Статус реального времени: [%d]", timecor[8]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string,sizeof(string)," Часы: [%d] Минуты: [%d] Число: [%d] Месяц: [%d] Год: [%d]", CorTime[0], CorTime[1], CorTime[2], CorTime[3], CorTime[4]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			TimCor();//коррекция времени
			DatCor();//коррекция даты
			format(string,sizeof(string)," Время после коррекции: %02d:%02d %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			SendClientMessage(playerid, COLOR_GREEN, "------------------------------------------------------------------------------------------");
			if(dopdata == 1)
			{
			    oldhour = timecor[0] - 1;
				if(oldhour < 0) { oldhour = oldhour + 2; }
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/servcon", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon [ид настройки(0-16)] ( 0- без имени сервера,");
				SendClientMessage(playerid, COLOR_GRAD2, " 1- задать имя сервера, 2- без пароля сервера, 3- задать пароль сервера,");
				SendClientMessage(playerid, COLOR_GRAD2, " 4- без имени карты сервера, 5- задать имя карты сервера, 6- без имени");
				SendClientMessage(playerid, COLOR_GRAD2, " web-страницы сервера, 7- задать имя web-страницы сервера, 8- разрешить");
				SendClientMessage(playerid, COLOR_GRAD2, " RCON-доступ (rcon 1), 9- запретить RCON-доступ (rcon 0), 10- убрать");
				SendClientMessage(playerid, COLOR_GRAD2, " перезагружаемый FS , 11- задать перезагружаемый FS , 12- задать час");
				SendClientMessage(playerid, COLOR_GRAD2, " перезагрузки сервера, 13- задать лимит пакетов анти-DDoS защиты,");
				SendClientMessage(playerid, COLOR_GRAD2, " 14- задать лимит переданных байт на сервер, 15- задать лимит считанных");
				SendClientMessage(playerid, COLOR_GRAD2, " байт с сервера, 16- просмотреть настройки )");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 16)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 16 !");
				return 1;
			}
			if(para1 == 0)
			{
				strdel(servname,0,256);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				SendRconCommand("hostname");//RCON-команда БЕЗ имени сервера
				format(string, sizeof(string), " *** Админ %s [%d] убрал имя сервера.", RealName[playerid],playerid);
				print(string);
				print(" *** Изменения вступят в силу ТОЛЬКО после выключения/включения сервера !");
				SendClientMessage(playerid, COLOR_GREEN, " Вы убрали имя сервера.");
				SendClientMessage(playerid, COLOR_RED, " Изменения вступят в силу ТОЛЬКО после выключения/включения сервера !");
			}
			if(para1 == 1)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 1 [имя сервера]");
					return 1;
				}
				if(strlen(result) > 64)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина имени сервера не должна превышать 64 символа !");
					return 1;
				}
				if(strlen(servname) > 0 && strcmp(servname, result, false) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое имя сервера !");
					return 1;
				}
				strdel(servname,0,256);
				strcat(servname, result);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				strdel(ssss, 0, 256);//сборка RCON-команды имени сервера
				strcat(ssss, "hostname ");
				strcat(ssss, servname);
				SendRconCommand(ssss);//RCON-команда имени сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал новое имя сервера (%s)", RealName[playerid],playerid,servname);
				print(string);
				format(string, sizeof(string), " Вы задали новое имя сервера (%s)", servname);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 2)
			{
				strdel(servpass,0,256);
				strcat(servpass, "0");
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				strdel(ssss, 0, 256);//сборка RCON-команды имени сервера
				strcat(ssss, "password ");
				strcat(ssss, servpass);
				SendRconCommand(ssss);//RCON-команда БЕЗ пароля сервера
				format(string, sizeof(string), " *** Админ %s [%d] убрал пароль сервера.", RealName[playerid],playerid);
				print(string);
				SendClientMessage(playerid, COLOR_GREEN, " Вы убрали пароль сервера.");
			}
			if(para1 == 3)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 3 [пароль сервера]");
					return 1;
				}
				if(strlen(tmp) < 2 || strlen(tmp) > 12 || tmp[0] == '0')
				{
					SendClientMessage(playerid, COLOR_RED, " Длина пароля сервера должна быть от 2 до 12 символов,");
					SendClientMessage(playerid, COLOR_RED, " И ПЕРВЫЙ символ пароля НЕ должен равняться НУЛЮ !");
					return 1;
				}
				if(strlen(servpass) > 0 && strcmp(servpass, tmp, false) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старый пароль сервера !");
					return 1;
				}
				strdel(servpass,0,256);
				strcat(servpass, tmp);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				strdel(ssss, 0, 256);//сборка RCON-команды пароля сервера
				strcat(ssss, "password ");
				strcat(ssss, servpass);
				SendRconCommand(ssss);//RCON-команда пароля сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал новый пароль сервера (%s)", RealName[playerid],playerid,servpass);
				print(string);
				format(string, sizeof(string), " Вы задали новый пароль сервера (%s)", servpass);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 4)
			{
				strdel(servmap,0,256);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				SendRconCommand("mapname");//RCON-команда БЕЗ имени карты сервера
				format(string, sizeof(string), " *** Админ %s [%d] убрал имя карты сервера (по умолчанию: San Andreas) .", RealName[playerid],playerid);
				print(string);
				print(" *** Изменения вступят в силу ТОЛЬКО после выключения/включения сервера !");
				SendClientMessage(playerid, COLOR_GREEN, " Вы убрали имя карты сервера (по умолчанию: San Andreas) .");
				SendClientMessage(playerid, COLOR_RED, " Изменения вступят в силу ТОЛЬКО после выключения/включения сервера !");
			}
			if(para1 == 5)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 5 [имя карты сервера]");
					return 1;
				}
				if(strlen(result) > 32)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина имени карты сервера не должна превышать 32 символа !");
					return 1;
				}
				if(strlen(servmap) > 0 && strcmp(servmap, result, false) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое имя карты сервера !");
					return 1;
				}
				strdel(servmap,0,256);
				strcat(servmap, result);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				strdel(ssss, 0, 256);//сборка RCON-команды имени карты сервера
				strcat(ssss, "mapname ");
				strcat(ssss, servmap);
				SendRconCommand(ssss);//RCON-команда имени карты сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал новое имя карты сервера (%s)", RealName[playerid],playerid,servmap);
				print(string);
				format(string, sizeof(string), " Вы задали новое имя карты сервера (%s)", servmap);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 6)
			{
				strdel(servurl,0,256);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				SendRconCommand("weburl");//RCON-команда БЕЗ имени web-страницы сервера
				format(string, sizeof(string), " *** Админ %s [%d] убрал имя web-страницы сервера.", RealName[playerid],playerid);
				print(string);
				print(" *** Изменения вступят в силу ТОЛЬКО после выключения/включения сервера !");
				SendClientMessage(playerid, COLOR_GREEN, " Вы убрали имя web-страницы сервера.");
				SendClientMessage(playerid, COLOR_RED, " Изменения вступят в силу ТОЛЬКО после выключения/включения сервера !");
			}
			if(para1 == 7)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 7 [имя web-страницы сервера]");
					return 1;
				}
				if(strlen(result) > 64)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина имени web-страницы сервера не должна превышать 64 символа !");
					return 1;
				}
				if(strlen(servurl) > 0 && strcmp(servurl, result, false) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое имя web-страницы сервера !");
					return 1;
				}
				strdel(servurl,0,256);
				strcat(servurl, result);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				strdel(ssss, 0, 256);//сборка RCON-команды имени web-страницы сервера
				strcat(ssss, "weburl ");
				strcat(ssss, servurl);
				SendRconCommand(ssss);//RCON-команда имени web-страницы сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал новое имя web-страницы сервера (%s)", RealName[playerid],playerid,servurl);
				print(string);
				format(string, sizeof(string), " Вы задали новое имя web-страницы сервера (%s)", servurl);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 8)
			{
				status = 1;
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				SendRconCommand("rcon 1");//RCON-команда разрешения RCON-доступа
				format(string, sizeof(string), " *** Админ %s [%d] разрешил RCON-доступ (rcon 1)", RealName[playerid],playerid);
				print(string);
				SendClientMessage(playerid, COLOR_GREEN, " Вы разрешили RCON-доступ (rcon 1)");
			}
			if(para1 == 9)
			{
				status = 0;
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				SendRconCommand("rcon 0");//RCON-команда запрета RCON-доступа
				format(string, sizeof(string), " *** Админ %s [%d] запретил RCON-доступ (rcon 0)", RealName[playerid],playerid);
				print(string);
				SendClientMessage(playerid, COLOR_GREEN, " Вы запретили RCON-доступ (rcon 0)");
			}
			if(para1 == 10)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 10 [номер слота FS(0-15)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 0 || para2 > 15)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер слота FS от 0 до 15 !");
					return 1;
				}
				strdel(relfs[para2],0,256);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				format(string, sizeof(string), " *** Админ %s [%d] убрал %d слот FS .", RealName[playerid],playerid,para2);
				print(string);
				format(string, sizeof(string), " Вы убрали %d слот FS .", para2);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 11)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 11 [номер слота FS(0-15)] [имя FS]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 0 || para2 > 15)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер слота FS от 0 до 15 !");
					return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_RED, " Имя FS не задано !");
					return 1;
				}
				if(strlen(result) > 64)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина имени FS не должна превышать 64 символа !");
					return 1;
				}
				if(strlen(relfs[para2]) > 0 && strcmp(relfs[para2], result, false) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое имя FS !");
					return 1;
				}
				strdel(relfs[para2],0,256);
				strcat(relfs[para2], result);
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал %d слот FS (%s)", RealName[playerid],playerid,para2,relfs[para2]);
				print(string);
				format(string, sizeof(string), " Вы задали %d слот FS (%s)", para2,relfs[para2]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 12)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 12 [час перезагрузки сервера(0-23)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 0 || para2 > 23)
				{
					SendClientMessage(playerid, COLOR_RED, " Час перезагрузки сервера от 0 до 23 !");
					return 1;
				}
				if(para2 == servchas)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старый час перезагрузки сервера !");
					return 1;
				}
				servchas = para2;
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал час перезагрузки сервера (%d)", RealName[playerid],playerid,para2);
				print(string);
				format(string, sizeof(string), " Вы задали час перезагрузки сервера (%d)", para2);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 13)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 13 [лимит пакетов(200-8000)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 200 || para2 > 8000)
				{
					SendClientMessage(playerid, COLOR_RED, " Лимит пакетов от 200 до 8000 !");
					return 1;
				}
				if(para2 == packlim)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое значение лимита пакетов !");
					return 1;
				}
				packlim = para2;
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				new dopstr[32];
				strdel(dopstr,0,32);
				valstr(dopstr, packlim);//преобразование лимита пакетов в строку
				strdel(ssss, 0, 256);//сборка RCON-команды лимита пакетов
				strcat(ssss, "messageholelimit ");
				strcat(ssss, dopstr);
#if (MOD11INS >= 3)
				SendRconCommand(ssss);//RCON-команда лимита пакетов
#endif
				format(string, sizeof(string), " *** Админ %s [%d] задал лимит пакетов анти-DDoS защиты (%d)", RealName[playerid],playerid,para2);
				print(string);
				format(string, sizeof(string), " Вы задали лимит пакетов анти-DDoS защиты (%d)", para2);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 14)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 14 [лимит переданных байт(10000-500000)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 10000 || para2 > 500000)
				{
					SendClientMessage(playerid, COLOR_RED, " Лимит переданных байт от 10000 до 500000 !");
					return 1;
				}
				if(para2 == NETrecCon)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое значение лимита переданных байт !");
					return 1;
				}
				NETrecCon = para2;
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал лимит переданных байт на сервер (%d)", RealName[playerid],playerid,para2);
				print(string);
				format(string, sizeof(string), " Вы задали лимит переданных байт на сервер (%d)", para2);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 15)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /servcon 15 [лимит считанных байт(10000-500000)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 10000 || para2 > 500000)
				{
					SendClientMessage(playerid, COLOR_RED, " Лимит считанных байт от 10000 до 500000 !");
					return 1;
				}
				if(para2 == NETsenCon)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы задали старое значение лимита считанных байт !");
					return 1;
				}
				NETsenCon = para2;
				SaveServCon();//запись конфигурации сервера
				ReadServCon();//чтение конфигурации сервера
				format(string, sizeof(string), " *** Админ %s [%d] задал лимит считанных байт с сервера (%d)", RealName[playerid],playerid,para2);
				print(string);
				format(string, sizeof(string), " Вы задали лимит считанных байт с сервера (%d)", para2);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 16)
			{
				new para77[64];
				if(strlen(servpass) == 0 || (strlen(servpass) == 1 && servpass[0] == '0'))//если нет пароля сервера, то:
				{
					strdel(para77,0,64);
				}
				else//иначе, (если есть пароль сервера), то:
				{
					format(para77,sizeof(para77),"%s", servpass);
				}
				ReadServCon();//чтение конфигурации сервера
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------------------------------------");
				format(string,sizeof(string)," Имя сервера: [%s] Час перезагрузки сервера: [%d]", servname,servchas);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Пароль: [%s] Карта: [%s] web-страница: [%s]", para77,servmap,servurl);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," RCON-доступ: [%d] (1-разрешено(rcon 1), 0-запрещено(rcon 0))", status);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Лимит пакетов: [%d] Лимит переданных байт: [%d] Лимит считанных байт: [%d]", packlim,NETrecCon,NETsenCon);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, " Перезагружаемые фильтрскрипты:");
				format(string,sizeof(string)," Слот 0: [%s] Слот 1: [%s] Слот 2: [%s] Слот 3: [%s]", relfs[0],relfs[1],relfs[2],relfs[3]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 4: [%s] Слот 5: [%s] Слот 6: [%s] Слот 7: [%s]", relfs[4],relfs[5],relfs[6],relfs[7]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 8: [%s] Слот 9: [%s] Слот 10: [%s] Слот 11: [%s]", relfs[8],relfs[9],relfs[10],relfs[11]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 12: [%s] Слот 13: [%s] Слот 14: [%s] Слот 15: [%s]", relfs[12],relfs[13],relfs[14],relfs[15]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------------------------------------");
				format(string,sizeof(string)," *** Админ %s [%d] просмотрел настройки конфигурации сервера.", RealName[playerid], playerid);
				print(string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/ondr", true) == 0)
	{
		if(compdrift[playerid] >= 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы уже подключены к дрифт-соревнованию !");
		}
		else
		{
			compdrift[playerid] = 0;
			format(string, sizeof(string), " --> Игрок %s [%d] подключил себя к дрифт-соревнованию.", RealName[playerid],playerid);
			print(string);
			SendAdminMessage(COLOR_GREEN, string);
   			if(PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessage(playerid, COLOR_GREEN, " Вы подключили себя к дрифт-соревнованию.");
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/offdr", true) == 0)
	{
		if(compdrift[playerid] < 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы уже отключены от дрифт-соревнования !");
		}
		else
		{
			compdrift[playerid] = -1000000;
			format(string, sizeof(string), " --> Игрок %s [%d] отключил себя от дрифт-соревнования.", RealName[playerid],playerid);
			print(string);
			SendAdminMessage(COLOR_RED, string);
   			if(PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Вы отключили себя от дрифт-соревнования.");
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/resdr", true) == 0)
	{
		if(compdrift[playerid] < 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя !!!, Вы отключены от дрифт-соревнования !");
    		return 1;
		}
		if(compdrift[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Ваши очки уже обнулены !");
		}
		else
		{
			compdrift[playerid] = 0;
			format(string, sizeof(string), " --> Игрок %s [%d] обнулил свои очки дрифт-соревнования.", RealName[playerid],playerid);
			print(string);
			SendAdminMessage(COLOR_YELLOW, string);
   			if(PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, " Вы обнулили свои очки дрифт-соревнования.");
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/statdr", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /statdr [ид игрока]");
			return 1;
		}
		new para1 = strval(tmp);
		if(IsPlayerConnected(para1))
		{
			if(gPlayerLogged[para1] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[para1][pAdmin] >= 1 && PlayerInfo[para1][pAdmshad] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не можете просмотреть статистику админа !");
				return 1;
			}
			if(compdrift[para1] < 0)
			{
				format(string, sizeof(string), " Игрок %s [%d] НЕ подключен к дрифт-соревнованию.", RealName[para1], para1);
				SendClientMessage(playerid, COLOR_RED, string);
			}
			else
			{
				format(string, sizeof(string), " Игрок %s [%d] подключен к дрифт-соревнованию.", RealName[para1], para1);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			printf(" --> Игрок %s [%d] просмотрел статус подключения игрока %s [%d] к дрифт-соревнованию.", RealName[playerid], playerid, RealName[para1], para1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
		}
    	return 1;
	}
	if(strcmp(cmd, "/edclans", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /edclans [режим (0- по ид клана, 1- по ид игрока из клана)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [ид клана или игрока] [ид настройки (0- просмотреть основную информацию");
				SendClientMessage(playerid, COLOR_GRAD2, " о клане, 1- установить название клана, 2- отменить спавн клана,");
				SendClientMessage(playerid, COLOR_GRAD2, " 3- ТП на спавн клана, 4- удалить игрока из клана (только для режима 1 !!!))]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим 0 или 1 !");
				return 1;
			}
			if(para1 == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ид клана] [ид настройки (0- просмотреть основную информацию");
					SendClientMessage(playerid, COLOR_RED, " о клане, 1- установить название клана, 2- отменить спавн клана,");
					SendClientMessage(playerid, COLOR_RED, " 3- ТП на спавн клана)]");
						return 1;
				}
				new para2;
				para2 = strval(tmp);
				format(string,sizeof(string),"gangs/%i.ini",para2);
				if(!fexist(string) || para2 >= (MAX_GANGS - 1))
				{
					SendClientMessage(playerid,COLOR_RED," Такого [ид клана] не существует !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ид настройки (0- просмотреть основную информацию");
					SendClientMessage(playerid, COLOR_RED, " о клане, 1- установить название клана, 2- отменить спавн клана,");
					SendClientMessage(playerid, COLOR_RED, " 3- ТП на спавн клана)]");
					return 1;
				}
				new para3;
				para3 = strval(tmp);
				if(para3 < 0 || para3 > 3)
				{
					SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 3 !");
					return 1;
				}
				if(para3 == 0)
				{
					new dopper[16];
					strdel(dopper, 0, 16);
					strmid(dopper, GColor[para2], 0, 6, sizeof(dopper));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
					format(string, sizeof(string), " Цвет: [%s] Название: [%s]", dopper, GName[para2]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					SendClientMessage(playerid, COLOR_GRAD1, " Спавн клана:");
					format(string, sizeof(string), " x = %f   y = %f   z = %f", GSpawnX[para2], GSpawnY[para2], GSpawnZ[para2]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), " интерьер = %d   виртуальный мир = %d", GInter[para2], GWorld[para2]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), " Глава: [%s] Число игроков: [%d]", GHead[para2], GPlayers[para2]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), " Регистрация: [ %s ] ID: [%d]", GTDReg[para2], para2);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
					printf(" *** Админ %s просмотрел информацию о клане [ID: %d]", RealName[playerid], para2);
					return 1;
				}
				if(para3 == 1)
				{
					new result[128];
					format(result, sizeof(result), "Default - %d", para2);
					if(strcmp(GName[para2],result,false) == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Название клана уже установлено !");
						return 1;
					}
					strdel(GName[para2], 0, 130);//очищаем назване клана
					strcat(GName[para2], result);//устанавливаем назване клана
					GangSave(para2);//запись ID клана в файл
					format(string, sizeof(string), " *** Админ %s установил название клана %s [ID: %d]", RealName[playerid], GName[para2], para2);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
				if(para3 == 2)
				{
					if(GSpawnX[para2] == 0.00 && GSpawnY[para2] == 0.00 && GSpawnZ[para2] == 0.00 &&
					GInter[para2] == 0 && GWorld[para2] == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Спавн клана уже отменён !");
						return 1;
					}
					GSpawnX[para2] = 0.00;//обнуляем спавн клана
					GSpawnY[para2] = 0.00;
					GSpawnZ[para2] = 0.00;
					GInter[para2] = 0;
					GWorld[para2] = 0;
					GangSave(para2);//запись ID клана в файл
					format(string, sizeof(string), " *** Админ %s отменил спавн клана %s [ID: %d]", RealName[playerid], GName[para2], para2);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
				if(para3 == 3)
				{
					if(admper1[playerid] != 600)
					{
						SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта опция не работает !");
						return 1;
					}
					if(GSpawnX[para2] == 0.00 && GSpawnY[para2] == 0.00 && GSpawnZ[para2] == 0.00 &&
					GInter[para2] == 0 && GWorld[para2] == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Место спавна клана не назначено !");
						return 1;
					}
					SetPlayerInterior(playerid, GInter[para2]);
					SetPlayerVirtualWorld(playerid, GWorld[para2]);
					SetPlayerPos(playerid, GSpawnX[para2], GSpawnY[para2], GSpawnZ[para2]);
					format(string, sizeof(string), " *** Админ %s телепортировался на спавн клана %s [ID: %d]", RealName[playerid], GName[para2], para2);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
			}
			if(para1 == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ид игрока] [ид настройки (0- просмотреть основную информацию");
					SendClientMessage(playerid, COLOR_RED, " о клане, 1- установить название клана, 2- отменить спавн клана,");
					SendClientMessage(playerid, COLOR_RED, " 3- ТП на спавн клана, 4- удалить игрока из клана");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(!IsPlayerConnected(para2))
				{
					SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
					return 1;
				}
				if(gPlayerLogged[para2] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				if(PGang[para2] <= 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок не состоит ни в одном из кланов !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ид настройки (0- просмотреть основную информацию");
					SendClientMessage(playerid, COLOR_RED, " о клане, 1- установить название клана, 2- отменить спавн клана,");
					SendClientMessage(playerid, COLOR_RED, " 3- ТП на спавн клана, 4- удалить игрока из клана");
					return 1;
				}
				new para3;
				para3 = strval(tmp);
				if(para3 < 0 || para3 > 4)
				{
					SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 4 !");
					return 1;
				}
				if(para3 == 0)
				{
					new dopper[16];
					strdel(dopper, 0, 16);
					strmid(dopper, GColor[PGang[para2]], 0, 6, sizeof(dopper));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
					format(string, sizeof(string), " Цвет: [%s] Название: [%s]", dopper, GName[PGang[para2]]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					SendClientMessage(playerid, COLOR_GRAD1, " Спавн клана:");
					format(string, sizeof(string), " x = %f   y = %f   z = %f", GSpawnX[PGang[para2]], GSpawnY[PGang[para2]], GSpawnZ[PGang[para2]]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), " интерьер = %d   виртуальный мир = %d", GInter[PGang[para2]], GWorld[PGang[para2]]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), " Глава: [%s] Число игроков: [%d]", GHead[PGang[para2]], GPlayers[PGang[para2]]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), " Регистрация: [ %s ] ID: [%d]", GTDReg[PGang[para2]], PGang[para2]);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "-----------------------------------------------------------------");
					printf(" *** Админ %s просмотрел информацию о клане [ID: %d]", RealName[playerid], PGang[para2]);
					return 1;
				}
				if(para3 == 1)
				{
					new result[128];
					format(result, sizeof(result), "Default - %d", PGang[para2]);
					if(strcmp(GName[PGang[para2]],result,false) == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Название клана уже установлено !");
						return 1;
					}
					strdel(GName[PGang[para2]], 0, 130);//очищаем назване клана
					strcat(GName[PGang[para2]], result);//устанавливаем назване клана
					GangSave(PGang[para2]);//запись ID клана в файл
					format(string, sizeof(string), " *** Админ %s установил название клана %s [ID: %d]", RealName[playerid], GName[PGang[para2]], PGang[para2]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
				if(para3 == 2)
				{
					if(GSpawnX[PGang[para2]] == 0.00 && GSpawnY[PGang[para2]] == 0.00 && GSpawnZ[PGang[para2]] == 0.00 &&
					GInter[PGang[para2]] == 0 && GWorld[PGang[para2]] == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Спавн клана уже отменён !");
						return 1;
					}
					GSpawnX[PGang[para2]] = 0.00;//обнуляем спавн клана
					GSpawnY[PGang[para2]] = 0.00;
					GSpawnZ[PGang[para2]] = 0.00;
					GInter[PGang[para2]] = 0;
					GWorld[PGang[para2]] = 0;
					GangSave(PGang[para2]);//запись ID клана в файл
					format(string, sizeof(string), " *** Админ %s отменил спавн клана %s [ID: %d]", RealName[playerid], GName[PGang[para2]], PGang[para2]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
				if(para3 == 3)
				{
					if(admper1[playerid] != 600)
					{
						SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта опция не работает !");
						return 1;
					}
					if(GSpawnX[PGang[para2]] == 0.00 && GSpawnY[PGang[para2]] == 0.00 && GSpawnZ[PGang[para2]] == 0.00 &&
					GInter[PGang[para2]] == 0 && GWorld[PGang[para2]] == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Место спавна клана не назначено !");
						return 1;
					}
					SetPlayerInterior(playerid, GInter[PGang[para2]]);
					SetPlayerVirtualWorld(playerid, GWorld[PGang[para2]]);
					SetPlayerPos(playerid, GSpawnX[PGang[para2]], GSpawnY[PGang[para2]], GSpawnZ[PGang[para2]]);
					format(string, sizeof(string), " *** Админ %s телепортировался на спавн клана %s [ID: %d]", RealName[playerid], GName[PGang[para2]], PGang[para2]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					return 1;
				}
				if(para3 == 4)
				{
					if(GangLvl[para2] == 6)
					{
						SendClientMessage(playerid, COLOR_RED, " Выбранный игрок является главой клана !");
						return 1;
					}
					if(idgangsave[para2] > 0)//если ID клана для записи - активен, то:
					{
						new perloc;
						idgangsave[para2] = 0;//очистка ID клана для записи
						perloc = 0;
						while(perloc < MAX_PLAYERS)//цикл для всех игроков
						{
							if(PGang[para2] == PGang[perloc] && para2 != perloc)
							{//если есть хотя бы один игрок из клана выходящего, то:
								idgangsave[perloc] = PGang[para2];
								break;
							}
							perloc++;
						}
					}
					idgangsave[para2] = 0;//очистка ID клана для записи
					new dopper;
					dopper = PGang[para2];//запоминаем ID клана
					PGang[para2] = 0;//удаляем игрока из клана
					GangLvl[para2] = 0;//задаём 0-й уровень игроку из клана
					GPlayers[dopper]--;//минус один игрок в клане
					GangSave(dopper);//запись ID клана в файл
					format(string, sizeof(string), " *** Админ %s удалил игрока %s из клана %s{FFFF00} [ID: %d] ,", RealName[playerid], RealName[para2], GName[dopper], dopper);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					format(string, sizeof(string), " *** и изменил число игроков в клане: %s{FFFF00} на %d .", GName[dopper], GPlayers[dopper]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					if(PlayerInfo[para2][pAdmin] == 0)
					{
						format(string, sizeof(string), " *** Админ %s удалил Вас из клана %s{AA3333} .", RealName[playerid], GName[dopper]);
						SendClientMessage(para2, COLOR_RED, string);
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/editadmins", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			if(cmdtext[idx] == 0)
			{
				LogAdmcnt[playerid] = 0;//обнуляем переменную регистрации админов-2
#if (MOD90INS == 0)
				format(strdln,sizeof(strdln),"В первом ключе указан уровень админа, во втором ключе\
				\nуказано как админ получил админку:\n   1 - с помошью команд   /iadminset   или   /untouch\
				\n   2 - с помощью команды   /makeadmin  \n   3 - с помощью команды   /admakk\
				\n   4 - с помощью обычного логирования\n        (аккаунт админа был перенесён на данный сервер)\
				\n   5 - после дисконнекта (админ очистил\n        свой слот регистрации, но остался админом)\n");
#endif
#if (MOD90INS == 1)
				format(strdln,sizeof(strdln),"В первом ключе указан уровень админа, во втором ключе\
				\nуказано как админ получил админку:\n   1 - с помошью команд   /iadminset   или   /untouch\
				\n   2 - с помощью команды   /makeadmin  \n   3 - с помощью команды   /admakk\
				\n   4 - с помощью обычного логирования\n        (аккаунт админа был изменён в базе данных сервера)\
				\n   5 - после дисконнекта (админ очистил\n        свой слот регистрации, но остался админом)\n");
#endif
				format(strdln,sizeof(strdln),"%s\nСлот  0: %s\nСлот  1: %s\nСлот  2: %s\nСлот  3: %s\nСлот  4: %s\nСлот  5: %s\
				\nСлот  6: %s\nСлот  7: %s\nСлот  8: %s\nСлот  9: %s\nСлот 10: %s\nСлот 11: %s\nСлот 12: %s\nСлот 13: %s\
				\nСлот 14: %s\nСлот 15: %s\nСлот 16: %s\nСлот 17: %s\nСлот 18: %s\nСлот 19: %s",strdln,
				LogAdm[0],LogAdm[1],LogAdm[2],LogAdm[3],LogAdm[4],LogAdm[5],LogAdm[6],LogAdm[7],LogAdm[8],LogAdm[9],
				LogAdm[10],LogAdm[11],LogAdm[12],LogAdm[13],LogAdm[14],LogAdm[15],LogAdm[16],LogAdm[17],LogAdm[18],LogAdm[19]);
				ShowPlayerDialog(playerid, 62, 0, "Регистрации админов:", strdln, "Далее", "Отмена");
				SetPVarInt(playerid, "DlgCont", 62);
				format(string,sizeof(string)," *** Админ %s [%d] просмотрел журнал регистрации админов сервера.", RealName[playerid], playerid);
				print(string);
				return 1;
			}
			if(cmdtext[idx] == 32 && cmdtext[idx+1] == 32)
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Unknown command.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			new para22, para33[8], para1[16], pass1[8], pass2[8];
			strdel(para33, 0, 8);
			strdel(para1, 0, 16);
			strdel(pass1, 0, 8);
			strdel(pass2, 0, 8);
			strcat(para1, tmp);
			strmid(pass1, PlayerInfo[playerid][pKey], strlen(PlayerInfo[playerid][pKey])-3, strlen(PlayerInfo[playerid][pKey]));
			if(strlen(para1) != 4 && strlen(para1) != 5)
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Unknown command.");
				return 1;
			}
			if(strlen(para1) == 4)
			{
				strmid(pass2, para1, strlen(para1)-4, strlen(para1)-1);
				strmid(para33, para1, strlen(para1)-1, strlen(para1));
				para22 = strval(para33);
			}
			else
			{
				strmid(pass2, para1, strlen(para1)-5, strlen(para1)-2);
				strmid(para33, para1, strlen(para1)-2, strlen(para1));
			}
			if(strcmp(pass1, pass2, false) != 0)
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Unknown command.");
				return 1;
			}
			para22 = strval(para33);
			if(para22 < 0 || para22 > 99)
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Unknown command.");
				return 1;
			}
			if(!strlen(LogAdm[para22]))
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Unknown command.");
				return 1;
			}
			strdel(LogAdm[para22], 0, 256);
			SaveLogAdm();
			printf(" *** Админ %s [%d] очистил %d слот регистрации админов.", RealName[playerid], playerid, para22);
			format(string, sizeof(string), " Вы очистили %d слот регистрации админов.", para22);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else
		{
			SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Unknown command.");
		}
		return 1;
	}
	if(strcmp(cmd, "/nucexp", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(nucexplos == 0)
			{
				SetWeather(19);
				GlWeat = 19;
				SetWorldTime(0);
				GlTime = 0;
				TimePlay(0);
				new Float:sx,Float:sy,Float:sz;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						SnowONOFF[i] = 1;
						EnterTick33[i] = 1;//обход антикрашера - 3
						SetPlayerArmour(i,0);
						SetPlayerHealth(i,0);
						GetPlayerCameraPos(i,sx,sy,sz);
						snowobj[i] = CreatePlayerObject(i,18864, sx, sy, sz-5, 0.0, 0.0, 0.0, 300.0);
					}
				}
				format(string, sizeof(string), " *** Админ %s произвёл ядерный взрыв !!!", RealName[playerid]);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				nucexplos = 1;
				nucexptime = 0;
			}
			else
			{
				SetWeather(1);
				GlWeat = 1;
				if(timecor[8] == 1)//если включено реальное время, то:
				{
					ReadCorTime();//чтение коррекции времени
					gettime(timecor[0], timecor[1]);
					TimCor();//коррекция времени
					SetWorldTime(timecor[0]);
					GlTime = timecor[0];
					TimePlay(timecor[0]);
				}
				else
				{
					SetWorldTime(12);
					GlTime = 12;
					TimePlay(12);
				}
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						SnowONOFF[i] = 0;
						DestroyPlayerObject(i,snowobj[i]);
					}
				}
				format(string, sizeof(string), " *** Админ %s ликвидировал последствия ядерного взрыва.", RealName[playerid]);
				print(string);
				SendClientMessageToAll(COLOR_GREEN, string);
				nucexplos = 0;
				nucexptime = 0;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/scrmd", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /scrmd [режим] ( 0- надпись ''Drift level'' ,");
			SendClientMessage(playerid, COLOR_GRAD2, " 1- спидометр, 2- дрифт счётчик, 3- надпись ''уровень дрифта''");
			SendClientMessage(playerid, COLOR_GRAD2, " (у себя над головой), 4- просмотр ников других игроков )");
			return 1;
		}
		new para1 = strval(tmp);
		if(para1 < 0 || para1 > 4)
		{
			SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 4 !");
			return 1;
		}
		if(para1 == 0)
		{
			if(scrmod[0][playerid] == 0)
			{
				scrmod[0][playerid] = 1;
				printf(" --> Игрок %s [%d] отключил надпись ''Drift level'' .", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_RED, " Вы отключили надпись ''Drift level'' .");
			}
			else
			{
				scrmod[0][playerid] = 0;
				printf(" --> Игрок %s [%d] включил надпись ''Drift level'' .", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_GREEN, " Вы включили надпись ''Drift level'' .");
			}
		}
		if(para1 == 1)
		{
			if(scrmod[1][playerid] == 0)
			{
				scrmod[1][playerid] = 1;
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					R_Vehicle[playerid] = VehicleSpeed_1;
					PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);
					TextDrawHideForPlayer(playerid, KMH);
				}
				printf(" --> Игрок %s [%d] отключил спидометр.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_RED, " Вы отключили спидометр.");
			}
			else
			{
				scrmod[1][playerid] = 0;
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					new String[64];

					TextDrawShowForPlayer(playerid, KMH);

					format(String, sizeof(String), "%d", GetPlayerSpeed(playerid));
					PlayerTextDrawSetString(playerid, VehicleSpeed[playerid], String);
					PlayerTextDrawShow(playerid, VehicleSpeed[playerid]);

					R_Vehicle[playerid] = VehicleSpeed_2;
				}
				printf(" --> Игрок %s [%d] включил спидометр.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_GREEN, " Вы включили спидометр.");
			}
		}
		if(para1 == 2)
		{
			if(scrmod[2][playerid] == 0)
			{
				scrmod[2][playerid] = 1;
				printf(" --> Игрок %s [%d] отключил дрифт счётчик.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_RED, " Вы отключили дрифт счётчик.");
			}
			else
			{
				scrmod[2][playerid] = 0;
				printf(" --> Игрок %s [%d] включил дрифт счётчик.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_GREEN, " Вы включили дрифт счётчик.");
			}
		}
		if(para1 == 3)
		{
			if(scrmod[3][playerid] == 0)
			{
				scrmod[3][playerid] = 1;
				Delete3DTextLabel(Level3D[playerid]);
				printf(" --> Игрок %s [%d] отключил надпись ''уровень дрифта'' (у себя над головой) .", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_RED, " Вы отключили надпись ''уровень дрифта'' (у себя над головой) .");
			}
			else
			{
				scrmod[3][playerid] = 0;
				Level3D[playerid] = Create3DTextLabel(" ",0xFFFFFFAA,0.000,0.000,-4.000,18.0,0,1);
				LevelStats[playerid] = 0;
				printf(" --> Игрок %s [%d] включил надпись ''уровень дрифта'' (у себя над головой) .", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_GREEN, " Вы включили надпись ''уровень дрифта'' (у себя над головой) .");
			}
		}
		if(para1 == 4)
		{
			if(scrmod[4][playerid] == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					ShowPlayerNameTagForPlayer(playerid, i, false);
				}
				scrmod[4][playerid] = 1;
				printf(" --> Игрок %s [%d] отключил просмотр ников других игроков.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_RED, " Вы отключили просмотр ников других игроков.");
			}
			else
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					ShowPlayerNameTagForPlayer(playerid, i, true);
				}
				scrmod[4][playerid] = 0;
				printf(" --> Игрок %s [%d] включил просмотр ников других игроков.", RealName[playerid], playerid);
				SendClientMessage(playerid, COLOR_GREEN, " Вы включили просмотр ников других игроков.");
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/svt", true) == 0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
 		new Float:ConX, Float:ConY, Float:ConZ;
		GetPlayerPos(playerid, ConX, ConY, ConZ);
		if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0 ||
		(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) || ConZ < -600 || ConZ > 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В данном месте сохранение позиции невозможно !");
			return 1;
		}
		GetPlayerPos(playerid, TpDestP[playerid][0],TpDestP[playerid][1],TpDestP[playerid][2]);
		if (GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3)
		{
			GetVehicleZAngle(GetPlayerVehicleID(playerid), TpDestP[playerid][3]);
		}
		else
		{
			GetPlayerFacingAngle(playerid, TpDestP[playerid][3]);
		}
		SendClientMessage(playerid, COLOR_YELLOW, " Вы сохранили позицию телепорта.");
		return 1;
	}
	if(strcmp(cmd, "/rdt", true) == 0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		if (GetPlayerState(playerid) == 2)
		{
			new regm = 2, per1 = 0, per2 = 0, Float:per3;
			per3 = TpDestP[playerid][3];
			StopDrift(playerid,regm,per1,per2,Float:per3,Float:TpDestP[playerid][0],Float:TpDestP[playerid][1],Float:TpDestP[playerid][2]+1);
		}
		else
		{
			tpdrift[playerid] = 1;
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, TpDestP[playerid][0],TpDestP[playerid][1],TpDestP[playerid][2]+1);
			SetPlayerFacingAngle(playerid, TpDestP[playerid][3]);
			SetCameraBehindPlayer(playerid);
		}
		if(TpDestP[playerid][0] > -3200 && TpDestP[playerid][0] < 3200 &&
		TpDestP[playerid][1] > -3200 && TpDestP[playerid][1] < 3200)
		{
			SendClientMessage(playerid, COLOR_GREEN, " Вы были телепортированы на сохранённую позицию.");
		}
		else
		{
			SetTimerEx("DubTlp", 1000, 0, "i", playerid);
		}
		return 1;
	}
	if(strcmp(cmd, "/menu", true) == 0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		gettime(timecor[0], timecor[1]);
		TimCor();//коррекция времени
		format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

		//Clans system
#if (MOD44INS == 0)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nПравила сервера\nПравила для админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
#if (MOD44INS == 1)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
		SetPVarInt(playerid, "DlgCont", 4);

    	return 1;
	}
	if(strcmp(cmd, "/plclr", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /plclr [ид настройки (0- узнать ники невидимых на");
				SendClientMessage(playerid, COLOR_GRAD2, " радаре полностью (или частично) игроков, 1- включить игроку");
				SendClientMessage(playerid, COLOR_GRAD2, " видимый ник (дополнительно - ид игрока), 2- включить ВСЕМ");
				SendClientMessage(playerid, COLOR_GRAD2, " невидимым полностью (или частично) игрокам видимые ники,");
				SendClientMessage(playerid, COLOR_GRAD2, " 3- установить игроку цвет ника (дополнительно - ид игрока))]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 3)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 3 !");
				return 1;
			}
			if(para1 == 0)
			{
				new dopper;
				dopper = 0;
				new locper, dop11, dop22, dop33;
				SendClientMessage(playerid, COLOR_YELLOW, " Невидимые на радаре полностью");
				SendClientMessage(playerid, COLOR_YELLOW, " (или частично) игроки:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i) && playspa[i] == 1)
					{//если игрок в коннекте, и заспавнен, то:
						locper = 0;
						dop11 = GetPlayerColor(i);
						dop22 = 0;
						dop33 = 268435456;
						for(new j = 0; j < 8; j++)//перевод десятичного цвет в шестнадцатиричный
						{//(корректировать старший знаковый бит (если число в отрицательном диапазоне) не будем
							dop22 = dop11 / dop33;//из-за ненадобности старших трёх байт)
							dop11 = dop11 - (dop22 * dop33);
							if(j == 6) { locper = locper + dop22 * 16; }//если обнаружен 4-й (младший) байт (7-й и 8-й ниблы), то:
							if(j == 7) { locper = locper + dop22; }//сразу переводим 4-й байт в десятичное число
							dop33 = dop33 / 16;
						}
						if(locper < 128)
						{//если игрок невидимый полностью (или частично), то:
							dopper = 1;
							format(string, sizeof(string), " --- %s [%d]", RealName[i], i);
							SendClientMessage(playerid, COLOR_YELLOW, string);
						}
					}
				}
				if(dopper == 0)
				{
					SendClientMessage(playerid, COLOR_YELLOW, " --- не обнаружено.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, " ----------------------------------------");
				}
				printf(" *** Админ %s просмотрел ники невидимых игроков.", RealName[playerid]);
				return 1;
			}
			if(para1 == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " /plclr 1 [ид игрока] !");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(!IsPlayerConnected(para2))
				{
					SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
					return 1;
				}
				if(playspa[para2] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Игрок ещё не заспавнился !");
					return 1;
				}
				ColorPlay[para2] = ColNick[8];//включаем игроку видимый ник
				SetPlayerColor(para2, ColorPlay[para2]);
			    for(new i=0;i<MAX_PLAYERS;i++)
				{
					SetPlayerMarkerForPlayer(i, para2, ColorPlay[para2]);
				}
				format(string, sizeof(string), " *** Админ %s включил игроку %s видимый ник.", RealName[playerid], RealName[para2]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				return 1;
			}
			if(para1 == 2)
			{
				new dopper;
				dopper = 0;
				new locper, dop11, dop22, dop33;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i) && playspa[i] == 1)
					{//если игрок в коннекте, и заспавнен, то:
						locper = 0;
						dop11 = GetPlayerColor(i);
						dop22 = 0;
						dop33 = 268435456;
						for(new j = 0; j < 8; j++)//перевод десятичного цвет в шестнадцатиричный
						{//(корректировать старший знаковый бит (если число в отрицательном диапазоне) не будем
							dop22 = dop11 / dop33;//из-за ненадобности старших трёх байт)
							dop11 = dop11 - (dop22 * dop33);
							if(j == 6) { locper = locper + dop22 * 16; }//если обнаружен 4-й (младший) байт (7-й и 8-й ниблы), то:
							if(j == 7) { locper = locper + dop22; }//сразу переводим 4-й байт в десятичное число
							dop33 = dop33 / 16;
						}
						if(locper < 128)
						{//если игрок невидимый полностью (или частично), то:
							dopper = 1;
							ColorPlay[i] = ColNick[8];//включаем игроку видимый ник
							SetPlayerColor(i, ColorPlay[i]);
			    			for(new k=0;k<MAX_PLAYERS;k++)
							{
								SetPlayerMarkerForPlayer(k, i, ColorPlay[i]);
							}
						}
					}
				}
				if(dopper == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Невидимых на радаре полностью (или частично) игроков не обнаружено.");
				}
				else
				{
					format(string, sizeof(string), " *** Админ %s включил ВСЕМ невидимым полностью (или частично) игрокам видимые ники.", RealName[playerid]);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
				}
				return 1;
			}
			if(para1 == 3)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " /plclr 3 [ид игрока] !");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(!IsPlayerConnected(para2))
				{
					SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
					return 1;
				}
				if(playspa[para2] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Игрок ещё не заспавнился !");
					return 1;
				}
				ColorPlay[para2] = ColNick[17];//устанавливаем игроку цвет ника
				SetPlayerColor(para2, ColorPlay[para2]);
			    for(new i=0;i<MAX_PLAYERS;i++)
				{
					SetPlayerMarkerForPlayer(i, para2, ColorPlay[para2]);
				}
				format(string, sizeof(string), " *** Админ %s установил игроку %s цвет ника.", RealName[playerid], RealName[para2]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/banlst", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /banlst [режим (0- по имени аккаунта,");
				SendClientMessage(playerid, COLOR_GRAD2, " 1- по IP-адресу] [имя аккаунта или IP-адрес]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим 0 или 1 !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(para1 == 0)
			{
				if(strlen(tmp) < 1 || strlen(tmp) > 25)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
					return 1;
				}
				format(string,sizeof(string),"banlist/players/%s.ini",tmp);
				if(!fexist(string))
				{
					SendClientMessage(playerid,COLOR_RED," Аккаунт в бан-листе не найден !");
					return 1;
				}
				new ssss11[256], ssss22[256], ssss33[256], idfile;
				new File: UserFile = fopen(string, io_read);//чтение файла
				new key[ 256 ] , val[ 256 ];
				new Data[ 256 ];
				while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
					if( strcmp( key , "IDFile" , true ) == 0 ) { val = ini_GetValue( Data ); idfile = strval( val ); }
				}
				fclose(UserFile);
				strdel(ssss11, strlen(ssss11)-1, strlen(ssss11));//корректировка причины бана
				idfile++;
				idfile--;

				new i = 0, j = 0, m = 0;//разделение строки
				m = strlen(ssss11);
				while(ssss11[i] != 32)
				{
					ssss33[i] = ssss11[i];
					i++;
					j++;
				}
				ssss33[j] = 0;
				ssss33[j+1] = 0;
				i++;
				j = 0;
				while(i <= m)
				{
					ssss22[j] = ssss11[i];
					i++;
					j++;
				}
				ssss22[j] = 0;
				ssss22[j+1] = 0;

				format(string, sizeof(string), " [%s] -{FFFF00} %s", tmp, ssss22);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), " [%s] -{FFFF00} IP-адрес: %s", tmp, ssss33);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), " *** Админ %s просмотрел аккаунт игрока [%s] в бан-листе.", RealName[playerid], tmp);
				print(string);
				return 1;
			}
			if(para1 == 1)
			{
				new dltmp;
				dltmp = strlen(tmp);
				if(dltmp < 1 || dltmp > 15)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина IP-адреса должна быть от 1 до 15 символов !");
					return 1;
				}
				new dopper111 = 0;
				new dopper222 = 0;
				for(new i = 0; i < dltmp; i++)
				{
					if((tmp[i] < 48 || tmp[i] > 57) && tmp[i] != '.') {dopper111 = 1;}
					if(tmp[i] == '.') {dopper222++;}
				}
				if(dopper111 == 1 || dopper222 > 3)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
				for(new i = 0; i < 4; i++)//очистка локальной части массива ipper
				{
					for(new j = 0; j < 32; j++)
					{
						ipper[playerid][i][j] = 0;
					}
				}
				new ind1, ind2;//разделение IP-адреса
				ind1 = -1;
				for(new i = 0; i < 4; i++)
				{
					ind1++;
					ind2 = 0;
					while(tmp[ind1] != '.')
					{
						if(ind1 > dltmp)
						{
							break;
						}
						ipper[playerid][i][ind2] = tmp[ind1];
						ind1++;
						ind2++;
					}
				}
				dopper111 = 0;
				for(new i = 0; i < 4; i++)
				{
					if(strlen(ipper[playerid][i]) != 0 && strlen(ipper[playerid][i]) > 3) {dopper111 = 1;}
					if(strlen(ipper[playerid][i]) != 0 && strval(ipper[playerid][i]) > 255) {dopper111 = 1;}
				}
    			if(dopper111 == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
				new ind3 = 0;
				new ip222[128];
				new ssss11[256];
				if(strlen(ipper[playerid][0]) != 0 && strlen(ipper[playerid][1]) != 0 &&
				strlen(ipper[playerid][2]) != 0 && strlen(ipper[playerid][3]) != 0)
				{//если IP-адрес набран полностью, то:
					strdel(ip222, 0, 128);//сборка IP-адреса
					format(ip222, sizeof(ip222), "%s.%s.%s.%s", ipper[playerid][0], ipper[playerid][1], ipper[playerid][2], ipper[playerid][3]);
					new ip333[128];//сборка имени файла
					format(ip333, sizeof(ip333), "%s_%s_%s_%s", ipper[playerid][0], ipper[playerid][1], ipper[playerid][2], ipper[playerid][3]);
					format(string,sizeof(string),"banlist/ipadr/%s.ini",ip333);
					if(fexist(string))
					{
						ind3 = 1;
						strdel(ssss11, 0, 256);
						new File: UserFile = fopen(string, io_read);//чтение файла
						new key[ 256 ];
						new Data[ 256 ];
						while ( fread( UserFile , Data , sizeof( Data ) ) )
						{
							key = ini_GetKey( Data );
							if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
						}
						fclose(UserFile);
						format(string, sizeof(string), " [%s] -{FFFF00} %s", ip222, ssss11);
						SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
				if(strlen(ipper[playerid][0]) != 0 && strlen(ipper[playerid][1]) != 0 &&
				strlen(ipper[playerid][2]) != 0 && strlen(ipper[playerid][3]) == 0)
				{//если IP-адрес набран тремя группами цифр, то:
					strdel(ip222, 0, 128);//сборка IP-адреса
					format(ip222, sizeof(ip222), "%s.%s.%s", ipper[playerid][0], ipper[playerid][1], ipper[playerid][2]);
					new ip333[128];//сборка имени файла
					format(ip333, sizeof(ip333), "%s_%s_%s", ipper[playerid][0], ipper[playerid][1], ipper[playerid][2]);
					format(string,sizeof(string),"banlist/ipadr/%s.ini",ip333);
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					if(fexist(string))
					{
						ind3 = 1;
						strdel(ssss11, 0, 256);
						new File: UserFile = fopen(string, io_read);//чтение файла
						new key[ 256 ];
						new Data[ 256 ];
						while ( fread( UserFile , Data , sizeof( Data ) ) )
						{
							key = ini_GetKey( Data );
							if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
						}
						fclose(UserFile);
						format(string, sizeof(string), " [%s.*] -{FFFF00} %s", ip222, ssss11);
						SendClientMessage(playerid, COLOR_GREEN, string);
					}
//---------------------------------- конец -------------------------------------
					for(new i = 0; i < 26; i++)//поиск дополнительных имён файлов
					{
						new ip444[128];
						new ip555[128];
						if(i == 0)
						{
							format(ip444, sizeof(ip444), "%s.*", ip222);//сборка дополнительных IP-адресов
							format(ip555, sizeof(ip555), "%s_C", ip333);//сборка дополнительных имён файлов
						}
						else
						{
							format(ip444, sizeof(ip444), "%s.%d*", ip222, i);//сборка дополнительных IP-адресов
							format(ip555, sizeof(ip555), "%s_%dC", ip333, i);//сборка дополнительных имён файлов
						}
						format(string,sizeof(string),"banlist/ipadr/%s.ini",ip555);
						if(fexist(string))
						{
							ind3 = 1;
							strdel(ssss11, 0, 256);
							new File: UserFile = fopen(string, io_read);//чтение файла
							new key[ 256 ];
							new Data[ 256 ];
							while ( fread( UserFile , Data , sizeof( Data ) ) )
							{
								key = ini_GetKey( Data );
								if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
							}
							fclose(UserFile);
							format(string, sizeof(string), " [%s] -{FFFF00} %s", ip444, ssss11);
							SendClientMessage(playerid, COLOR_GREEN, string);
						}
					}
				}
				if(strlen(ipper[playerid][0]) != 0 && strlen(ipper[playerid][1]) != 0 &&
				strlen(ipper[playerid][2]) == 0 && strlen(ipper[playerid][3]) == 0)
				{//если IP-адрес набран двумя группами цифр, то:
					strdel(ip222, 0, 128);//сборка IP-адреса
					format(ip222, sizeof(ip222), "%s.%s", ipper[playerid][0], ipper[playerid][1]);
					new ip333[128];//сборка имени файла
					format(ip333, sizeof(ip333), "%s_%s", ipper[playerid][0], ipper[playerid][1]);
					format(string,sizeof(string),"banlist/ipadr/%s.ini",ip333);
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					if(fexist(string))
					{
						ind3 = 1;
						strdel(ssss11, 0, 256);
						new File: UserFile = fopen(string, io_read);//чтение файла
						new key[ 256 ];
						new Data[ 256 ];
						while ( fread( UserFile , Data , sizeof( Data ) ) )
						{
							key = ini_GetKey( Data );
							if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
						}
						fclose(UserFile);
						format(string, sizeof(string), " [%s.*.*] -{FFFF00} %s", ip222, ssss11);
						SendClientMessage(playerid, COLOR_GREEN, string);
					}
//---------------------------------- конец -------------------------------------
					for(new i = 0; i < 26; i++)//поиск дополнительных имён файлов
					{
						for(new j = 0; j < 26; j++)
						{
							new ip444[128];
							new ip555[128];
							if(i == 0 && j == 0)
							{
								format(ip444, sizeof(ip444), "%s.*.*", ip222);//сборка дополнительных IP-адресов
								format(ip555, sizeof(ip555), "%s_C_C", ip333);//сборка дополнительных имён файлов
							}
							if(i == 0 && j != 0)
							{
								format(ip444, sizeof(ip444), "%s.*.%d*", ip222, j);//сборка дополнительных IP-адресов
								format(ip555, sizeof(ip555), "%s_C_%dC", ip333, j);//сборка дополнительных имён файлов
							}
							if(i != 0 && j == 0)
							{
								format(ip444, sizeof(ip444), "%s.%d*.*", ip222, i);//сборка дополнительных IP-адресов
								format(ip555, sizeof(ip555), "%s_%dC_C", ip333, i);//сборка дополнительных имён файлов
							}
							if(i != 0 && j != 0)
							{
								format(ip444, sizeof(ip444), "%s.%d*.%d*", ip222, i, j);//сборка дополнительных IP-адресов
								format(ip555, sizeof(ip555), "%s_%dC_%dC", ip333, i, j);//сборка дополнительных имён файлов
							}
							format(string,sizeof(string),"banlist/ipadr/%s.ini",ip555);
							if(fexist(string))
							{
								ind3 = 1;
								strdel(ssss11, 0, 256);
								new File: UserFile = fopen(string, io_read);//чтение файла
								new key[ 256 ];
								new Data[ 256 ];
								while ( fread( UserFile , Data , sizeof( Data ) ) )
								{
									key = ini_GetKey( Data );
									if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
								}
								fclose(UserFile);
								format(string, sizeof(string), " [%s] -{FFFF00} %s", ip444, ssss11);
								SendClientMessage(playerid, COLOR_GREEN, string);
							}
						}
					}
				}
				if(strlen(ipper[playerid][0]) != 0 && strlen(ipper[playerid][1]) == 0 &&
				strlen(ipper[playerid][2]) == 0 && strlen(ipper[playerid][3]) == 0)
				{//если IP-адрес набран одной группой цифр, то:
					strdel(ip222, 0, 128);//сборка IP-адреса
					format(ip222, sizeof(ip222), "%s", ipper[playerid][0]);
					new ip333[128];//сборка имени файла
					format(ip333, sizeof(ip333), "%s", ipper[playerid][0]);
					format(string,sizeof(string),"banlist/ipadr/%s.ini",ip333);
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					if(fexist(string))
					{
						ind3 = 1;
						strdel(ssss11, 0, 256);
						new File: UserFile = fopen(string, io_read);//чтение файла
						new key[ 256 ];
						new Data[ 256 ];
						while ( fread( UserFile , Data , sizeof( Data ) ) )
						{
							key = ini_GetKey( Data );
							if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
						}
						fclose(UserFile);
						format(string, sizeof(string), " [%s.*.*.*] -{FFFF00} %s", ip222, ssss11);
						SendClientMessage(playerid, COLOR_GREEN, string);
					}
//---------------------------------- конец -------------------------------------
					for(new i = 0; i < 26; i++)//поиск дополнительных имён файлов
					{
						for(new j = 0; j < 26; j++)
						{
							for(new k = 0; k < 26; k++)
							{
								new ip444[128];
								new ip555[128];
								if(i == 0 && j == 0 && k == 0)
								{
									format(ip444, sizeof(ip444), "%s.*.*.*", ip222);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_C_C_C", ip333);//сборка дополнительных имён файлов
								}
								if(i == 0 && j == 0 && k != 0)
								{
									format(ip444, sizeof(ip444), "%s.*.*.%d*", ip222, k);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_C_C_%dC", ip333, k);//сборка дополнительных имён файлов
								}
								if(i == 0 && j != 0 && k == 0)
								{
									format(ip444, sizeof(ip444), "%s.*.%d*.*", ip222, j);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_C_%dC_C", ip333, j);//сборка дополнительных имён файлов
								}
								if(i == 0 && j != 0 && k != 0)
								{
									format(ip444, sizeof(ip444), "%s.*.%d*.%d*", ip222, j, k);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_C_%dC_%dC", ip333, j, k);//сборка дополнительных имён файлов
								}
								if(i != 0 && j == 0 && k == 0)
								{
									format(ip444, sizeof(ip444), "%s.%d*.*.*", ip222, i);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_%dC_C_C", ip333, i);//сборка дополнительных имён файлов
								}
								if(i != 0 && j == 0 && k != 0)
								{
									format(ip444, sizeof(ip444), "%s.%d*.*.%d*", ip222, i, k);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_%dC_C_%dC", ip333, i, k);//сборка дополнительных имён файлов
								}
								if(i != 0 && j != 0 && k == 0)
								{
									format(ip444, sizeof(ip444), "%s.%d*.%d*.*", ip222, i, j);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_%dC_%dC_C", ip333, i, j);//сборка дополнительных имён файлов
								}
								if(i != 0 && j != 0 && k != 0)
								{
									format(ip444, sizeof(ip444), "%s.%d*.%d*.%d*", ip222, i, j, k);//сборка дополнительных IP-адресов
									format(ip555, sizeof(ip555), "%s_%dC_%dC_%dC", ip333, i, j, k);//сборка дополнительных имён файлов
								}
								format(string,sizeof(string),"banlist/ipadr/%s.ini",ip555);
								if(fexist(string))
								{
									ind3 = 1;
									strdel(ssss11, 0, 256);
									new File: UserFile = fopen(string, io_read);//чтение файла
									new key[ 256 ];
									new Data[ 256 ];
									while ( fread( UserFile , Data , sizeof( Data ) ) )
									{
										key = ini_GetKey( Data );
										if( strcmp( key , "Data" , true ) == 0 ) { ssss11 = ini_GetValue( Data ); }
									}
									fclose(UserFile);
									format(string, sizeof(string), " [%s] -{FFFF00} %s", ip444, ssss11);
									SendClientMessage(playerid, COLOR_GREEN, string);
								}
							}
						}
					}
				}
				if(ind3 == 0)
				{
					SendClientMessage(playerid,COLOR_RED," IP-адрес в бан-листе не найден !");
				}
				else
				{
					format(string, sizeof(string), " *** Админ %s просмотрел IP-адрес [%s] в бан-листе.", RealName[playerid], ip222);
					print(string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/tadm", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /tadm [ид настройки (0- запретить всем");
				SendClientMessage(playerid, COLOR_GRAD2, " игрокам водить поезда, 1- разрешить всем игрокам водить");
				SendClientMessage(playerid, COLOR_GRAD2, " поезда, 2- вернуть все поезда на места их спавна, 3-");
				SendClientMessage(playerid, COLOR_GRAD2, " просмотреть статус резрешения)]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 3)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 3 !");
				return 1;
			}
			if(para1 == 0)
			{
				if(pertrain == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Запрет уже в действии !");
				}
				else
				{
					pertrain = 0;
					format(string, sizeof(string), " *** Админ %s запретил всем игрокам водить поезда.", RealName[playerid]);
					print(string);
					SendClientMessageToAll(COLOR_RED, string);
				}
				return 1;
			}
			if(para1 == 1)
			{
				if(pertrain == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Разрешение уже в действии !");
				}
				else
				{
					pertrain = 1;
					format(string, sizeof(string), " *** Админ %s разрешил всем игрокам водить поезда.", RealName[playerid]);
					print(string);
					SendClientMessageToAll(COLOR_GREEN, string);
				}
				return 1;
			}
			if(para1 == 2)
			{
				new car;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{//проверить всех игроков
					if(IsPlayerConnected(i))
					{
						car = GetPlayerVehicleID(i);
						if(TrainID[0] <= car <= TrainID22[0] || TrainID[1] <= car <= TrainID22[1] ||
						TrainID[2] <= car <= TrainID22[2] || TrainID[3] <= car <= TrainID22[3] ||
						TrainID[4] <= car <= TrainID22[4] || TrainID[5] <= car <= TrainID22[5] ||
						TrainID[6] <= car <= TrainID22[6] || TrainID[7] <= car <= TrainID22[7])
						{//если игрок в поезде или в вагоне, то слапнуть игрока
							new Float:x, Float:y, Float:z, Float:hp;
							tpdrift[i] = 1;
							EnterTick33[i] = 1;//обход антикрашера - 3
							GetPlayerHealth(i,hp);
							SetPlayerHealth(i,hp-5);
							GetPlayerPos(i,x,y,z);
							SetPlayerPos(i,x+3,y+3,z+5);
						}
					}
				}
    			for(new i = 0; i < 8; i++)
				{
					SetVehicleToRespawn(TrainID[i]);//респавн всех поездов
					SetVehicleToRespawn(TrainID[i]+1);
					SetVehicleToRespawn(TrainID[i]+2);
					SetVehicleToRespawn(TrainID[i]+3);
				}
				format(string, sizeof(string), " *** Админ %s вернул все поезда на места их спавна.", RealName[playerid]);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);
				return 1;
			}
			if(para1 == 3)
			{
				if(pertrain == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Всем игрокам ЗАПРЕЩЕНО водить поезда !");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREEN, " Всем игрокам РАЗРЕШЕНО водить поезда !");
				}
				printf(" *** Админ %s просмотрел статус разрешения на вождение поездов.", RealName[playerid]);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/muteakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 1)
    	{
   			new data2[53],dopper,csec;
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /muteakk [имя аккаунта] [число секунд");
				SendClientMessage(playerid, COLOR_GRAD2, " (чтобы разоткнуть, введите 3 секунды)] [причина]");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " /muteakk [имя аккаунта] [число секунд] [причина] !");
				return 1;
			}
			csec = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
#if (MOD90INS == 0)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))
			{
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
#endif
#if (MOD90INS == 1)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
			{//проверим регистрацию в SQLite
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
					return 1;
				}
				else
				{
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
#if (MOD90INS == 0)
			new File: UserFile = fopen(string, io_read);//чтение аккаунта
			new key[ 256 ] , val[ 256 ];
			new Data[ 256 ];
			while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
				if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
				if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
				if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
				if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
				if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
				if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
				if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
				if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
				if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
				if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
				if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
				if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
				if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
				if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
				if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//				if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//				if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//				if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//				if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//				if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//				if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//				if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//				if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//				if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//				if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//				if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
				if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
				if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
				if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
				if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
				if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
				if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
				if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
				if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
				if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
				if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
				if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
				if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
				if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
				if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
				if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
				if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
				if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
				if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
				if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
				if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
				if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
				if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
				if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
				if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
				if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
				if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
			}
			fclose(UserFile);
			strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
			strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
			strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
#endif
#if (MOD90INS == 1)
			new mgrakk = 0;
			if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
			{
				mgrakk = 1;
				new File: UserFile = fopen(string, io_read);//чтение аккаунта
			    new key[ 256 ] , val[ 256 ];
			    new Data[ 256 ];
				while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
					if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
					if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
					if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    	if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    	if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
			        if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
			        if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
			        if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
			        if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
			        if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
			        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
			        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
			        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
			        if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
			        if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
			        if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
			        if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			        if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			        if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			        if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			        if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			        if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			        if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			        if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			        if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			        if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			        if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			        if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
			        if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
			        if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
			        if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
			        if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
			        if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
			        if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
			        if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
			        if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
			        if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
			        if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
			        if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
			        if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
			        if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
			        if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
			        if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
			        if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
			        if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
			        if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
			        if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
			        if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
					if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
			        if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
			        if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
			        if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
			        if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
			        if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
                }
                fclose(UserFile);
				strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
				strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
				strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
			}
			else//иначе: (если аккаунт зарегистрирован в SQLite)
			{
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Ошибка чтения аккаунта игрока из БД !");
					return 1;
				}
				else//иначе: (если аккаунт зарегистрирован в БД)
				{
					new buffer[32];//читаем данные из БД
					db_get_field(querydb[playerid], 7, adrip, 256);//IPAdr
					db_get_field(querydb[playerid], 9, buffer, 32); data2[1] = strval(buffer);//AdminLevel
					db_get_field(querydb[playerid], 15, buffer, 32); data2[7] = strval(buffer);//Muted
					db_get_field(querydb[playerid], 16, buffer, 32); data2[8] = strval(buffer);//Mutedsec
					db_get_field(querydb[playerid], 22, buffer, 32); data2[14] = strval(buffer);//Gang
					db_get_field(querydb[playerid], 23, buffer, 32); data2[15] = strval(buffer);//GangLvl
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
   				if(IsPlayerConnected(i))
		    	{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
			new fadm;
			if(data2[1] < 0)
			{
				fadm = data2[1] * -1;
			}
			else
			{
				fadm = data2[1];
			}
			if(fadm >= 1 && (PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 3))//проверка аккаунта на админку
			{
				if(fadm == 5)//подмена 5-го левела на 4-й
				{
					dopper = 4;
				}
				else
				{
					dopper = fadm;
				}
				format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] - админ %d LVL !", akk, dopper);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			if(csec != 3)//заткнуть игрока
			{
				if(csec < 5) {csec = 5;}
				if(data2[8] == 0)//если игрок НЕ заткнут, то:
				{
					data2[7]++;
				}
				data2[8] = csec;
			}
			else//разоткнуть игрока
			{
				if(data2[8] > 0)//если игрок заткнут, то:
				{
  					data2[7]--;
					data2[8] = 0;
				}
				else
				{
			  		SendClientMessage(playerid, COLOR_RED, " Выбранный игрок не заткнут !");
					return 1;
				}
			}
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			new gngakkrd = 0;
			new string999[256];
			format(string999,sizeof(string999),"gangs/players/%s.ini",akk);
			if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
			{
				gngakkrd = 1;
				new string333[256];
				format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
				new File: UserFile333 = fopen(string333, io_read);//чтение файла
				new key333[ 256 ] , val333[ 256 ];
				new Data333[ 256 ];
				while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
				{
					key333 = ini_GetKey( Data333 );
					if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
					if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
				}
				fclose(UserFile333);
			}
//---------------------------------- конец -------------------------------------
#if (MOD90INS == 0)
			new File: hFile = fopen(string, io_write);//запись изменённого аккаунта
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
				format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
				format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
				format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
				format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
				format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
				format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
				format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
				format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
				format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
				format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
				format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
				format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//				format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//				format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//				format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//				format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//				format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//				format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//				format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//				format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//				format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//				format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//				format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
				fclose(hFile);
			}
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			if(gngakkrd == 1)
			{
				fremove(string999);
			}
//---------------------------------- конец -------------------------------------
#endif
#if (MOD90INS == 1)
			if(mgrakk == 1)//если аккаунт был зарегистрирован в fopen, то:
			{
				format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", akk);//миграция аккаунта в БД, создаём запрос БД
				db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

				format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
				format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
				format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
				format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
				format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, akk,igkey,tdreg);//IDCopy,Name,Key,TDReg
				format(strdln, sizeof(strdln), "%s0,0,0,'%s',", strdln, adrip);//DEndConD,DEndConM,DEndConY,IPAdr
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[0],data2[1],data2[2]);//MinLog,AdminLevel,AdminShadow
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[3],data2[4],data2[5]);//AdminLive,Registered,Prison
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[6],data2[7],data2[8]);//Prisonsec,Muted,Mutedsec
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[9],data2[10],data2[11]);//Money,Kills,Deaths
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[12],data2[13],data2[14],data2[15]);//VIP,Lock,Gang,GangLvl
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[27],data2[28],data2[29],data2[30]);//Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[31],data2[32],data2[33],data2[34]);//Weapon_slot4,Weapon_slot5,Weapon_slot6,Weapon_slot7
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[35],data2[36],data2[37],data2[38]);//Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[39],data2[40],data2[41],data2[42]);//Weapon_slot12,Ammo_slot0,Ammo_slot1,Ammo_slot2
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[43],data2[44],data2[45],data2[46]);//Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[47],data2[48],data2[49],data2[50]);//Ammo_slot7,Ammo_slot8,Ammo_slot9,Ammo_slot10
				format(strdln, sizeof(strdln), "%s%d,%d)", strdln, data2[51],data2[52]);//Ammo_slot11,Ammo_slot12
				db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				if(gngakkrd == 1)
				{
					fremove(string999);
				}
//---------------------------------- конец -------------------------------------
				if(fexist(string))
				{
					fremove(string);//удаляем аккаунт из fopen
				}
			}
			else//иначе: (если аккаунт был зарегистрирован в SQLite)
			{
				if(gngakkrd == 1)//если был найден аккаунт клана, то:
				{
					format(strdln, sizeof(strdln), "UPDATE Players SET Muted = %d,Mutedsec = %d,",data2[7],data2[8]);//создаём запрос БД
					format(strdln, sizeof(strdln), "%sGang = %d,GangLvl = %d WHERE (Name = '%s')", strdln, data2[14],data2[15],akk);
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД

					if(gngakkrd == 1)
					{
						fremove(string999);
					}
				}
				else//иначе: (если НЕ был найден аккаунт клана)
				{
					format(strdln, sizeof(strdln), "UPDATE Players SET Muted = %d,Mutedsec = %d WHERE (Name = '%s')",data2[7],data2[8],akk);//создаём запрос БД
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
				}
			}
#endif
			if(csec != 3)//заткнуть игрока
			{
				new dopcis;
				dopcis = FCislit(csec);
				switch(dopcis)
				{
					case 0: format(ssss, sizeof(ssss), " *** Админ %s заткнул аккаунт игрока %s на %d секунд , причина: %s", RealName[playerid], akk, csec, result);
					case 1: format(ssss, sizeof(ssss), " *** Админ %s заткнул аккаунт игрока %s на %d секунду , причина: %s", RealName[playerid], akk, csec, result);
					case 2: format(ssss, sizeof(ssss), " *** Админ %s заткнул аккаунт игрока %s на %d секунды , причина: %s", RealName[playerid], akk, csec, result);
				}
				print(ssss);
				SendClientMessageToAll(COLOR_RED, ssss);
			}
			else//разоткнуть игрока
			{
				format(ssss, sizeof(ssss), " *** Админ %s разоткнул аккаунт игрока %s , причина: амнистия ;)))", RealName[playerid], akk);
				print(ssss);
				SendClientMessageToAll(COLOR_GREEN, ssss);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/prisonakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 1)
    	{
   			new data2[53],dopper,csec;
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /prisonakk [имя аккаунта] [число секунд");
				SendClientMessage(playerid, COLOR_GRAD2, " (чтобы освободить, введите 3 секунды)] [причина]");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " /prisonakk [имя аккаунта] [число секунд] [причина] !");
				return 1;
			}
			csec = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
#if (MOD90INS == 0)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))
			{
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
#endif
#if (MOD90INS == 1)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
			{//проверим регистрацию в SQLite
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
					return 1;
				}
				else
				{
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
#if (MOD90INS == 0)
			new File: UserFile = fopen(string, io_read);//чтение аккаунта
			new key[ 256 ] , val[ 256 ];
			new Data[ 256 ];
			while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
				if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
				if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
				if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
				if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
				if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
				if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
				if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
				if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
				if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
				if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
				if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
				if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
				if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
				if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
				if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//				if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//				if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//				if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//				if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//				if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//				if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//				if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//				if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//				if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//				if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//				if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
				if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
				if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
				if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
				if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
				if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
				if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
				if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
				if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
				if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
				if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
				if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
				if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
				if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
				if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
				if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
				if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
				if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
				if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
				if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
				if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
				if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
				if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
				if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
				if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
				if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
				if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
			}
			fclose(UserFile);
			strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
			strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
			strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
#endif
#if (MOD90INS == 1)
			new mgrakk = 0;
			if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
			{
				mgrakk = 1;
				new File: UserFile = fopen(string, io_read);//чтение аккаунта
			    new key[ 256 ] , val[ 256 ];
			    new Data[ 256 ];
				while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
					if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
					if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
					if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    	if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    	if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
			        if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
			        if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
			        if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
			        if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
			        if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
			        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
			        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
			        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
			        if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
			        if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
			        if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
			        if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			        if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			        if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			        if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			        if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			        if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			        if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			        if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			        if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			        if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			        if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			        if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
			        if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
			        if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
			        if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
			        if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
			        if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
			        if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
			        if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
			        if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
			        if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
			        if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
			        if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
			        if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
			        if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
			        if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
			        if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
			        if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
			        if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
			        if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
			        if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
			        if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
					if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
			        if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
			        if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
			        if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
			        if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
			        if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
                }
                fclose(UserFile);
				strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
				strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
				strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
			}
			else//иначе: (если аккаунт зарегистрирован в SQLite)
			{
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Ошибка чтения аккаунта игрока из БД !");
					return 1;
				}
				else//иначе: (если аккаунт зарегистрирован в БД)
				{
					new buffer[32];//читаем данные из БД
					db_get_field(querydb[playerid], 7, adrip, 256);//IPAdr
					db_get_field(querydb[playerid], 9, buffer, 32); data2[1] = strval(buffer);//AdminLevel
					db_get_field(querydb[playerid], 13, buffer, 32); data2[5] = strval(buffer);//Prison
					db_get_field(querydb[playerid], 14, buffer, 32); data2[6] = strval(buffer);//Prisonsec
					db_get_field(querydb[playerid], 22, buffer, 32); data2[14] = strval(buffer);//Gang
					db_get_field(querydb[playerid], 23, buffer, 32); data2[15] = strval(buffer);//GangLvl
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
   				if(IsPlayerConnected(i))
		    	{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
			new fadm;
			if(data2[1] < 0)
			{
				fadm = data2[1] * -1;
			}
			else
			{
				fadm = data2[1];
			}
			if(fadm >= 1 && (PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 3))//проверка аккаунта на админку
			{
				if(fadm == 5)//подмена 5-го левела на 4-й
				{
					dopper = 4;
				}
				else
				{
					dopper = fadm;
				}
				format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] - админ %d LVL !", akk, dopper);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			if(csec != 3)//посадить игрока
			{
				if(csec < 5) {csec = 5;}
				if(data2[6] == 0)//если не в тюрьме, то:
				{
					data2[5]++;
				}
				data2[6] = csec;
			}
			else//освободить игрока
			{
				if(data2[6] > 0)//если игрок в тюрьме, то:
				{
  					data2[5]--;
					data2[6] = 0;
				}
				else
				{
			  		SendClientMessage(playerid, COLOR_RED, " Выбранный игрок не сидит в тюрьме !");
					return 1;
				}
			}
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			new gngakkrd = 0;
			new string999[256];
			format(string999,sizeof(string999),"gangs/players/%s.ini",akk);
			if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
			{
				gngakkrd = 1;
				new string333[256];
				format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
				new File: UserFile333 = fopen(string333, io_read);//чтение файла
				new key333[ 256 ] , val333[ 256 ];
				new Data333[ 256 ];
				while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
				{
					key333 = ini_GetKey( Data333 );
					if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
					if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
				}
				fclose(UserFile333);
			}
//---------------------------------- конец -------------------------------------
#if (MOD90INS == 0)
			new File: hFile = fopen(string, io_write);//запись изменённого аккаунта
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
				format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
				format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
				format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
				format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
				format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
				format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
				format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
				format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
				format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
				format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
				format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
				format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//				format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//				format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//				format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//				format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//				format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//				format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//				format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//				format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//				format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//				format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//				format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
				format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
				format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
				fclose(hFile);
			}
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			if(gngakkrd == 1)
			{
				fremove(string999);
			}
//---------------------------------- конец -------------------------------------
#endif
#if (MOD90INS == 1)
			if(mgrakk == 1)//если аккаунт был зарегистрирован в fopen, то:
			{
				format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", akk);//миграция аккаунта в БД, создаём запрос БД
				db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

				format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
				format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
				format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
				format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
				format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, akk,igkey,tdreg);//IDCopy,Name,Key,TDReg
				format(strdln, sizeof(strdln), "%s0,0,0,'%s',", strdln, adrip);//DEndConD,DEndConM,DEndConY,IPAdr
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[0],data2[1],data2[2]);//MinLog,AdminLevel,AdminShadow
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[3],data2[4],data2[5]);//AdminLive,Registered,Prison
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[6],data2[7],data2[8]);//Prisonsec,Muted,Mutedsec
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[9],data2[10],data2[11]);//Money,Kills,Deaths
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[12],data2[13],data2[14],data2[15]);//VIP,Lock,Gang,GangLvl
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[27],data2[28],data2[29],data2[30]);//Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[31],data2[32],data2[33],data2[34]);//Weapon_slot4,Weapon_slot5,Weapon_slot6,Weapon_slot7
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[35],data2[36],data2[37],data2[38]);//Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[39],data2[40],data2[41],data2[42]);//Weapon_slot12,Ammo_slot0,Ammo_slot1,Ammo_slot2
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[43],data2[44],data2[45],data2[46]);//Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[47],data2[48],data2[49],data2[50]);//Ammo_slot7,Ammo_slot8,Ammo_slot9,Ammo_slot10
				format(strdln, sizeof(strdln), "%s%d,%d)", strdln, data2[51],data2[52]);//Ammo_slot11,Ammo_slot12
				db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				if(gngakkrd == 1)
				{
					fremove(string999);
				}
//---------------------------------- конец -------------------------------------
				if(fexist(string))
				{
					fremove(string);//удаляем аккаунт из fopen
				}
			}
			else//иначе: (если аккаунт был зарегистрирован в SQLite)
			{
				if(gngakkrd == 1)//если был найден аккаунт клана, то:
				{
					format(strdln, sizeof(strdln), "UPDATE Players SET Prison = %d,Prisonsec = %d,",data2[5],data2[6]);//создаём запрос БД
					format(strdln, sizeof(strdln), "%sGang = %d,GangLvl = %d WHERE (Name = '%s')", strdln, data2[14],data2[15],akk);
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД

					if(gngakkrd == 1)
					{
						fremove(string999);
					}
				}
				else//иначе: (если НЕ был найден аккаунт клана)
				{
					format(strdln, sizeof(strdln), "UPDATE Players SET Prison = %d,Prisonsec = %d WHERE (Name = '%s')",data2[5],data2[6],akk);//создаём запрос БД
					db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
				}
			}
#endif
			if(csec != 3)//посадить игрока
			{
				new dopcis;
				dopcis = FCislit(csec);
				switch(dopcis)
				{
					case 0: format(ssss, sizeof(ssss), " *** Админ %s посадил аккаунт игрока %s в тюрьму на %d секунд , причина: %s", RealName[playerid], akk, csec, result);
					case 1: format(ssss, sizeof(ssss), " *** Админ %s посадил аккаунт игрока %s в тюрьму на %d секунду , причина: %s", RealName[playerid], akk, csec, result);
					case 2: format(ssss, sizeof(ssss), " *** Админ %s посадил аккаунт игрока %s в тюрьму на %d секунды , причина: %s", RealName[playerid], akk, csec, result);
				}
				print(ssss);
				SendClientMessageToAll(COLOR_RED, ssss);
			}
			else//освободить игрока
			{
				format(ssss, sizeof(ssss), " *** Админ %s освободил аккаунт игрока %s , причина: амнистия ;)))", RealName[playerid], akk);
				print(ssss);
				SendClientMessageToAll(COLOR_GREEN, ssss);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/openip", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /openip [ид настройки(0-2)] ( 0- очистить слот");
				SendClientMessage(playerid, COLOR_GRAD2, " IP-адреса, 1- добавить IP-адрес в слот, 2- просмотреть настройки )");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 2)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид настройки от 0 до 2 !");
				return 1;
			}
			if(para1 == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /openip 0 [номер слота IP-адреса(0-39)]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 0 || para2 > 39)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер слота IP-адреса от 0 до 39 !");
					return 1;
				}
				if(strlen(OpenIP[para2]) == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный слот пустой !");
					return 1;
				}
				strdel(OpenIP[para2],0,256);
				OpenIP22[para2] = 0;
				SaveOpenIP();//запись IP-слотов
				ReadOpenIP();//чтение IP-слотов
				format(string, sizeof(string), " *** Админ %s [%d] очистил %d слот IP-адреса .", RealName[playerid],playerid,para2);
				print(string);
				format(string, sizeof(string), " Вы очистили %d слот IP-адреса .", para2);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /openip 1 [номер слота IP-адреса(0-39)]");
					SendClientMessage(playerid, COLOR_GRAD2, " [максимум подключений с заданного IP-адреса(2-10)] [IP-адрес]");
					return 1;
				}
				new para2;
				para2 = strval(tmp);
				if(para2 < 0 || para2 > 39)
				{
					SendClientMessage(playerid, COLOR_RED, " Номер слота IP-адреса от 0 до 39 !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				new para3;
				para3 = strval(tmp);
				if(para3 < 2 || para3 > 10)
				{
					SendClientMessage(playerid, COLOR_RED, " Максимум подключений с заданного IP-адреса от 2 до 10 !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				new dltmp;
				dltmp = strlen(tmp);
				if(dltmp < 7 || dltmp > 15)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина IP-адреса должна быть от 7 до 15 символов !");
					return 1;
				}
				new dopper111 = 0;
				new dopper222 = 0;
				for(new i = 0; i < dltmp; i++)
				{
					if((tmp[i] < 48 || tmp[i] > 57) && tmp[i] != '.' && tmp[i] != '*') {dopper111 = 1;}
					if(tmp[i] == '.') {dopper222++;}
				}
				if(dopper111 == 1 || dopper222 != 3)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
				for(new i = 0; i < 4; i++)//очистка локальной части массива ipper44
				{
					for(new j = 0; j < 32; j++)
					{
						ipper44[playerid][i][j] = 0;
					}
				}
				new ind1, ind2;//разделение IP-адреса
				ind1 = -1;
				for(new i = 0; i < 4; i++)
				{
					ind1++;
					ind2 = 0;
					while(tmp[ind1] != '.')
					{
						if(ind1 > dltmp)
						{
							break;
						}
						ipper44[playerid][i][ind2] = tmp[ind1];
						ind1++;
						ind2++;
					}
				}
				dopper111 = 0;
				for(new i = 0; i < 4; i++)
				{
					if(strlen(ipper44[playerid][i]) < 1 || strlen(ipper44[playerid][i]) > 3) {dopper111 = 1;}
				}
    			if(dopper111 == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
    			if(strfind(ipper44[playerid][0], "*", true) != -1)
				{
					SendClientMessage(playerid, COLOR_RED, " IP-адрес НЕ может начинаться с шаблона !");
					return 1;
				}
    			if(strval(ipper44[playerid][0]) > 255)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
				dopper111 = 0;
    			if((strfind(ipper44[playerid][1], "*", true) == -1 && strfind(ipper44[playerid][2], "*", true) != -1 && strfind(ipper44[playerid][3], "*", true) != -1 &&
				strlen(ipper44[playerid][2]) == 1 && strlen(ipper44[playerid][3]) == 1) ||
				(strfind(ipper44[playerid][1], "*", true) == -1 && strfind(ipper44[playerid][2], "*", true) == -1 && strfind(ipper44[playerid][3], "*", true) == -1))
				{
					dopper111 = 1;
				}
    			if(dopper111 == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Шаблон указан не верно !");
					return 1;
				}
				new ind3 = 1;//проверка каждой группы цифр на максимально допустимый адрес
				new ind4 = 0;
				while(ind3 < 4)
				{
					if(ipper44[playerid][ind3][0] != '*')
					{
						if(strval(ipper44[playerid][ind3]) > 255) {ind4 = 1;}
					}
					ind3++;
				}
    			if(ind4 == 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Ошибка в написании IP-адреса !");
					return 1;
				}
				new ip333[128];//сборка IP-адреса
				format(ip333, sizeof(ip333), "%s.%s.%s.%s", ipper44[playerid][0], ipper44[playerid][1], ipper44[playerid][2], ipper44[playerid][3]);
				if((strcmp(ip333, OpenIP[para2], false) == 0 && strlen(OpenIP[para2]) != 0) && para3 == OpenIP22[para2])
				{
					SendClientMessage(playerid, COLOR_RED, " Максимум подключений с заданного IP-адреса и набранный");
					SendClientMessage(playerid, COLOR_RED, " Вами IP-адрес уже записаны в выбранном слоте !");
					return 1;
				}
				dopper111 = 0;
				dopper222 = 0;
				while(dopper111 < 40)//поиск повторного IP-адреса
				{
					if(strcmp(ip333, OpenIP[dopper111], false) == 0 && strlen(OpenIP[dopper111]) != 0 && dopper111 != para2)
					{//если IP-адреса найден, И слот НЕ равен нулю, И это НЕ выбранный слот, то:
						dopper222 = 1;
						break;
					}
					dopper111++;
				}
    			if(dopper222 == 1)
				{
					format(string, sizeof(string), " Набранный Вами IP-адрес уже записан в %d слоте !", dopper111);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				dopper111 = 0;
				dopper222 = 0;
				new ip555[128];
    			if(ipper44[playerid][3][0] != 42)//если IP-адрес был набран полностью (НЕ шаблоном), то:
				{
					format(ip555, sizeof(ip555), "%s.%s.*.*", ipper44[playerid][0], ipper44[playerid][1]);//преобразование IP-адреса в шаблон
					while(dopper111 < 40)//поиск повторного IP-адреса (шаблона)
					{
						if(strcmp(ip555, OpenIP[dopper111], false) == 0 && strlen(OpenIP[dopper111]) != 0 && dopper111 != para2)
						{//если шаблон IP-адреса найден, И слот НЕ равен нулю, И это НЕ выбранный слот, то:
							dopper222 = 1;
							break;
						}
						dopper111++;
					}
    				if(dopper222 == 1)
					{
						format(string, sizeof(string), " Набранный Вами IP-адрес уже записан в шаблоне, в %d слоте !", dopper111);
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
					}
				}
				else//если IP-адрес был набран как шаблон, то:
				{
					new dopper333;
					new dopper444;
					while(dopper111 < 40)//поиск повторного IP-адреса (уже входящего в набранный шаблон)
					{
						if(strlen(OpenIP[dopper111]) != 0 && dopper111 != para2)
						{//если слот НЕ равен нулю, И это НЕ выбранный слот, то:
							if(OpenIP[dopper111][strlen(OpenIP[dopper111])-1] != 42)
							{//если IP-адреса НЕ шаблон, то:
								dopper333 = 0;//преобразование IP-адреса в шаблон
								dopper444 = 0;
								while(dopper333 <= strlen(OpenIP[dopper111]))
								{
									if(OpenIP[dopper111][dopper333] == 46) { dopper444++; }
									ip555[dopper333] = OpenIP[dopper111][dopper333];
									dopper333++;
									if(dopper444 == 2) { break; }
								}
								ip555[dopper333] = 42;
								dopper333++;
								ip555[dopper333] = 46;
								dopper333++;
								ip555[dopper333] = 42;
								dopper333++;
								ip555[dopper333] = 0;
								dopper333++;
								ip555[dopper333] = 0;
								if(strcmp(ip333, ip555, false) == 0)
								{//если набранный шаблон IP-адреса найден в преобразованном шаблоне, то:
									dopper222 = 1;
									break;
								}
							}
						}
						dopper111++;
					}
    				if(dopper222 == 1)
					{
						format(string, sizeof(string), " IP-адрес из набранного Вами шаблона уже записан в %d слоте !", dopper111);
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
					}
				}
				strdel(OpenIP[para2],0,256);
				strcat(OpenIP[para2], ip333);
				OpenIP22[para2] = para3;
				SaveOpenIP();//запись IP-слотов
				ReadOpenIP();//чтение IP-слотов
				format(string, sizeof(string), " *** Админ %s [%d] добавил %d слот IP-адреса [%d:::%s]", RealName[playerid],playerid,para2,para3,OpenIP[para2]);
				print(string);
				format(string, sizeof(string), " Вы добавили %d слот IP-адреса [%d:::%s]", para2,para3,OpenIP[para2]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			if(para1 == 2)
			{
				ReadOpenIP();//чтение IP-слотов
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------------------------------------------------------------------");
				format(string,sizeof(string)," Слот 0: [%d:::%s] Слот 1: [%d:::%s] Слот 2: [%d:::%s] Слот 3: [%d:::%s]",
				OpenIP22[0],OpenIP[0],OpenIP22[1],OpenIP[1],OpenIP22[2],OpenIP[2],OpenIP22[3],OpenIP[3]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 4: [%d:::%s] Слот 5: [%d:::%s] Слот 6: [%d:::%s] Слот 7: [%d:::%s]",
				OpenIP22[4],OpenIP[4],OpenIP22[5],OpenIP[5],OpenIP22[6],OpenIP[6],OpenIP22[7],OpenIP[7]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 8: [%d:::%s] Слот 9: [%d:::%s] Слот 10: [%d:::%s] Слот 11: [%d:::%s]",
				OpenIP22[8],OpenIP[8],OpenIP22[9],OpenIP[9],OpenIP22[10],OpenIP[10],OpenIP22[11],OpenIP[11]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 12: [%d:::%s] Слот 13: [%d:::%s] Слот 14: [%d:::%s] Слот 15: [%d:::%s]",
				OpenIP22[12],OpenIP[12],OpenIP22[13],OpenIP[13],OpenIP22[14],OpenIP[14],OpenIP22[15],OpenIP[15]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 16: [%d:::%s] Слот 17: [%d:::%s] Слот 18: [%d:::%s] Слот 19: [%d:::%s]",
				OpenIP22[16],OpenIP[16],OpenIP22[17],OpenIP[17],OpenIP22[18],OpenIP[18],OpenIP22[19],OpenIP[19]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 20: [%d:::%s] Слот 21: [%d:::%s] Слот 22: [%d:::%s] Слот 23: [%d:::%s]",
				OpenIP22[20],OpenIP[20],OpenIP22[21],OpenIP[21],OpenIP22[22],OpenIP[22],OpenIP22[23],OpenIP[23]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 24: [%d:::%s] Слот 25: [%d:::%s] Слот 26: [%d:::%s] Слот 27: [%d:::%s]",
				OpenIP22[24],OpenIP[24],OpenIP22[25],OpenIP[25],OpenIP22[26],OpenIP[26],OpenIP22[27],OpenIP[27]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 28: [%d:::%s] Слот 29: [%d:::%s] Слот 30: [%d:::%s] Слот 31: [%d:::%s]",
				OpenIP22[28],OpenIP[28],OpenIP22[29],OpenIP[29],OpenIP22[30],OpenIP[30],OpenIP22[31],OpenIP[31]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 32: [%d:::%s] Слот 33: [%d:::%s] Слот 34: [%d:::%s] Слот 35: [%d:::%s]",
				OpenIP22[32],OpenIP[32],OpenIP22[33],OpenIP[33],OpenIP22[34],OpenIP[34],OpenIP22[35],OpenIP[35]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string)," Слот 36: [%d:::%s] Слот 37: [%d:::%s] Слот 38: [%d:::%s] Слот 39: [%d:::%s]",
				OpenIP22[36],OpenIP[36],OpenIP22[37],OpenIP[37],OpenIP22[38],OpenIP[38],OpenIP22[39],OpenIP[39]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------------------------------------------------------------------");
				format(string,sizeof(string)," *** Админ %s [%d] просмотрел настройки команды /openip сервера.", RealName[playerid], playerid);
				print(string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/mmd", true) == 0)
	{
		if(GetPVarInt(playerid, "MnMode") == 1)
		{
			SetPVarInt(playerid, "MnMode", 2);
#if (MOD33INS == 1)
			printf(" --> Игрок %s [%d] включил Alt & 2 -режим вызова меню.", RealName[playerid], playerid);
			SendClientMessage(playerid, COLOR_GREEN, " Вы включили Alt & 2 -режим вызова меню.");
#endif
#if (MOD33INS == 2)
			printf(" --> Игрок %s [%d] отключил Y -режим вызова меню.", RealName[playerid], playerid);
			SendClientMessage(playerid, COLOR_RED, " Вы отключили Y -режим вызова меню.");
#endif
		}
		else
		{
			SetPVarInt(playerid, "MnMode", 1);
#if (MOD33INS == 1)
			printf(" --> Игрок %s [%d] отключил Alt & 2 -режим вызова меню.", RealName[playerid], playerid);
			SendClientMessage(playerid, COLOR_RED, " Вы отключили Alt & 2 -режим вызова меню.");
#endif
#if (MOD33INS == 2)
			printf(" --> Игрок %s [%d] включил Y -режим вызова меню.", RealName[playerid], playerid);
			SendClientMessage(playerid, COLOR_GREEN, " Вы включили Y -режим вызова меню.");
#endif
		}
    	return 1;
	}
	if(strcmp(cmd, "/playtp", true) == 0)
	{
   		if(PlayerInfo[playerid][pAdmin] >= 1)
    	{
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /playtp [ид игрока кого ТП] [ид игрока к кому ТП]");
				return 1;
			}
			new playtp1;
			playtp1 = strval(tmp);
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " /playtp [ид игрока кого ТП] [ид игрока к кому ТП] !");
				return 1;
			}
			new playtp2;
			playtp2 = strval(tmp);
			if(!IsPlayerConnected(playtp1))
			{
				SendClientMessage(playerid, COLOR_RED, " Игрока, кого ТП, нет на сервере !");
				return 1;
			}
			if(!IsPlayerConnected(playtp2))
			{
				SendClientMessage(playerid, COLOR_RED, " Игрока, к кому ТП, нет на сервере !");
				return 1;
			}
			if(playtp1 == playtp2)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ТП игрока к самому себе !");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[playtp1][pAdmin] > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Уровень админки игрока, кого ТП, выше Вашего !");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] <= 3 && PlayerInfo[playtp1][pAdmin] == 4)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП - админ 4-го уровня !");
				return 1;
			}
			if(PlayerInfo[playtp1][pAdmin] == 5)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП, защищён !");
				return 1;
			}
			if(PlayerInfo[playtp2][pAdmin] == 5)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, к кому ТП, защищён !");
				return 1;
			}
			if(PlayerInfo[playtp1][pPrisonsec] > 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП, сидит в тюрьме !");
				return 1;
			}
			if(perfrost[playtp1] != 600 && perfrost[playtp1] != playerid)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП, заморожен ! ( + был заморожен НЕ Вами ! )");
				return 1;
			}
			if(PlayLock1[0][playtp1] != 600 && PlayLock1[0][playtp1] != playerid)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП, заблокирован ! ( + был заблокирован НЕ Вами ! )");
				return 1;
			}
			if(admper1[playtp1] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП, занят наблюдением !");
				return 1;
			}
			if(admper1[playtp2] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, к кому ТП, занят наблюдением !");
				return 1;
			}
			if(playspa[playtp1] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, кого ТП, ещё не заспавнился !");
				return 1;
			}
			if(playspa[playtp2] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Игрок, к кому ТП, ещё не заспавнился !");
				return 1;
			}
			new dopper1, dopper2, dopper3, dopper4;
			dopper1 = 0;
			dopper2 = 0;
			dopper3 = 0;
			dopper4 = 0;
			new Float:ConX, Float:ConY, Float:ConZ;
			GetPlayerPos(playtp2, ConX, ConY, ConZ);

			if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper1 = 1; }

			if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
			(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
			(GetPlayerInterior(playtp2) == 15 || GetPlayerInterior(playtp2) == 14)) { dopper3 = 1; }

			GetPlayerPos(playtp1, ConX, ConY, ConZ);

			if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper2 = 1; }

			if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
			(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
			(GetPlayerInterior(playtp1) == 15 || GetPlayerInterior(playtp1) == 14)) { dopper4 = 1; }

			if(dopper1 == 1 && dopper2 == 0)//если игрока телепортируем c основной карты на админ-остров, то:
			{
				if(PlayerInfo[playtp1][pAdmin] == 0 && GetPVarInt(playtp1, "TotPr") == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " У игрока, кого ТП, нет защитного тотема !");
					return 1;
				}
				format(string,256," *** Админ %s телепортировал игрока %s к игроку %s .",RealName[playerid],RealName[playtp1],RealName[playtp2]);
				print(string);
				SendAdminMessage(COLOR_RED,string);
				if(PlayerInfo[playtp1][pAdmin] == 0)
				{
					format(string,256," *** Админ %s телепортировал Вас к игроку %s .",RealName[playerid],RealName[playtp2]);
					SendClientMessage(playtp1,COLOR_RED,string);
				}
				new Float:PosX, Float:PosY, Float:PosZ;
				PlayCRTP[playtp1] = 1;//блокировка контроля координат
				new nmod = GetVehicleModel(GetPlayerVehicleID(playtp1));
				if(nmod == 538 || nmod == 537)
				{//если игрок в поезде, то высадить игрока из поезда
					GetPlayerPos(playtp1,PosX,PosY,PosZ);
					SetPlayerPos(playtp1,PosX+3,PosY+3,PosZ+5);
				}
				tpdrift[playtp1] = 1;
				if(PlayLock1[0][playtp1] != 600 && PlayLock1[0][playtp1] == playerid)
				{//если игрок заблокирован, то ТП заблокированного игрока
					PlayLock1[1][playtp1] = GetPlayerInterior(playtp2);//изменение интерьера блокировки
					PlayLock1[2][playtp1] = GetPlayerVirtualWorld(playtp2);//изменение виртуального мира блокировки
					GetPlayerPos(playtp2, PlayLock2[0][playtp1], PlayLock2[1][playtp1], PlayLock2[2][playtp1]);//изменение координат блокировки
					PlayLock2[1][playtp1] = PlayLock2[1][playtp1] + 1;
				}
				else//иначе - ТП НЕ заблокированного игрока
				{
					SetPlayerInterior(playtp1, GetPlayerInterior(playtp2));
					SetPlayerVirtualWorld(playtp1, GetPlayerVirtualWorld(playtp2));
					GetPlayerPos(playtp2, PosX, PosY, PosZ);
					SetPlayerPos(playtp1, PosX, PosY+1, PosZ+1);
				}
			}
			else//если игрока телепортируем в любом направлении, ТОЛЬКО НЕ c основной карты на админ-остров, то:
			{
				format(string,256," *** Админ %s телепортировал игрока %s к игроку %s .",RealName[playerid],RealName[playtp1],RealName[playtp2]);
				print(string);
				SendAdminMessage(COLOR_RED,string);
				if(PlayerInfo[playtp1][pAdmin] == 0)
				{
					format(string,256," *** Админ %s телепортировал Вас к игроку %s .",RealName[playerid],RealName[playtp2]);
					SendClientMessage(playtp1,COLOR_RED,string);
				}
				new Float:PosX, Float:PosY, Float:PosZ;
				PlayCRTP[playtp1] = 1;//блокировка контроля координат
				new nmod = GetVehicleModel(GetPlayerVehicleID(playtp1));
				if(nmod == 538 || nmod == 537)
				{//если игрок в поезде, то высадить игрока из поезда
					GetPlayerPos(playtp1,PosX,PosY,PosZ);
					SetPlayerPos(playtp1,PosX+3,PosY+3,PosZ+5);
				}
				if(dopper3 == 1 && dopper4 == 0)//если игрока телепортируем НЕ С дерби НА дерби, то:
				{
					tpdrift[playtp1] = 1;
					if(PlayLock1[0][playtp1] != 600 && PlayLock1[0][playtp1] == playerid)
					{//если игрок заблокирован, то ТП заблокированного игрока
						PlayLock1[1][playtp1] = GetPlayerInterior(playtp2);//изменение интерьера блокировки
						PlayLock1[2][playtp1] = GetPlayerVirtualWorld(playtp2);//изменение виртуального мира блокировки
						GetPlayerPos(playtp2, PlayLock2[0][playtp1], PlayLock2[1][playtp1], PlayLock2[2][playtp1]);//изменение координат блокировки
						PlayLock2[1][playtp1] = PlayLock2[1][playtp1] + 1;
					}
					else//иначе - ТП НЕ заблокированного игрока
					{
						SetPlayerInterior(playtp1, GetPlayerInterior(playtp2));
						SetPlayerVirtualWorld(playtp1, GetPlayerVirtualWorld(playtp2));
						GetPlayerPos(playtp2, PosX, PosY, PosZ);
						SetPlayerPos(playtp1, PosX, PosY+1, PosZ+1);
					}
				}
				else//если игрока телепортируем в любом направлении, ЗА ИСКЛЮЧЕНИЕМ "НЕ С дерби НА дерби", то:
				{
					if(PlayLock1[0][playtp1] != 600 && PlayLock1[0][playtp1] == playerid)
					{//если игрок заблокирован, то ТП заблокированного игрока
						tpdrift[playtp1] = 1;
						PlayLock1[1][playtp1] = GetPlayerInterior(playtp2);//изменение интерьера блокировки
						PlayLock1[2][playtp1] = GetPlayerVirtualWorld(playtp2);//изменение виртуального мира блокировки
						GetPlayerPos(playtp2, PlayLock2[0][playtp1], PlayLock2[1][playtp1], PlayLock2[2][playtp1]);//изменение координат блокировки
						PlayLock2[1][playtp1] = PlayLock2[1][playtp1] + 1;
					}
					else//иначе - ТП НЕ заблокированного игрока
					{
						if(GetPlayerState(playtp1) == 2)//если игрок на месте водителя, то:
						{
							new regm = 1, per1, per2, Float:per3, Float:cor1, Float:cor2, Float:cor3;
							per1 = GetPlayerInterior(playtp2);
							per2 = GetPlayerVirtualWorld(playtp2);
							GetPlayerPos(playtp2, PosX, PosY, PosZ);
							cor1 = PosX;
							cor2 = PosY+1;
							cor3 = PosZ+1;
							StopDrift(playtp1,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
						}
						else//иначе:
						{
							tpdrift[playtp1] = 1;
							SetPlayerInterior(playtp1, GetPlayerInterior(playtp2));
							SetPlayerVirtualWorld(playtp1, GetPlayerVirtualWorld(playtp2));
							GetPlayerPos(playtp2, PosX, PosY, PosZ);
							SetPlayerPos(playtp1, PosX, PosY+1, PosZ+1);
						}
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/edplclans", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 4)
    	{
   			new data2[53];
			tmp = strtok(cmdtext, idx);
    		if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /edplclans [режим (0- On-Line игрок, 1- Off-Line игрок)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [ид игрока (режим 0), или имя аккаунта (режим 1)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [ид клана, или: 0 - удалить игрока из клана, -600 - запретить приглашать");
				SendClientMessage(playerid, COLOR_GRAD2, " игрока в клан] ( дополнительно: [уровень в клане (от 1 до 6)] )");
				return 1;
			}
			new para1 = strval(tmp);
			if(para1 < 0 || para1 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " [режим (0- On-Line игрок, 1- Off-Line игрок)] !");
				return 1;
			}
			akk = strtok(cmdtext, idx);
			if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_RED, " [ид игрока (режим 0), или имя аккаунта (режим 1)] !");
				return 1;
			}
			new para2;
			if(para1 == 0)
			{
				para2 = strval(akk);
				if(!IsPlayerConnected(para2))
				{
					SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
					return 1;
				}
				if(gPlayerLogged[para2] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
			}
			if(para1 == 1)
			{
				if(strlen(akk) < 1 || strlen(akk) > 25)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
					return 1;
				}
#if (MOD90INS == 0)
				format(string,sizeof(string),"players/%s.ini",akk);
//        		format(string,sizeof(string),"%s.ini",akk);
				if(!fexist(string))
				{
					SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
					return 1;
				}
#endif
#if (MOD90INS == 1)
				format(string,sizeof(string),"players/%s.ini",akk);
//        		format(string,sizeof(string),"%s.ini",akk);
				if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
				{//проверим регистрацию в SQLite
					format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
					querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
					if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
					{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
						db_free_result(querydb[playerid]);//очищаем результат запроса БД
						SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
						return 1;
					}
					else
					{
						db_free_result(querydb[playerid]);//очищаем результат запроса БД
					}
				}
#endif
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [ид клана, или 0 , или -600] !");
				return 1;
			}
			new para3 = strval(tmp);
			if(para3 < 0 && para3 != -600)
			{
				SendClientMessage(playerid, COLOR_RED, " [ид клана, или 0 , или -600] !");
				return 1;
			}
			new para4 = 0;
			if(para3 > 0)
			{
				new string22[256];
				format(string22,sizeof(string22),"gangs/%i.ini",para3);
				if(!fexist(string22) || para3 >= (MAX_GANGS - 1))
				{
					SendClientMessage(playerid, COLOR_RED, " Такого [ид клана] на сервере нет !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [уровень в клане (от 1 до 6)] !");
					return 1;
				}
				para4 = strval(tmp);
				if(para4 < 1 || para4 > 6)
				{
					SendClientMessage(playerid, COLOR_RED, " [уровень в клане (от 1 до 6)] !");
					return 1;
				}
			}
			if(para1 == 0)
			{
				if(PGang[para2] == para3 && GangLvl[para2] == para4)
				{
					SendClientMessage(playerid,COLOR_RED," У выбранного игрока уже установлены назначаемые данные !");
					return 1;
				}
				if(para3 == -600)
				{
					if(PGang[para2] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s запретил приглашать игрока %s в клан (/edplclans) .", RealName[playerid], RealName[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					if(PGang[para2] > 0)
					{
						if(idgangsave[para2] > 0)//если ID клана для записи - активен, то:
						{
							new perloc;
							idgangsave[para2] = 0;//очистка ID клана для записи
							perloc = 0;
							while(perloc < MAX_PLAYERS)//цикл для всех игроков
							{
								if(PGang[para2] == PGang[perloc] && para2 != perloc)
								{//если есть хотя бы один игрок из клана выходящего, то:
									idgangsave[perloc] = PGang[para2];
									break;
								}
								perloc++;
							}
						}

						format(ssss, sizeof(ssss), " *** Админ %s удалил игрока %s из клана (ид: %d) ,", RealName[playerid], RealName[para2], PGang[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и запретил приглашать игрока %s в клан (/edplclans) .", RealName[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						GPlayers[PGang[para2]]--;//делаем в клане -1 игрок
						GangSave(PGang[para2]);//записываем клан
					}
				}
				if(para3 == 0)
				{
					if(PGang[para2] == -600)
					{
						format(ssss, sizeof(ssss), " *** Админ %s разрешил приглашать игрока %s в клан (/edplclans) .", RealName[playerid], RealName[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					if(PGang[para2] > 0)
					{
						if(idgangsave[para2] > 0)//если ID клана для записи - активен, то:
						{
							new perloc;
							idgangsave[para2] = 0;//очистка ID клана для записи
							perloc = 0;
							while(perloc < MAX_PLAYERS)//цикл для всех игроков
							{
								if(PGang[para2] == PGang[perloc] && para2 != perloc)
								{//если есть хотя бы один игрок из клана выходящего, то:
									idgangsave[perloc] = PGang[para2];
									break;
								}
								perloc++;
							}
						}

						format(ssss, sizeof(ssss), " *** Админ %s удалил игрока %s из клана (ид: %d) ,", RealName[playerid], RealName[para2], PGang[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и разрешил приглашать игрока %s в клан (/edplclans) .", RealName[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						GPlayers[PGang[para2]]--;//делаем в клане -1 игрок
						GangSave(PGang[para2]);//записываем клан
					}
				}
				if(para3 > 0)
				{
					if(PGang[para2] == -600 || PGang[para2] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s приписал игрока %s к клану (ид: %d) ,", RealName[playerid], RealName[para2], para3);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и назначил игроку %s уровень %d в этом клане (/edplclans) .", RealName[para2], para4);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						if(para4 == 6)//если назначаемый уровень - уровень главы, то:
						{
							strdel(GHead[para3], 0, 64);//удалить имя старого главы клана
							strcat(GHead[para3], RealName[para2]);//назначить имя нового главы клана
						}
						GPlayers[para3]++;//делаем в клане +1 игрок
						GangSave(para3);//записываем клан

						if(GSkin[para3][para4-1] < 500)
						{//если на уровне установлен скин, то сменить скин приписанному игроку
							SetPVarInt(para2, "PlSkin", GSkin[para3][para4-1]);
							SetPlayerSkin(para2, GetPVarInt(para2, "PlSkin"));
						}
						ColorPlay[para2] = GColorDec[para3];
						SetPlayerColor(para2, ColorPlay[para2]);//устанавливаем цвет ника
						for(new i=0;i<MAX_PLAYERS;i++)//устанавливаем цвет маркера для всех игроков
						{
							SetPlayerMarkerForPlayer(i, para2, GColorDec[para3]);
						}

						new dopper = 0;
						for(new i = 0; i < MAX_PLAYERS; i++)//подготовка к записи ID клана
						{
							if(para3 > 0 && para3 == idgangsave[i])
							{//если игрок состоит в клане, и ID его клана уже есть в списке, то:
								dopper = 1;
							}
						}
						if(para3 > 0 && dopper == 0)
						{//если игрок состоит в клане, и ID его клана НЕ был найден в списке, то:
							idgangsave[para2] = para3;//записываем в список ID клана игрока
						}
					}
					if(PGang[para2] == para3)
					{
						format(ssss, sizeof(ssss), " *** Админ %s назначил игроку %s уровень %d в его клане (/edplclans) .", RealName[playerid], RealName[para2], para4);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						if(para4 == 6)//если назначаемый уровень - уровень главы, то:
						{
							strdel(GHead[para3], 0, 64);//удалить имя старого главы клана
							strcat(GHead[para3], RealName[para2]);//назначить имя нового главы клана
						}
						GangSave(para3);//записываем клан

						if(GSkin[para3][para4-1] < 500)
						{//если на уровне установлен скин, то сменить скин приписанному игроку
							SetPVarInt(para2, "PlSkin", GSkin[para3][para4-1]);
							SetPlayerSkin(para2, GetPVarInt(para2, "PlSkin"));
						}
					}
					if(PGang[para2] != para3 && PGang[para2] != -600 && PGang[para2] != 0)
					{
						if(idgangsave[para2] > 0)//если ID клана для записи - активен, то:
						{
							new perloc;
							idgangsave[para2] = 0;//очистка ID клана для записи
							perloc = 0;
							while(perloc < MAX_PLAYERS)//цикл для всех игроков
							{
								if(PGang[para2] == PGang[perloc] && para2 != perloc)
								{//если есть хотя бы один игрок из клана выходящего, то:
									idgangsave[perloc] = PGang[para2];
									break;
								}
								perloc++;
							}
						}

						format(ssss, sizeof(ssss), " *** Админ %s удалил игрока %s из клана (ид: %d) ,", RealName[playerid], RealName[para2], PGang[para2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** приписал игрока %s к клану (ид: %d) ,", RealName[para2], para3);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и назначил игроку %s уровень %d в этом клане (/edplclans) .", RealName[para2], para4);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						if(para4 == 6)//если назначаемый уровень - уровень главы, то:
						{
							strdel(GHead[para3], 0, 64);//удалить имя старого главы клана
							strcat(GHead[para3], RealName[para2]);//назначить имя нового главы клана
						}
						GPlayers[PGang[para2]]--;//делаем в клане -1 игрок
						GangSave(PGang[para2]);//записываем клан
						GPlayers[para3]++;//делаем в клане +1 игрок
						GangSave(para3);//записываем клан

						if(GSkin[para3][para4-1] < 500)
						{//если на уровне установлен скин, то сменить скин приписанному игроку
							SetPVarInt(para2, "PlSkin", GSkin[para3][para4-1]);
							SetPlayerSkin(para2, GetPVarInt(para2, "PlSkin"));
						}
						ColorPlay[para2] = GColorDec[para3];
						SetPlayerColor(para2, ColorPlay[para2]);//устанавливаем цвет ника
						for(new i=0;i<MAX_PLAYERS;i++)//устанавливаем цвет маркера для всех игроков
						{
							SetPlayerMarkerForPlayer(i, para2, GColorDec[para3]);
						}

						new dopper = 0;
						for(new i = 0; i < MAX_PLAYERS; i++)//подготовка к записи ID клана
						{
							if(para3 > 0 && para3 == idgangsave[i])
							{//если игрок состоит в клане, и ID его клана уже есть в списке, то:
								dopper = 1;
							}
						}
						if(para3 > 0 && dopper == 0)
						{//если игрок состоит в клане, и ID его клана НЕ был найден в списке, то:
							idgangsave[para2] = para3;//записываем в список ID клана игрока
						}
					}
				}
				PGang[para2] = para3;
				GangLvl[para2] = para4;
			}
			if(para1 == 1)
			{
#if (MOD90INS == 0)
				new File: UserFile = fopen(string, io_read);//чтение аккаунта
			    new key[ 256 ] , val[ 256 ];
			    new Data[ 256 ];
				while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
					if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
					if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
					if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    	if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    	if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
			        if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
			        if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
			        if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
			        if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
			        if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
			        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
			        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
			        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
			        if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
			        if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
			        if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
			        if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			        if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			        if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			        if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			        if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			        if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			        if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			        if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			        if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			        if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			        if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			        if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
			        if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
			        if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
			        if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
			        if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
			        if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
			        if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
			        if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
			        if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
			        if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
			        if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
			        if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
			        if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
			        if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
			        if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
			        if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
			        if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
			        if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
			        if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
			        if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
			        if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
			        if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
			        if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
			        if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
			        if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
			        if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
			        if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
                }
                fclose(UserFile);
				strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
				strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
				strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				new gngakkrd = 0;
				new string999[256];
				format(string999,sizeof(string999),"gangs/players/%s.ini",akk);
				if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
				{
					gngakkrd = 1;
					new string333[256];
					format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
					new File: UserFile333 = fopen(string333, io_read);//чтение файла
					new key333[ 256 ] , val333[ 256 ];
					new Data333[ 256 ];
					while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
					{
						key333 = ini_GetKey( Data333 );
						if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
						if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
					}
					fclose(UserFile333);
				}
				if(gngakkrd == 1)
				{
					new File: hFile = fopen(string, io_write);//запись изменённого аккаунта
					if (hFile)
					{
						new var[32];
						format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
						format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
						format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
						format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
						format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
						format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
						format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
						format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
						format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
						format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
						format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
						format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
						format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
						format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
						format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
						format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
						format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
						format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
						format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//						format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//						format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//						format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//						format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//						format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//						format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//						format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//						format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//						format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//						format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//						format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
						fclose(hFile);
					}
					fremove(string999);
				}
//---------------------------------- конец -------------------------------------
#endif
#if (MOD90INS == 1)
				if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
				{
					new File: UserFile = fopen(string, io_read);//чтение аккаунта
			    	new key[ 256 ] , val[ 256 ];
			    	new Data[ 256 ];
					while ( fread( UserFile , Data , sizeof( Data ) ) )
					{
						key = ini_GetKey( Data );
						if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
						if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
						if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
						if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    		if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    		if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    		if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
			        	if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
			        	if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
			        	if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
			        	if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
			        	if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
			        	if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
			        	if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
			        	if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
			        	if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
			        	if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
			        	if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
			        	if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			        	if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			        	if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			        	if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			        	if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			        	if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			        	if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			        	if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			        	if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			        	if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			        	if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			        	if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
						if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
                	}
                	fclose(UserFile);
					strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
					strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
					strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					new gngakkrd = 0;
					new string999[256];
					format(string999,sizeof(string999),"gangs/players/%s.ini",akk);
					if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
					{
						gngakkrd = 1;
						new string333[256];
						format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
						new File: UserFile333 = fopen(string333, io_read);//чтение файла
						new key333[ 256 ] , val333[ 256 ];
						new Data333[ 256 ];
						while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
						{
							key333 = ini_GetKey( Data333 );
							if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
							if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
						}
						fclose(UserFile333);
					}
//---------------------------------- конец -------------------------------------

					format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", akk);//миграция аккаунта в БД, создаём запрос БД
					db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

					format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
					format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
					format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
					format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
					format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
					format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
					format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, akk,igkey,tdreg);//IDCopy,Name,Key,TDReg
					format(strdln, sizeof(strdln), "%s0,0,0,'%s',", strdln, adrip);//DEndConD,DEndConM,DEndConY,IPAdr
					format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[0],data2[1],data2[2]);//MinLog,AdminLevel,AdminShadow
					format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[3],data2[4],data2[5]);//AdminLive,Registered,Prison
					format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[6],data2[7],data2[8]);//Prisonsec,Muted,Mutedsec
					format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[9],data2[10],data2[11]);//Money,Kills,Deaths
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[12],data2[13],data2[14],data2[15]);//VIP,Lock,Gang,GangLvl
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[27],data2[28],data2[29],data2[30]);//Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[31],data2[32],data2[33],data2[34]);//Weapon_slot4,Weapon_slot5,Weapon_slot6,Weapon_slot7
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[35],data2[36],data2[37],data2[38]);//Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[39],data2[40],data2[41],data2[42]);//Weapon_slot12,Ammo_slot0,Ammo_slot1,Ammo_slot2
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[43],data2[44],data2[45],data2[46]);//Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[47],data2[48],data2[49],data2[50]);//Ammo_slot7,Ammo_slot8,Ammo_slot9,Ammo_slot10
					format(strdln, sizeof(strdln), "%s%d,%d)", strdln, data2[51],data2[52]);//Ammo_slot11,Ammo_slot12
					db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					if(gngakkrd == 1)
					{
						fremove(string999);//удаляем аккаунт из системы кланов
					}
//---------------------------------- конец -------------------------------------
					if(fexist(string))
					{
						fremove(string);//удаляем аккаунт из fopen
					}
				}
				else//иначе: (если аккаунт зарегистрирован в SQLite)
				{
					format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
					querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
					if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
					{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
						db_free_result(querydb[playerid]);//очищаем результат запроса БД
						SendClientMessage(playerid,COLOR_RED," Ошибка чтения аккаунта игрока из БД !");
						return 1;
					}
					else//иначе: (если аккаунт зарегистрирован в БД)
					{
						new buffer[32];//читаем данные из БД
						db_get_field(querydb[playerid], 22, buffer, 32); data2[14] = strval(buffer);//Gang
						db_get_field(querydb[playerid], 23, buffer, 32); data2[15] = strval(buffer);//GangLvl
						db_free_result(querydb[playerid]);//очищаем результат запроса БД
					}
				}
#endif
				if(data2[14] == para3 && data2[15] == para4)
				{
					SendClientMessage(playerid,COLOR_RED," У выбранного игрока уже установлены назначаемые данные !");
					return 1;
				}
				if(para3 == -600)
				{
					if(data2[14] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s запретил приглашать аккаунт игрока %s в клан (/edplclans) .", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					if(data2[14] > 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s удалил аккаунт игрока %s из клана (ид: %d) ,", RealName[playerid], akk, data2[14]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и запретил приглашать аккаунт игрока %s в клан (/edplclans) .", akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						GPlayers[data2[14]]--;//делаем в клане -1 игрок
						GangSave(data2[14]);//записываем клан
					}
				}
				if(para3 == 0)
				{
					if(data2[14] == -600)
					{
						format(ssss, sizeof(ssss), " *** Админ %s разрешил приглашать аккаунт игрока %s в клан (/edplclans) .", RealName[playerid], akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					}
					if(data2[14] > 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s удалил аккаунт игрока %s из клана (ид: %d) ,", RealName[playerid], akk, data2[14]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и разрешил приглашать аккаунт игрока %s в клан (/edplclans) .", akk);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						GPlayers[data2[14]]--;//делаем в клане -1 игрок
						GangSave(data2[14]);//записываем клан
					}
				}
				if(para3 > 0)
				{
					if(data2[14] == -600 || data2[14] == 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s приписал аккаунт игрока %s к клану (ид: %d) ,", RealName[playerid], akk, para3);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и назначил аккаунту игрока %s уровень %d в этом клане (/edplclans) .", akk, para4);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						if(para4 == 6)//если назначаемый уровень - уровень главы, то:
						{
							strdel(GHead[para3], 0, 64);//удалить имя старого главы клана
							strcat(GHead[para3], akk);//назначить имя нового главы клана
						}
						GPlayers[para3]++;//делаем в клане +1 игрок
						GangSave(para3);//записываем клан
					}
					if(data2[14] == para3)
					{
						format(ssss, sizeof(ssss), " *** Админ %s назначил аккаунту игрока %s уровень %d в его клане (/edplclans) .", RealName[playerid], akk, para4);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						if(para4 == 6)//если назначаемый уровень - уровень главы, то:
						{
							strdel(GHead[para3], 0, 64);//удалить имя старого главы клана
							strcat(GHead[para3], akk);//назначить имя нового главы клана
						}
						GangSave(para3);//записываем клан
					}
					if(data2[14] != para3 && data2[14] != -600 && data2[14] != 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s удалил аккаунт игрока %s из клана (ид: %d) ,", RealName[playerid], akk, data2[14]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** приписал аккаунт игрока %s к клану (ид: %d) ,", akk, para3);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " *** и назначил аккаунту игрока %s уровень %d в этом клане (/edplclans) .", akk, para4);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						if(para4 == 6)//если назначаемый уровень - уровень главы, то:
						{
							strdel(GHead[para3], 0, 64);//удалить имя старого главы клана
							strcat(GHead[para3], akk);//назначить имя нового главы клана
						}
						GPlayers[data2[14]]--;//делаем в клане -1 игрок
						GangSave(data2[14]);//записываем клан
						GPlayers[para3]++;//делаем в клане +1 игрок
						GangSave(para3);//записываем клан
					}
				}
				data2[14] = para3;
				data2[15] = para4;
#if (MOD90INS == 0)
				new File: hFile = fopen(string, io_write);//запись изменённого аккаунта
				if (hFile)
				{
					new var[32];
					format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
					format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
					format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
					format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
					format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
					format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
					format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
					format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
					format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
					format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
					format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
					format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
					format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
					format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
					format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
					format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
					format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
					format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
					format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//					format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//					format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//					format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//					format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//					format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//					format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//					format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//					format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//					format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//					format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//					format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
					fclose(hFile);
				}
#endif
#if (MOD90INS == 1)
				format(strdln, sizeof(strdln), "UPDATE Players SET Gang = %d,GangLvl = %d ",data2[14],data2[15]);//создаём запрос БД
				format(strdln, sizeof(strdln), "%sWHERE (Name = '%s')", strdln, akk);
				db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
#endif
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
#if (MOD90INS == 1)
	if(strcmp(cmd, "/delakktm", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
    	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /delakktm 99 , или");
				SendClientMessage(playerid, COLOR_GRAD2, " /delakktm [число] [месяц] [год]");

				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 1 || (para1 > 31 && para1 != 99))
			{
				SendClientMessage(playerid, COLOR_RED, " /delakktm 99 , или /delakktm [число] [месяц] [год] !");
				return 1;
			}
			if(para1 == 99)
			{
				new locquery[128], dopper;
				format(locquery, sizeof(locquery), "SELECT * FROM Players WHERE (IDCopy = 1)");//создаём запрос БД
				querydb[playerid] = db_query(playerdb, locquery);//отправляем запрос БД
				dopper = db_num_rows(querydb[playerid]);//переведём результат запроса в число найденных строк в БД
				db_free_result(querydb[playerid]);//очищаем результат запроса БД

				printf(" *** Админ %s [%d] просмотрел общее число аккаунтов в БД (%d) .", RealName[playerid], playerid, dopper);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "----------------------------------------------------------");
				format(string,sizeof(string)," Всего аккаунтов в БД: %d", dopper);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "----------------------------------------------------------");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " /delakktm [число] [месяц] [год] !");
				return 1;
			}
			new para2;
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " /delakktm [число] [месяц] [год] !");
				return 1;
			}
			new para3;
			para3 = strval(tmp);
			if(para3 > EndConY || (para3 == EndConY && para2 > EndConM) ||
			(para3 == EndConY && para2 == EndConM && para1 >= EndConD))
			{
				SendClientMessage(playerid, COLOR_RED, " Дата очистки не может быть позднее или равна сегодняшней дате !");
				return 1;
			}
			new locquery[256];
			new dopper44 = 0;

			format(locquery, sizeof(locquery), "SELECT * FROM Players WHERE (DEndConY < %d AND AdminLevel = 0)", para3);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, locquery);//отправляем запрос БД
			dopper44 = dopper44 + db_num_rows(querydb[playerid]);//переведём результат запроса в число найденных строк в БД, и прибавим это число к счётчику
			db_free_result(querydb[playerid]);//очищаем результат запроса БД

			format(locquery, sizeof(locquery), "DELETE FROM Players WHERE (DEndConY < %d AND AdminLevel = 0)", para3);
			db_query(playerdb, locquery);//отправляем запрос на удаление аккаунта (аккаунтов) из БД

			format(locquery, sizeof(locquery), "SELECT * FROM Players WHERE (DEndConY = %d AND DEndConM < %d AND AdminLevel = 0)", para3, para2);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, locquery);//отправляем запрос БД
			dopper44 = dopper44 + db_num_rows(querydb[playerid]);//переведём результат запроса в число найденных строк в БД, и прибавим это число к счётчику
			db_free_result(querydb[playerid]);//очищаем результат запроса БД

			format(locquery, sizeof(locquery), "DELETE FROM Players WHERE (DEndConY = %d AND DEndConM < %d AND AdminLevel = 0)", para3, para2);
			db_query(playerdb, locquery);//отправляем запрос на удаление аккаунта (аккаунтов) из БД

			format(locquery, sizeof(locquery), "SELECT * FROM Players WHERE (DEndConY = %d AND DEndConM = %d AND DEndConD <= %d AND AdminLevel = 0)", para3, para2, para1);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, locquery);//отправляем запрос БД
			dopper44 = dopper44 + db_num_rows(querydb[playerid]);//переведём результат запроса в число найденных строк в БД, и прибавим это число к счётчику
			db_free_result(querydb[playerid]);//очищаем результат запроса БД

			format(locquery, sizeof(locquery), "DELETE FROM Players WHERE (DEndConY = %d AND DEndConM = %d AND DEndConD <= %d AND AdminLevel = 0)", para3, para2, para1);
			db_query(playerdb, locquery);//отправляем запрос на удаление аккаунта (аккаунтов) из БД

			printf(" *** Админ %s [%d] удалил %d аккаунтов из БД.", RealName[playerid], playerid, dopper44);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "--------------------------------------------------------------------");
			format(string,sizeof(string)," Было удалено аккаунтов из БД: %d", dopper44);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "--------------------------------------------------------------------");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
#endif
	if(strcmp(cmd, "/delcar", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /delcar [ид авто]");
				return 1;
			}
			new carid;
			carid = strval(tmp);
			if (carid < 1 || carid > 10000)
			{
				SendClientMessage(playerid, COLOR_RED, " ИД авто: от 1 до 10000 !");
				return 1;
			}
			if(TrainID[0] <= carid <= TrainID22[0] || TrainID[1] <= carid <= TrainID22[1] ||
			TrainID[2] <= carid <= TrainID22[2] || TrainID[3] <= carid <= TrainID22[3] ||
			TrainID[4] <= carid <= TrainID22[4] || TrainID[5] <= carid <= TrainID22[5] ||
			TrainID[6] <= carid <= TrainID22[6] || TrainID[7] <= carid <= TrainID22[7])
			{//если уничтожаемый транспорт поезд или вагон сервера, то ничего не уничтожать
				SendClientMessage(playerid, COLOR_RED, " Этот транспорт уничтожить нельзя !");
				return 1;
			}
			if(CallRemoteFunction("myobjvehfunc", "d", carid) != 0)//чтение ИД транспорта из скпипта myobj
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это отдельно созданный транспорт !");
				return 1;
			}
			if(CallRemoteFunction("garagefunction", "d", carid) != 0)//чтение ИД транспорта из системы гаражей
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это транспорт системы гаражей !");
				return 1;
			}
			if(CallRemoteFunction("mpsysvehfunc", "d", carid) != 0)//чтение ИД транспорта из системы МП
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это транспорт системы МП !");
				return 1;
			}
			if(CallRemoteFunction("dssysvehfunc", "d", carid) != 0)//чтение ИД транспорта из системы дерби-сумо
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это транспорт системы дерби-сумо !");
				return 1;
			}
			if(CallRemoteFunction("basesysvehfunc", "d", carid) != 0)//чтение ИД транспорта из системы баз
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это транспорт системы баз !");
				return 1;
			}
			if(CallRemoteFunction("vehsys3vehfunc", "d", carid) != 0)//чтение ИД транспорта из системы личного транспорта vehsys3
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это личный транспорт игрока !");
				return 1;
			}
			new locper = 0;
			new locper55 = 0;
			while(locper < MAX_PLAYERS)//уничтожить любой транспорт
			{
				if(IsPlayerConnected(locper))//дальнейшее выполняем если игрок в коннекте
				{
					if(GetPlayerVehicleID(locper) == carid)
					{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
						EnterTick33[locper] = 1;//обход антикрашера - 3
					}
				}
			 	if(carid == playcar[locper])//если уничтожаемый транспорт - личный транспорт игрока, то:
			 	{
					locper55 = 1;
					break;
			 	}
			 	if(carid == neon[locper][2])//уничтожить чужой неон на свободном транспорте
			 	{
					DestroyObject(neon[locper][0]);//убрать неон
					DestroyObject(neon[locper][1]);//убрать неон
					neon[locper][0] = 0;//присваиваем неону несуществующий номер объекта
					neon[locper][1] = 0;//присваиваем неону несуществующий номер объекта
					neon[locper][2] = 0;//несуществующий ид транспорта с неоном
			 	}
				locper++;
			}
			if(locper55 == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это личный транспорт игрока !");
				return 1;
			}
			new model, car22;
			model = GetVehicleModel(carid);
			car22 = DestroyVehicle(carid);
			if(car22 == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид транспорта] на сервере нет !");
				return 1;
			}
			format(string, sizeof(string), " *** Админ %s уничтожил транспорт   ID: %d   Модель: %d .", RealName[playerid], carid, model);
			print(string);
			format(string, sizeof(string), " Транспорт уничтожен !   ID: %d   Модель: %d", carid, model);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/deltr", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			new model, cnt;
			cnt = 0;
			for(new i = 1; i < 10001; i++)
			{
				if((i < TrainID[0] || i > TrainID22[0]) && (i < TrainID[1] || i > TrainID22[1]) &&
				(i < TrainID[2] || i > TrainID22[2]) && (i < TrainID[3] || i > TrainID22[3]) &&
				(i < TrainID[4] || i > TrainID22[4]) && (i < TrainID[5] || i > TrainID22[5]) &&
				(i < TrainID[6] || i > TrainID22[6]) && (i < TrainID[7] || i > TrainID22[7]))
				{//если уничтожаемый транспорт НЕ поезд или вагон сервера, то:
					model = GetVehicleModel(i);
					if(model == 537 || model == 538 || model == 569 || model == 570)
					{
						DestroyVehicle(i);
						cnt++;
					}
				}
			}
			if(cnt != 0)
			{
				format(string, sizeof(string), " Было уничтожено %d свободных единиц поездов или вагонов !", cnt);
				SendClientMessage(playerid, COLOR_GREY, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " Свободных поездов или вагонов не было найдено !");
			}
			format(string, sizeof(string), " *** Админ %s уничтожил %d свободных единиц поездов или вагонов.", RealName[playerid], cnt);
			print(string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
#if (MOD77INS == 1)
	if(strcmp(cmd, "/dataakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 3)
    	{
   			new data2[54],dopper;
#endif
#if (MOD77INS == 1 && MOD90INS == 1)
   			new dddata2[3];
#endif
#if (MOD77INS == 1)
			akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /dataakk [имя аккаунта]");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
#endif
#if (MOD77INS == 1 && MOD90INS == 0)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))
			{
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
#endif
#if (MOD77INS == 1 && MOD90INS == 1)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
			{//проверим регистрацию в SQLite
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
					return 1;
				}
				else
				{
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
#if (MOD77INS == 1 && MOD90INS == 0)
			new File: UserFile = fopen(string, io_read);//чтение аккаунта
			new key[ 256 ] , val[ 256 ];
			new Data[ 256 ];
			while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
				if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
				if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
				if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
				if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
				if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
				if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
				if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
				if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
				if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
				if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
				if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
				if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
				if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
				if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
				if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//				if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//				if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//				if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//				if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//				if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//				if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//				if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//				if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//				if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//				if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//				if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
				if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
				if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
				if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
				if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
				if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
				if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
				if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
				if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
				if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
				if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
				if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
				if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
				if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
				if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
				if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
				if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
				if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
				if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
				if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
				if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
				if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
				if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
				if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
				if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
				if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
				if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
			}
			fclose(UserFile);
			strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
			strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
			strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			new gngakkrd = 0;
			new string999[256];
			format(string999,sizeof(string999),"gangs/players/%s.ini",akk);
			if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
			{
				gngakkrd = 1;
				new string333[256];
				format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
				new File: UserFile333 = fopen(string333, io_read);//чтение файла
				new key333[ 256 ] , val333[ 256 ];
				new Data333[ 256 ];
				while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
				{
					key333 = ini_GetKey( Data333 );
					if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
					if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
				}
				fclose(UserFile333);
			}
			if(gngakkrd == 1)
			{
				new File: hFile = fopen(string, io_write);//запись изменённого аккаунта
				if (hFile)
				{
					new var[32];
					format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
					format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
					format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
					format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
					format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
					format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
					format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
					format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
					format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
					format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
					format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
					format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
					format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
					format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
					format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
					format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
					format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
					format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
					format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//					format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//					format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//					format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//					format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//					format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//					format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//					format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//					format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//					format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//					format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//					format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
					format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
					format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
					fclose(hFile);
				}
				fremove(string999);
			}
//---------------------------------- конец -------------------------------------
#endif
#if (MOD77INS == 1 && MOD90INS == 1)
			if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
			{
				new File: UserFile = fopen(string, io_read);//чтение аккаунта
			    new key[ 256 ] , val[ 256 ];
			    new Data[ 256 ];
				while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
					if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
					if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
					if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    	if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    	if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
			        if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
			        if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
			        if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
			        if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
			        if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
			        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
			        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
			        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
			        if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
			        if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
			        if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
			        if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			        if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			        if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			        if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			        if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			        if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			        if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			        if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			        if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			        if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			        if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			        if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
			        if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
			        if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
			        if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
			        if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
			        if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
			        if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
			        if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
			        if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
			        if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
			        if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
			        if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
			        if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
			        if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
			        if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
			        if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
			        if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
			        if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
			        if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
			        if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
			        if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
					if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
			        if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
			        if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
			        if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
			        if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
			        if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
                }
                fclose(UserFile);
				strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
				strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
				strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				new gngakkrd = 0;
				new string999[256];
				format(string999,sizeof(string999),"gangs/players/%s.ini",akk);
				if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
				{
					gngakkrd = 1;
					new string333[256];
					format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
					new File: UserFile333 = fopen(string333, io_read);//чтение файла
					new key333[ 256 ] , val333[ 256 ];
					new Data333[ 256 ];
					while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
					{
						key333 = ini_GetKey( Data333 );
						if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
						if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
					}
					fclose(UserFile333);
				}
//---------------------------------- конец -------------------------------------

				format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", akk);//миграция аккаунта в БД, создаём запрос БД
				db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

				format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
				format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
				format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
				format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
				format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
				format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, akk,igkey,tdreg);//IDCopy,Name,Key,TDReg
				format(strdln, sizeof(strdln), "%s0,0,0,'%s',", strdln, adrip);//DEndConD,DEndConM,DEndConY,IPAdr
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[0],data2[1],data2[2]);//MinLog,AdminLevel,AdminShadow
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[3],data2[4],data2[5]);//AdminLive,Registered,Prison
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[6],data2[7],data2[8]);//Prisonsec,Muted,Mutedsec
				format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[9],data2[10],data2[11]);//Money,Kills,Deaths
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[12],data2[13],data2[14],data2[15]);//VIP,Lock,Gang,GangLvl
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[27],data2[28],data2[29],data2[30]);//Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[31],data2[32],data2[33],data2[34]);//Weapon_slot4,Weapon_slot5,Weapon_slot6,Weapon_slot7
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[35],data2[36],data2[37],data2[38]);//Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[39],data2[40],data2[41],data2[42]);//Weapon_slot12,Ammo_slot0,Ammo_slot1,Ammo_slot2
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[43],data2[44],data2[45],data2[46]);//Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6
				format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[47],data2[48],data2[49],data2[50]);//Ammo_slot7,Ammo_slot8,Ammo_slot9,Ammo_slot10
				format(strdln, sizeof(strdln), "%s%d,%d)", strdln, data2[51],data2[52]);//Ammo_slot11,Ammo_slot12
				db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

				dddata2[0] = 0;//обнуляем дату последнего входа на сервер (для мониторинга)
				dddata2[1] = 0;
				dddata2[2] = 0;
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
				if(gngakkrd == 1)
				{
					fremove(string999);//удаляем аккаунт из системы кланов
				}
//---------------------------------- конец -------------------------------------
				if(fexist(string))
				{
					fremove(string);//удаляем аккаунт из fopen
				}
			}
			else//иначе: (если аккаунт зарегистрирован в SQLite)
			{
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Ошибка чтения аккаунта игрока из БД !");
					return 1;
				}
				else//иначе: (если аккаунт зарегистрирован в БД)
				{
					new buffer[32];//читаем данные из БД
					db_get_field(querydb[playerid], 3, tdreg, 256);//TDReg
					db_get_field(querydb[playerid], 4, buffer, 32); dddata2[0] = strval(buffer);//DEndConD
					db_get_field(querydb[playerid], 5, buffer, 32); dddata2[1] = strval(buffer);//DEndConM
					db_get_field(querydb[playerid], 6, buffer, 32); dddata2[2] = strval(buffer);//DEndConY
					db_get_field(querydb[playerid], 7, adrip, 256);//IPAdr
					db_get_field(querydb[playerid], 8, buffer, 32); data2[0] = strval(buffer);//MinLog
					db_get_field(querydb[playerid], 9, buffer, 32); data2[1] = strval(buffer);//AdminLevel
					db_get_field(querydb[playerid], 10, buffer, 32); data2[2] = strval(buffer);//AdminShadow
					db_get_field(querydb[playerid], 11, buffer, 32); data2[3] = strval(buffer);//AdminLive
					db_get_field(querydb[playerid], 13, buffer, 32); data2[5] = strval(buffer);//Prison
					db_get_field(querydb[playerid], 14, buffer, 32); data2[6] = strval(buffer);//Prisonsec
					db_get_field(querydb[playerid], 15, buffer, 32); data2[7] = strval(buffer);//Muted
					db_get_field(querydb[playerid], 16, buffer, 32); data2[8] = strval(buffer);//Mutedsec
					db_get_field(querydb[playerid], 17, buffer, 32); data2[9] = strval(buffer);//Money
					db_get_field(querydb[playerid], 18, buffer, 32); data2[10] = strval(buffer);//Kills
					db_get_field(querydb[playerid], 19, buffer, 32); data2[11] = strval(buffer);//Deaths
					db_get_field(querydb[playerid], 20, buffer, 32); data2[12] = strval(buffer);//VIP
					db_get_field(querydb[playerid], 21, buffer, 32); data2[13] = strval(buffer);//Lock
					db_get_field(querydb[playerid], 22, buffer, 32); data2[14] = strval(buffer);//Gang
					db_get_field(querydb[playerid], 23, buffer, 32); data2[15] = strval(buffer);//GangLvl
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
#if (MOD77INS == 1)
			new fadm;
			if(data2[1] < 0)
			{
				fadm = data2[1] * -1;
			}
			else
			{
				fadm = data2[1];
			}
			if(fadm >= 4 && PlayerInfo[playerid][pAdmin] <= 3)//проверка аккаунта на админку 4-го лвл
			{
				if(fadm == 5)//подмена 5-го левела на 4-й
				{
					dopper = 4;
				}
				else
				{
					dopper = fadm;
				}
				format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] - админ %d LVL !", akk, dopper);
				SendClientMessage(playerid, COLOR_RED, ssss);
				return 1;
			}
			new dopdata44;
			dopdata44 = 0;
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
	   			if(IsPlayerConnected(i))
			    {
					if(strcmp(akk, RealName[i], false) == 0) { dopdata44 = 1; }
				}
			}
			new dopdata2;
			if(data2[14] == -600)
			{
				dopdata2 = 0;
			}
			else
			{
				dopdata2 = data2[14];
			}
			data2[53] = 0;//депортация = 0
			if(data2[12] == 3)//если VIP = 3, то:
			{
				data2[53] = 1;//депортация = 1
			}
			printf(" *** Админ %s [%d] просмотрел аккаунт игрока %s . Без пароля !", RealName[playerid], playerid, akk);

			SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
			format(ssss,sizeof(ssss),"           *** Аккаунт игрока [%s] *** ( Без пароля ! )", akk);
			SendClientMessage(playerid, COLOR_WHITE, ssss);
			if(dopdata44 == 1)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, " Внимание !!! Аккаунт игрока On-Line !");
			}
			format(ssss,sizeof(ssss)," Время и дата регистрации: [ %s ]", tdreg);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
#endif
#if (MOD77INS == 1 && MOD90INS == 1)
			format(ssss,sizeof(ssss)," Дата последнего входа на сервер: [ %02d/%02d/%04d ]", dddata2[0],dddata2[1],dddata2[2]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
#endif
#if (MOD77INS == 1)
			format(ssss,sizeof(ssss)," IP: [%s] Админ LVL: [%d] Скрытость админа: [%d]", adrip,fadm,data2[2]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
			format(ssss,sizeof(ssss)," Посадок в тюрьму: [%d] Секунд тюрьмы: [%d] Число затыков: [%d] Секунд затыка: [%d]", data2[5],data2[6],data2[7],data2[8]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
			format(ssss,sizeof(ssss)," Денег: [%d $] Убийств: [%d] Смертей: [%d] VIP LVL: [%d] Блокировка аккаунта: [%d]", data2[9],data2[10],data2[11],data2[12],data2[13]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
			format(ssss,sizeof(ssss)," Минут на сервере: [%d] Бессмертие: [%d] ( дополнительно: Депортация: [%d] )", data2[0],data2[3],data2[53]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
			if(fadm >= 2)
			{
				new twenlim, restlim;
				Fmadmins(2, akk, 0, twenlim, restlim);
				format(ssss,sizeof(ssss)," Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", twenlim,restlim);
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
			}
			format(ssss,sizeof(ssss)," ID клана: [%d] Уровень в клане: [%d]", dopdata2,data2[15]);
			SendClientMessage(playerid, COLOR_GRAD1, ssss);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
#endif
	if(strcmp(cmd, "/sid", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 1)
    	{
   			new dopss[64];
			new dopper;
			dopper = 0;
			dopss = strtok(cmdtext, idx);
    		if(!strlen(dopss))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /sid [первый символ ника]");
				return 1;
			}
			if(strlen(dopss) < 1 || strlen(dopss) > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Должен быть только ОДИН первый символ ника !");
				return 1;
			}

			format(string, sizeof(string), " Список ID игроков с первым символом ника ''%s'' :", dopss);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(dopss[0] == RealName[i][0])
					{
						dopper = 1;
						format(string, sizeof(string), " --- {E03515} %s [%d]", RealName[i], i);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
			}
			if(dopper == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, " --- не обнаружено.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, " ----------------------------------------");
			}
			printf(" *** Админ %s [%d] просмотрел список ID игроков ( /sid ) .", RealName[playerid], playerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
#if (MOD90INS == 1 && MOD77INS == 1)
	if(strcmp(cmd, "/akksrc", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			new locIP[64], srcakk[64], dopper44, dopper55;
			akk = strtok(cmdtext, idx);
			if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /akksrc [имя аккаунта] [режим поиска");
				SendClientMessage(playerid, COLOR_GRAD2, " (0- по шаблону XX.XX.*.*, 1- по шаблону XX.XX.XX.*)]");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
			format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
			if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
			{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
			else
			{
				new buffer[32], admlvl;//читаем данные из БД
				db_get_field(querydb[playerid], 7, locIP, 64);//IPAdr
				db_get_field(querydb[playerid], 9, buffer, 32); admlvl = strval(buffer);//AdminLevel
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				if(admlvl < 0) { admlvl = admlvl * -1; }
				if(PlayerInfo[playerid][pAdmin] == 3 && admlvl >= 4)
				{
					SendClientMessage(playerid,COLOR_RED," Вы не можете просмотреть аккаунт админа 4-го уровня !");
					return 1;
				}
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " [режим поиска (0- по шаблону XX.XX.*.*, 1- по шаблону XX.XX.XX.*)]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим поиска 0 или 1 !");
				return 1;
			}
			new para2, para3, locIP44[64];
			para2 = 0;
			para3 = 0;
			while(para2 < 64)
			{
				if((para1 == 0 && para3 == 2) || (para1 == 1 && para3 == 3))
				{
					locIP44[para2] = 0;
					para2++;
					locIP44[para2] = 0;
					break;
				}
				if(locIP[para2] == '.') { para3++; }
				locIP44[para2] = locIP[para2];
				para2++;
			}
			format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE IPAdr GLOB '%s*'", locIP44);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД (поиск всех IP с началом locIP44)
			dopper44 = db_num_rows(querydb[playerid]);//переведём результат запроса в число найденных строк в БД
			dopper55 = dopper44 - 1;
			if(dopper44 == 0)
			{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				SendClientMessage(playerid,COLOR_RED," Ошибка чтения данных из БД !");
				return 1;
			}
			else//читаем данные из БД
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-------------------------------------------------------------------------------");
				if(para1 == 0)
				{
					format(ssss,sizeof(ssss)," Всего найдено аккаунтов: %d ( шаблон: XX.XX.*.* )", dopper44);
				}
				else
				{
					format(ssss,sizeof(ssss)," Всего найдено аккаунтов: %d ( шаблон: XX.XX.XX.* )", dopper44);
				}
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
		        for(new i = 0; i < dopper44; i++)
		        {
					db_get_field(querydb[playerid], 1, srcakk, 64);//Name
					db_get_field(querydb[playerid], 7, adrip, 256);//IPAdr
					if(i < dopper55)//если обрабатывается НЕ последняя строка, то:
					{
		            	db_next_row(querydb[playerid]);///переходим к следующей строке результат запроса БД
					}
					format(ssss,sizeof(ssss)," %d). Аккаунт: [%s] IP: [%s]", i+1, srcakk, adrip);
					if(strcmp(akk, srcakk, false) == 0)
					{
						SendClientMessage(playerid, COLOR_YELLOW, ssss);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, ssss);
					}
		        }
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				if(para1 == 0)
				{
					format(ssss,sizeof(ssss)," Всего найдено аккаунтов: %d ( шаблон: XX.XX.*.* )", dopper44);
				}
				else
				{
					format(ssss,sizeof(ssss)," Всего найдено аккаунтов: %d ( шаблон: XX.XX.XX.* )", dopper44);
				}
				SendClientMessage(playerid, COLOR_GRAD1, ssss);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "-------------------------------------------------------------------------------");
				printf(" *** Админ %s [%d] просмотрел совпадения IP аккаунта игрока %s .", RealName[playerid], playerid, akk);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
#endif
	if(strcmp(cmd, "/madmins", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 4)
    	{
			new para1, para2, para3, para4, f[256];
			tmp = strtok(cmdtext, idx);
    		if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /madmins [режим (0- по ИД админа, 1- по нику админа)]");
				SendClientMessage(playerid, COLOR_GRAD2, " [ИД админа / ник админа] [ИД настройки (0- просмотреть суточный");
				SendClientMessage(playerid, COLOR_GRAD2, " денежный лимит админа, 1- установить суточный денежный лимит для");
				SendClientMessage(playerid, COLOR_GRAD2, " админа, 2- удалить суточный денежный лимит админа)]");
				return 1;
			}
			para1 = strval(tmp);
			if(para1 < 0 || para1 > 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Режим 0 или 1 !");
				return 1;
			}
			if(para1 == 0)
			{
				tmp = strtok(cmdtext, idx);
	    		if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ИД админа] [ИД настройки] !");
					return 1;
				}
				para2 = strval(tmp);
				if(!IsPlayerConnected(para2))
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранного [ИД админа] на сервере нет !");
					return 1;
				}
				if(PlayerInfo[para2][pAdmin] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный [ИД админа] - не админ !");
					return 1;
				}
				if(PlayerInfo[para2][pAdmin] <= 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный [ИД админа] - ниже 2 lvl !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
	    		if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [ИД настройки (0- просмотреть суточный денежный лимит админа,");
					SendClientMessage(playerid, COLOR_RED, " 1- установить суточный денежный лимит для админа,");
					SendClientMessage(playerid, COLOR_RED, " 2- удалить суточный денежный лимит админа)] !");
					return 1;
				}
				para3 = strval(tmp);
				if(para3 < 0 || para3 > 2)
				{
					SendClientMessage(playerid, COLOR_RED, " ИД настройки от 0 до 2 !");
					return 1;
				}
				if(para3 == 0)
				{
					new twenlim = 0;
					new restlim = 0;
					format(f, sizeof(f), "madmins/%s.ini", RealName[para2]);
					if(!fexist(f))
					{
						Fmadmins(1, RealName[para2], 0, twenlim, restlim);
					}
					else
					{
						Fmadmins(2, RealName[para2], 0, twenlim, restlim);
					}
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
					format(ssss,sizeof(ssss)," Админ: [%s] Денежный лимит: [%d] Остаток лимита: [%d]", RealName[para2], twenlim, restlim);
					SendClientMessage(playerid, COLOR_GRAD1, ssss);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
					printf(" *** Админ %s [%d] просмотрел суточный денежный лимит админа %s [%d] ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2);
					return 1;
				}
				if(para3 == 1)
				{
					tmp = strtok(cmdtext, idx);
		    		if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_RED, " [суточный денежный лимит] !");
						return 1;
					}
					para4 = strval(tmp);
					if(para4 < 0 || para4 > 2147000000)
					{
						SendClientMessage(playerid, COLOR_RED, " Суточный денежный лимит от 0 до 2'147'000'000 !");
						return 1;
					}
					new twenlim = 0;
					new restlim = 0;
					format(f, sizeof(f), "madmins/%s.ini", RealName[para2]);
					if(!fexist(f))
					{
						Fmadmins(1, RealName[para2], 0, twenlim, restlim);
					}
					else
					{
						Fmadmins(2, RealName[para2], 0, twenlim, restlim);
					}
					if(para4 == twenlim)
					{
						format(string, sizeof(string), " Набранный Вами суточный денежный лимит уже установлен для админа %s !", RealName[para2]);
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
					}
					Fmadmins(1, RealName[para2], 0, para4, para4);
					if(para4 != 0)
					{
						format(ssss, sizeof(ssss), " *** Админ %s установил админу %s суточный денежный лимит в %d $ .", RealName[playerid], RealName[para2], para4);
						printf(" *** Админ %s [%d] установил админу %s [%d] суточный денежный лимит в %d $ ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2, para4);
					}
					else
					{
						format(ssss, sizeof(ssss), " *** Админ %s снял с админа %s суточный денежный лимит.", RealName[playerid], RealName[para2]);
						printf(" *** Админ %s [%d] снял с админа %s [%d] суточный денежный лимит ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2);
					}
					SendAdminMessage(COLOR_LIGHTBLUE, ssss);
					return 1;
				}
				if(para3 == 2)
				{
					format(f, sizeof(f), "madmins/%s.ini", RealName[para2]);
					if(!fexist(f))
					{
						para4 = 0;
					}
					else
					{
						para4 = 1;
					}
					if(para4 == 1)
					{
						new twenlim, restlim;
						Fmadmins(0, RealName[para2], 0, twenlim, restlim);
						format(ssss,sizeof(ssss)," Вы удалили суточный денежный лимит админа %s .", RealName[para2]);
						SendClientMessage(playerid, COLOR_YELLOW, ssss);
						printf(" *** Админ %s [%d] удалил суточный денежный лимит админа %s [%d] ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2);
					}
					else
					{
						format(string, sizeof(string), " Суточный денежный лимит админа %s уже был удалён !", RealName[para2]);
						SendClientMessage(playerid, COLOR_RED, string);
					}
					return 1;
				}
			}
			if(para1 == 1)
			{
	   			new data2[54];
				akk = strtok(cmdtext, idx);
	    		if(!strlen(akk))
				{
					SendClientMessage(playerid, COLOR_RED, " [ник админа] [ИД настройки] !");
					return 1;
				}
				if(strlen(akk) < 1 || strlen(akk) > 25)
				{
					SendClientMessage(playerid, COLOR_RED, " Длина ника админа должна быть от 1 до 25 символов !");
					return 1;
				}
				para2 = 0;//поиск ника админа среди он-лайн игроков
				new doppara = 0;
				while(para2 < MAX_PLAYERS)
				{
					if(IsPlayerConnected(para2))
					{
						if(strcmp(akk, RealName[para2], false) == 0)
						{
							doppara = 1;
							break;
						}
					}
					para2++;
				}
				if(doppara == 0)//если ник админа НЕ найден, то:
				{//поиск ника админа в аккаунтах игроков
#if (MOD90INS == 0)
					format(string,sizeof(string),"players/%s.ini",akk);
//        			format(string,sizeof(string),"%s.ini",akk);
					if(!fexist(string))
					{
						SendClientMessage(playerid,COLOR_RED," Выбранного ника админа не существует !");
						return 1;
					}
#endif
#if (MOD90INS == 1)
					format(string,sizeof(string),"players/%s.ini",akk);
//        			format(string,sizeof(string),"%s.ini",akk);
					if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
					{//проверим регистрацию в SQLite
						format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
						querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
						if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
						{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
							db_free_result(querydb[playerid]);//очищаем результат запроса БД
							SendClientMessage(playerid,COLOR_RED," Выбранного ника админа не существует !");
							return 1;
						}
						else
						{
							db_free_result(querydb[playerid]);//очищаем результат запроса БД
						}
					}
#endif
#if (MOD90INS == 0)
					new File: UserFile = fopen(string, io_read);//чтение аккаунта
					new key[ 256 ] , val[ 256 ];
					new Data[ 256 ];
					while ( fread( UserFile , Data , sizeof( Data ) ) )
					{
						key = ini_GetKey( Data );
						if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
						if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
						if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
						if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
					    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
					    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
					    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
						if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
						if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
						if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
						if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
						if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
						if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
						if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
						if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
						if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
						if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
						if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
						if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//						if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//						if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//						if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//						if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//						if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//						if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//						if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//						if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//						if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//						if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//						if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
						if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
						if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
						if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
						if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
						if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
						if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
						if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
						if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
						if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
						if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
						if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
						if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
						if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
						if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
						if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
						if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
						if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
						if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
						if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
						if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
						if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
						if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
						if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
						if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
						if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
						if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
					}
					fclose(UserFile);
					strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
					strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
					strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					new gngakkrd = 0;
					new string999[256];
					format(string999,sizeof(string999),"gangs/players/%s.ini",akk);
					if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
					{
						gngakkrd = 1;
						new string333[256];
						format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
						new File: UserFile333 = fopen(string333, io_read);//чтение файла
						new key333[ 256 ] , val333[ 256 ];
						new Data333[ 256 ];
						while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
						{
							key333 = ini_GetKey( Data333 );
							if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
							if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
						}
						fclose(UserFile333);
					}
					if(gngakkrd == 1)
					{
						new File: hFile = fopen(string, io_write);//запись изменённого аккаунта
						if (hFile)
						{
							new var[32];
							format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
							format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
							format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
							format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
							format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
							format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
							format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
							format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
							format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
							format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
							format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
							format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
							format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
							format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
							format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
							format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
							format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
							format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
							format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//							format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//							format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//							format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//							format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//							format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//							format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//							format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//							format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//							format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//							format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//							format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
							format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
							format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
							fclose(hFile);
						}
						fremove(string999);
					}
//---------------------------------- конец -------------------------------------
#endif
#if (MOD90INS == 1)
					if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
					{
						new File: UserFile = fopen(string, io_read);//чтение аккаунта
					    new key[ 256 ] , val[ 256 ];
					    new Data[ 256 ];
						while ( fread( UserFile , Data , sizeof( Data ) ) )
						{
							key = ini_GetKey( Data );
							if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
							if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
							if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
							if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
					    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
					    	if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
					    	if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
					        if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
					        if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
					        if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
					        if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
					        if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
					        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
					        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
					        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
					        if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
					        if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
					        if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
					        if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			        		if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			        		if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			        		if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			        		if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			        		if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			        		if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			        		if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			        		if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			        		if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			        		if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			        		if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
					        if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
					        if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
					        if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
					        if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
					        if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
					        if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
					        if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
					        if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
					        if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
					        if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
					        if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
					        if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
					        if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
					        if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
					        if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
					        if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
					        if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
					        if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
					        if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
					        if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
							if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
					        if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
					        if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
					        if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
					        if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
					        if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
		                }
		                fclose(UserFile);
						strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
						strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
						strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
						new gngakkrd = 0;
						new string999[256];
						format(string999,sizeof(string999),"gangs/players/%s.ini",akk);
						if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
						{
							gngakkrd = 1;
							new string333[256];
							format(string333,sizeof(string333),"gangs/players/%s.ini",akk);
							new File: UserFile333 = fopen(string333, io_read);//чтение файла
							new key333[ 256 ] , val333[ 256 ];
							new Data333[ 256 ];
							while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
							{
								key333 = ini_GetKey( Data333 );
								if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
								if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
							}
							fclose(UserFile333);
						}
//---------------------------------- конец -------------------------------------

						format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", akk);//миграция аккаунта в БД, создаём запрос БД
						db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

						format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
						format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
						format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
						format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
						format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
						format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
						format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, akk,igkey,tdreg);//IDCopy,Name,Key,TDReg
						format(strdln, sizeof(strdln), "%s0,0,0,'%s',", strdln, adrip);//DEndConD,DEndConM,DEndConY,IPAdr
						format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[0],data2[1],data2[2]);//MinLog,AdminLevel,AdminShadow
						format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[3],data2[4],data2[5]);//AdminLive,Registered,Prison
						format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[6],data2[7],data2[8]);//Prisonsec,Muted,Mutedsec
						format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[9],data2[10],data2[11]);//Money,Kills,Deaths
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[12],data2[13],data2[14],data2[15]);//VIP,Lock,Gang,GangLvl
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[27],data2[28],data2[29],data2[30]);//Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[31],data2[32],data2[33],data2[34]);//Weapon_slot4,Weapon_slot5,Weapon_slot6,Weapon_slot7
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[35],data2[36],data2[37],data2[38]);//Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[39],data2[40],data2[41],data2[42]);//Weapon_slot12,Ammo_slot0,Ammo_slot1,Ammo_slot2
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[43],data2[44],data2[45],data2[46]);//Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[47],data2[48],data2[49],data2[50]);//Ammo_slot7,Ammo_slot8,Ammo_slot9,Ammo_slot10
						format(strdln, sizeof(strdln), "%s%d,%d)", strdln, data2[51],data2[52]);//Ammo_slot11,Ammo_slot12
						db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
						if(gngakkrd == 1)
						{
							fremove(string999);//удаляем аккаунт из системы кланов
						}
//---------------------------------- конец -------------------------------------
						if(fexist(string))
						{
							fremove(string);//удаляем аккаунт из fopen
						}
					}
					else//иначе: (если аккаунт зарегистрирован в SQLite)
					{
						format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
						querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
						if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
						{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
							db_free_result(querydb[playerid]);//очищаем результат запроса БД
							SendClientMessage(playerid,COLOR_RED," Ошибка чтения аккаунта игрока из БД !");
							return 1;
						}
						else//иначе: (если аккаунт зарегистрирован в БД)
						{
							new buffer[32];//читаем данные из БД
							db_get_field(querydb[playerid], 9, buffer, 32); data2[1] = strval(buffer);//AdminLevel
							db_free_result(querydb[playerid]);//очищаем результат запроса БД
						}
					}
#endif
					new fadm;
					if(data2[1] < 0)
					{
						fadm = data2[1] * -1;
					}
					else
					{
						fadm = data2[1];
					}
					if(fadm == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Выбранный [ник админа] - не админ !");
						return 1;
					}
					if(fadm <= 1)
					{
						SendClientMessage(playerid, COLOR_RED, " Выбранный [ник админа] - ниже 2 lvl !");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
		    		if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_RED, " [ИД настройки (0- просмотреть суточный денежный лимит админа,");
						SendClientMessage(playerid, COLOR_RED, " 1- установить суточный денежный лимит для админа,");
						SendClientMessage(playerid, COLOR_RED, " 2- удалить суточный денежный лимит админа)] !");
						return 1;
					}
					para3 = strval(tmp);
					if(para3 < 0 || para3 > 2)
					{
						SendClientMessage(playerid, COLOR_RED, " ИД настройки от 0 до 2 !");
						return 1;
					}
					if(para3 == 0)
					{
						new twenlim = 0;
						new restlim = 0;
						format(f, sizeof(f), "madmins/%s.ini", akk);
						if(!fexist(f))
						{
							Fmadmins(1, akk, 0, twenlim, restlim);
						}
						else
						{
							Fmadmins(2, akk, 0, twenlim, restlim);
						}
						SendClientMessage(playerid, COLOR_LIGHTRED, " Выбранный [ник админа] - Off-Line .");
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
						format(ssss,sizeof(ssss)," Админ: [%s] Денежный лимит: [%d] Остаток лимита: [%d]", akk, twenlim, restlim);
						SendClientMessage(playerid, COLOR_GRAD1, ssss);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
						printf(" *** Админ %s [%d] просмотрел суточный денежный лимит админа %s ( /madmins ) .", RealName[playerid], playerid, akk);
						return 1;
					}
					if(para3 == 1)
					{
						tmp = strtok(cmdtext, idx);
			    		if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_RED, " [суточный денежный лимит] !");
							return 1;
						}
						para4 = strval(tmp);
						if(para4 < 0 || para4 > 2147000000)
						{
							SendClientMessage(playerid, COLOR_RED, " Суточный денежный лимит от 0 до 2'147'000'000 !");
							return 1;
						}
						new twenlim = 0;
						new restlim = 0;
						format(f, sizeof(f), "madmins/%s.ini", akk);
						if(!fexist(f))
						{
							Fmadmins(1, akk, 0, twenlim, restlim);
						}
						else
						{
							Fmadmins(2, akk, 0, twenlim, restlim);
						}
						if(para4 == twenlim)
						{
							format(string, sizeof(string), " Набранный Вами суточный денежный лимит уже установлен для админа %s !", akk);
							SendClientMessage(playerid, COLOR_RED, string);
							return 1;
						}
						Fmadmins(1, akk, 0, para4, para4);
						SendClientMessage(playerid, COLOR_LIGHTRED, " Выбранный [ник админа] - Off-Line .");
						if(para4 != 0)
						{
							format(ssss, sizeof(ssss), " *** Админ %s установил админу %s суточный денежный лимит в %d $ .", RealName[playerid], akk, para4);
							printf(" *** Админ %s [%d] установил админу %s суточный денежный лимит в %d $ ( /madmins ) .", RealName[playerid], playerid, akk, para4);
						}
						else
						{
							format(ssss, sizeof(ssss), " *** Админ %s снял с админа %s суточный денежный лимит.", RealName[playerid], akk);
							printf(" *** Админ %s [%d] снял с админа %s суточный денежный лимит ( /madmins ) .", RealName[playerid], playerid, akk);
						}
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						return 1;
					}
					if(para3 == 2)
					{
						format(f, sizeof(f), "madmins/%s.ini", akk);
						if(!fexist(f))
						{
							para4 = 0;
						}
						else
						{
							para4 = 1;
						}
						if(para4 == 1)
						{
							new twenlim, restlim;
							Fmadmins(0, akk, 0, twenlim, restlim);
							SendClientMessage(playerid, COLOR_LIGHTRED, " Выбранный [ник админа] - Off-Line .");
							format(ssss,sizeof(ssss)," Вы удалили суточный денежный лимит админа %s .", akk);
							SendClientMessage(playerid, COLOR_YELLOW, ssss);
							printf(" *** Админ %s [%d] удалил суточный денежный лимит админа %s ( /madmins ) .", RealName[playerid], playerid, akk);
						}
						else
						{
							format(string, sizeof(string), " Суточный денежный лимит админа %s уже был удалён !", akk);
							SendClientMessage(playerid, COLOR_RED, string);
						}
						return 1;
					}
				}
				else//иначе (если ник админа был найден среди он-лайн игроков), то:
				{
					if(PlayerInfo[para2][pAdmin] == 0)
					{
						SendClientMessage(playerid, COLOR_RED, " Выбранный [ник админа] - не админ !");
						return 1;
					}
					if(PlayerInfo[para2][pAdmin] <= 1)
					{
						SendClientMessage(playerid, COLOR_RED, " Выбранный [ник админа] - ниже 2 lvl !");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
		    		if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_RED, " [ИД настройки (0- просмотреть суточный денежный лимит админа,");
						SendClientMessage(playerid, COLOR_RED, " 1- установить суточный денежный лимит для админа,");
						SendClientMessage(playerid, COLOR_RED, " 2- удалить суточный денежный лимит админа)] !");
						return 1;
					}
					para3 = strval(tmp);
					if(para3 < 0 || para3 > 2)
					{
						SendClientMessage(playerid, COLOR_RED, " ИД настройки от 0 до 2 !");
						return 1;
					}
					if(para3 == 0)
					{
						new twenlim = 0;
						new restlim = 0;
						format(f, sizeof(f), "madmins/%s.ini", RealName[para2]);
						if(!fexist(f))
						{
							Fmadmins(1, RealName[para2], 0, twenlim, restlim);
						}
						else
						{
							Fmadmins(2, RealName[para2], 0, twenlim, restlim);
						}
						SendClientMessage(playerid, COLOR_LIGHTRED, " Выбранный [ник админа] - On-Line .");
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
						format(ssss,sizeof(ssss)," Админ: [%s] Денежный лимит: [%d] Остаток лимита: [%d]", RealName[para2], twenlim, restlim);
						SendClientMessage(playerid, COLOR_GRAD1, ssss);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
						printf(" *** Админ %s [%d] просмотрел суточный денежный лимит админа %s [%d] ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2);
						return 1;
					}
					if(para3 == 1)
					{
						tmp = strtok(cmdtext, idx);
			    		if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_RED, " [суточный денежный лимит] !");
							return 1;
						}
						para4 = strval(tmp);
						if(para4 < 0 || para4 > 2147000000)
						{
							SendClientMessage(playerid, COLOR_RED, " Суточный денежный лимит от 0 до 2'147'000'000 !");
							return 1;
						}
						new twenlim = 0;
						new restlim = 0;
						format(f, sizeof(f), "madmins/%s.ini", RealName[para2]);
						if(!fexist(f))
						{
							Fmadmins(1, RealName[para2], 0, twenlim, restlim);
						}
						else
						{
							Fmadmins(2, RealName[para2], 0, twenlim, restlim);
						}
						if(para4 == twenlim)
						{
							format(string, sizeof(string), " Набранный Вами суточный денежный лимит уже установлен для админа %s !", RealName[para2]);
							SendClientMessage(playerid, COLOR_RED, string);
							return 1;
						}
						Fmadmins(1, RealName[para2], 0, para4, para4);
						SendClientMessage(playerid, COLOR_LIGHTRED, " Выбранный [ник админа] - On-Line .");
						if(para4 != 0)
						{
							format(ssss, sizeof(ssss), " *** Админ %s установил админу %s суточный денежный лимит в %d $ .", RealName[playerid], RealName[para2], para4);
							printf(" *** Админ %s [%d] установил админу %s [%d] суточный денежный лимит в %d $ ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2, para4);
						}
						else
						{
							format(ssss, sizeof(ssss), " *** Админ %s снял с админа %s суточный денежный лимит.", RealName[playerid], RealName[para2]);
							printf(" *** Админ %s [%d] снял с админа %s [%d] суточный денежный лимит ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2);
						}
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						return 1;
					}
					if(para3 == 2)
					{
						format(f, sizeof(f), "madmins/%s.ini", RealName[para2]);
						if(!fexist(f))
						{
							para4 = 0;
						}
						else
						{
							para4 = 1;
						}
						if(para4 == 1)
						{
							new twenlim, restlim;
							Fmadmins(0, RealName[para2], 0, twenlim, restlim);
							SendClientMessage(playerid, COLOR_LIGHTRED, " Выбранный [ник админа] - On-Line .");
							format(ssss,sizeof(ssss)," Вы удалили суточный денежный лимит админа %s .", RealName[para2]);
							SendClientMessage(playerid, COLOR_YELLOW, ssss);
							printf(" *** Админ %s [%d] удалил суточный денежный лимит админа %s [%d] ( /madmins ) .", RealName[playerid], playerid, RealName[para2], para2);
						}
						else
						{
							format(string, sizeof(string), " Суточный денежный лимит админа %s уже был удалён !", RealName[para2]);
							SendClientMessage(playerid, COLOR_RED, string);
						}
						return 1;
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
	if(strcmp(cmd, "/ocam", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pVIP] == 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /ocam [ид игрока]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
 			if(IsPlayerConnected(para1))
 			{
			    player[playerid] = para1;
				format(playtarget[playerid], MAX_PLAYER_NAME, "%s", RealName[player[playerid]]);
			    if(((PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 4) || PlayerInfo[playerid][pVIP] == 2) && PlayerInfo[player[playerid]][pAdmin] >= 5)
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок защищён !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				new stringdd[128];
				new strdlndd[1024];
				format(strdlndd,sizeof(strdlndd),"Тп к нему\nТп его к себе\nНаблюдать\nСнять наблюдение\
				\nПополнить жизнь и броню\nБан постоянный\nБан временный\nКик\nДепортировать\
				\nОтменить депортацию\nЗаблокировать\nРазблокировать\nЗаморозить\nРазморозить\nУбить\
				\nЗаткнуть\nПосадить в тюрьму");
				format(strdlndd,sizeof(strdlndd),"%s\nТп себя в тюрьму\nТп себя в полицейский участок\
				\nПросмотреть статистику\nСменить скин\nУзнать IP\nСлапнуть\nПодключить к дрифт-соревнованию\
				\nОтключить от дрифт-соревнования\nОбнулить очки дрифт-соревнования\nСтатус дрифт-соревнования", strdlndd);
				format(stringdd,sizeof(stringdd),"Админ-меню. ( %s [%d] )",playtarget[playerid],player[playerid]);
				ShowPlayerDialog(playerid,5,DIALOG_STYLE_LIST,stringdd,strdlndd,"Выбор","Отмена");
				SetPVarInt(playerid, "DlgCont", 5);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " Для доступа к админ-меню Вам нужно иметь VIP 2-го уровня, или быть админом !");
		}
		return 1;
 	}

//------------------------------ BusSystem -------------------------------------
	if(strcmp(cmd, "/helpbus", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			SendClientMessage(playerid, 0x00FFFFFF, " -------------------------- Система бизнесов -------------------------- ");
			SendClientMessage(playerid, 0x00FFFFFF, "   /helpbus - помощь по командам BusSystem");
			SendClientMessage(playerid, 0x00FFFFFF, "   /createbus - создать бизнес");
			SendClientMessage(playerid, 0x00FFFFFF, "   /removebus - удалить бизнес по его ID");
			SendClientMessage(playerid, 0x00FFFFFF, "   /removebusall - удалить все бизнесы");
			SendClientMessage(playerid, 0x00FFFFFF, "   /gotobus - телепортироваться к бизнесу по его ID");
			SendClientMessage(playerid, 0x00FFFFFF, "   /reloadbus - перезагрузка системы бизнесов");
			SendClientMessage(playerid, 0x00FFFFFF, " --------------------------------------------------------------------------------- ");
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/createbus", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0x00FFFFFF, " Используйте: /createbus [стоимость(100-1000000 $)] [число минут, через");
				SendClientMessage(playerid, 0x00FFFFFF, " которое бизнес будет приносить доход(10-120)] [доход от бизнеса");
				SendClientMessage(playerid, 0x00FFFFFF, " за минуты он-лайн игры(100-1000000 $)] [название бизнеса(от 3 до 32 символов)]");
				return 1;
			}
			new para1 = strval(tmp);
			if(para1 < 100 || para1 > 1000000)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Стоимость от 100 $ до 1000000 $ !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0xFF0000FF, " /createbus [стоимость] [число минут] [доход] [название бизнеса] !");
				return 1;
			}
			new para2 = strval(tmp);
			if(para2 < 10 || para2 > 120)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Число минут от 10 до 120 !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0xFF0000FF, " /createbus [стоимость] [число минут] [доход] [название бизнеса] !");
				return 1;
			}
			new para3 = strval(tmp);
			if(para3 < 100 || para3 > 1000000)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Доход от 100 $ до 1000000 $ !");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(strlen(result) < 3 || strlen(result) > 32)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Название от 3 до 32 символов !");
				return 1;
			}
//------------------------------------------------------------------------------
//если убрать комментарий, то: безнесы можно будет создавать ТОЛЬКО в 0-м интерьере, и на основной карте !
/*
			if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Бизнес можно создать только в 0-м интерьере, и на основной карте !");
				return 1;
			}
*/
//------------------------------------------------------------------------------
			new para4 = 0;
			new para5 = 0;
			while(para4 < BUS_MAX)
			{
				if(buscount[para4] == 0)
				{
					para5 = 1;
					break;
				}
				para4++;
			}
			if(para5 == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Превышен лимит создания бизнесов !");
				SendClientMessage(playerid, 0xFF0000FF, " Для продолжения - увеличьте максимум бизнесов на сервере !");
				return 1;
			}
			buscount[para4] = 1;//создаём бизнес
			busvw[para4] = GetPlayerVirtualWorld(playerid);//задаём виртуальный мир бизнеса
			busint[para4] = GetPlayerInterior(playerid);//задаём интерьер бизнеса
			GetPlayerPos(playerid, buscordx[para4], buscordy[para4], buscordz[para4]);//задаём координаты бизнеса
			strdel(busname[para4], 0, 64);//задаём название бизнеса
			strcat(busname[para4], result);
			strdel(busplayname[para4], 0, MAX_PLAYER_NAME);//удаляем имя владельца бизнеса
			strcat(busplayname[para4], "*** INV_PL_ID");
		    buscost[para4] = para1;//задаём стоимость бизнеса
		    busminute[para4] = para2;//задаём, через сколько минут бизнес будет приносить доход
		    busincome[para4] = para3;//задаём доход от бизнеса
		    busday[para4] = 0;//даём бизнесу право на его перекупку (покупку)

    		new file, f[256];//запись бизнеса в файл
	    	format(f, 256, "bussystem/%i.ini", para4);
			file = ini_createFile(f);
			if(file >= 0)
			{
		    	ini_setString(file, "BusName", busname[para4]);
		    	ini_setString(file, "PlayName", busplayname[para4]);
		    	ini_setInteger(file, "Cost", buscost[para4]);
		    	ini_setInteger(file, "Minute", busminute[para4]);
		    	ini_setInteger(file, "Income", busincome[para4]);
		    	ini_setInteger(file, "Day", busday[para4]);
		    	ini_setInteger(file, "BusVW", busvw[para4]);
		    	ini_setInteger(file, "BusInt", busint[para4]);
		    	ini_setFloat(file, "CordX", buscordx[para4]);
		    	ini_setFloat(file, "CordY", buscordy[para4]);
		    	ini_setFloat(file, "CordZ", buscordz[para4]);
				ini_closeFile(file);
			}

			CallRemoteFunction("GPSrfun", "iiisifff", 2, 1, para4, busplayname[para4],
			busvw[para4], buscordx[para4], buscordy[para4], buscordz[para4]);
			PickupID[para4] = CreateDynamicPickup(1274, 1, buscordx[para4], buscordy[para4], buscordz[para4],
			busvw[para4], busint[para4], -1, 100.0);//создаём пикап бизнеса
			MapIconID[para4] = CreateDynamicMapIcon(buscordx[para4], buscordy[para4], buscordz[para4], 52, -1,
			busvw[para4], busint[para4], -1, 200.0);//создаём мап-иконку бизнеса
			format(string, sizeof(string), "Бизнес: %s\nID: %d", busname[para4], para4);
			Nbus[para4] = CreateDynamic3DTextLabel(string, 0x00FF00FF, buscordx[para4], buscordy[para4], buscordz[para4]+0.70, 50,
			INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, busvw[para4], busint[para4], -1);//создаём 3D-текст бизнеса
			printf("[BusSystem] Админ %s [%d] создал бизнес ID: %d .", RealName[playerid], playerid, para4);
			format(string, sizeof(string), " Бизнес ID: %d успешно создан.", para4);
			SendClientMessage(playerid, 0xFFFF00FF, string);
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/removebus", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0x00FFFFFF, " Используйте: /removebus [ID бизнеса]");
				return 1;
			}
			new para1 = strval(tmp);
			if(para1 < 0 || para1 >= BUS_MAX)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Бизнеса с таким ID не существует !");
				return 1;
			}
			format(string, sizeof(string), "bussystem/%i.ini", para1);
			if(fexist(string) || buscount[para1] == 1)//если файл или сам бизнес существует, то:
			{
				DestroyDynamicPickup(PickupID[para1]);//удаляем пикап бизнеса
				if(busday[para1] == 0)//если есть мап-иконка бизнеса, то:
				{
					DestroyDynamicMapIcon(MapIconID[para1]);//удаляем мап-иконку бизнеса
				}
				DestroyDynamic3DTextLabel(Nbus[para1]);//удаляем 3D-текст бизнеса
				if(fexist(string))//если файл существует, то:
				{
                    fremove(string);//удаляем файл
				}
				buscount[para1] = 0;//удаляем бизнес
				strdel(busplayname[para1], 0, MAX_PLAYER_NAME);//удаляем имя владельца бизнеса
				strcat(busplayname[para1], "*** INV_PL_ID");
				CallRemoteFunction("GPSrfun", "iiisifff", 2, 0, para1, busplayname[para1],
				0, 0.0, 0.0, 0.0);
				PickupID[para1] = -600;//задаём несуществующий ID-номер пикапа для бизнеса
				printf("[BusSystem] Админ %s [%d] удалил бизнес ID: %d .", RealName[playerid], playerid, para1);
				format(string, sizeof(string), " Бизнес ID: %d успешно удалён.", para1);
				SendClientMessage(playerid, 0xFF0000FF, string);
			}
			else//если ни файл, и ни сам бизнес не существуют, то:
			{
				SendClientMessage(playerid, 0xFF0000FF, " Бизнеса с таким ID не существует !");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/removebusall", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			new para1 = 0;
			for(new i; i < BUS_MAX; i++)
			{
				format(string, sizeof(string), "bussystem/%i.ini", i);
				if(fexist(string) || buscount[i] == 1)//если файл или сам бизнес существует, то:
				{
					para1 = 1;
					DestroyDynamicPickup(PickupID[i]);//удаляем пикап бизнеса
					if(busday[i] == 0)//если есть мап-иконка бизнеса, то:
					{
						DestroyDynamicMapIcon(MapIconID[i]);//удаляем мап-иконку бизнеса
					}
					DestroyDynamic3DTextLabel(Nbus[i]);//удаляем 3D-текст бизнеса
					if(fexist(string))//если файл существует, то:
					{
                    	fremove(string);//удаляем файл
					}
					buscount[i] = 0;//удаляем бизнес
					strdel(busplayname[i], 0, MAX_PLAYER_NAME);//удаляем имя владельца бизнеса
					strcat(busplayname[i], "*** INV_PL_ID");
					PickupID[i] = -600;//задаём несуществующий ID-номер пикапа для бизнеса
				}
				CallRemoteFunction("GPSrfun", "iiisifff", 2, 0, i, "*** INV_PL_ID",
				0, 0.0, 0.0, 0.0);
			}
			if(para1 == 1)
			{
				printf("[BusSystem] Админ %s [%d] удалил все бизнесы.", RealName[playerid], playerid);
				SendClientMessage(playerid, 0xFF0000FF, " Все бизнесы были успешно удалены.");
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000FF, " На сервере не создано ни одного бизнеса !");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/gotobus", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			if(GetPVarInt(playerid, "SecPris") > 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, " В тюрьме команда не работает !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0x00FFFFFF, " Используйте: /gotobus [ID бизнеса]");
				return 1;
			}
			new para1 = strval(tmp);
			if(para1 < 0 || para1 >= BUS_MAX)
			{
				SendClientMessage(playerid, 0xFF0000FF, " Бизнеса с таким ID не существует !");
				return 1;
			}
			if(buscount[para1] == 1)//если бизнес существует, то:
			{
				PlayCRTP[playerid] = 1;//блокировка контроля координат
				SetPlayerVirtualWorld(playerid, busvw[para1]);
 				SetPlayerInterior(playerid, busint[para1]);
				SetPlayerPos(playerid, buscordx[para1], buscordy[para1]+2, buscordz[para1]+1);
				printf("[BusSystem] Админ %s [%d] телепортировался к бизнесу ID: %d .", RealName[playerid], playerid, para1);
				format(string, sizeof(string), " Вы телепортировались к бизнесу ID: %d .", para1);
				SendClientMessage(playerid, 0x00FF00FF, string);
			}
			else//если бизнес не существуют, то:
			{
				SendClientMessage(playerid, 0xFF0000FF, " Бизнеса с таким ID не существует !");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/reloadbus", true) == 0)
	{
		if(IsPlayerAdmin(playerid))
		{
			printf("[BusSystem] Админ %s [%d] начал перезагрузку системы бизнесов.", RealName[playerid], playerid);
			format(string, sizeof(string), " Админ %s [%d] начал перезагрузку системы бизнесов.", RealName[playerid], playerid);
			SendClientMessageToAll(0xFF0000FF, string);
			SetTimerEx("reloadbus1", 1000, 0, "i", playerid);
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000FF, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
//---------------------------- End BusSystem -----------------------------------

	if(strcmp(cmd, "/elegy", true) == 0)
	{
		new vehid = 562, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/flash", true) == 0)
	{
		new vehid = 565, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/jester", true) == 0)
	{
		new vehid = 559, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/stratum", true) == 0)
	{
		new vehid = 561, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/sultan", true) == 0)
	{
		new vehid = 560, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/uranus", true) == 0)
	{
		new vehid = 558, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/banshee", true) == 0)
	{
		new vehid = 429, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/bullet", true) == 0)
	{
		new vehid = 541, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/cheetah", true) == 0)
	{
		new vehid = 415, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/comet", true) == 0)
	{
		new vehid = 480, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/hotknife", true) == 0)
	{
		new vehid = 434, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/hotring", true) == 0)
	{
		new vehid = 494, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/hotringa", true) == 0)
	{
		new vehid = 502, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/hotringb", true) == 0)
	{
		new vehid = 503, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/infernus", true) == 0)
	{
		new vehid = 411, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/supergt", true) == 0)
	{
		new vehid = 506, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/turismo", true) == 0)
	{
		new vehid = 451, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/windsor", true) == 0)
	{
		new vehid = 555, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/zr350", true) == 0)
	{
		new vehid = 477, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/blade", true) == 0)
	{
		new vehid = 536, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/broadway", true) == 0)
	{
		new vehid = 575, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/remington", true) == 0)
	{
		new vehid = 534, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/savanna", true) == 0)
	{
		new vehid = 567, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/slamvan", true) == 0)
	{
		new vehid = 535, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/tornado", true) == 0)
	{
		new vehid = 576, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if(strcmp(cmd, "/voodoo", true) == 0)
	{
		new vehid = 412, vehcol1 = 8, vehcol2 = 15, dispz = 0;
		VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
    	return 1;
	}
	if (strcmp("/getid", cmdtext, true, 10) == 0)
	{
		new idcar = GetPlayerVehicleID(playerid);
		new modelcar = GetVehicleModel(idcar);
		format(string, sizeof(string), " ID транспорта: %d   Модель: %d",idcar,modelcar);
		SendClientMessage(playerid, COLOR_GREY, string);
    	return 1;
    }
	if (strcmp("/tp", cmdtext, true, 10) == 0)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		PlayCRTP[playerid] = 1;//блокировка контроля координат
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid,COLOR_GREEN," ...!");
		SetPlayerPos(playerid, -2067.5012,1356.4471,7.1016);
    	return 1;
    }
	if (strcmp("/spawn", cmdtext, true, 10) == 0 && playspa[playerid] == 1)
	{
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
			return 1;
		}
		SendClientMessage(playerid,COLOR_GREEN," Вы заспавнились !");
		if(IsPlayerInAnyVehicle(playerid))
		{
			new Float:x, Float:y, Float:z;
			tpdrift[playerid] = 1;
			GetPlayerPos(playerid,x,y,z);
			SetPlayerPos(playerid,x,y,z+5);
			SetTimerEx("SecSpa", 300, 0, "i", playerid);//спавн с блокировкой заполнения слотов оружия и предметов
		}
		else
		{
			SecSpa(playerid);//спавн с блокировкой заполнения слотов оружия и предметов
//			SpawnPlayer(playerid);
		}
    	return 1;
    }
    if(strcmp(cmd, "/car", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /car [ид модели авто] [цвет1] [цвет2]");
				return 1;
			}
			new car;
			car = strval(tmp);
			if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_RED, " Ид модели авто не может быть меньше 400 или больше 611 !"); return 1; }
			if(car == 537 || car == 538 || car == 569 || car == 570)
			{
				SendClientMessage(playerid, COLOR_RED, " Такой Ид модели авто создать нельзя !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не указали цвет1 и цвет2 !");
				return 1;
			}
			new color1;
			color1 = strval(tmp);
			if(color1 < 0 || color1 > 255) { SendClientMessage(playerid, COLOR_RED, " Номер цвета1 не может быть меньше 0 или больше 255 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не указали цвет2 !");
				return 1;
			}
			new color2;
			color2 = strval(tmp);
			if(color2 < 0 || color2 > 255) { SendClientMessage(playerid, COLOR_RED, " Номер цвета2 не может быть меньше 0 или больше 255 !"); return 1; }
			new carid2;
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			carid2 = CreateVehicle(car, X+3,Y+3,Z+1, 0.0, color1, color2, 90000);
			LinkVehicleToInterior(carid2, GetPlayerInterior(playerid));//подключить транспорт к интерьеру игрока
			SetVehicleVirtualWorld(carid2, GetPlayerVirtualWorld(playerid));//установить транспорту виртуальный мир игрока
			format(string, sizeof(string), " *** Админ %s создал транспорт   ID: %d   Модель: %d .", RealName[playerid], carid2, car);
			print(string);
			format(string, sizeof(string), " Транспорт создан !   ID: %d   Модель: %d", carid2, car);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/delakk", true) == 0)
    {
   		if(PlayerInfo[playerid][pAdmin] >= 4)
    	{
   			new data2[53];
    		akk = strtok(cmdtext, idx);
    		if(!strlen(akk))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /delakk [имя аккаунта]");
				return 1;
			}
			if(strlen(akk) < 1 || strlen(akk) > 25)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина имени аккаунта должна быть от 1 до 25 символов !");
				return 1;
			}
#if (MOD90INS == 0)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))
			{
				SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
				return 1;
			}
#endif
#if (MOD90INS == 1)
			format(string,sizeof(string),"players/%s.ini",akk);
//        	format(string,sizeof(string),"%s.ini",akk);
			if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
			{//проверим регистрацию в SQLite
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Такого аккаунта не существует !");
					return 1;
				}
				else
				{
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
			for(new i=0;i<MAX_PLAYERS;i++)//проверка аккаунта на On-Line
			{
   				if(IsPlayerConnected(i))
		    	{
					if(strcmp(akk, RealName[i], false) == 0)
					{
						format(ssss,sizeof(ssss)," Нельзя, аккаунт игрока [%s] On-Line !", akk);
						SendClientMessage(playerid, COLOR_RED, ssss);
						return 1;
					}
				}
			}
#if (MOD90INS == 0)
			new File: UserFile = fopen(string, io_read);//чтение аккаунта
			new key[ 256 ] , val[ 256 ];
			new Data[ 256 ];
			while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
				if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
				if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
				if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
				if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
				if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
				if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
				if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
				if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
				if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
				if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
				if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
				if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
				if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
				if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
				if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//				if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//				if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//				if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//				if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//				if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//				if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//				if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//				if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//				if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//				if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//				if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
				if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
				if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
				if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
				if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
				if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
				if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
				if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
				if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
				if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
				if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
				if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
				if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
				if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
				if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
				if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
				if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
				if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
				if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
				if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
				if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
				if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
				if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
				if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
				if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
				if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
				if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
			}
			fclose(UserFile);
			strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
			strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
			strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
#endif
#if (MOD90INS == 1)
			if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
			{
				new File: UserFile = fopen(string, io_read);//чтение аккаунта
				new key[ 256 ] , val[ 256 ];
				new Data[ 256 ];
				while ( fread( UserFile , Data , sizeof( Data ) ) )
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
					if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
					if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
					if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    	if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    	if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
					if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
					if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
					if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
					if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
					if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
					if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
					if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
					if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
					if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
					if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
					if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
					if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//					if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//					if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//					if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//					if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//					if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//					if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//					if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//					if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//					if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//					if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//					if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
					if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
					if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
					if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
					if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
					if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
					if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
					if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
					if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
					if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
					if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
					if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
					if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
					if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
					if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
					if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
					if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
					if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
					if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
					if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
					if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
					if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
					if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
					if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
					if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
					if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
					if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
				}
				fclose(UserFile);
				strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
				strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
				strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
			}
			else//иначе: (если аккаунт зарегистрирован в SQLite)
			{
				format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
				querydb[playerid] = db_query(playerdb, ssss);//отправляем запрос БД
				if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
				{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
					SendClientMessage(playerid,COLOR_RED," Ошибка чтения аккаунта игрока из БД !");
					return 1;
				}
				else//иначе: (если аккаунт зарегистрирован в БД)
				{
					new buffer[32];//читаем данные из БД
					db_get_field(querydb[playerid], 7, adrip, 256);//IPAdr
					db_get_field(querydb[playerid], 22, buffer, 32); data2[14] = strval(buffer);//Gang
					db_get_field(querydb[playerid], 23, buffer, 32); data2[15] = strval(buffer);//GangLvl
					db_free_result(querydb[playerid]);//очищаем результат запроса БД
				}
			}
#endif
			new string222[256], string333[256], idfile;
			idfile = 0;
			new ip333[128];
			ip333 = ConvIP(adrip);
			format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
			if(fexist(string222))//читаем аккаунт из бан-листа (если файл существует)
			{
				new File: UserFile44 = fopen(string222, io_read);//чтение аккаунта из бан-листа
				new key44[ 256 ] , val44[ 256 ];
				new Data44[ 256 ];
				while ( fread( UserFile44 , Data44 , sizeof( Data44 ) ) )
				{
					key44 = ini_GetKey( Data44 );
					if( strcmp( key44 , "Data" , true ) == 0 ) { string333 = ini_GetValue( Data44 ); }
					if( strcmp( key44 , "IDFile" , true ) == 0 ) { val44 = ini_GetValue( Data44 ); idfile = strval( val44 ); }
				}
				fclose(UserFile44);
				strdel(string333, strlen(string333)-1, strlen(string333));//корректировка причины бана
			}

#if (MOD90INS == 0)
			if(fexist(string))
			{
				fremove(string);//удаляем аккаунт
			}
#endif
#if (MOD90INS == 1)
			if(fexist(string))
			{
				fremove(string);//удаляем аккаунт из fopen (если он там есть)
			}
			format(strdln, sizeof(strdln), "DELETE FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
			db_query(playerdb, strdln);//отправляем запрос на удаление аккаунта из БД
#endif
			format(ssss,sizeof(ssss)," *** Админ %s удалил аккаунт игрока [%s] .", RealName[playerid], akk);
			print(ssss);
			SendClientMessageToAll(COLOR_LIGHTBLUE, ssss);

			new twenlim, restlim;
			Fmadmins(0, akk, 0, twenlim, restlim);
			format(string222,sizeof(string222),"bantime/%d.ini",idfile);
			if(fexist(string222))//если файл временного бана существует, то:
			{
				fremove(string222);//удаление ид-файла временного бана
				printf("[BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) .", akk, idfile);
				format(ssss,sizeof(ssss)," ( Файл временного бана игрока [%s] был удалён ) !", akk);
				SendClientMessageToAll(COLOR_LIGHTBLUE, ssss);
			}
			format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
			if(fexist(string222))//удаляем аккаунт из бан-листа (если файл существует)
			{
				fremove(string222);//удаляем аккаунт из бан-листа
				format(ssss,sizeof(ssss)," *** удалил аккаунт игрока [%s] из бан-листа (автоматически) .", akk);
				print(ssss);
				SendClientMessageToAll(COLOR_LIGHTBLUE, ssss);
			}
			format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
			if(fexist(string222))//удаляем IP-адрес из бан-листа (если файл существует)
			{
				fremove(string222);//удаляем IP-адрес из бан-листа
				format(ssss,sizeof(ssss)," *** удалил IP-адрес [%s] из бан-листа (автоматически) .", adrip);
				print(ssss);
				SendAdminMessage(COLOR_LIGHTBLUE, ssss);
				format(ssss,sizeof(ssss)," *** удалил IP-адрес игрока [%s] из бан-листа (автоматически) .", akk);
				for(new i=0;i<MAX_PLAYERS;i++)//отправка сообщения НЕ админам
				{
					if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] == 0)
					{
						SendClientMessage(i, COLOR_LIGHTBLUE, ssss);
					}
				}
			}
			strdel(ssss, 0, 256);//очистка переменной для разбана
			strcat(ssss, "unbanip ");//сборка RCON-команды разбана
			strcat(ssss, adrip);
			SendRconCommand(ssss);//RCON-команда разбана
			SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
			format(ssss,sizeof(ssss)," ( IP: [%s] был удалён из файла samp.ban ) !", adrip);
			print(ssss);
			SendAdminMessage(COLOR_LIGHTBLUE, ssss);
			format(ssss,sizeof(ssss)," ( IP-адрес игрока [%s] был удалён из файла samp.ban ) !", akk);
			for(new i=0;i<MAX_PLAYERS;i++)//отправка сообщения НЕ админам
			{
				if(IsPlayerConnected(i) && PlayerInfo[i][pAdmin] == 0)
				{
					SendClientMessage(i, COLOR_LIGHTBLUE, ssss);
				}
			}
			CallRemoteFunction("vehsys3delakkfunc", "ds", playerid, akk);//возврата транспорта на продажу в скрипте vehsys3
			CallRemoteFunction("banksysdelakkfunc", "ds", playerid, akk);//удаление банковского счёта в скрипте banksys

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
			format(string,sizeof(string),"gangs/players/%s.ini",akk);
			if(fexist(string))//читаем аккаунт из системы кланов (если файл существует)
			{
    			new f[256];
    			format(f, 256, "gangs/players/%s.ini", akk);
				new file = ini_openFile(f);
				if(file >= 0)
				{
	    			ini_getInteger(file, "Gang", data2[14]);
	    			ini_getInteger(file, "GangLvl", data2[15]);
					ini_closeFile(file);
				}
				fremove(string);//удаляем аккаунт из системы кланов
			}
//---------------------------------- конец -------------------------------------
			if(data2[15] == 6)//если удаляемый аккаунт - глава клана, то:
			{
				format(string,sizeof(string),"gangs/%d.ini",data2[14]);
				if(fexist(string))//если файл с ID клана существует, то:
				{
					GangSA[data2[14]] = 0;//запрещаем запись ID клана в файл
					SetTimerEx("DelAkk22", 300, 0, "i", data2[14]);
				}
			}
			else//если удаляемый аккаунт - НЕ глава клана, то:
			{
				if(data2[14] > 0)//если игрок состоял в клане, то:
				{
					format(string,sizeof(string),"gangs/%d.ini",data2[14]);
					if(fexist(string))//если файл с ID клана существует, то:
					{
						GPlayers[data2[14]]--;//делаем в клане -1 игрок, и сохраняем изменения
						GangSave(data2[14]);//запись ID клана в файл
						format(ssss,sizeof(ssss)," *** и изменил число игроков в клане [%s{33CCFF}] на %d (автоматически) .", GName[data2[14]], GPlayers[data2[14]]);
						print(ssss);
						SendClientMessageToAll(COLOR_LIGHTBLUE, ssss);
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
    }
    if(strcmp(cmd, "/makevip", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /makevip [ид игрока/часть ника] [левел(0-2)]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if(IsPlayerConnected(para1))
			{
				if(gPlayerLogged[para1] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Выбранный игрок ещё не залогинился !");
					return 1;
				}
				if(PlayerInfo[para1][pVIP] == 3)
				{
					SendClientMessage(playerid, COLOR_RED, " Нельзя, игрок находится на депортации !");
					return 1;
				}
				if(PlayerInfo[para1][pAdmin] >= 1)
				{
					SendClientMessage(playerid, COLOR_RED, " Админ не нуждается в VIP статусе !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_RED, " [левел(0-2)] !");
					return 1;
				}
				new level;
				level = strval(tmp);
				if(level < 0 || level > 2)
				{
					SendClientMessage(playerid, COLOR_RED, " Уровень VIP должен быть от 0 до 2 !");
					return 1;
				}
				new dopper;
				dopper = PlayerInfo[para1][pVIP];
				if(dopper == level)
				{
	 				SendClientMessage(playerid, COLOR_RED, " У игрока уже есть назначаемый VIP уровень !");
					return 1;
				}
				PlayerInfo[para1][pVIP] = level;
				if(PlayerInfo[para1][pVIP] == 0)
				{
					format(string, sizeof(string), " *** Админ %s снял VIP уровень с игрока %s .", RealName[playerid], RealName[para1]);
					print(string);
					SendAdminMessage(COLOR_RED, string);
					format(string, sizeof(string), " *** Админ %s снял с Вас VIP уровень.", RealName[playerid]);
					SendClientMessage(para1, COLOR_RED, string);
				}
				else
				{
					format(string, sizeof(string), " *** Админ %s дал игроку %s VIP %d уровня.", RealName[playerid], RealName[para1],level);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
					format(string, sizeof(string), " *** Админ %s дал Вам VIP %d уровня.", RealName[playerid], level);
					SendClientMessage(para1, COLOR_YELLOW, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ид игрока] на сервере нет !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0)
 	{
		if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
		{
			format(string, sizeof(string), "  Время - 12 (%d) ||| Погода - 1 (%d) ||| Гравитация - 0.008 (%f)", GlTime, GlWeat, GlGrav);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, " ----------------------------- Стандартные значения ------------------------------");
			SendClientMessage(playerid, COLOR_GRAD1, string);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, " ---------------------- Помощь по админским командам ----------------------");
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " 1 левел: /time, /weat, /line, /makevip, /banakk, /banakktm, /muteakk, /prisonakk, /plclr, /banlst, /percl,");
				SendClientMessage(playerid, COLOR_GRAD1, "                  /mess, /tadm, /sid, /edclans, /lchouse, /openpm, /playtp, /a(chat), /cord, /ah(elp)");
			}
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " 2 левел: /setmon, /money, /car, /delcar, /entercar, /fmess, /mark, /gotomark");
			}
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
#if (MOD90INS == 0 && MOD77INS == 0)
				SendClientMessage(playerid, COLOR_GRAD1, " 3 левел: /grav, /unbanakk, /shad, /admtp, /live, /nucexp");
#endif
#if (MOD90INS == 0 && MOD77INS == 1)
				SendClientMessage(playerid, COLOR_GRAD1, " 3 левел: /grav, /dataakk, /unbanakk, /shad, /admtp, /live, /nucexp");
#endif
#if (MOD90INS == 1 && MOD77INS == 1)
				SendClientMessage(playerid, COLOR_GRAD1, " 3 левел: /grav, /dataakk, /unbanakk, /akksrc, /shad, /admtp, /live, /nucexp");
#endif
			}
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " 4 левел: /makeadmin, /delakk, /admakk, /gmx, /passhouse, /relhouses, /cortime,");
				SendClientMessage(playerid, COLOR_GRAD1, "                  /edplclans, /deltr, /madmins");
			}
			if(IsPlayerAdmin(playerid))
			{
#if (MOD90INS == 0)
				SendClientMessage(playerid, COLOR_GRAD1, " RCON-админ: /iadminset, /untouch, /servcon, /openip");
#endif
#if (MOD90INS == 1)
				SendClientMessage(playerid, COLOR_GRAD1, " RCON-админ: /iadminset, /untouch, /servcon, /openip, /delakktm");
#endif
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
 	}
	if(strcmp(cmd, "/mark", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			TpPosA[playerid][0] = GetPlayerInterior(playerid);
			TpPosA[playerid][1] = GetPlayerVirtualWorld(playerid);
			GetPlayerPos(playerid, TpDestA[playerid][0],TpDestA[playerid][1],TpDestA[playerid][2]);
			if (GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3)
			{
				GetVehicleZAngle(GetPlayerVehicleID(playerid), TpDestA[playerid][3]);
			}
			else
			{
				GetPlayerFacingAngle(playerid, TpDestA[playerid][3]);
			}
			SendClientMessage(playerid, COLOR_GRAD1, " Маркер телепорта установлен.");
			printf(" *** Админ %s установил телепорт ( /mark )", RealName[playerid]);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/gotomark", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
				return 1;
			}
			new dopper1, dopper2, dopper3, dopper4;
			dopper1 = 0;
			dopper2 = 0;
			dopper3 = 0;
			dopper4 = 0;
			new Float:ConX, Float:ConY, Float:ConZ;
			GetPlayerPos(playerid, ConX, ConY, ConZ);

			if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper1 = 1; }

			if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
			(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
			(GetPlayerInterior(playerid) == 15 || GetPlayerInterior(playerid) == 14)) { dopper3 = 1; }

			if(-15500 >= TpDestA[playerid][0] >= -20000 && 15500 <= TpDestA[playerid][1] <= 20000) { dopper2 = 1; }

			if(((-1602 < TpDestA[playerid][0] < -1193 && 840 < TpDestA[playerid][1] < 1158 && 973 < TpDestA[playerid][2] < 1101) ||
			(-1547 < TpDestA[playerid][0] < -1247 && 1506 < TpDestA[playerid][1] < 1705 && 1002 < TpDestA[playerid][2] < 1123)) &&
			(TpPosA[playerid][0] == 15 || TpPosA[playerid][0] == 14)) { dopper4 = 1; }

			if(dopper1 == 0 && dopper2 == 1)//если игрок телепортируется c основной карты на админ-остров, то:
			{
				new Float:PosX, Float:PosY, Float:PosZ;
				new nmod = GetVehicleModel(GetPlayerVehicleID(playerid));
				if(nmod == 538 || nmod == 537)
				{//если игрок в поезде, то высадить игрока из поезда
					GetPlayerPos(playerid,PosX,PosY,PosZ);
					SetPlayerPos(playerid,PosX+3,PosY+3,PosZ+5);
				}
				tpdrift[playerid] = 1;
				SetPlayerInterior(playerid, TpPosA[playerid][0]);
				SetPlayerVirtualWorld(playerid, TpPosA[playerid][1]);
				SetPlayerPos(playerid, TpDestA[playerid][0],TpDestA[playerid][1],TpDestA[playerid][2]+1);
				SetPlayerFacingAngle(playerid, TpDestA[playerid][3]);
				SetCameraBehindPlayer(playerid);
			}
			else//если игрок телепортируется в любом направлении, ТОЛЬКО НЕ c основной карты на админ-остров, то:
			{
				new Float:PosX, Float:PosY, Float:PosZ;
				new nmod = GetVehicleModel(GetPlayerVehicleID(playerid));
				if(nmod == 538 || nmod == 537)
				{//если игрок в поезде, то высадить игрока из поезда
					GetPlayerPos(playerid,PosX,PosY,PosZ);
					SetPlayerPos(playerid,PosX+3,PosY+3,PosZ+5);
				}
				if(dopper3 == 0 && dopper4 == 1)//если игрок телепортируется НЕ С дерби НА дерби, то:
				{
					tpdrift[playerid] = 1;
					SetPlayerInterior(playerid, TpPosA[playerid][0]);
					SetPlayerVirtualWorld(playerid, TpPosA[playerid][1]);
					SetPlayerPos(playerid, TpDestA[playerid][0],TpDestA[playerid][1],TpDestA[playerid][2]+1);
					SetPlayerFacingAngle(playerid, TpDestA[playerid][3]);
					SetCameraBehindPlayer(playerid);
				}
				else//если игрок телепортируется в любом направлении, ЗА ИСКЛЮЧЕНИЕМ "НЕ С дерби НА дерби", то:
				{
					if (GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						new regm = 2, per1, per2, Float:per3;
						per1 = TpPosA[playerid][0];
						per2 = TpPosA[playerid][1];
						per3 = TpDestA[playerid][3];
						StopDrift(playerid,regm,per1,per2,Float:per3,Float:TpDestA[playerid][0],Float:TpDestA[playerid][1],Float:TpDestA[playerid][2]+1);
					}
					else//иначе:
					{
						tpdrift[playerid] = 1;
						SetPlayerInterior(playerid, TpPosA[playerid][0]);
						SetPlayerVirtualWorld(playerid, TpPosA[playerid][1]);
						SetPlayerPos(playerid, TpDestA[playerid][0],TpDestA[playerid][1],TpDestA[playerid][2]+1);
						SetPlayerFacingAngle(playerid, TpDestA[playerid][3]);
						SetCameraBehindPlayer(playerid);
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD1, " Вы были телепортированы.");
			printf(" *** Админ %s телепортировался ( /gotomark )", RealName[playerid]);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	return 0;
}

forward entcar22(playerid, testcar);
public entcar22(playerid, testcar)
{
	new dopper = -600;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPlayerVehicleID(i) == testcar && GetPlayerVehicleSeat(i) == 0)
			{//если в ТП-авто есть игрок, И этот игрок на месте водителя, то:
				dopper = i;//запомнить ИД игрока
			}
		}
	}
	if(dopper != -600)//если ИД игрока найден, то:
	{
		EnterTick33[dopper] = 1;//обход антикрашера - 3
		new Float:x, Float:y, Float:z;
		GetPlayerPos(dopper, x, y, z);//высадить игрока
		SetPlayerPos(dopper, x+3, y+3, z);
		new string[256];
		format(string, sizeof(string), " *** Админ %s высадил игрока %s [%d] из транспорта  ID: %d  по команде /entercar", RealName[playerid], RealName[dopper], dopper, testcar);
		print(string);
		SendAdminMessage(COLOR_YELLOW, string);
	}
	SetPlayerVirtualWorld(playerid, GetVehicleVirtualWorld(testcar));//установить игроку виртуальный мир транспорта
	SetTimerEx("entcar33", 300, 0, "ii", playerid, testcar);
	return 1;
}

forward entcar33(playerid, testcar);
public entcar33(playerid, testcar)
{
	new string[256];
	PutPlayerInVehicle(playerid, testcar, 0);
	format(string, sizeof(string), " *** Админ %s телепортировался в транспорт   ID: %d.", RealName[playerid], testcar);
	print(string);
	format(string, sizeof(string), " Вы были телепортированы в транспорт   ID: %d", testcar);
	SendClientMessage(playerid, COLOR_GRAD2, string);
	return 1;
}

public RestartS()
{
	restrest = 1;//переменная рестарта сервера
	new per;

//	FiveSecTimer();
	KillTimer(fivesectimer);
	KillTimer(restart);
	KillTimer(autorepaircar);
//	KillTimer(timeobject);
//	KillTimer(timeobject22);
	KillTimer(timpolsec);
	KillTimer(onsectimer);
	KillTimer(minsertimer);
	KillTimer(drifttimer);
	KillTimer(leveltimer);

    SendClientMessageToAll(COLOR_RED,"*** Рестарт !!! ***");

	SetTimerEx("ResServ", 1000, 0, "i", per);
	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
/*
	new Score = GetPVarInt(playerid, "PlMon");//drift bonus
	if(Score >= 0 && Score < 100000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}1{FFFFFF}.*\n*{00CCFF}Нуб в дрифтинге{FFFFFF}*");
	if(Score >= 100000 && Score < 200000) format(Playerdr[playerid][Level],200,"{FFFFFF}*Игрок{FFFFFF}*\n*Уровень: {00CCFF}2{FFFFFF}.*\n*{00CCFF}Новичок{FFFFFF}*");
	if(Score >= 200000 && Score < 300000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}3{FFFFFF}.*\n*{00CCFF}Начинающий дрифтер{FFFFFF}*");
	if(Score >= 300000 && Score < 400000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}4{FFFFFF}.*\n*{00CCFF}Проживающий{FFFFFF}*");
	if(Score >= 400000 && Score < 500000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}5{FFFFFF}.*\n*{00CCFF}Свой{FFFFFF}*");
	if(Score >= 500000 && Score < 600000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}6{FFFFFF}.*\n*{00CCFF}Пахан{FFFFFF}*");
	if(Score >= 600000 && Score < 700000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}7{FFFFFF}.*\n*{00CCFF}Pro Drifter{FFFFFF}*");
	if(Score >= 700000 && Score < 800000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}8{FFFFFF}.*\n*{00CCFF}VIP{FFFFFF}*");
	if(Score >= 800000 && Score < 900000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}9{FFFFFF}.*\n*{00CCFF}Гловарь{FFFFFF}*");
	if(Score >= 900000 ) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}*10*{FFFFFF}.*\n*{00CCFF}Король дрифта{FFFFFF}*");
	if(scrmod[3][playerid] == 0)
	{
		if(LevelStats[playerid] == 0) Attach3DTextLabelToPlayer(Level3D[playerid],playerid,0.0,0.0,1.00);
//		if(LevelStats[playerid] == 0) Attach3DTextLabelToPlayer(Level3D[playerid],playerid,0.0,0.0,0.47);
		Update3DTextLabelText(Level3D[playerid],0x00FF00FF,Playerdr[playerid][Level]);
		LevelStats[playerid] = 1;
	}
*/
    new inter = GetPlayerInterior(playerid);
	LinkVehicleToInterior(vehicleid,inter);
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{

	if(scrmod[1][playerid] == 0)
	{
		R_Vehicle[playerid] = VehicleSpeed_1;//speedometer
		PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);
		TextDrawHideForPlayer(playerid, KMH);
	}
/*
	new Score = GetPVarInt(playerid, "PlMon");//drift bonus
	if(Score >= 0 && Score < 100000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}1{FFFFFF}.*\n*{00CCFF}Нуб в дрифтинге{FFFFFF}*");
	if(Score >= 100000 && Score < 200000) format(Playerdr[playerid][Level],200,"{FFFFFF}*Игрок{FFFFFF}*\n*Уровень: {00CCFF}2{FFFFFF}.*\n*{00CCFF}Новичок{FFFFFF}*");
	if(Score >= 200000 && Score < 300000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}3{FFFFFF}.*\n*{00CCFF}Начинающий дрифтер{FFFFFF}*");
	if(Score >= 300000 && Score < 400000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}4{FFFFFF}.*\n*{00CCFF}Проживающий{FFFFFF}*");
	if(Score >= 400000 && Score < 500000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}5{FFFFFF}.*\n*{00CCFF}Свой{FFFFFF}*");
	if(Score >= 500000 && Score < 600000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}6{FFFFFF}.*\n*{00CCFF}Пахан{FFFFFF}*");
	if(Score >= 600000 && Score < 700000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}7{FFFFFF}.*\n*{00CCFF}Pro Drifter{FFFFFF}*");
	if(Score >= 700000 && Score < 800000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}8{FFFFFF}.*\n*{00CCFF}VIP{FFFFFF}*");
	if(Score >= 800000 && Score < 900000) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}9{FFFFFF}.*\n*{00CCFF}Гловарь{FFFFFF}*");
	if(Score >= 900000 ) format(Playerdr[playerid][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}*10*{FFFFFF}.*\n*{00CCFF}Король дрифта{FFFFFF}*");
	if(scrmod[3][playerid] == 0)
	{
		if(LevelStats[playerid] == 0) Attach3DTextLabelToPlayer(Level3D[playerid],playerid,0.0,0.0,1.00);
//		if(LevelStats[playerid] == 0) Attach3DTextLabelToPlayer(Level3D[playerid],playerid,0.0,0.0,0.47);
		Update3DTextLabelText(Level3D[playerid],0x00FF00FF,Playerdr[playerid][Level]);
		LevelStats[playerid] = 1;
	}
*/
    new inter = GetPlayerInterior(playerid);
	LinkVehicleToInterior(vehicleid,inter);
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{

	if(scrmod[1][playerid] == 0)
	{
		if(newstate == PLAYER_STATE_DRIVER)//speedometer
		{
			new String[64];

			TextDrawShowForPlayer(playerid, KMH);

			format(String, sizeof(String), "%d", GetPlayerSpeed(playerid));
			PlayerTextDrawSetString(playerid, VehicleSpeed[playerid], String);
			PlayerTextDrawShow(playerid, VehicleSpeed[playerid]);

			R_Vehicle[playerid] = VehicleSpeed_2;
		}
		else if(newstate == PLAYER_STATE_ONFOOT)
		{
			R_Vehicle[playerid] = VehicleSpeed_1;

			PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);
			TextDrawHideForPlayer(playerid, KMH);
		}
	}

	if(newstate == 3 && oldstate == 2)//если игрока пересадили с места водителя
	{//на место пассажира, то:
		new idcar = GetPlayerVehicleID(playerid);//определяем ИД транспорта
		SetTimerEx("CheatVehic", 100, 0, "ii", playerid, idcar);//тайм-аут (на средний пинг игроков)
	}
//---------------- антикрашер игроков - 3 (январь 2015) ------------------------
	if(newstate == 2)
	{
		carplmod[playerid] = GetVehicleModel(GetPlayerVehicleID(playerid));
        switch(carplmod[playerid])//если игрок сел в модель без анимации входа/выхода, то:
        {
            case 472,473,493,595,484,430,453,452,446,454: EnterTick33[playerid] = 1;//обход антикрашера - 3;
        }
		EnterTick[playerid] = GetTickCount() + 250;
	}
	if(oldstate == 2 && EnterTick33[playerid] == 0 && (GetTickCount() - EnterTick[playerid]) < 250)
	{
		new string[256];
		format(string, sizeof(string), "* Игрок %s [%d] был кикнут за краш игроков - 3 !", RealName[playerid], playerid);
		print(string);
		SendClientMessageToAll(COLOR_RED, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
	}
//-------------------- антикрашер игроков - 3 (конец) --------------------------
	if(newstate >= 1 && newstate <= 3 && oldstate == 8)//повторное включение наблюдения за игроком
	{//после респавна игрока
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(admper1[i] == playerid)//если есть админ ведущий наблюдение за игроком, то:
				{
					if(newstate == 2 || newstate == 3)//если игрок в транспорте, то:
					{
						new para44;
						para44 = GetPlayerVehicleID(playerid);
						PlayerSpectateVehicle(i, para44, SPECTATE_MODE_NORMAL);
						if(admper5[i] == 0)//если админ наблюдал за игроком, то:
						{
							PlayerTextDrawShow(i, VehicleSpeed[i]);//включаем текстдравы спидометра
							TextDrawShowForPlayer(i, KMH);
							TextDrawShowForPlayer(i, HMS22);//включаем текстдравы максимальной горизонтальной скорости
							PlayerTextDrawShow(i, HMS44[i]);
						}
						new string[16];//показываем максимальную горизонтальную скорость
						format(string, sizeof(string), "%d", GetHMaxSpeed(para44));
						PlayerTextDrawSetString(i, HMS44[i], string);
						admper5[i] = 1;//наблюдаем за транспортом
					}
					else
					{
						if(admper5[i] == 1)//если админ наблюдал за транспортом, то:
						{
							PlayerTextDrawHide(i, VehicleSpeed[i]);//отключаем текстдравы спидометра
							TextDrawHideForPlayer(i, KMH);
							TextDrawHideForPlayer(i, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
							PlayerTextDrawHide(i, HMS44[i]);
						}
						PlayerSpectatePlayer(i, playerid, SPECTATE_MODE_NORMAL);//включить наблюдение
						admper5[i] = 0;//наблюдаем за игроком
					}
				}
			}
		}
	}
	return 1;
}

forward CheatVehic(playerid, idcar);
public CheatVehic(playerid, idcar)
{
	new idcheat = 600;
	for(new i = 0; i < MAX_PLAYERS; i++)//первичный поиск ПОТЕНЦИАЛЬНОГО чита
	{//цикл для всех игроков
		if(IsPlayerConnected(i))//проверяем ТОЛЬКО подключенных игроков
		{
			if(GetPlayerVehicleID(i) == idcar && GetPlayerState(i) == 2 && i != playerid)
			{//если игрок на месте водителя в том же транспорте, И это НЕ "пересаженный" игрок, то:
				idcheat = i;//игрок - ПОТЕНЦИАЛЬНЫЙ чит
			}
		}
	}
	SetTimerEx("CheatVehic22", 500, 0, "iii", playerid, idcar, idcheat);//тайм-аут (на среднее время работы чита)
	return 1;
}

forward CheatVehic22(playerid, idcar, idcheat);
public CheatVehic22(playerid, idcar, idcheat)
{
	new Float:igx, Float:igy, Float:igz;
	if(idcheat == 600)//если ПОТЕНЦИАЛЬНЫЙ чит при первичном поиске НЕ был найден, то:
	{
		for(new i = 0; i < MAX_PLAYERS; i++)//вторичный поиск ПОТЕНЦИАЛЬНОГО чита
		{//цикл для всех игроков
			if(IsPlayerConnected(i))//проверяем ТОЛЬКО подключенных игроков
			{
				if(GetPlayerVehicleID(i) == idcar && GetPlayerState(i) == 2 && i != playerid)
				{//если игрок на месте водителя в том же транспорте, И это НЕ "пересаженный" игрок, то:
					idcheat = i;//игрок - ПОТЕНЦИАЛЬНЫЙ чит
				}
			}
		}
	}
	if(idcheat != 600)//если ПОТЕНЦИАЛЬНЫЙ чит был найден, то:
	{
		GetPlayerPos(idcheat, igx, igy, igz);//выкидываем ПОТЕНЦИАЛЬНОГО чита из транспорта
		SetPlayerPos(idcheat, igx+3, igy+3, igz+3);
	}
	GetPlayerPos(playerid, igx, igy, igz);//высаживаем пересаженного игрока (ВОЗМОЖНОГО чита)
	SetPlayerPos(playerid, igx+3, igy+3, igz+3);
	SetTimerEx("CheatVehic33", 300, 0, "iii", playerid, idcar, idcheat);//тайм-аут (перед возвращением...
	return 1;//...пересаженного игрока (ВОЗМОЖНОГО чита) на место водителя)
}

forward CheatVehic33(playerid, idcar, idcheat);
public CheatVehic33(playerid, idcar, idcheat)
{
	PutPlayerInVehicle(playerid, idcar, 0);//возвращаем пересаженного игрока (ВОЗМОЖНОГО чита) на место водителя
	if(idcheat != 600)//если ПОТЕНЦИАЛЬНЫЙ чит был найден, то:
	{
		new dopper22 = 0;//поиск минимум 2-х свободных слотов в таблице ников читов
		for(new i = 0; i < 40; i++)
		{
			if(!strlen(DataCheat1[i]))
			{
	    		dopper22++;
			}
		}
		if(dopper22 < 2)//если найдено меньше 2-х слотов, то:
		{
			for(new i = 0; i < 40; i++)//очистка ВСЕЙ таблицы ников читов
			{
				strdel(DataCheat1[i], 0, MAX_PLAYER_NAME);
			}
		}
		dopper22 = 0;
		while(strlen(DataCheat1[dopper22]))
		{//поиск 1-го свободного слота, и запись туда ника ПОТЕНЦИАЛЬНОГО чита
			dopper22++;
		}
		strcat(DataCheat1[dopper22], RealName[idcheat]);
	}
	else//иначе:
	{
		new dopper22 = 0;//поиск минимум 1-го свободного слота в таблице ников читов
		for(new i = 0; i < 40; i++)
		{
			if(!strlen(DataCheat1[i]))
			{
	    		dopper22++;
			}
		}
		if(dopper22 < 1)//если НЕ найдено ни одного свободного слота, то:
		{
			for(new i = 0; i < 40; i++)//очистка ВСЕЙ таблицы ников читов
			{
				strdel(DataCheat1[i], 0, MAX_PLAYER_NAME);
			}
		}
	}
	new dopper = 0;
	while(strlen(DataCheat1[dopper]))
	{//поиск 1-го свободного слота, и запись туда ника ВОЗМОЖНОГО чита
		dopper++;
	}
	strcat(DataCheat1[dopper], RealName[playerid]);
	new j = 0;//поиск совпадений в таблице ников читов
	new nomid;
	new doplogcheat[MAX_PLAYER_NAME];
	for(new i = 0; i < 40; i++)
	{//"установка" ОРИГИНАЛА для сравнения
		strdel(doplogcheat, 0, MAX_PLAYER_NAME);//очистка ника чита
		if(strlen(DataCheat1[i]) != 0)//если слот ОРИГИНАЛА НЕ пустой, то:
		{
			nomid = -600;//подготовка переменной номера ИД чита
			dopper = 1;//"установка" счётчика совпадений (=1 - ОРИГИНАЛ уже найден)
			j = i + 1;//индекс для поиска - индекс ОРИГИНАЛА +1
			while(j < 40)
			{
				if(strcmp(DataCheat1[i],DataCheat1[j],false) == 0 && strlen(DataCheat1[j]) != 0)
				{//если есть совпадение ника, И слот ника НЕ пустой, то:
			    	dopper++;//+1 к счётчику совпадений
				}
				if(dopper > 3)//если найдено больше 3-х совпадений, то:
				{
					strcat(doplogcheat, DataCheat1[j]);//запоминаем ник
					break;//выходим из поиска
				}
				j++;//индекс для поиска +1
			}
		}
		if(strlen(doplogcheat) != 0)//если ник НЕ пустой, то:
		{
			for(new m = 0; m < MAX_PLAYERS; m++)
			{//поиск ника среди игроков (для определения его ИД)
				if(IsPlayerConnected(m))
				{
					if(strcmp(doplogcheat,RealName[m],false) == 0)
					{
						nomid = m;
					}
				}
			}
			if(nomid != -600)//если ИД чита найден, то:
			{
				for(new m2 = 0; m2 < 40; m2++)
				{//очистка ВСЕЙ таблицы от ника чита
					if(strcmp(doplogcheat,DataCheat1[m2],false) == 0 && strlen(DataCheat1[m2]) != 0)
					{
						strdel(DataCheat1[m2], 0, MAX_PLAYER_NAME);
					}
				}
				new string[256];//кикаем чита
				format(string, sizeof(string), "* Игрок %s [%d] был кикнут за чит (1), мешающий работе сервера !", RealName[nomid], nomid);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				SetTimerEx("PlayKick", 300, 0, "i", nomid);
			}
		}
	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	return 1;
}

public OnObjectMoved(objectid)
{

//----------------------------- Elevator - 1 -----------------------------------
    new Float:x, Float:y, Float:z;
	if(objectid == Obj_Elevator)
	{
		SetTimer("StopMonit", 1000, 0);//задержка отключения мониторинга лифта

	    KillTimer(ElevatorBoostTimer);
	    FloorRequestedBy[ElevatorFloor] = 10000;//освобождение места игрока в очереди обслуживания

		for(new i; i < sizeof(ElevatorQueue) - 1; i ++){ElevatorQueue[i] = ElevatorQueue[i + 1];}
		ElevatorQueue[sizeof(ElevatorQueue) - 1] = -1;//сдвиг очереди обслуживания

	    Elevator_OpenDoors();
	    Floor_OpenDoors(ElevatorFloor);
	    GetObjectPos(Obj_Elevator, x, y, z);
	    Label_Elevator = CreateDynamic3DTextLabel("Нажмите {AA3333}''N'' {33AA33}для\nуправления лифтом",
		0x33AA33FF, 1784.9822, -1302.0426, z - 0.9, 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
	    ElevatorState = 1;
	    SetTimer("Elevator_TurnToIdle", ELEVATOR_WAIT_TIME, 0);//задержка в очереди обслуживания
	}
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	if(objectid == Obj_Elevator22)
	{
		SetTimer("StopMonit22", 1000, 0);//задержка отключения мониторинга лифта

	    KillTimer(ElevatorBoostTimer22);
	    FloorRequestedBy22[ElevatorFloor22] = 10000;//освобождение места игрока в очереди обслуживания

		for(new i; i < sizeof(ElevatorQueue22) - 1; i ++){ElevatorQueue22[i] = ElevatorQueue22[i + 1];}
		ElevatorQueue22[sizeof(ElevatorQueue22) - 1] = -1;//сдвиг очереди обслуживания

	    Elevator_OpenDoors22();
	    Floor_OpenDoors22(ElevatorFloor22);
	    GetObjectPos(Obj_Elevator22, x, y, z);
	    Label_Elevator22 = CreateDynamic3DTextLabel("Нажмите {AA3333}''N'' {33AA33}для\nуправления лифтом",
		0x33AA33FF, 289.23, -1610.63, z - 0.9, 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
	    ElevatorState22 = 1;
	    SetTimer("Elevator_TurnToIdle22", ELEVATOR_WAIT_TIME22, 0);//задержка в очереди обслуживания
	}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	return 1;
}

//==============================================================================
//                              GarHouse
//==============================================================================
//public OnPlayerPickUpPickup(playerid, pickupid)
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{

//------------------------------ BusSystem -------------------------------------
		new para1 = 0;
		new para2 = 0;
		while(para1 < BUS_MAX)
		{
			if(PickupID[para1] == pickupid)
			{
				para2 = 1;
				break;
			}
			para1++;
		}
		if(para2 == 1)
		{
			if(DelayPickup[playerid] == 0)
			{
				DelayPickup[playerid]++;
				return 1;
			}
			if(DelayPickup[playerid] == 1)
			{
				DelayPickup[playerid]++;
				return 1;
			}
			if(DelayPickup[playerid] == 2)
			{
				DelayPickup[playerid] = 0;
			}
			new string[2048];
			playIDbus[playerid] = para1;//запоминаем ИД бизнеса для игрока
			if(busday[para1] == 0 && strcmp(RealName[playerid], busplayname[para1], false) != 0)
			{//если у бизнеса есть право на его перекупку, и этот бизнес не игрока, то:
				format(string, sizeof(string), "{ADFF2F}Название бизнеса: %s\nСтоимость бизнеса: %d $\n\nЭтот бизнес будет Вам приносить доход: %d $\
				\nкаждые %d минут Вашего он-лайн отыгранного времени.\n\nВнимание ! Через %d суток, со дня покупки этого бизнеса,\
				\nэтот бизнес сможет перекупить любой другой игрок !", busname[para1], buscost[para1], busincome[para1],
				busminute[para1], BUS_DAY);
				ShowPlayerDialog(playerid, 8001, 0, "Информация.", string, "Купить", "Отмена");
				SetPVarInt(playerid, "DlgCont", 8001);
			}
			if(busday[para1] != 0 && strcmp(RealName[playerid], busplayname[para1], false) != 0)
			{//если у бизнеса нет права на его перекупку, и этот бизнес не игрока, то:
				format(string, sizeof(string), "{ADFF2F}Название бизнеса: %s\nВладелец бизнеса: %s\nСтоимость бизнеса: %d $", busname[para1],
				busplayname[para1], buscost[para1]);
				ShowPlayerDialog(playerid, 8000, 0, "Информация.", string, "OK", "");
				SetPVarInt(playerid, "DlgCont", 8000);
			}
			if(strcmp(RealName[playerid], busplayname[para1], false) == 0)
			{//если этот бизнес - бизнес игрока, то:
				format(string, sizeof(string), "{ADFF2F}Название бизнеса: %s\nСтоимость бизнеса: %d $\n\nЭтот бизнес Вам приносит доход: %d $\
				\nкаждые %d минут Вашего он-лайн отыгранного времени.\n\nВы хотите продать этот бизнес ?", busname[para1], buscost[para1],
				busincome[para1], busminute[para1]);
				ShowPlayerDialog(playerid, 8002, 0, "Информация.", string, "Продать", "Отмена");
				SetPVarInt(playerid, "DlgCont", 8002);
			}
		}
		else
		{
//---------------------------- End BusSystem -----------------------------------

			if(GetPVarInt(playerid, "HousePrevTime") != 0) return 1;//запрет активации пикапа

	    	new file[HOUSEFILE_LENGTH], string[256]; // Не жалуются на огромные размеры, просто измените его, если вам нужно.
	    	Loop(h, MAX_HOUSES)
			{
		    	format(file, sizeof(file), FILEPATH, h);
		    	if(pickupid == HousePickupOut[h])
		    	{
		        	SetPVarInt(playerid, "LastHouseCP", h);
//		        	if(!strcmp(GetHouseOwner(h), RealName[playerid], CASE_SENSETIVE) || IsPlayerAdmin(playerid)) // Если удалить комментарий, RCON администраторы могут войти в любой дом они хотят.
		        	if(!strcmp(GetHouseOwner(h), RealName[playerid], CASE_SENSETIVE)) // Если удалить комментарий, RCON администраторы могут войти в любой дом они хотят.
		        	{
		            	SetPVarInt(playerid, "IsInHouse", 1);
		            	SetPlayerHouseInterior(playerid, h);
		            	if(!strcmp(GetHouseOwner(h), RealName[playerid], CASE_SENSETIVE))
		            	{
			        		SendClientMessage(playerid, COLOUR_INFO, I_HMENU);
			        	}
			        	#if defined GH_DEBUGGING
				    		printf(DEBUG_OP_PUD_PICKUP1, RealName[playerid], playerid, h);
			    		#endif
		        	}
		        	if(strcmp(GetHouseOwner(h), RealName[playerid], CASE_SENSETIVE) && strcmp(GetHouseOwner(h), INVALID_HOWNER_NAME, CASE_SENSETIVE))
		        	{
		            	if(!strcmp(dini_Get(file, "HousePassword"), "INVALID_HOUSE_PASSWORD", CASE_SENSETIVE))
						{
		        			ShowInfoBox(playerid, INFORMATION_HEADER, LABELTEXT2, GetHouseName(h), GetHouseOwner(h), GetHouseValue(h), h);
						}
						if(strcmp(dini_Get(file, "HousePassword"), "INVALID_HOUSE_PASSWORD", CASE_SENSETIVE))
						{

            				if(lockpas[playerid] == 1) return 1;//если диалог ввода пароля заблокирован, то завершить public
							lockpas[playerid] = 1;//заблокировать диалог ввода пароля

		        			format(string,sizeof(string), HMENU_ENTER_PASS, GetHouseName(h), GetHouseOwner(h), GetHouseValue(h), h);
	                		ShowPlayerDialog(playerid, 521, DIALOG_STYLE_INPUT, "Информация о доме", string, "OK", "Отмена");
							SetPVarInt(playerid, "DlgCont", 521);
						}
		        	}
		        	if(!strcmp(GetHouseOwner(h), INVALID_HOWNER_NAME, CASE_SENSETIVE) && dini_Int(file, "HouseValue") > 0)
					{
						format(string, sizeof(string), HMENU_BUY_HOUSE, RealName[playerid], GetHouseValue(h));
						ShowPlayerDialog(playerid, 504, DIALOG_STYLE_MSGBOX, "Покупка дома", string, "Купить", "Отмена");
						SetPVarInt(playerid, "DlgCont", 504);
					}
					break;
		    	}
		    	if(pickupid == HousePickupInt[h])
		    	{
		        	#if defined GH_HINTERIOR_UPGRADE
		        	if(GetPVarInt(playerid, "HousePreview") == 1)
		        	{
		            	new tmpstring[50];
						GetPVarString(playerid, "HousePrevName", tmpstring, 50);
						format(string, sizeof(string), HMENU_BUY_HINTERIOR, tmpstring, GetPVarInt(playerid, "HousePrevValue"));
						ShowPlayerDialog(playerid, 517, DIALOG_STYLE_MSGBOX, "Интерьер", string, "Купить", "Отмена");
						SetPVarInt(playerid, "DlgCont", 517);
		        	}
		        	#endif
		        	if(GetPVarInt(playerid, "HousePreview") == 0)
		        	{
		            	SetPVarInt(playerid, "IsInHouse", 0);
			        	SetPlayerPosEx(playerid, dini_Float(file, "SpawnOutX"), dini_Float(file, "SpawnOutY"), dini_Float(file, "SpawnOutZ"), dini_Float(file, "SpawnOutAngle"), dini_Int(file, "SpawnInterior"), dini_Int(file, "SpawnWorld"));
			        	#if defined GH_DEBUGGING
				    		printf(DEBUG_OP_PUD_PICKUP2, RealName[playerid], playerid, h);
			    		#endif
					}
					break;
		    	}
	    	}
		}
	}
	return 1;
}
//==============================================================================
//                              End GarHouse
//==============================================================================

public OnVehicleMod(playerid, vehicleid, componentid)
{
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	new string[256];
#if (MOD33INS == 1 && MOD44INS == 0)
	if(newkeys & 512 && GetPVarInt(playerid, "MnMode") != 1)
	{
		if(IsPlayerInAnyVehicle(playerid))
	 	{
			if(gPlayerLogged[playerid] == 0)
			{
				format(string,sizeof(string),"* Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
				print(string);
	    		SendClientMessageToAll(COLOR_LIGHTRED, string);
				SetTimerEx("PlayKick", 300, 0, "i", playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pPrisonsec] > 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В тюрьме игровое меню не работает !");
				return 1;
			}
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения игровое меню не работает !");
				return 1;
			}
			if(perfrost[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
				return 1;
			}
			if(PlayLock1[0][playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заблокированы !");
				return 1;
			}
			if(CallRemoteFunction("mpsysplfunc", "d", playerid) != 0)//чтение статуса участника из системы МП
			{
				SendClientMessage(playerid, COLOR_RED, " В системе МП игровое меню не работает !");
				return 1;
			}
			if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
			{
				SendClientMessage(playerid, COLOR_RED, " В системе дерби-сумо игровое меню не работает !");
				return 1;
			}
			if(CallRemoteFunction("banksysplfunc", "d", playerid) != 0)//чтение статуса участника из системы банков
			{
				SendClientMessage(playerid, COLOR_RED, " В системе банков игровое меню не работает !");
				return 1;
			}
			gettime(timecor[0], timecor[1]);
			TimCor();//коррекция времени
			format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

			//Clans system
			ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nПравила сервера\nПравила для админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 4);

	 	}
	}
	if((newkeys & 65536 && GetPVarInt(playerid, "MnMode") == 1) || (newkeys & 1024 && GetPVarInt(playerid, "MnMode") != 1))
	{
		if(gPlayerLogged[playerid] == 0)
		{
			format(string,sizeof(string),"* Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
			print(string);
    		SendClientMessageToAll(COLOR_LIGHTRED, string);
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pPrisonsec] > 0)
		{
			SendClientMessage(playerid, COLOR_RED, " В тюрьме игровое меню не работает !");
			return 1;
		}
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения игровое меню не работает !");
			return 1;
		}
		if(perfrost[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
			return 1;
		}
		if(PlayLock1[0][playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заблокированы !");
			return 1;
		}
		if(CallRemoteFunction("mpsysplfunc", "d", playerid) != 0)//чтение статуса участника из системы МП
		{
			SendClientMessage(playerid, COLOR_RED, " В системе МП игровое меню не работает !");
			return 1;
		}
		if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
		{
			SendClientMessage(playerid, COLOR_RED, " В системе дерби-сумо игровое меню не работает !");
			return 1;
		}
		if(CallRemoteFunction("banksysplfunc", "d", playerid) != 0)//чтение статуса участника из системы банков
		{
			SendClientMessage(playerid, COLOR_RED, " В системе банков игровое меню не работает !");
			return 1;
		}
		gettime(timecor[0], timecor[1]);
		TimCor();//коррекция времени
		format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

		//Clans system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nПравила сервера\nПравила для админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 4);

	}
#endif
#if (MOD33INS == 1 && MOD44INS == 1)
	if(newkeys & 512 && GetPVarInt(playerid, "MnMode") != 1)
	{
		if(IsPlayerInAnyVehicle(playerid))
	 	{
			if(gPlayerLogged[playerid] == 0)
			{
				format(string,sizeof(string),"* Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
				print(string);
	    		SendClientMessageToAll(COLOR_LIGHTRED, string);
				SetTimerEx("PlayKick", 300, 0, "i", playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pPrisonsec] > 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В тюрьме игровое меню не работает !");
				return 1;
			}
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения игровое меню не работает !");
				return 1;
			}
			if(perfrost[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
				return 1;
			}
			if(PlayLock1[0][playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заблокированы !");
				return 1;
			}
			if(CallRemoteFunction("mpsysplfunc", "d", playerid) != 0)//чтение статуса участника из системы МП
			{
				SendClientMessage(playerid, COLOR_RED, " В системе МП игровое меню не работает !");
				return 1;
			}
			if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
			{
				SendClientMessage(playerid, COLOR_RED, " В системе дерби-сумо игровое меню не работает !");
				return 1;
			}
			if(CallRemoteFunction("banksysplfunc", "d", playerid) != 0)//чтение статуса участника из системы банков
			{
				SendClientMessage(playerid, COLOR_RED, " В системе банков игровое меню не работает !");
				return 1;
			}
			gettime(timecor[0], timecor[1]);
			TimCor();//коррекция времени
			format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

			//Clans system
			ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 4);

	 	}
	}
	if((newkeys & 65536 && GetPVarInt(playerid, "MnMode") == 1) || (newkeys & 1024 && GetPVarInt(playerid, "MnMode") != 1))
	{
		if(gPlayerLogged[playerid] == 0)
		{
			format(string,sizeof(string),"* Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
			print(string);
    		SendClientMessageToAll(COLOR_LIGHTRED, string);
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pPrisonsec] > 0)
		{
			SendClientMessage(playerid, COLOR_RED, " В тюрьме игровое меню не работает !");
			return 1;
		}
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения игровое меню не работает !");
			return 1;
		}
		if(perfrost[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
			return 1;
		}
		if(PlayLock1[0][playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заблокированы !");
			return 1;
		}
		if(CallRemoteFunction("mpsysplfunc", "d", playerid) != 0)//чтение статуса участника из системы МП
		{
			SendClientMessage(playerid, COLOR_RED, " В системе МП игровое меню не работает !");
			return 1;
		}
		if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
		{
			SendClientMessage(playerid, COLOR_RED, " В системе дерби-сумо игровое меню не работает !");
			return 1;
		}
		if(CallRemoteFunction("banksysplfunc", "d", playerid) != 0)//чтение статуса участника из системы банков
		{
			SendClientMessage(playerid, COLOR_RED, " В системе банков игровое меню не работает !");
			return 1;
		}
		gettime(timecor[0], timecor[1]);
		TimCor();//коррекция времени
		format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

		//Clans system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 4);

	}
#endif
#if (MOD33INS == 2 && MOD44INS == 0)
	if((newkeys & 512 && GetPVarInt(playerid, "MnMode") != 1) || (newkeys & 65536 && GetPVarInt(playerid, "MnMode") == 1))
	{
		if(IsPlayerInAnyVehicle(playerid))
	 	{
			if(gPlayerLogged[playerid] == 0)
			{
				format(string,sizeof(string),"* Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
				print(string);
	    		SendClientMessageToAll(COLOR_LIGHTRED, string);
				SetTimerEx("PlayKick", 300, 0, "i", playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pPrisonsec] > 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В тюрьме игровое меню не работает !");
				return 1;
			}
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения игровое меню не работает !");
				return 1;
			}
			if(perfrost[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
				return 1;
			}
			if(PlayLock1[0][playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заблокированы !");
				return 1;
			}
			if(CallRemoteFunction("mpsysplfunc", "d", playerid) != 0)//чтение статуса участника из системы МП
			{
				SendClientMessage(playerid, COLOR_RED, " В системе МП игровое меню не работает !");
				return 1;
			}
			if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
			{
				SendClientMessage(playerid, COLOR_RED, " В системе дерби-сумо игровое меню не работает !");
				return 1;
			}
			if(CallRemoteFunction("banksysplfunc", "d", playerid) != 0)//чтение статуса участника из системы банков
			{
				SendClientMessage(playerid, COLOR_RED, " В системе банков игровое меню не работает !");
				return 1;
			}
			gettime(timecor[0], timecor[1]);
			TimCor();//коррекция времени
			format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

			//Clans system
			ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nПравила сервера\nПравила для админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 4);

	 	}
	}
	if((newkeys & 1024 && GetPVarInt(playerid, "MnMode") != 1) || (newkeys & 65536 && GetPVarInt(playerid, "MnMode") == 1))
	{
		if(gPlayerLogged[playerid] == 0)
		{
			format(string,sizeof(string),"* Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
			print(string);
    		SendClientMessageToAll(COLOR_LIGHTRED, string);
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pPrisonsec] > 0)
		{
			SendClientMessage(playerid, COLOR_RED, " В тюрьме игровое меню не работает !");
			return 1;
		}
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения игровое меню не работает !");
			return 1;
		}
		if(perfrost[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
			return 1;
		}
		if(PlayLock1[0][playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заблокированы !");
			return 1;
		}
		if(CallRemoteFunction("mpsysplfunc", "d", playerid) != 0)//чтение статуса участника из системы МП
		{
			SendClientMessage(playerid, COLOR_RED, " В системе МП игровое меню не работает !");
			return 1;
		}
		if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
		{
			SendClientMessage(playerid, COLOR_RED, " В системе дерби-сумо игровое меню не работает !");
			return 1;
		}
		if(CallRemoteFunction("banksysplfunc", "d", playerid) != 0)//чтение статуса участника из системы банков
		{
			SendClientMessage(playerid, COLOR_RED, " В системе банков игровое меню не работает !");
			return 1;
		}
		gettime(timecor[0], timecor[1]);
		TimCor();//коррекция времени
		format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

		//Clans system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nПравила сервера\nПравила для админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 4);

	}
#endif
#if (MOD33INS == 2 && MOD44INS == 1)
	if((newkeys & 512 && GetPVarInt(playerid, "MnMode") != 1) || (newkeys & 65536 && GetPVarInt(playerid, "MnMode") == 1))
	{
		if(IsPlayerInAnyVehicle(playerid))
	 	{
			if(gPlayerLogged[playerid] == 0)
			{
				format(string,sizeof(string),"* Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
				print(string);
	    		SendClientMessageToAll(COLOR_LIGHTRED, string);
				SetTimerEx("PlayKick", 300, 0, "i", playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pPrisonsec] > 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В тюрьме игровое меню не работает !");
				return 1;
			}
			if(admper1[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения игровое меню не работает !");
				return 1;
			}
			if(perfrost[playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
				return 1;
			}
			if(PlayLock1[0][playerid] != 600)
			{
				SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заблокированы !");
				return 1;
			}
			if(CallRemoteFunction("mpsysplfunc", "d", playerid) != 0)//чтение статуса участника из системы МП
			{
				SendClientMessage(playerid, COLOR_RED, " В системе МП игровое меню не работает !");
				return 1;
			}
			if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
			{
				SendClientMessage(playerid, COLOR_RED, " В системе дерби-сумо игровое меню не работает !");
				return 1;
			}
			if(CallRemoteFunction("banksysplfunc", "d", playerid) != 0)//чтение статуса участника из системы банков
			{
				SendClientMessage(playerid, COLOR_RED, " В системе банков игровое меню не работает !");
				return 1;
			}
			gettime(timecor[0], timecor[1]);
			TimCor();//коррекция времени
			format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

			//Clans system
			ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 4);

	 	}
	}
	if((newkeys & 1024 && GetPVarInt(playerid, "MnMode") != 1) || (newkeys & 65536 && GetPVarInt(playerid, "MnMode") == 1))
	{
		if(gPlayerLogged[playerid] == 0)
		{
			format(string,sizeof(string),"* Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
			print(string);
    		SendClientMessageToAll(COLOR_LIGHTRED, string);
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pPrisonsec] > 0)
		{
			SendClientMessage(playerid, COLOR_RED, " В тюрьме игровое меню не работает !");
			return 1;
		}
		if(admper1[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения игровое меню не работает !");
			return 1;
		}
		if(perfrost[playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
			return 1;
		}
		if(PlayLock1[0][playerid] != 600)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заблокированы !");
			return 1;
		}
		if(CallRemoteFunction("mpsysplfunc", "d", playerid) != 0)//чтение статуса участника из системы МП
		{
			SendClientMessage(playerid, COLOR_RED, " В системе МП игровое меню не работает !");
			return 1;
		}
		if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
		{
			SendClientMessage(playerid, COLOR_RED, " В системе дерби-сумо игровое меню не работает !");
			return 1;
		}
		if(CallRemoteFunction("banksysplfunc", "d", playerid) != 0)//чтение статуса участника из системы банков
		{
			SendClientMessage(playerid, COLOR_RED, " В системе банков игровое меню не работает !");
			return 1;
		}
		gettime(timecor[0], timecor[1]);
		TimCor();//коррекция времени
		format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

		//Clans system
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 4);

	}
#endif
	if( newkeys == 1 || newkeys == 9 || newkeys == 33 && oldkeys != 1 || oldkeys != 9 || oldkeys != 33)
	{
    	new car = GetPlayerVehicleID(playerid);
		new Model5 = GetVehicleModel(car);
        switch(Model5)
        {
            case 446,432,448,452,424,453,454,461,462,463,468,471,430,472,449,473,481,484,493,495,509,510,521,538,522,523,532,537,570,581,586,590,569,595,604,611: return 0;
        }
        AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
	}

//----------------------------- Elevator - 1 -----------------------------------
	if(!IsPlayerInAnyVehicle(playerid) && (newkeys & KEY_NO))
	{
		new Float:pos[3];
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		if(pos[2] > 10.38 && pos[2] < 128.73 &&
		pos[1] < -1301.4 && pos[1] > -1303.2417 && pos[0] < 1786.2131 && pos[0] > 1784.1555)
		{
			for(new i; i < sizeof(ElevatorQueue); i ++)
			{//если этаж занят местом игрока, то отобразить этот этаж красным цветом
				if(FloorRequestedBy[i] != 10000){strcat(string, "{FF0000}");}
				strcat(string, FloorNames[i]);
				strcat(string, "\n");
			}

			ShowPlayerDialog(playerid, 150, DIALOG_STYLE_LIST, "Управление лифтом", string, "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 150);
		}
		if(pos[2] > 10.38 && pos[2] < 128.73 &&
		pos[1] > -1301.4 && pos[1] < -1299.1447 && pos[0] < 1785.6147 && pos[0] > 1781.9902)
		{
			new i = 20;//определение этажа, откуда поступил вызов
			while(pos[2] < GetDoorsZCoordForFloor(i) + 3.5 && i > 0){i --;}
			if(i == 0 && pos[2] < GetDoorsZCoordForFloor(0) + 2.0){i = -1;}
			if(i <= 19)
			{
				CallElevator(playerid, i + 1, 0);//вызов, или начало движения лифта
			}
		}

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
		if(pos[2] > 12.86 && pos[2] < 101.50 &&
		pos[1] > -1611.70 && pos[1] < -1609.50 && pos[0] > 288.00 && pos[0] < 290.10)
		{
			for(new i; i < sizeof(ElevatorQueue22); i ++)
			{//если этаж занят местом игрока, то отобразить этот этаж красным цветом
				if(FloorRequestedBy22[i] != 10000){strcat(string, "{FF0000}");}
				strcat(string, FloorNames22[i]);
				strcat(string, "\n");
			}

			ShowPlayerDialog(playerid, 152, DIALOG_STYLE_LIST, "Управление лифтом", string, "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 152);
		}
		if(pos[2] > 12.86 && pos[2] < 101.50 &&
		pos[1] < -1611.70 && pos[1] > -1613.40 && pos[0] > 288.50 && pos[0] < 292.10)
		{
			new i = 13;//определение этажа, откуда поступил вызов
			while(pos[2] < GetDoorsZCoordForFloor22(i) + 3.5 && i > 0){i --;}
			if(i == 0 && pos[2] < GetDoorsZCoordForFloor22(0) + 2.0){i = -1;}
			if(i <= 12)
			{
				CallElevator22(playerid, i + 1, 0);//вызов, или начало движения лифта
			}
		}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

	}
//--------------------------- End Elevator - 1 ---------------------------------

	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	new string[256];
	new dopper = -600;
	new i;
	for(i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
	{
		if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
		{//определение ид игрока по его IP
			if(strcmp(ip, PlayerInfo[i][pIPAdr], true) == 0)
			{
				dopper = i;//ид игрока найден
			}
		}
	}
	if(playspa[dopper] == 0 && dopper != -600)//если игрок НЕ заспавнился,
	{//И ид игрока найден, то:
		printf("-----[Игрок не заспавнился] %s [%d]: ввёл RCON-команду.", RealName[dopper], dopper); // Отправляем команду в сервер-лог
		format(string,sizeof(string),"* Игрок %s [%d] был кикнут - RCON-команда без спавна !", RealName[dopper], dopper);
		print(string);
    	SendClientMessageToAll(COLOR_LIGHTRED, string);
		SetTimerEx("PlayKick", 300, 0, "i", dopper);
		return 1;
	}
	if(success == 0 && dopper != -600)//если игрок НЕ залогинился как RCON-админ,
	{//И ид игрока найден, то:
		passrcon[dopper]++;//бан взлома RCON-пароля +1
	}
	if(success == 1 && dopper != -600)//если игрок залогинился как RCON-админ,
	{//И ид игрока найден, то:
		passrcon[dopper] = 0;//обнуляем бан взлома RCON-пароля
	}
	if(passrcon[dopper] >= 10)//если бан взлома RCON-пароля больше или равен 10, то:
	{//бан игрока
		PlayerInfo[dopper][pLock] = 1;//блокируем аккаунт игрока
		format(string,sizeof(string),"* Игрок %s [%d] был забанен - попытка взлома RCON-пароля !",RealName[dopper],dopper);
		print(string);
		SendClientMessageToAll(COLOR_RED,string);
		strdel(fbanreason[dopper], 0, 256);//очистка причины бана
		strcat(fbanreason[dopper], "* Попытка взлома RCON-пароля.");
		new reason333[256];
		format(reason333, sizeof(reason333), "* Попытка взлома RCON-пароля.");
		PlayBanList(dopper, reason333, 0);
		SetTimerEx("PlayBan", 300, 0, "i", dopper);
	}
	return 1;
}

public OnPlayerUpdate(playerid)
{
	NETafkPl[playerid][0] = 0;//обнулить контрольную переменную AFK

	if(ct9control[playerid] == 1)
	{
//------------------------ конвеер ---------------------------------------------
		ct9concord[0][0][playerid] = ct9concord[0][1][playerid];//база 0
		ct9concord[1][0][playerid] = ct9concord[1][1][playerid];
		ct9concord[2][0][playerid] = ct9concord[2][1][playerid];

		ct9concord[0][1][playerid] = ct9concord[0][2][playerid];//база 1
		ct9concord[1][1][playerid] = ct9concord[1][2][playerid];
		ct9concord[2][1][playerid] = ct9concord[2][2][playerid];

		ct9concord[0][2][playerid] = ct9concord[0][3][playerid];//база 2
		ct9concord[1][2][playerid] = ct9concord[1][3][playerid];
		ct9concord[2][2][playerid] = ct9concord[2][3][playerid];

		GetPlayerPos(playerid, ct9concord[0][3][playerid], ct9concord[1][3][playerid], ct9concord[2][3][playerid]);//база 3
//------------------------ разница 0-1 -----------------------------------------
		ct9dopcord[0][playerid] = ct9concord[0][1][playerid] - ct9concord[0][0][playerid];
		ct9dopcord[1][playerid] = ct9concord[1][1][playerid] - ct9concord[1][0][playerid];
		ct9dopcord[2][playerid] = ct9concord[2][1][playerid] - ct9concord[2][0][playerid];
//------------------------ дельта 0-1 ------------------------------------------
		ct9dltcord[0][playerid] = ct9dopcord[0][playerid] * ct9dopcord[0][playerid] +
		ct9dopcord[1][playerid] * ct9dopcord[1][playerid] + ct9dopcord[2][playerid] * ct9dopcord[2][playerid];
//------------------------ разница 0-3 -----------------------------------------
		ct9dopcord[0][playerid] = ct9concord[0][3][playerid] - ct9concord[0][0][playerid];
		ct9dopcord[1][playerid] = ct9concord[1][3][playerid] - ct9concord[1][0][playerid];
		ct9dopcord[2][playerid] = ct9concord[2][3][playerid] - ct9concord[2][0][playerid];
//------------------------ дельта 0-3 ------------------------------------------
		ct9dltcord[1][playerid] = ct9dopcord[0][playerid] * ct9dopcord[0][playerid] +
		ct9dopcord[1][playerid] * ct9dopcord[1][playerid] + ct9dopcord[2][playerid] * ct9dopcord[2][playerid];
//------------------------ условие чита ----------------------------------------
		if(ct9dltcord[0][playerid] > 110.0 && ct9dltcord[1][playerid] < 90.0)
		{
			ct9control[playerid] = 5;
		}
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(GetPVarInt(playerid, "DlgCont") == -600)//если НЕ существующий ИД диалога, то:
	{
		return 1;//завершаем функцию
	}
	new string[256], strdln[5000];

//==============================================================================
//                              GarHouse
//==============================================================================
	new stringgh[384];
	if(dialogid == 500)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
		    switch(listitem)
			{
			    case 0:
			    {
					format(stringgh, sizeof(stringgh), HMENU_SELL_HOUSE, RealName[playerid], GetHouseName(h), ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT));
					ShowPlayerDialog(playerid, 503, DIALOG_STYLE_MSGBOX, "Продажа дома", stringgh, "Продать", "Отмена");
					SetPVarInt(playerid, "DlgCont", 503);
			    }
			    case 1:
				{
					#if defined GH_USE_WEAPONSTORAGE
						ShowPlayerDialog(playerid, 518, DIALOG_STYLE_LIST, "Хранение в доме", "Хранение денег\nХранение оружия", "OK", "Отмена");
						SetPVarInt(playerid, "DlgCont", 518);
					#endif
					#if !defined GH_USE_WEAPONSTORAGE
						ShowPlayerDialog(playerid, 510, DIALOG_STYLE_LIST, "Хранение денег", "Положить на хранение\nСнять с хранения\nПроверить сумму", "OK", "Отмена");
						SetPVarInt(playerid, "DlgCont", 510);
					#endif
				}
				case 2:
				{
					ShowPlayerDialog(playerid, 514, DIALOG_STYLE_INPUT, "Имя дома", "Введите новое имя дома", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 514);
				}
			    case 3:
				{
					new file[HOUSEFILE_LENGTH], parloc[128];
			    	format(file, sizeof(file), FILEPATH, h);
					format(parloc, sizeof(parloc), "%s", dini_Get(file, "HousePassword"));
					if(strcmp(parloc, "INVALID_HOUSE_PASSWORD", false) == 0)
					{
						ShowPlayerDialog(playerid, 513, DIALOG_STYLE_INPUT, "Пароль для дома", "{FFC4E4}У Вас нет пароля для дома!\n{A9C4E4}Введите новый пароль для дома ниже.\
						\nОставьте поле пустым, если хотите сохранить Ваш старый пароль.\nУдалить - чтобы удалить пароль.", "OK", "Удалить");
					}
					else
					{
						new parloc44[1024];
				    	format(parloc44, sizeof(parloc44), "{A9FFE4}У Вас уже есть пароль для дома \"%s\"!\n{A9C4E4}Введите новый пароль для дома ниже.\
						\nОставьте поле пустым, если хотите сохранить Ваш старый пароль.\nУдалить - чтобы удалить пароль.", parloc);
						ShowPlayerDialog(playerid, 513, DIALOG_STYLE_INPUT, "Пароль для дома", parloc44, "OK", "Удалить");
					}
					SetPVarInt(playerid, "DlgCont", 513);
				}
				case 4:
				{
					ShowPlayerDialog(playerid, 516, DIALOG_STYLE_LIST, "Интерьер", "Предварительный осмотр интерьера\nКупить интерьер", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 516);
				}
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                               House Sale
//------------------------------------------------------------------------------
	if(dialogid == 503)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new file[HOUSEFILE_LENGTH], file2[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
			if(GetOwnedHouses(playerid) == 0) return SendClientMessage(playerid, COLOUR_SYSTEM, E_NO_HOUSES_OWNED);
			else
			{
			    new tmp = dini_Int(file, "HouseStorage");
				new para1;
				para1 = GetPVarInt(playerid, "PlMon");
				SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") + ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT));
				if(tmp >= 1)
				{
	   				ShowInfoBox(playerid, INFORMATION_HEADER, I_SELL_HOUSE1, ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT), (GetHouseValue(h) - ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT)), tmp);
					SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") + tmp);
				}
				if(tmp == 0)
				{
				    ShowInfoBox(playerid, INFORMATION_HEADER, I_SELL_HOUSE2, GetHouseName(h), ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT), (GetHouseValue(h) - ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT)));
				}
				dini_IntSet(file, "HouseValue", ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT));
				dini_Set(file, "HouseOwner", INVALID_HOWNER_NAME);
				dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
				dini_Set(file, "HouseName", DEFAULT_HOUSE_NAME);
				dini_IntSet(file, "HouseStorage", 0);
				Loop(h2, MAX_HOUSES)
				{
					if(IsHouseInRangeOfHouse(h, h2, RANGE_BETWEEN_HOUSES) && h2 != h)
					{
				   		format(file2, sizeof(file2), FILEPATH, h2);
						dini_IntSet(file2, "HouseValue", (dini_Int(file2, "HouseValue") - ReturnProcent(GetHouseValue(h2), HOUSE_SELLING_PROCENT2)));
	                    UpdateHouseText(h2);
					}
				}
				new dvw, Float:dcX, Float:dcY, Float:dcZ;
				dcX = dini_Float(file, "CPOutX");
				dcY = dini_Float(file, "CPOutY");
				dcZ = dini_Float(file, "CPOutZ");
				dvw = dini_Int(file, "SpawnWorld");
				#if defined GH_USE_MAPICONS
					DestroyDynamicMapIcon(HouseMIcon[h]);
					HouseMIcon[h] = CreateDynamicMapIcon(dcX, dcY, dcZ, 31, -1, dvw, dini_Int(file, "SpawnInterior"), -1, MICON_VD);
				#endif
				UpdateHouseText(h);
				CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, "*** INV_PL_ID", dvw, dcX, dcY, dcZ);
	            #if defined GH_DEBUGGING
	  				printf(DEBUG_ODR13, RealName[playerid], playerid, GetHouseValue(h), tmp, h);
		    	#endif
				printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                               House Buying
//------------------------------------------------------------------------------
	if(dialogid == 504)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new file[HOUSEFILE_LENGTH], file2[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
		    new hname[MAX_PLAYER_NAME+9];
    		if(PlayerInfo[playerid][pVIP] == 3) { ShowInfoBox(playerid, INFORMATION_HEADER, "Вы не можете купить дом,\nпока дело о Вашей депортации на слушании !", 0); return 1; }
			if(GetOwnedHouses(playerid) >= MAX_HOUSES_OWNED) { ShowInfoBox(playerid, INFORMATION_HEADER, "У Вас уже есть %d дома.\nПродайте один из старых домов и купите этот дом.", MAX_HOUSES_OWNED); return 1; }
//			if(GetOwnedHouses(playerid) >= MAX_HOUSES_OWNED) { ShowInfoBox(playerid, INFORMATION_HEADER, "У вас уже есть %d дом %s. Продайте старый дом и купите этот дом", MAX_HOUSES_OWNED, AddS(MAX_HOUSES_OWNED)); return 1; }
			if(strcmp(GetHouseOwner(GetPVarInt(playerid, "LastHouseCP")), RealName[playerid], CASE_SENSETIVE) && strcmp(GetHouseOwner(h), INVALID_HOWNER_NAME, CASE_SENSETIVE)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_H_ALREADY_OWNED);
			if(GetHouseValue(h) > GetPVarInt(playerid, "PlMon")) { ShowInfoBox(playerid, INFORMATION_HEADER, "Вы не можете купить этот дом\nСтоимость дома: $%d.\nУ Вас есть: $%d.\nВам не хватает: $%d.", GetHouseValue(h), GetPVarInt(playerid, "PlMon"), (GetHouseValue(h) - GetPVarInt(playerid, "PlMon"))); return 1; }
//			if(GetHouseValue(h) > GetPVarInt(playerid, "PlMon")) { ShowInfoBox(playerid, INFORMATION_HEADER, "Вы не можете купить дом\nДом продается: $%d.\nУ вас: $%d.\nСтоимость дома: $%d.", GetHouseValue(h), GetPVarInt(playerid, "PlMon"), (GetHouseValue(h) - GetPVarInt(playerid, "PlMon"))); return 1; }

			else
			{
			    format(hname, sizeof(hname), "%s's House", RealName[playerid]);
				new para1;
				para1 = GetPVarInt(playerid, "PlMon");
				SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - GetHouseValue(h));
				dini_Set(file, "HouseOwner", RealName[playerid]);
				dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
				dini_Set(file, "HouseName", hname);
				dini_IntSet(file, "HouseStorage", 0);
				ShowInfoBox(playerid, INFORMATION_HEADER, I_BUY_HOUSE, GetHouseValue(h));
				Loop(h2, MAX_HOUSES)
				{
					if(IsHouseInRangeOfHouse(h, h2, RANGE_BETWEEN_HOUSES) && h2 != h)
					{
					    format(file2, sizeof(file2), FILEPATH, h2);
						dini_IntSet(file2, "HouseValue", (dini_Int(file2, "HouseValue") + ReturnProcent(GetHouseValue(h2), HOUSE_SELLING_PROCENT2)));
                        UpdateHouseText(h2);
					}
				}
				new dvw, Float:dcX, Float:dcY, Float:dcZ;
				dcX = dini_Float(file, "CPOutX");
				dcY = dini_Float(file, "CPOutY");
				dcZ = dini_Float(file, "CPOutZ");
				dvw = dini_Int(file, "SpawnWorld");
				#if defined GH_USE_MAPICONS
					DestroyDynamicMapIcon(HouseMIcon[h]);
					HouseMIcon[h] = CreateDynamicMapIcon(dcX, dcY, dcZ, 32, -1, dvw, dini_Int(file, "SpawnInterior"), -1, MICON_VD);
				#endif
				UpdateHouseText(h);
				CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, RealName[playerid], dvw, dcX, dcY, dcZ);
                #if defined GH_DEBUGGING
  					printf(DEBUG_ODR1, RealName[playerid], playerid, h, GetHouseValue(h));
	    		#endif
				printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                               House Password
//------------------------------------------------------------------------------
	if(dialogid == 513)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    	format(file, sizeof(file), FILEPATH, h);
		new parloc[128];
		format(parloc, sizeof(parloc), "%s", dini_Get(file, "HousePassword"));
		if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOUR_SYSTEM, "Ваш пароль содержит недопустимые символы:");
				SendClientMessage(playerid, COLOUR_SYSTEM, "запрещённые коды, или знак процентов, или ~ .");
				return 1;
			}
			if(strlen(inputtext) > MAX_HOUSE_PASSWORD || (strlen(inputtext) < MIN_HOUSE_PASSWORD && strlen(inputtext) >= 1)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HPASS_LENGTH);
			if(strcmp(inputtext, "INVALID_HOUSE_PASSWORD", CASE_SENSETIVE) == 0 && strlen(inputtext) >= 1) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HPASS);
			else
			{
			    if(strlen(inputtext) >= 1)
			    {
					if(strcmp(parloc, "INVALID_HOUSE_PASSWORD", false) == 0)
					{
						ShowInfoBox(playerid, INFORMATION_HEADER, I_HPASSWORD_CHANGED, inputtext);
	                    #if defined GH_DEBUGGING
	  						printf("[GarHouse] %s [%d] создал пароль для дома ID %d (%s) .", RealName[playerid], playerid, h, inputtext);
		    			#endif
					}
					else
					{
						if(strcmp(inputtext, parloc, false) == 0)
						{
							SendClientMessage(playerid, COLOUR_INFO, I_HPASS_NO_CHANGE);
							return 1;
						}
						else
						{
							ShowInfoBox(playerid, INFORMATION_HEADER, "Вы успешно изменили пароль для дома на \"%s\"!", inputtext);
		                    #if defined GH_DEBUGGING
		  						printf(DEBUG_ODR14, RealName[playerid], playerid, h, inputtext, parloc);
			    			#endif
						}
					}
					dini_Set(file, "HousePassword", inputtext);//пароль без хэш-шифрования
//					dini_IntSet(file, "HousePassword", udb_hash(inputtext));
				}
				else
				{
					SendClientMessage(playerid, COLOUR_INFO, I_HPASS_NO_CHANGE);
					return 1;
				}
			}
		}
		if(!response)
		{
			if(strcmp(parloc, "INVALID_HOUSE_PASSWORD", false) != 0)
			{
			    dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
				SendClientMessage(playerid, COLOUR_INFO, I_HPASS_REMOVED);
				#if defined GH_DEBUGGING
					printf("[GarHouse] %s [%d] удалил пароль дома ID %d .", RealName[playerid], playerid, h);
				#endif
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                               House Name
//------------------------------------------------------------------------------
	if(dialogid == 514)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
			new parloc[128];
			format(parloc, sizeof(parloc), "%s", dini_Get(file, "HouseName"));
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOUR_SYSTEM, "Ваше имя дома содержит недопустимые символы:");
				SendClientMessage(playerid, COLOUR_SYSTEM, "запрещённые коды, или знак процентов, или ~ .");
				return 1;
			}
			if(strlen(inputtext) < MIN_HOUSE_NAME || strlen(inputtext) > MAX_HOUSE_NAME) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HNAME_LENGTH);
			else
			{
				if(strcmp(inputtext, parloc, false) == 0)
				{
					SendClientMessage(playerid, COLOUR_INFO, "Имя дома осталось без изменений.");
					return 1;
				}
				else
				{
					dini_Set(file, "HouseName", inputtext);
					SendMSG(playerid, COLOUR_INFO, 128, I_HNAME_CHANGED, inputtext);
	                UpdateHouseText(h);
	                #if defined GH_DEBUGGING
						printf(DEBUG_ODR2, RealName[playerid], playerid, h, inputtext);
	  				#endif
				}
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                       House Interior Upgrade
//------------------------------------------------------------------------------
	if(dialogid == 515)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
		    SetPVarInt(playerid, "OldHouseInt", dini_Int(file, "HouseInterior"));
			switch(listitem)
			{
			    case 0:
				{
	 		    	SetPVarInt(playerid, "HousePrevInt", 1);
					SetPVarInt(playerid, "HousePrevValue", H_INT_1_VALUE);
					SetPVarString(playerid, "HousePrevName", "Shitty Shack");
				}
				case 1:
				{
				    SetPVarInt(playerid, "HousePrevInt", 2);
					SetPVarInt(playerid, "HousePrevValue", H_INT_2_VALUE);
					SetPVarString(playerid, "HousePrevName", "Motel Room");
				}
				case 2:
				{
	 		    	SetPVarInt(playerid, "HousePrevInt", 3);
					SetPVarInt(playerid, "HousePrevValue", H_INT_3_VALUE);
					SetPVarString(playerid, "HousePrevName", "Hotel Room 1");
				}
				case 3:
				{
				    SetPVarInt(playerid, "HousePrevInt", 4);
					SetPVarInt(playerid, "HousePrevValue", H_INT_4_VALUE);
					SetPVarString(playerid, "HousePrevName", "Hotel Room 2");
				}
				case 4:
				{
				    SetPVarInt(playerid, "HousePrevInt", 5);
					SetPVarInt(playerid, "HousePrevValue", H_INT_5_VALUE);
					SetPVarString(playerid, "HousePrevName", "Gang House");
				}
				case 5:
				{
				    SetPVarInt(playerid, "HousePrevInt", 6);
					SetPVarInt(playerid, "HousePrevValue", H_INT_6_VALUE);
					SetPVarString(playerid, "HousePrevName", "Normal House");
				}
				case 6:
				{
				    SetPVarInt(playerid, "HousePrevInt", 0);
					SetPVarInt(playerid, "HousePrevValue", H_INT_0_VALUE);
					SetPVarString(playerid, "HousePrevName", "Default House");
				}
				case 7:
				{
				    SetPVarInt(playerid, "HousePrevInt", 7);
					SetPVarInt(playerid, "HousePrevValue", H_INT_7_VALUE);
					SetPVarString(playerid, "HousePrevName", "Medium Mansion");
				}
				case 8:
				{
				    SetPVarInt(playerid, "HousePrevInt", 8);
					SetPVarInt(playerid, "HousePrevValue", H_INT_8_VALUE);
					SetPVarString(playerid, "HousePrevName", "Rich Mansion");
				}
				case 9:
				{
				    SetPVarInt(playerid, "HousePrevInt", 9);
					SetPVarInt(playerid, "HousePrevValue", H_INT_9_VALUE);
					SetPVarString(playerid, "HousePrevName", "Huge Mansion");
				}
				case 10:
				{
				    SetPVarInt(playerid, "HousePrevInt", 10);
					SetPVarInt(playerid, "HousePrevValue", H_INT_10_VALUE);
					SetPVarString(playerid, "HousePrevName", "Madd Dogg's Mansion");
				}
			}
			if(dini_Int(file, "HouseInterior") == GetPVarInt(playerid, "HousePrevInt")) return SendClientMessage(playerid, COLOUR_SYSTEM, E_ALREADY_HAVE_HINTERIOR);
			else
			{
			    GetPVarString(playerid, "HousePrevName", stringgh, 50);
//------------------------------------------------------------------------------
			    switch(GetPVarInt(playerid, "HouseIntUpgradeMod"))
			    {
					case 1:
					{
//				    	if(GetSecondsBetweenAction(GetPVarInt(playerid, "HousePrevTime")) < (TIME_BETWEEN_VISITS * 1000) && GetPVarInt(playerid, "HousePrevTime") != 0) return SendClientMessage(playerid, COLOUR_SYSTEM, E_HINT_WAIT_BEFORE_VISITING);
//				    	else
//				    	{

							SetPVarInt(playerid, "HousePrevTime", 1);//включаем блокировку меню дома
					        SetPVarInt(playerid, "IsHouseVisiting", 1);
							SetPVarInt(playerid, "HousePreview", 1);
							SetPVarInt(playerid, "ChangeHouseInt", 1);
//							SetPVarInt(playerid, "HousePrevTime", GetTickCount());
							SetPVarInt(playerid, "HousePrevTimer", SetTimerEx("HouseVisiting", (MAX_VISIT_TIME * 1000), false, "i", playerid));
							ShowInfoBox(playerid, INFORMATION_HEADER, I_VISITING_HOUSEINT, stringgh, GetPVarInt(playerid, "HousePrevValue"), MAX_VISIT_TIME, AddS(MAX_VISIT_TIME));
		                    #if defined GH_DEBUGGING
								printf(DEBUG_ODR4, RealName[playerid], playerid, stringgh, h);
		  					#endif
//  					}
					}
					case 2:
					{
    					if(PlayerInfo[playerid][pVIP] == 3)
						{
							ShowInfoBox(playerid, INFORMATION_HEADER, "Вы не можете купить интерьер,\nпока дело о Вашей депортации на слушании !", 0);
						}
						else
						{
							if(GetPVarInt(playerid, "HousePrevValue") > GetPVarInt(playerid, "PlMon"))
							{
		                        ShowInfoBox(playerid, INFORMATION_HEADER, E_CANT_AFFORD_HINT, stringgh, GetPVarInt(playerid, "HousePrevValue"), GetPVarInt(playerid, "PlMon"), (GetPVarInt(playerid, "HousePrevValue") - GetPVarInt(playerid, "PlMon")));
							}
							if(GetPVarInt(playerid, "HousePrevValue") <= GetPVarInt(playerid, "PlMon"))
							{
								new para1;
								para1 = GetPVarInt(playerid, "PlMon");
							    SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - GetPVarInt(playerid, "HousePrevValue"));
							    SetPVarInt(playerid, "ChangeHouseInt", 1);
							    dini_IntSet(file, "HouseInteriorValue", GetPVarInt(playerid, "HousePrevValue"));
								ShowInfoBox(playerid, INFORMATION_HEADER, I_HINT_BOUGHT, stringgh, GetPVarInt(playerid, "HousePrevValue"));
		                        #if defined GH_DEBUGGING
									printf(DEBUG_ODR3, RealName[playerid], playerid, stringgh, GetPVarInt(playerid, "HousePrevValue"), h);
		  						#endif
								printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
							}
						}
					}
				}
//------------------------------------------------------------------------------
				if(GetPVarInt(playerid, "ChangeHouseInt") == 1)
			    {
					if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 2)
					{
						new locdata[128];
            			GetPVarString(playerid, "HousePrevName", locdata, 128);
						dini_IntSet(file, "HouseInterior", GetPVarInt(playerid, "HousePrevInt"));
				    	dini_IntSet(file, "HouseInteriorValue", GetPVarInt(playerid, "HousePrevValue"));
		            	dini_Set(file, "HouseInteriorName", locdata);
					}
				    SetPVarInt(playerid, "ChangeHouseInt", 0);
				    DestroyHouseEntrance(h, TYPE_INT);
					if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 1)
					{
						CreateCorrectHouseExitCP22(playerid, h);
						Loop(i, MAX_PLAYERS)
				  		{
				  		    if(GetPVarInt(i, "LastHouseCP") == h && GetPVarInt(i, "IsInHouse") == 1)
				  		    {
				  				SetPlayerHouseInterior22(i, h);
				  			}
				  		}
					}
					if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 2)
					{
						CreateCorrectHouseExitCP(h);
						Loop(i, MAX_PLAYERS)
				  		{
				  		    if(GetPVarInt(i, "LastHouseCP") == h && GetPVarInt(i, "IsInHouse") == 1)
				  		    {
				  				SetPlayerHouseInterior(i, h);
				  			}
				  		}
					}
			  		#if defined GH_DEBUGGING
						if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 2)
						{
							printf(DEBUG_ODR5, h, GetPVarInt(playerid, "HousePrevInt"));
						}
					#endif
		  		}
				if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 2)
				{
					SetPVarInt(playerid, "HouseIntUpgradeMod", 0);
				}
//------------------------------------------------------------------------------
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                       House Interior Mode Selecting
//------------------------------------------------------------------------------
    #if defined GH_HINTERIOR_UPGRADE
	if(dialogid == 516)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
		    switch(listitem)
		    {
		        case 0: SetPVarInt(playerid, "HouseIntUpgradeMod", 1);
		        case 1: SetPVarInt(playerid, "HouseIntUpgradeMod", 2);
		    }
		    format(stringgh, sizeof(stringgh),
			"Shitty Shack Interior\t\t%s\nMotel Room Interior\t\t%s\nHotel Room Interior 1\t\t%s\nHotel Room Interior 2\t\t%s\nGang House Interior\t\t%s\nNormal House Interior\t\t%s\nDefault House Interior\t\t%s\nMedium Mansion Interior\t%s\nRich Mansion Interior\t\t%s\nHuge Mansion Interior\t\t%s\nMadd Dogg's Mansion\t\t%s",
			FM(H_INT_1_VALUE), FM(H_INT_2_VALUE), FM(H_INT_3_VALUE), FM(H_INT_4_VALUE), FM(H_INT_5_VALUE), FM(H_INT_6_VALUE), FM(H_INT_0_VALUE), FM(H_INT_7_VALUE), FM(H_INT_8_VALUE), FM(H_INT_9_VALUE), FM(H_INT_10_VALUE));
			ShowPlayerDialog(playerid, 515, DIALOG_STYLE_LIST, "Интерьер", stringgh, "Купить", "Отмена");
			SetPVarInt(playerid, "DlgCont", 515);
		}
		return 1;
	}
	#endif
//------------------------------------------------------------------------------
//                       House Interior Upgrade
//------------------------------------------------------------------------------
    #if defined GH_HINTERIOR_UPGRADE
	if(dialogid == 517)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    	format(file, sizeof(file), FILEPATH, h);
	    SetPVarInt(playerid, "HousePreview", 0);
	    KillTimer(GetPVarInt(playerid, "HousePrevTimer"));
	    SetPVarInt(playerid, "IsHouseVisiting", 0);
	    if(response)
	    {
            GetPVarString(playerid, "HousePrevName", stringgh, 50);
			if(PlayerInfo[playerid][pVIP] == 3)
			{
				ShowInfoBox(playerid, INFORMATION_HEADER, "Вы не можете купить интерьер,\nпока дело о Вашей депортации на слушании !", 0);
			}
			else
			{
	            if(GetPVarInt(playerid, "PlMon") < GetPVarInt(playerid, "HousePrevValue"))
	            {
	             	ShowInfoBox(playerid, INFORMATION_HEADER, E_CANT_AFFORD_HINT, stringgh, GetPVarInt(playerid, "HousePrevValue"), GetPVarInt(playerid, "PlMon"), (GetPVarInt(playerid, "HousePrevValue") - GetPVarInt(playerid, "PlMon")));
	            }
				else
				{
					new para1;
					para1 = GetPVarInt(playerid, "PlMon");
	            	SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - GetPVarInt(playerid, "HousePrevValue"));
	            	dini_Set(file, "HouseInteriorName", stringgh);
			    	dini_IntSet(file, "HouseInterior", GetPVarInt(playerid, "HousePrevInt"));
			    	dini_IntSet(file, "HouseInteriorValue", GetPVarInt(playerid, "HousePrevValue"));
	            	ShowInfoBox(playerid, INFORMATION_HEADER, I_HINT_BOUGHT, stringgh, GetPVarInt(playerid, "HousePrevValue"));
	                #if defined GH_DEBUGGING
						printf(DEBUG_ODR3, RealName[playerid], playerid, stringgh, GetPVarInt(playerid, "HousePrevValue"), h);

						printf(DEBUG_ODR5, h, GetPVarInt(playerid, "HousePrevInt"));

					#endif
					printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
				}
			}
	    }
//------------------------------------------------------------------------------
  		DestroyHouseEntrance(h, TYPE_INT);
		CreateCorrectHouseExitCP(h);
		Loop(i, MAX_PLAYERS)
		{
  			if(GetPVarInt(i, "LastHouseCP") == h && GetPVarInt(i, "IsInHouse") == 1)
  			{
				SetPlayerHouseInterior(i, h);
			}
		}
//		#if defined GH_DEBUGGING
//			printf(DEBUG_ODR5, h, GetPVarInt(playerid, "HousePrevInt"));
//		#endif
		if(GetPVarInt(playerid, "HouseIntUpgradeMod") == 1)
		{
			SetPVarInt(playerid, "HouseIntUpgradeMod", 0);
		}
//------------------------------------------------------------------------------
		return 1;
	}
	#endif
//------------------------------------------------------------------------------
//                               Money Storage
//------------------------------------------------------------------------------
	if(dialogid == 510)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
		    new tmp = dini_Int(file, "HouseStorage");
	    	if(listitem == 0) // Deposit
		   	{
	     		format(stringgh, sizeof(stringgh), I_HINT_DEPOSIT1, tmp);
	  			ShowPlayerDialog(playerid, 511, DIALOG_STYLE_INPUT, "Хранение денег: положить на хранение", stringgh, "Положить", "Отмена");
				SetPVarInt(playerid, "DlgCont", 511);
		    }
		    if(listitem == 1) // Withdraw
		    {
	     		format(stringgh, sizeof(stringgh), I_HINT_WITHDRAW1, tmp);
	       		ShowPlayerDialog(playerid, 512, DIALOG_STYLE_INPUT, "Хранение денег: снять с хранения", stringgh, "Снять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 512);
	    	}
		    if(listitem == 2) // Check Balance
		    {
	     		ShowInfoBox(playerid, INFORMATION_HEADER, I_HINT_CHECKBALANCE, tmp);
	            #if defined GH_DEBUGGING
					printf(DEBUG_ODR6, RealName[playerid], playerid, h, tmp);
				#endif
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 511)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOUR_SYSTEM, "Сумма содержит недопустимые символы:");
				SendClientMessage(playerid, COLOUR_SYSTEM, "запрещённые коды, или знак процентов, или ~ .");
				return 1;
			}
			if(PlayerInfo[playerid][pVIP] == 3)
			{
				ShowInfoBox(playerid, INFORMATION_HEADER, "Вы не можете положить деньги на хранение,\nпока дело о Вашей депортации на слушании !", 0);
				return 1;
			}
			new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
		    new amount = floatround(strval(inputtext));
//	  		format(file, sizeof(file), FILEPATH, h);
			if(amount > GetPVarInt(playerid, "PlMon")) return SendClientMessage(playerid, COLOUR_SYSTEM, E_NOT_ENOUGH_PMONEY);
			if(amount < 1) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_AMOUNT);
			if((dini_Int(file, "HouseStorage") + amount) > 25000000) return SendClientMessage(playerid, COLOUR_SYSTEM, E_HSTORAGE_L_REACHED);
			else
			{
				dini_IntSet(file, "HouseStorage", (dini_Int(file, "HouseStorage") + amount));
				new para1;
				para1 = GetPVarInt(playerid, "PlMon");
				SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - amount);
				ShowInfoBox(playerid, INFORMATION_HEADER, I_HINT_DEPOSIT2, amount, dini_Int(file, "HouseStorage"));
	            #if defined GH_DEBUGGING
					printf(DEBUG_ODR7, RealName[playerid], playerid, amount, h);
				#endif
				printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 512)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOUR_SYSTEM, "Сумма содержит недопустимые символы:");
				SendClientMessage(playerid, COLOUR_SYSTEM, "запрещённые коды, или знак процентов, или ~ .");
				return 1;
			}
			new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    		format(file, sizeof(file), FILEPATH, h);
		    new amount = floatround(strval(inputtext));
//	  		format(file, sizeof(file), FILEPATH, h);
			if(amount > dini_Int(file, "HouseStorage")) return SendClientMessage(playerid, COLOUR_SYSTEM, E_NOT_ENOUGH_HSMONEY);
			if(amount < 1) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_AMOUNT);
			else
			{
				dini_IntSet(file, "HouseStorage", (dini_Int(file, "HouseStorage") - amount));
				new para1;
				para1 = GetPVarInt(playerid, "PlMon");
				SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") + amount);
				ShowInfoBox(playerid, INFORMATION_HEADER, I_HINT_WITHDRAW2, amount, dini_Int(file, "HouseStorage"));
	            #if defined GH_DEBUGGING
					printf(DEBUG_ODR8, RealName[playerid], playerid, amount, h);
				#endif
				printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                          House Storage
//------------------------------------------------------------------------------
	if(dialogid == 518)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			switch(listitem)
			{
			    case 0:
				{
					ShowPlayerDialog(playerid, 510, DIALOG_STYLE_LIST, "Хранение денег", "Положить на хранение\nСнять с хранения\nПроверить сумму", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 510);
				}
			    case 1:
				{
					ShowPlayerDialog(playerid, 519, DIALOG_STYLE_LIST, "Хренение оружия", "Положить на хранение\nСнять с хранения", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 519);
				}
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//                          Weapon Storage
//------------------------------------------------------------------------------
	if(dialogid == 519)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
		    new WeaponData[13][2], tmp[9], tmp2[13], tmpcount;
			switch(listitem)
			{
			    case 0: // Store weapons
			    {
					new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    				format(file, sizeof(file), FILEPATH, h);
					Loop(weap, 13)
					{
					    format(tmp, sizeof(tmp), "Weapon%d", weap);
	  					format(tmp2, sizeof(tmp2), "Weapon%dAmmo", weap);
					    if(weap == 0) continue;
					    #if !defined GH_SAVE_ADMINWEPS
					    if(weap == 7 || weap == 8 || weap == 9 || weap == 12) continue;
					    #endif
					    GetPlayerWeaponData(playerid, weap, WeaponData[weap][0], WeaponData[weap][1]);
					    if(WeaponData[weap][1] == 0 || (weap == 11 && WeaponData[weap][0] != 46)) continue;
						dini_IntSet(file, tmp, WeaponData[weap][0]);
						dini_IntSet(file, tmp2, WeaponData[weap][1]);
						GivePlayerWeapon(playerid, WeaponData[weap][0], -WeaponData[weap][1]);
						tmpcount++;
					}
					if(tmpcount >= 1)
					{
						ShowInfoBox(playerid, INFORMATION_HEADER, I_HS_WEAPONS1, tmpcount, AddS(tmpcount));
					}
					if(tmpcount == 0)
					{
						ShowInfoBox(playerid, INFORMATION_HEADER, E_NO_WEAPONS, tmpcount);
					}
		            #if defined GH_DEBUGGING

						printf(DEBUG_ODR10, RealName[playerid], playerid, tmpcount, h);

//						printf(DEBUG_ODR10, RealName[playerid], playerid, tmpcount, AddS(tmpcount), h);
					#endif
				}
				case 1: // Recieve Weapons
				{
					new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
    				format(file, sizeof(file), FILEPATH, h);
					Loop(weap, 13)
					{
					    format(tmp, sizeof(tmp), "Weapon%d", weap);
	  					format(tmp2, sizeof(tmp2), "Weapon%dAmmo", weap);
	  					if(dini_Int(file, tmp2) == 0) continue;
					    if(weap == 0) continue;
					    #if !defined GH_SAVE_ADMINWEPS
					    if(weap == 7 || weap == 8 || weap == 9 || weap == 11 || weap == 12) continue;
					    #endif
						GivePlayerWeapon(playerid, dini_Int(file, tmp), dini_Int(file, tmp2));
						dini_IntSet(file, tmp, 0);
						dini_IntSet(file, tmp2, 0);
						tmpcount++;
					}
					if(tmpcount >= 1)
					{
						ShowInfoBox(playerid, INFORMATION_HEADER, I_HS_WEAPONS2, tmpcount, AddS(tmpcount));
					}
					if(tmpcount == 0)
					{
						ShowInfoBox(playerid, INFORMATION_HEADER, E_NO_HS_WEAPONS, tmpcount); // I had to add tmpcount or it gave an error ^_^
					}
					#if defined GH_DEBUGGING

						printf(DEBUG_ODR11, RealName[playerid], playerid, tmpcount, h);

//						printf(DEBUG_ODR11, RealName[playerid], playerid, tmpcount, AddS(tmpcount), h);
					#endif
				}
			}
		}
		return 1;
	}
//==============================================================================
// пустой диалог
//==============================================================================
	if(dialogid == 520)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		return 1;
	}
//------------------------------------------------------------------------------
//                          Enter House Using Password
//------------------------------------------------------------------------------
	if(dialogid == 521)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога

		lockpas[playerid] = 0;//разблокировать диалог ввода пароля

		if(response)
		{
			new file[HOUSEFILE_LENGTH], h = GetPVarInt(playerid, "LastHouseCP"); // Don't complain about huge size, just change it if you need.
			format(file, sizeof(file), FILEPATH, h);
		    format(file, sizeof(file), FILEPATH, h);
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOUR_SYSTEM, "Пароль содержит недопустимые символы:");
				SendClientMessage(playerid, COLOUR_SYSTEM, "запрещённые коды, или знак процентов, или ~ .");
				return 1;
			}
		    if(strlen(inputtext) < MIN_HOUSE_PASSWORD || strlen(inputtext) > MAX_HOUSE_PASSWORD) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HPASS_LENGTH);
			if(strcmp(dini_Get(file, "HousePassword"), inputtext, false) != 0)//пароль без хэш-шифрования
//			if(udb_hash(inputtext) != dini_Int(file, "HousePassword"))
			{
				ShowInfoBox(playerid, INFORMATION_HEADER, I_WRONG_HPASS1, GetHouseOwner(GetPVarInt(playerid, "LastHouseCP")), inputtext);
				if(IsPlayerConnected(GetHouseOwnerEx(GetPVarInt(playerid, "LastHouseCP"))))
				{
					SendMSG(GetHouseOwnerEx(h), COLOUR_INFO, 128, I_WRONG_HPASS2, RealName[playerid], playerid, inputtext);
    			}
			}
			else
			{
				ShowInfoBox(playerid, INFORMATION_HEADER, I_CORRECT_HPASS1, GetHouseOwner(GetPVarInt(playerid, "LastHouseCP")), inputtext);
				SetPVarInt(playerid, "IsInHouse", 1);
				SetPlayerHouseInterior(playerid, GetPVarInt(playerid, "LastHouseCP"));
				if(IsPlayerConnected(GetHouseOwnerEx(GetPVarInt(playerid, "LastHouseCP"))))
				{
					SendMSG(GetHouseOwnerEx(h), COLOUR_INFO, 128, I_CORRECT_HPASS2, RealName[playerid], playerid, inputtext);
				}
				#if defined GH_DEBUGGING
					printf(DEBUG_ODR12, RealName[playerid], playerid, h);
				#endif
			}
		}
		return 1;
	}
//==============================================================================
//                              End GarHouse
//==============================================================================

    if(dialogid == 0)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
 		if(!response)
		{
			format(string,sizeof(string),"* Игрок %s [%d] был кикнут - отказ от регистрации !", RealName[playerid], playerid);
			print(string);
    		SendClientMessageToAll(COLOR_LIGHTRED, string);
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
		}
		else
		{
 			if(strlen(inputtext) < 3 || strlen(inputtext) > 20)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина пароля должна быть от 3 до 20 символов !");
				ShowPlayerDialog(playerid,0,DIALOG_STYLE_INPUT,"Регистрация","Добро пожаловать на Drift non-DM сервер.\nВы не зарегистрированы на нашем сервере.\n\nДля продолжения, введите Ваш пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 0);
				return 1;
			}
 			if(PassControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В пароле можно использовать ТОЛЬКО латинские");
				SendClientMessage(playerid, COLOR_RED, " символы: от a до z , от A до Z , и цифры от 0 до 9 !");
				ShowPlayerDialog(playerid,0,DIALOG_STYLE_INPUT,"Регистрация","Добро пожаловать на Drift non-DM сервер.\nВы не зарегистрированы на нашем сервере.\n\nДля продолжения, введите Ваш пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 0);
				return 1;
			}
		    if (gPlayerAccount[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Этот ник уже зарегистрирован !");
				return 1;
			}
#if (MOD90INS == 0)
			format(string, sizeof(string), "players/%s.ini", RealName[playerid]);
			if(fexist(string))
			{
				SendClientMessage(playerid, COLOR_RED, " Этот ник уже зарегистрирован !");
				return 1;
			}
#endif
#if (MOD90INS == 1)
			format(string, sizeof(string), "SELECT * FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
			querydb[playerid] = db_query(playerdb, string);//отправляем запрос БД
			if(db_num_rows(querydb[playerid]) != 0)//переведём результат запроса в число найденных строк в БД
			{//если число строк не равно нулю (такой аккаунт есть в БД), то:
				SendClientMessage(playerid, COLOR_RED, " Этот ник уже зарегистрирован !");
				db_free_result(querydb[playerid]);//очищаем результат запроса БД
				return 1;
			}
#endif
			strmid(PlayerInfo[playerid][pKey], inputtext, 0, strlen(inputtext), 255);
			OnPlayerRegister(playerid,PlayerInfo[playerid][pKey]);
		}
		return 1;
	}
	if(dialogid == 1)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(!response)
		{
			format(string,sizeof(string),"* Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
			print(string);
    		SendClientMessageToAll(COLOR_LIGHTRED, string);
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
		}
		else
		{
 			if(strlen(inputtext) < 3 || strlen(inputtext) > 20)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина пароля должна быть от 3 до 20 символов !");
 				ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"Вход в аккаунт","Добро пожаловать на Drift non-DM сервер.\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 1);
				return 1;
			}
 			if(PassControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В пароле можно использовать ТОЛЬКО латинские");
				SendClientMessage(playerid, COLOR_RED, " символы: от a до z , от A до Z , и цифры от 0 до 9 !");
 				ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT,"Вход в аккаунт","Добро пожаловать на Drift non-DM сервер.\nВы уже зарегистрированы на нашем сервере.\n\nЧтобы войти в аккаунт, введите свой пароль в поле.","Войти","Отмена");
				SetPVarInt(playerid, "DlgCont", 1);
				return 1;
			}
		    if (gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Этот ник уже залогинился !");
				return 1;
			}
			new tmppass[64];
			strmid(tmppass, inputtext, 0, strlen(inputtext), 255);
			OnPlayerLogin(playerid,tmppass);
		}
		return 1;
	}
	if(dialogid == 2)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		return 1;
	}
#if (MOD44INS == 1)
	if(dialogid == 100)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
        if(response)
		{
			if(listitem == 0)
			{
	 			format(strdln, sizeof(strdln), "п1.1 Логин схожий с админским (adm, admins... и.т.п.) - (пре-\
	            \n	дупреждение - бан).\
	            \nп1.2 Логин, порочащий логин админа (логины админов) (admlog_\
	            \n	durak, admlog-LOL... и.т.п.) или порочащий название ЛЮБО-");
	 			format(strdln, sizeof(strdln), "%s\n	ГО существующего клана - (кик - бан).\
	            \nп1.3 Логин случайного вида (G6fc76KK4f7cM6f... и.т.п.) -\
	            \n	(предупреждение - бан).\
	            \nп1.4 Логин с использованием мата - (бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп1.5 Название клана схожее с админским (adm, admins...\
	            \n	и.т.п.) или схожее с названием ЛЮБОГО существующего клана\
	            \n	- (предупреждение - бан).\
	            \nп1.6 Название клана порочащие логин админа (логины админов)", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	(admlog_durak, admlog-LOL... и.т.п.) или порочащие назва-\
	            \n	ние ЛЮБОГО существующего клана - (кик - бан).\
	            \nп1.7 Название клана случайного вида (G6fc76KK4f7cM6f...\
	            \n	и.т.п.) - (предупреждение - бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп1.8 Название клана, имя дома, или номер авто с использова-\
	            \n	нием мата - (бан).\
	            \nп1.9 Логин противоположного пола (игрок ''ОН'' - MARUSYA, иг-\
	            \n	рок ''ОНА'' - ivan) - (предупреждение - бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп1.10 Использование скина противоположного пола - (предупреж-\
	            \n	дение - бан).\
	            \nп1.11 Анимация ''поцелуй'' со скином своего пола - (преду-\
	            \n	преждение - бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп1.12 Игровые читы или моды ЛЮБОГО типа (чит, собейт, CLEO...\
	            \n	и.т.п.) дающие превосходство над другими игроками - (бан).\
	            \nп1.13 Моды ЛЮБОГО типа на транспорт, приводящие к неадекват-\
	            \n	ному ''поведению'' транспорта - (предупреждение - бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп1.14 Читы, приводящие к остановке сервера или кикам игроков\
	            \n	- (бан).\
	            \nп1.15 Мат, флуд, или спам в чате или в PM (в личке) - (преду-\
	            \n	преждение - ЗАТЫК* - бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп1.16 Одиночное или групповое оскорбление игрока или админа\
	            \n	(игроков или админов) в чате или в PM (в личке) - (преду-\
	            \n	преждение - ЗАТЫК* - бан).\
	            \nп1.17 Одиночное или групповое пренебрежительное выделение иг-", strdln);
				format(strdln, sizeof(strdln), "%s\n	рока или админа (игроков или админов) по географическому,\
	  			\n	национальному, религиозному или возрастному признаку (ра-\
	    		\n	сизм, национализм... и.т.п.) в чате или в PM (в личке) -\
	            \n	(предупреждение - ЗАТЫК* - бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп1.18 МНОГОКРАТНЫЕ необоснованные убийства игрока или админа\
	            \n	(игроков или админов) - (предупреждение - бан).\
	            \nп1.19 МНОГОКРАТНЫЕ кражи транспорта у игрока или админа (иг-\
	            \n	роков или админов) - (предупреждение - бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп1.20 Мешание проведению дрифта или гонок - (предупреждение -\
	            \n	бан).\
	            \nп1.21 МНОГОКРАТНЫЕ выпрашивания денег у игрока или админа\
	            \n	(игроков или админов) - (предупреждение - бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп1.22 МНОГОКРАТНЫЕ выпрашивания VIP-уровней у админа (адми-\
	            \n	нов) - (предупреждение - бан).\
	            \nп1.23 МНОГОКРАТНЫЕ выпрашивания админки у гл.админа (админов)\
	            \n	- (предупреждение - бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп1.24 МНОГОКРАТНОЕ выдавание себя за админа в чате или в PM\
	            \n	(в личке) - (предупреждение - бан).\
	            \nп1.25 МНОГОКРАТНОЕ использование или злоупотребление функцией\
				\n	ТП к любому игроку (только для VIP 2-го уровня) - (лишение", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	VIP 2-го уровня).\
				\nп1.26 СИСТЕМАТИЧЕСКОЕ ведение ДЕМАГОГИИ в чате (по поводу не-\
	            \n	правильной работы админов, засушливого лета в Африке...\
	            \n	и.т.п.) - (предупреждение - бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп1.27 Мат, флуд, или спам в админ-чате (только для VIP 1-го и\
	            \n	2-го уровня) - (предупреждение - ЗАТЫК* - бан).\
				\nп1.28 Мат, флуд, или спам в админ-чате (только для депортиро-\
	            \n	ванных игроков) - (бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nМеры наказаний в порядке возрастания: 1- предупреждение, 2-\
	            \n	денежный штраф, 3- затык, 4- тюрьма, 5- кик, 6- депорта-\
	            \n	ция, 7- бан (ЗАТЫК* - обязательная мера наказания).", strdln);
				ShowPlayerDialog(playerid, 102, DIALOG_STYLE_LIST, "Кодекс игроков - ЗАПРЕТЫ (п1.1 - п1.28)", strdln, "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 102);
				return 1;
			}
			if(listitem == 1)
			{
	 			format(strdln, sizeof(strdln), "п2.1 Использовать логина любого вида, за исключением п1.1 -\
	            \n	п1.4 и п1.9 (допускается логин состоящий из ''телефонного\
	            \n	номера'' (6534376197648, ab867439... и.т.п.)).\
	            \nп2.2 Создавать любой клан, за исключением п1.5 - п1.8 (допус-");
	 			format(strdln, sizeof(strdln), "%s\n	кается название клана состоящее из ''телефонного номера''\
	            \n	(6534376197648, ab867439... и.т.п.)).\
	            \nп2.3 Вступать в любой клан, за исключением админских кланов,\
	            \n	чьи места спавнов могут находиться на запрещённых террито-", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	риях.\
	            \nп2.4 Использовать паркур-мод.\
	            \nп2.5 Пользоваться игровым меню, частично админ-меню (только\
	            \n	для VIP 2-го уровня), командами, системой домов и чатом", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	сервера, за исключением п1.10, п1.11, п1.15 - п1.17 и\
	            \n	п1.21 - п1.26.\
	            \nп2.6 Учавствовать и проводить дрифт, гонки, викторины,\
	            \n	свадьбы.", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп2.7 Сообщать другим игрокам о нарушениях по пунктам п1.1 -\
	            \n	п1.26.\
	            \nп2.8 Сообщать админу (админам) о нарушениях по пунктам п1.1\
	            \n	- п1.26 (п3.4 - п3.29) других игроков (админов).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп2.9 Уважительно относиться к странам проживания, националь-\
	            \n	ностям и религиям других игроков (админов).\
	            \nп2.10 Просить у админа (админов) VIP-уровень, за исключением\
	            \n	п1.22.", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп2.11 Просить у гл.админа (админов) админку, за исключением\
	            \n	п1.23.", strdln);
				ShowPlayerDialog(playerid, 103, DIALOG_STYLE_LIST, "Кодекс игроков - ПРАВА (п2.1 - п2.11)", strdln, "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 103);
			}
		}
		else
		{
			gettime(timecor[0], timecor[1]);
			TimCor();//коррекция времени
			format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

			//Clans system
			ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 101)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
        if(response)
		{
			if(listitem == 0)
			{
	 			format(strdln, sizeof(strdln), "п3.1 Логин случайного вида (G6fc76KK4f7cM6f... и.т.п.).\
	            \nп3.2 Логин состоящий из ''телефонного номера''\
	            \n	(6534376197648, ab867439... и.т.п.).\
	            \nп3.3 Логин противоположного пола (игрок ''ОН'' - MARUSYA, иг-");
	 			format(strdln, sizeof(strdln), "%s\n	рок ''ОНА'' - ivan).\
	            \nп3.4 Название клана порочащие логин админа (логины админов)\
	            \n	(admlog_durak, admlog-LOL... и.т.п.) или порочащие назва-\
	            \n	ние ЛЮБОГО существующего клана - (предупреждение, лишение", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	админки).\
	            \nп3.5 Название клана случайного вида (G6fc76KK4f7cM6f...\
	            \n	и.т.п.) - (предупреждение, лишение админки).\
	            \nп3.6 Название клана, имя дома, или номер авто с использова-", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	нием мата - (лишение админки).\
	            \nп3.7 Использование скина противоположного пола - (предупреж-\
	            \n	дение, лишение админки).\
	            \nп3.8 Анимация ''поцелуй'' со скином своего пола - (предупреж-", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	дение, лишение админки).\
	            \nп3.9 Игровые читы или моды ЛЮБОГО типа (чит, собейт, CLEO...\
	            \n	и.т.п.) дающие превосходство над другими игроками - (лише-\
	            \n	ние админки + бан).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп3.10 Моды ЛЮБОГО типа на транспорт, приводящие к неадекват-\
	            \n	ному ''поведению'' транспорта - (предупреждение, лишение\
	            \n	админки).\
	            \nп3.11 Читы, приводящие к остановке сервера или кикам игроков", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	- (лишение админки + бан).\
	            \nп3.12 Мат в любом из чатов, или в любой из команд сервера,\
	            \n	или в ''причине'' - (лишение админки).\
	            \nп3.13 Флуд или спам в любом из чатов, или в любой из команд", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	сервера - (предупреждение, лишение админки).\
	            \nп3.14 Одиночное или групповое оскорбление игрока или админа\
	            \n	(игроков или админов) в любом из чатов, или в любой из ко-\
	            \n	манд сервера - (предупреждение, лишение админки).", strdln);
				format(strdln, sizeof(strdln), "%s\nп3.15 Одиночное или групповое пренебрежительное выделение иг-\
	  			\n	рока или админа (игроков или админов) по географическому,\
	    		\n	национальному, религиозному или возрастному признаку (ра-\
	     		\n	сизм, национализм... и.т.п.) в любом из чатов, или в любой", strdln);
				format(strdln, sizeof(strdln), "%s\n	из команд сервера - (предупреждение, лишение админки).\
	            \nп3.16 МНОГОКРАТНОЕ одиночное или групповое пренебрежительное\
	            \n	отношение к игроку или админу (игрокам или админам) -\
	            \n	(предупреждение, лишение админки).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп3.17 МНОГОКРАТНЫЕ необоснованные убийства игрока или админа\
	            \n	(игроков или админов) - (предупреждение, лишение админки).\
	            \nп3.18 МНОГОКРАТНЫЕ кражи транспорта у игрока или админа (иг-\
	            \n	роков или админов) - (предупреждение, лишение админки).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп3.19 Мешание проведению дрифта или гонок - (предупреждение,\
	            \n	лишение админки).\
	            \nп3.20 МНОГОКРАТНЫЕ выпрашивания ''повышения'' у гл.админа\
	            \n	(админов) - (предупреждение, лишение админки).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп3.21 МНОГОКРАТНЫЕ использования или злоупотребления функци-\
	            \n	ями админ-меню или командами админа (ТП, изменение погоды\
	            \n	или гравитации... и.т.п.) - (предупреждение, лишение админ-\
	            \n	ки).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп3.22 МНОГОКРАТНОЕ НЕзаполнение полей ''причина'' в админ-ме-\
	            \n	ню или командах - (предупреждение, лишение админки).\
	            \nп3.23 МНОГОКРАТНОЕ спонсирование игрока (игроков) крупными\
	            \n	денежными суммами - (понижение админки до 1-го уровня, ли-", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	шение админки).\
	            \nп3.24 Деноминирование денежных средств, БЕЗ предварительного\
	            \n	согласования правил деноминации (см. п4.16) - (предупреж-\
	            \n	дение, понижение админки до 1-го уровня, лишение админки).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп3.25 Превышение должностных полномочий (тюрьма ни за что,\
	            \n	бан ни за что... и.т.п.) - (предупрежд., лишение адм.).\
	            \nп3.26 Распространение закрытой информации среди игроков (IP\
	            \n	игроков или админов, PM-сообщений, админ-чата, координат", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	запрещённых территорий... и.т.п.) - (предупрежд., лишение\
	            \n	адм.).\
	            \nп3.27 Использование админки ИСКЛЮЧИТЕЛЬНО в личных целях (не\
	            \n	реагирование на мат в чате, на читеров... и.т.п.) - (пре-", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	дупрежд., лишение адм.).\
	            \nп3.28 Неадекватное поведение админа (админ вернулся с дня\
	            \n	рождения, юбилея... и.т.п.) или по причине передачи своего\
	            \n	аккаунта другому лицу - (лишение адм.).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп3.29 Использование БОЛЕЕ 3-х мер наказания одновременно -\
	            \n	(предупрежд., лишение адм.).\
	            \nп3.30 Использование команды /ipban по отношению к другому ад-\
	            \n	мину (бан другого админа по IP) - (лишение адм.).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп3.31 Передача или продажа своего аккаунта для администриро-\
	            \n	вания параллельных серверов другому лицу - (лишение адм.).\
	            \nп3.32 Простой пароль на админ-аккаунте (111, 123... и.т.п.)\
	            \n	- (предупрежд., лишение адм.).", strdln);
				ShowPlayerDialog(playerid, 104, DIALOG_STYLE_LIST, "Кодекс админов - ЗАПРЕТЫ (п3.1 - п3.32)", strdln, "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 104);
				return 1;
			}
			if(listitem == 1)
			{
	 			format(strdln, sizeof(strdln), "п4.1 Использовать логина любого вида, за исключением п3.1 -\
	            \n	п3.3.\
	            \nп4.2 Создавать любой клан, за исключением п3.4 - п3.6 (допус-\
	            \n	кается название клана состоящее из ''телефонного номера''");
	 			format(strdln, sizeof(strdln), "%s\n	(6534376197648, ab867439... и.т.п.)), а так же вступать в\
	            \n	любой клан.\
	            \nп4.3 Использовать паркур-мод.\
	            \nп4.4 Пользоваться игровым меню, админ-меню, командами, систе-", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	мой домов, чатом и админ-чатом сервера, за исключением\
	            \n	п3.7, п3.8, п3.12 - п3.16 и п3.20 - п3.32.\
	            \nп4.5 Учавствовать и проводить дрифт, гоноки, викторины,\
	            \n	свадьбы.", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп4.6 Сообщать админу (админам) о нарушениях по пунктам п1.1 -\
	            \n	п1.28 (п3.4 - п3.31) игроков (других админов).\
	            \nп4.7 Уважительно относиться к странам проживания, националь-\
	            \n	ностям и религиям игроков (других админов).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп4.8 Просить у гл.админа (админов) ''повышения'', за исключе-\
	            \n	нием п3.20.\
	            \nп4.9 Устанавливать денежный фонд (для п4.5) предварительно\
	            \n	соглосовав его не менее чем с 2-я админами.", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп4.10 Устанавливать денежный фонд (для п4.5) в соответствии с\
	            \n	последним согласованием (если Вы - один админ на сервере).\
	            \nп4.11 Устанавливать время затыка или посадки в тюрьму, а так\
	            \n	же систему денежных штрафов или поощрений предварительно", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	соглосовав его (её) не менее чем с 2-я админами.\
	            \nп4.12 Устанавливать время затыка или посадки в тюрьму, а так\
	            \n	же денежный штраф или поощрение в соответствии с последним\
	            \n	согласованием (если Вы - один админ на сервере).", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп4.13 Для особо отличившихся игроков устанавливать время за-\
	            \n	тыка или посадки в тюрьму, а так же денежный штраф или по-\
	            \n	ощрение НЕ БОЛЕЕ 10-и кратного увеличения, исходя из пос-\
	            \n	леднего согласования.", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп4.14 Устанавливать время затыка или посадки в тюрьму, а так\
	            \n	же денежный штраф или поощрение МЕНЬШЕ, чем по\
	            \n	последнему согласованию.\
	            \nп4.15 Действовать БЕЗ ОГРАНИЧЕНИЙ в отношении особо злостных", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	игроков (даже тех, которые сидят в тюрьме).\
	            \nп4.16 Производить деноминацию денежных средств, предваритель-\
	            \n	но согласовав правила деноминации не менее чем с 2-я адми-\
	            \n	нами.", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп4.17 Решать вопрос о возврате денег, в случае отмены (откло-\
	            \n	нения) депортации.\
	            \nп4.18 Устанавливать погоду или гравитацию ТОЛЬКО в том слу-\
	            \n	чае, если БОЛЬШИНСТВО - ЗА.", strdln);
	 			format(strdln, sizeof(strdln), "%s\nп4.19 Не давать игроку разрешения управления кланом, если на\
	            \n	то есть причина (причины).\
	            \nп4.20 Использовать ДО 3-х мер наказания одновременно (для\
	            \n	п1.15 - п1.17 и п1.27 ЗАТЫК* - является одной из несколь-", strdln);
	 			format(strdln, sizeof(strdln), "%s\n	ких, или единственной ОБЯЗАТЕЛЬНОЙ мерой наказания).\
	            \nп4.21 Просить у гл.админа обновление жилого фонда (перезаг-\
	            \n	рузки системы домов) (решение принимается по большинству\
	            \n	ДЕЙСТВУЮЩИХ админов).", strdln);
				ShowPlayerDialog(playerid, 105, DIALOG_STYLE_LIST, "Кодекс админов - ПРАВА (п4.1 - п4.21)", strdln, "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 105);
				return 1;
			}
			if(listitem == 2)
			{
	 			format(strdln, sizeof(strdln), "п5.1 Контролировать и принимать меры по пунктам п1.1 - п1.28\
	            \n	(по всем, или по отдельной группе пунктов при разделённом\
	            \n	администрировании).\
	            \nп5.2 Защищать пункты п2.1 - п2.11.");
	 			format(strdln, sizeof(strdln), "%s\nп5.3 Контролировать и (по возможности) принимать меры по пун-\
	            \n	ктам п3.1 - п3.32.\
	            \nп5.4 Защищать пункты п4.1 - п4.21.\
	            \nп5.5 Исполнять пункты п5.1 - п5.4.", strdln);
				ShowPlayerDialog(playerid, 106, DIALOG_STYLE_LIST, "Кодекс админов - ОБЯЗАННОСТИ (п5.1 - п5.5)", strdln, "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 106);
			}
		}
		else
		{
			gettime(timecor[0], timecor[1]);
			TimCor();//коррекция времени
			format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

			//Clans system
			ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 102)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
        if(response)
		{
	 		format(strdln, sizeof(strdln), "п1.1 Логин схожий с админским (adm, admins... и.т.п.) - (пре-\
	        \n	дупреждение - бан).\
	        \nп1.2 Логин, порочащий логин админа (логины админов) (admlog_\
	        \n	durak, admlog-LOL... и.т.п.) или порочащий название ЛЮБО-");
	 		format(strdln, sizeof(strdln), "%s\n	ГО существующего клана - (кик - бан).\
	        \nп1.3 Логин случайного вида (G6fc76KK4f7cM6f... и.т.п.) -\
	        \n	(предупреждение - бан).\
	        \nп1.4 Логин с использованием мата - (бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп1.5 Название клана схожее с админским (adm, admins...\
	        \n	и.т.п.) или схожее с названием ЛЮБОГО существующего клана\
	        \n	- (предупреждение - бан).\
	        \nп1.6 Название клана порочащие логин админа (логины админов)", strdln);
	 		format(strdln, sizeof(strdln), "%s\n	(admlog_durak, admlog-LOL... и.т.п.) или порочащие назва-\
	        \n	ние ЛЮБОГО существующего клана - (кик - бан).\
	        \nп1.7 Название клана случайного вида (G6fc76KK4f7cM6f...\
	        \n	и.т.п.) - (предупреждение - бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп1.8 Название клана, имя дома, или номер авто с использова-\
	        \n	нием мата - (бан).\
	        \nп1.9 Логин противоположного пола (игрок ''ОН'' - MARUSYA, иг-\
	        \n	рок ''ОНА'' - ivan) - (предупреждение - бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп1.10 Использование скина противоположного пола - (предупреж-\
	        \n	дение - бан).\
	        \nп1.11 Анимация ''поцелуй'' со скином своего пола - (преду-\
	        \n	преждение - бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп1.12 Игровые читы или моды ЛЮБОГО типа (чит, собейт, CLEO...\
	        \n	и.т.п.) дающие превосходство над другими игроками - (бан).\
	        \nп1.13 Моды ЛЮБОГО типа на транспорт, приводящие к неадекват-\
	        \n	ному ''поведению'' транспорта - (предупреждение - бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп1.14 Читы, приводящие к остановке сервера или кикам игроков\
	        \n	- (бан).\
	        \nп1.15 Мат, флуд, или спам в чате или в PM (в личке) - (преду-\
	        \n	преждение - ЗАТЫК* - бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп1.16 Одиночное или групповое оскорбление игрока или админа\
	        \n	(игроков или админов) в чате или в PM (в личке) - (преду-\
	        \n	преждение - ЗАТЫК* - бан).\
	        \nп1.17 Одиночное или групповое пренебрежительное выделение иг-", strdln);
			format(strdln, sizeof(strdln), "%s\n	рока или админа (игроков или админов) по географическому,\
	  		\n	национальному, религиозному или возрастному признаку (ра-\
	    	\n	сизм, национализм... и.т.п.) в чате или в PM (в личке) -\
	        \n	(предупреждение - ЗАТЫК* - бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп1.18 МНОГОКРАТНЫЕ необоснованные убийства игрока или админа\
	        \n	(игроков или админов) - (предупреждение - бан).\
	        \nп1.19 МНОГОКРАТНЫЕ кражи транспорта у игрока или админа (иг-\
	        \n	роков или админов) - (предупреждение - бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп1.20 Мешание проведению дрифта или гонок - (предупреждение -\
	        \n	бан).\
	        \nп1.21 МНОГОКРАТНЫЕ выпрашивания денег у игрока или админа\
	        \n	(игроков или админов) - (предупреждение - бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп1.22 МНОГОКРАТНЫЕ выпрашивания VIP-уровней у админа (адми-\
	        \n	нов) - (предупреждение - бан).\
	        \nп1.23 МНОГОКРАТНЫЕ выпрашивания админки у гл.админа (админов)\
	        \n	- (предупреждение - бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп1.24 МНОГОКРАТНОЕ выдавание себя за админа в чате или в PM\
	        \n	(в личке) - (предупреждение - бан).\
	        \nп1.25 МНОГОКРАТНОЕ использование или злоупотребление функцией\
			\n	ТП к любому игроку (только для VIP 2-го уровня) - (лишение", strdln);
	 		format(strdln, sizeof(strdln), "%s\n	VIP 2-го уровня).\
			\nп1.26 СИСТЕМАТИЧЕСКОЕ ведение ДЕМАГОГИИ в чате (по поводу не-\
	        \n	правильной работы админов, засушливого лета в Африке...\
	        \n	и.т.п.) - (предупреждение - бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп1.27 Мат, флуд, или спам в админ-чате (только для VIP 1-го и\
	        \n	2-го уровня) - (предупреждение - ЗАТЫК* - бан).\
			\nп1.28 Мат, флуд, или спам в админ-чате (только для депортиро-\
	        \n	ванных игроков) - (бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nМеры наказаний в порядке возрастания: 1- предупреждение, 2-\
	        \n	денежный штраф, 3- затык, 4- тюрьма, 5- кик, 6- депорта-\
	        \n	ция, 7- бан (ЗАТЫК* - обязательная мера наказания).", strdln);
			ShowPlayerDialog(playerid, 102, DIALOG_STYLE_LIST, "Кодекс игроков - ЗАПРЕТЫ (п1.1 - п1.28)", strdln, "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 102);
		}
		else
		{
			ShowPlayerDialog(playerid, 100, DIALOG_STYLE_LIST, "Кодекс игроков", "Запреты (п1.1 - п1.28)\nПрава (п2.1 - п2.11)", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 100);
		}
		return 1;
	}
	if(dialogid == 103)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
        if(response)
		{
 			format(strdln, sizeof(strdln), "п2.1 Использовать логина любого вида, за исключением п1.1 -\
            \n	п1.4 и п1.9 (допускается логин состоящий из ''телефонного\
            \n	номера'' (6534376197648, ab867439... и.т.п.)).\
            \nп2.2 Создавать любой клан, за исключением п1.5 - п1.8 (допус-");
 			format(strdln, sizeof(strdln), "%s\n	кается название клана состоящее из ''телефонного номера''\
            \n	(6534376197648, ab867439... и.т.п.)).\
            \nп2.3 Вступать в любой клан, за исключением админских кланов,\
            \n	чьи места спавнов могут находиться на запрещённых террито-", strdln);
 			format(strdln, sizeof(strdln), "%s\n	риях.\
            \nп2.4 Использовать паркур-мод.\
            \nп2.5 Пользоваться игровым меню, частично админ-меню (только\
            \n	для VIP 2-го уровня), командами, системой домов и чатом", strdln);
 			format(strdln, sizeof(strdln), "%s\n	сервера, за исключением п1.10, п1.11, п1.15 - п1.17 и\
            \n	п1.21 - п1.26.\
            \nп2.6 Учавствовать и проводить дрифт, гонки, викторины,\
            \n	свадьбы.", strdln);
 			format(strdln, sizeof(strdln), "%s\nп2.7 Сообщать другим игрокам о нарушениях по пунктам п1.1 -\
            \n	п1.26.\
            \nп2.8 Сообщать админу (админам) о нарушениях по пунктам п1.1\
            \n	- п1.26 (п3.4 - п3.29) других игроков (админов).", strdln);
 			format(strdln, sizeof(strdln), "%s\nп2.9 Уважительно относиться к странам проживания, националь-\
            \n	ностям и религиям других игроков (админов).\
            \nп2.10 Просить у админа (админов) VIP-уровень, за исключением\
            \n	п1.22.", strdln);
 			format(strdln, sizeof(strdln), "%s\nп2.11 Просить у гл.админа (админов) админку, за исключением\
            \n	п1.23.", strdln);
			ShowPlayerDialog(playerid, 103, DIALOG_STYLE_LIST, "Кодекс игроков - ПРАВА (п2.1 - п2.11)", strdln, "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 103);
		}
		else
		{
			ShowPlayerDialog(playerid, 100, DIALOG_STYLE_LIST, "Кодекс игроков", "Запреты (п1.1 - п1.28)\nПрава (п2.1 - п2.11)", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 100);
		}
		return 1;
	}
	if(dialogid == 104)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
        if(response)
		{
	 		format(strdln, sizeof(strdln), "п3.1 Логин случайного вида (G6fc76KK4f7cM6f... и.т.п.).\
	        \nп3.2 Логин состоящий из ''телефонного номера''\
	        \n	(6534376197648, ab867439... и.т.п.).\
	        \nп3.3 Логин противоположного пола (игрок ''ОН'' - MARUSYA, иг-");
	 		format(strdln, sizeof(strdln), "%s\n	рок ''ОНА'' - ivan).\
	        \nп3.4 Название клана порочащие логин админа (логины админов)\
	        \n	(admlog_durak, admlog-LOL... и.т.п.) или порочащие назва-\
	        \n	ние ЛЮБОГО существующего клана - (предупреждение, лишение", strdln);
	 		format(strdln, sizeof(strdln), "%s\n	админки).\
	        \nп3.5 Название клана случайного вида (G6fc76KK4f7cM6f...\
	        \n	и.т.п.) - (предупреждение, лишение админки).\
	        \nп3.6 Название клана, имя дома, или номер авто с использова-", strdln);
	 		format(strdln, sizeof(strdln), "%s\n	нием мата - (лишение админки).\
	        \nп3.7 Использование скина противоположного пола - (предупреж-\
	        \n	дение, лишение админки).\
	        \nп3.8 Анимация ''поцелуй'' со скином своего пола - (предупреж-", strdln);
	 		format(strdln, sizeof(strdln), "%s\n	дение, лишение админки).\
	        \nп3.9 Игровые читы или моды ЛЮБОГО типа (чит, собейт, CLEO...\
	        \n	и.т.п.) дающие превосходство над другими игроками - (лише-\
	        \n	ние админки + бан).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп3.10 Моды ЛЮБОГО типа на транспорт, приводящие к неадекват-\
	        \n	ному ''поведению'' транспорта - (предупреждение, лишение\
	        \n	админки).\
	        \nп3.11 Читы, приводящие к остановке сервера или кикам игроков", strdln);
	 		format(strdln, sizeof(strdln), "%s\n	- (лишение админки + бан).\
	        \nп3.12 Мат в любом из чатов, или в любой из команд сервера,\
	        \n	или в ''причине'' - (лишение админки).\
	        \nп3.13 Флуд или спам в любом из чатов, или в любой из команд", strdln);
	 		format(strdln, sizeof(strdln), "%s\n	сервера - (предупреждение, лишение админки).\
	        \nп3.14 Одиночное или групповое оскорбление игрока или админа\
	        \n	(игроков или админов) в любом из чатов, или в любой из ко-\
	        \n	манд сервера - (предупреждение, лишение админки).", strdln);
			format(strdln, sizeof(strdln), "%s\nп3.15 Одиночное или групповое пренебрежительное выделение иг-\
	  		\n	рока или админа (игроков или админов) по географическому,\
	    	\n	национальному, религиозному или возрастному признаку (ра-\
	     	\n	сизм, национализм... и.т.п.) в любом из чатов, или в любой", strdln);
			format(strdln, sizeof(strdln), "%s\n	из команд сервера - (предупреждение, лишение админки).\
	        \nп3.16 МНОГОКРАТНОЕ одиночное или групповое пренебрежительное\
	        \n	отношение к игроку или админу (игрокам или админам) -\
	        \n	(предупреждение, лишение админки).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп3.17 МНОГОКРАТНЫЕ необоснованные убийства игрока или админа\
	        \n	(игроков или админов) - (предупреждение, лишение админки).\
	        \nп3.18 МНОГОКРАТНЫЕ кражи транспорта у игрока или админа (иг-\
	        \n	роков или админов) - (предупреждение, лишение админки).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп3.19 Мешание проведению дрифта или гонок - (предупреждение,\
	        \n	лишение админки).\
	        \nп3.20 МНОГОКРАТНЫЕ выпрашивания ''повышения'' у гл.админа\
	        \n	(админов) - (предупреждение, лишение админки).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп3.21 МНОГОКРАТНЫЕ использования или злоупотребления функци-\
	        \n	ями админ-меню или командами админа (ТП, изменение погоды\
	        \n	или гравитации... и.т.п.) - (предупреждение, лишение админ-\
	        \n	ки).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп3.22 МНОГОКРАТНОЕ НЕзаполнение полей ''причина'' в админ-ме-\
	        \n	ню или командах - (предупреждение, лишение админки).\
	        \nп3.23 МНОГОКРАТНОЕ спонсирование игрока (игроков) крупными\
	        \n	денежными суммами - (понижение админки до 1-го уровня, ли-", strdln);
	 		format(strdln, sizeof(strdln), "%s\n	шение админки).\
	        \nп3.24 Деноминирование денежных средств, БЕЗ предварительного\
	        \n	согласования правил деноминации (см. п4.16) - (предупреж-\
	        \n	дение, понижение админки до 1-го уровня, лишение админки).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп3.25 Превышение должностных полномочий (тюрьма ни за что,\
	        \n	бан ни за что... и.т.п.) - (предупрежд., лишение адм.).\
	        \nп3.26 Распространение закрытой информации среди игроков (IP\
	        \n	игроков или админов, PM-сообщений, админ-чата, координат", strdln);
	 		format(strdln, sizeof(strdln), "%s\n	запрещённых территорий... и.т.п.) - (предупрежд., лишение\
	        \n	адм.).\
	        \nп3.27 Использование админки ИСКЛЮЧИТЕЛЬНО в личных целях (не\
	        \n	реагирование на мат в чате, на читеров... и.т.п.) - (пре-", strdln);
	 		format(strdln, sizeof(strdln), "%s\n	дупрежд., лишение адм.).\
	        \nп3.28 Неадекватное поведение админа (админ вернулся с дня\
	        \n	рождения, юбилея... и.т.п.) или по причине передачи своего\
	        \n	аккаунта другому лицу - (лишение адм.).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп3.29 Использование БОЛЕЕ 3-х мер наказания одновременно -\
	        \n	(предупрежд., лишение адм.).\
	        \nп3.30 Использование команды /ipban по отношению к другому ад-\
	        \n	мину (бан другого админа по IP) - (лишение адм.).", strdln);
	 		format(strdln, sizeof(strdln), "%s\nп3.31 Передача или продажа своего аккаунта для администриро-\
	        \n	вания параллельных серверов другому лицу - (лишение адм.).\
	        \nп3.32 Простой пароль на админ-аккаунте (111, 123... и.т.п.)\
	        \n	- (предупрежд., лишение адм.).", strdln);
			ShowPlayerDialog(playerid, 104, DIALOG_STYLE_LIST, "Кодекс админов - ЗАПРЕТЫ (п3.1 - п3.32)", strdln, "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 104);
		}
		else
		{
			ShowPlayerDialog(playerid, 101, DIALOG_STYLE_LIST, "Кодекс админов", "Запреты (п3.1 - п3.32)\nПрава (п4.1 - п4.21)\nОбязанности (п5.1 - п5.5)", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 101);
		}
		return 1;
	}
	if(dialogid == 105)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
        if(response)
		{
 			format(strdln, sizeof(strdln), "п4.1 Использовать логина любого вида, за исключением п3.1 -\
            \n	п3.3.\
            \nп4.2 Создавать любой клан, за исключением п3.4 - п3.6 (допус-\
            \n	кается название клана состоящее из ''телефонного номера''");
 			format(strdln, sizeof(strdln), "%s\n	(6534376197648, ab867439... и.т.п.)), а так же вступать в\
            \n	любой клан.\
            \nп4.3 Использовать паркур-мод.\
            \nп4.4 Пользоваться игровым меню, админ-меню, командами, систе-", strdln);
 			format(strdln, sizeof(strdln), "%s\n	мой домов, чатом и админ-чатом сервера, за исключением\
            \n	п3.7, п3.8, п3.12 - п3.16 и п3.20 - п3.32.\
            \nп4.5 Учавствовать и проводить дрифт, гоноки, викторины,\
            \n	свадьбы.", strdln);
 			format(strdln, sizeof(strdln), "%s\nп4.6 Сообщать админу (админам) о нарушениях по пунктам п1.1 -\
            \n	п1.28 (п3.4 - п3.31) игроков (других админов).\
            \nп4.7 Уважительно относиться к странам проживания, националь-\
            \n	ностям и религиям игроков (других админов).", strdln);
 			format(strdln, sizeof(strdln), "%s\nп4.8 Просить у гл.админа (админов) ''повышения'', за исключе-\
            \n	нием п3.20.\
            \nп4.9 Устанавливать денежный фонд (для п4.5) предварительно\
            \n	соглосовав его не менее чем с 2-я админами.", strdln);
 			format(strdln, sizeof(strdln), "%s\nп4.10 Устанавливать денежный фонд (для п4.5) в соответствии с\
            \n	последним согласованием (если Вы - один админ на сервере).\
            \nп4.11 Устанавливать время затыка или посадки в тюрьму, а так\
            \n	же систему денежных штрафов или поощрений предварительно", strdln);
 			format(strdln, sizeof(strdln), "%s\n	соглосовав его (её) не менее чем с 2-я админами.\
            \nп4.12 Устанавливать время затыка или посадки в тюрьму, а так\
            \n	же денежный штраф или поощрение в соответствии с последним\
            \n	согласованием (если Вы - один админ на сервере).", strdln);
 			format(strdln, sizeof(strdln), "%s\nп4.13 Для особо отличившихся игроков устанавливать время за-\
            \n	тыка или посадки в тюрьму, а так же денежный штраф или по-\
            \n	ощрение НЕ БОЛЕЕ 10-и кратного увеличения, исходя из пос-\
            \n	леднего согласования.", strdln);
 			format(strdln, sizeof(strdln), "%s\nп4.14 Устанавливать время затыка или посадки в тюрьму, а так\
            \n	же денежный штраф или поощрение МЕНЬШЕ, чем по\
            \n	последнему согласованию.\
            \nп4.15 Действовать БЕЗ ОГРАНИЧЕНИЙ в отношении особо злостных", strdln);
 			format(strdln, sizeof(strdln), "%s\n	игроков (даже тех, которые сидят в тюрьме).\
            \nп4.16 Производить деноминацию денежных средств, предваритель-\
            \n	но согласовав правила деноминации не менее чем с 2-я адми-\
            \n	нами.", strdln);
 			format(strdln, sizeof(strdln), "%s\nп4.17 Решать вопрос о возврате денег, в случае отмены (откло-\
            \n	нения) депортации.\
            \nп4.18 Устанавливать погоду или гравитацию ТОЛЬКО в том слу-\
            \n	чае, если БОЛЬШИНСТВО - ЗА.", strdln);
 			format(strdln, sizeof(strdln), "%s\nп4.19 Не давать игроку разрешения управления кланом, если на\
            \n	то есть причина (причины).\
            \nп4.20 Использовать ДО 3-х мер наказания одновременно (для\
            \n	п1.15 - п1.17 и п1.27 ЗАТЫК* - является одной из несколь-", strdln);
 			format(strdln, sizeof(strdln), "%s\n	ких, или единственной ОБЯЗАТЕЛЬНОЙ мерой наказания).\
            \nп4.21 Просить у гл.админа обновление жилого фонда (перезаг-\
            \n	рузки системы домов) (решение принимается по большинству\
            \n	ДЕЙСТВУЮЩИХ админов).", strdln);
			ShowPlayerDialog(playerid, 105, DIALOG_STYLE_LIST, "Кодекс админов - ПРАВА (п4.1 - п4.21)", strdln, "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 105);
		}
		else
		{
			ShowPlayerDialog(playerid, 101, DIALOG_STYLE_LIST, "Кодекс админов", "Запреты (п3.1 - п3.32)\nПрава (п4.1 - п4.21)\nОбязанности (п5.1 - п5.5)", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 101);
		}
		return 1;
	}
	if(dialogid == 106)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
        if(response)
		{
 			format(strdln, sizeof(strdln), "п5.1 Контролировать и принимать меры по пунктам п1.1 - п1.28\
            \n	(по всем, или по отдельной группе пунктов при разделённом\
            \n	администрировании).\
            \nп5.2 Защищать пункты п2.1 - п2.11.");
 			format(strdln, sizeof(strdln), "%s\nп5.3 Контролировать и (по возможности) принимать меры по пун-\
            \n	ктам п3.1 - п3.32.\
            \nп5.4 Защищать пункты п4.1 - п4.21.\
            \nп5.5 Исполнять пункты п5.1 - п5.4.", strdln);
			ShowPlayerDialog(playerid, 106, DIALOG_STYLE_LIST, "Кодекс админов - ОБЯЗАННОСТИ (п5.1 - п5.5)", strdln, "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 106);
		}
		else
		{
			ShowPlayerDialog(playerid, 101, DIALOG_STYLE_LIST, "Кодекс админов", "Запреты (п3.1 - п3.32)\nПрава (п4.1 - п4.21)\nОбязанности (п5.1 - п5.5)", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 101);
		}
		return 1;
	}
#endif
	if(dialogid == 3)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
        if(!response)
		{
			format(string,sizeof(string),"* Игрок %s [%d] был кикнут - спавн без логирования !", RealName[playerid], playerid);
			print(string);
    		SendClientMessageToAll(COLOR_LIGHTRED, string);
			SetTimerEx("PlayKick", 300, 0, "i", playerid);
		}
		else
		{
 			if(strlen(inputtext) < 3 || strlen(inputtext) > 20)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина пароля должна быть от 3 до 20 символов !");
    			format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   				ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
				SetPVarInt(playerid, "DlgCont", 3);
				return 1;
			}
 			if(PassControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В пароле можно использовать ТОЛЬКО латинские");
				SendClientMessage(playerid, COLOR_RED, " символы: от a до z , от A до Z , и цифры от 0 до 9 !");
    			format(string,sizeof(string),"Вы ввели неправильный пароль.\n Аккаунт: %s\n\nВведите свой пароль для продолжения!",RealName[playerid]);
   				ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Вход в аккаунт",string,"Вход","Отмена");
				SetPVarInt(playerid, "DlgCont", 3);
				return 1;
			}
		    if (gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, " Этот ник уже залогинился !");
				return 1;
			}
			new tmppass[64];
			strmid(tmppass, inputtext, 0, strlen(inputtext), 255);
			OnPlayerLogin(playerid,tmppass);
		}
		return 1;
	}
    if(dialogid == 4)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Транспортное средство", "Тип транспорта\nТюнинг\nОтключить / включить автоматический ремонт\nТюнинг в любом / своём транспорте   / неон и номер только в любом!!! /\nУничтожить свой транспорт\nУничтожить любой транспорт\nФлипнуть", "Выбор", "Отмена");
				SetPVarInt(playerid, "DlgCont", 10);
				return 1;
			}
			if(listitem == 1)
			{
				if(DerbyID[playerid] == 2)
				{
					SendClientMessage(playerid, COLOR_RED, "* В зоне дерби предметы запрещены !");
					gettime(timecor[0], timecor[1]);
					TimCor();//коррекция времени
					format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);
#if (MOD44INS == 0)
					ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nПравила сервера\nПравила для админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
#if (MOD44INS == 1)
					ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
					SetPVarInt(playerid, "DlgCont", 4);
					return 1;
				}
				ShowPlayerDialog(playerid, 45, DIALOG_STYLE_LIST, "Предметы", "Фотоаппарат   / слот 9 /\nБукет цветов   / слот 10 /\
				\nПарашют   / слот 11 /\nУбрать предметы", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 45);
				return 1;
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Телепорты - 1   / места /", "Ухо\nГрув\nПляж LS\nХолм LS\nНебоскрёб LS\
				\nВзлётка аэропорта LS\nГора Чиллиад\nХолм сельской местности\nЗапад сельской местности\nВосток сельской местности\
				\nКлуб Джиззи\nЦентр SF\nХолм SF\nВзлётка аэропорта SF\nЗаброшеный аэропорт\nЗона 51\nКазино Калигула\nКарьер\
				\nВзлётка аэропорта LV\n4-й город\nОстров 1\nОстров 2\nОстров 3\nОстров 4", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 11);
				return 1;
			}
			if(listitem == 3)
			{
				format(strdln, sizeof(strdln), "Дрифт аэропорта LS\nДрифт аэропорта LV\nДрифт 1\nДрифт 2\nДрифт 3\nДрифт 4\nДрифт 5\
				\nДрифт 6\nДрифт 7\nДрифт 8\nДрифт 9\nДрифт бонус LS\nДраг LS\nДраг\nБайкер-скейт парк LS\nТрасса 1\nТрасса 2\
				\nТрасса 3\nТрасса 4\nТрасса 5\nДрифт-трасса 1\nДрифт-трасса 2\nДрифт-трасса 3\nДрифт-трасса 4\nДрифт-трасса 5\
				\nДрифт-трасса 6\nДрифт-трасса 7\nДрифт-трасса 8\nДрифт-трасса 9\nДрифт-трасса 10");
#if (MOD11INS <= 3)
				format(strdln, sizeof(strdln), "%s\nДрифт-трасса 11\nДрифт-трасса 12\nДрифт-трасса 13\nДрифт-трасса 14\nДерби 1\
				\nДерби 2\nДрифт-спираль\nДрифт-восьмёрка\nМото-паркур 1\nМото-паркур 2\nМото-паркур 3\nМото-паркур 4", strdln);
#endif
#if (MOD11INS == 4)
				format(strdln, sizeof(strdln), "%s\nДрифт-трасса 11\nДрифт-трасса 12\nДрифт-трасса 13\nДрифт-трасса 14\nДерби 1\
				\nДерби 2\nДрифт-спираль\nДрифт-восьмёрка\nМото-паркур 1\nМото-паркур 2\nМото-паркур 3\nМото-паркур 4\
				\nСтант-остров", strdln);
#endif
				ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Телепорты - 2   / дрифт, драг, трассы, дерби /", strdln,
				"OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 13);
				return 1;
			}
			if(listitem == 4)
			{
				ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Действия", "Пополнить жизнь и броню\nАнимации\nСменить цвет ника\
				\nСменить скин\nСменить время\nСменить пароль\nСменить стиль боя\nСамоубийство\nПросмотреть собственную статистику", "Выбор", "Отмена");
				SetPVarInt(playerid, "DlgCont", 12);
				return 1;
			}
#if (MOD44INS == 0)
			if(listitem == 5)
			{
			    format(strdln, sizeof(strdln), "[ЗАПРЕЩЕНО]:\n	Программы и скрипты, изменяющие процесс игры.\n	Использование логинов ADM, Admin... .\n	Выдавание себя за администрацию.\n	Флуд, спам, мат.\n	Использование чёрного или слишком тёмного цвета в клане.\n	Мешать проведению гонок.\n	Намеренно таранить участников гонки.\n\n	Мера наказания зависит от настроения администрации.\n	Спасибо за прочтение.");
				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_MSGBOX, "Правила сервера",strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(listitem == 6)
			{
			    format(strdln, sizeof(strdln), "[BAN]:\n	Программы и скрипты, изменяющие процесс игры.\n[KICK]:\n	Промеха проведению гонок.\n	Намеренный таран участников гонки.\n[MUTE]:\n	Флуд, спам, мат.\n\nМир ГТА суров и жесток, однако, НЕ допускает маты и прочую ругань.\n	Спасибо за прочтение!");
				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_MSGBOX, "Правила для админов",strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
#endif
#if (MOD44INS == 1)
			if(listitem == 5)
			{
				ShowPlayerDialog(playerid, 100, DIALOG_STYLE_LIST, "Кодекс игроков", "Запреты (п1.1 - п1.28)\nПрава (п2.1 - п2.11)", "Выбор", "Отмена");
				SetPVarInt(playerid, "DlgCont", 100);
				return 1;
			}
			if(listitem == 6)
			{
				ShowPlayerDialog(playerid, 101, DIALOG_STYLE_LIST, "Кодекс админов", "Запреты (п3.1 - п3.32)\nПрава (п4.1 - п4.21)\nОбязанности (п5.1 - п5.5)", "Выбор", "Отмена");
				SetPVarInt(playerid, "DlgCont", 101);
				return 1;
			}
#endif
			if(listitem == 7)//On-Line админы
			{
				AdminsLvl(playerid);
				return 1;
			}
			if(listitem == 8)
			{
			    format(strdln, sizeof(strdln), "   Сервер разрабатывался кланом [Gn_R]\n   однако, в последствии был кардинально\n   изменён и дополнен сторонними лицами.\n\n   Оригинальная версия мода v 0.1 от [Gn_R]\n   была переименована в v 3.5\n\n   Спасибо за прочтение.");
				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_MSGBOX, "О сервере",strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}

			if(listitem == 9)//Clans system
			{
				ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
				\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
				\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1001);
			}

		}
		return 1;
	}
    if(dialogid == 5)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(listitem == 0)//тп к нему
			{
				if(playerid == player[playerid])
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","Попытка ТП к самому себе !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[playerid][pPrisonsec] > 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы сидите в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(perfrost[playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заморожены !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заблокированы !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заняты наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[playerid][pAdmin] >= 1 && admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"{FF0000}Информация.","{FF0000}Игрок, к кому Вы сейчас ТП - занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    new dopper1, dopper2, dopper3, dopper4;
				dopper1 = 0;
				dopper2 = 0;
				dopper3 = 0;
				dopper4 = 0;
			    new Float:ConX, Float:ConY, Float:ConZ;
   				GetPlayerPos(playerid, ConX, ConY, ConZ);

				if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper1 = 1; }

				if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
				(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
				(GetPlayerInterior(playerid) == 15 || GetPlayerInterior(playerid) == 14)) { dopper3 = 1; }

   				GetPlayerPos(player[playerid], ConX, ConY, ConZ);

				if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper2 = 1; }

				if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
				(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
				(GetPlayerInterior(player[playerid]) == 15 || GetPlayerInterior(player[playerid]) == 14)) { dopper4 = 1; }

				if(dopper1 == 0 && dopper2 == 1)//если игрок телепортируется c основной карты на админ-остров, то:
				{
			    	if(PlayerInfo[playerid][pAdmin] == 0 && GetPVarInt(playerid, "TotPr") == 0)
					{
						ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок в зоне недосягаемости !","OK","");
						SetPVarInt(playerid, "DlgCont", 2);
						return 1;
					}
			    	new Float:PosX, Float:PosY, Float:PosZ;
					PlayCRTP[playerid] = 1;//блокировка контроля координат
					new nmod = GetVehicleModel(GetPlayerVehicleID(playerid));
					if(nmod == 538 || nmod == 537)
					{//если игрок в поезде, то высадить игрока из поезда
						GetPlayerPos(playerid,PosX,PosY,PosZ);
						SetPlayerPos(playerid,PosX+3,PosY+3,PosZ+5);
					}
					tpdrift[playerid] = 1;
			    	if(PlayerInfo[playerid][pAdmin] >= 1)
					{
						format(string,256," *** Админ %s телепортировался к игроку %s",RealName[playerid],RealName[player[playerid]]);
						print(string);
					}
			    	if(PlayerInfo[playerid][pAdmin] == 0 && GetPVarInt(playerid, "TotPr") == 1)
					{
						format(string,256," VIP-2 %s телепортировался к игроку %s",RealName[playerid],RealName[player[playerid]]);
						print(string);
					}
					SetPlayerInterior(playerid, GetPlayerInterior(player[playerid]));
					SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(player[playerid]));
					GetPlayerPos(player[playerid], PosX, PosY, PosZ);
					SetPlayerPos(playerid, PosX, PosY+1, PosZ+1);
				}
				else//если игрок телепортируется в любом направлении, ТОЛЬКО НЕ c основной карты на админ-остров, то:
				{
			    	if(PlayerInfo[playerid][pAdmin] >= 1)
					{
						format(string,256," *** Админ %s телепортировался к игроку %s",RealName[playerid],RealName[player[playerid]]);
						print(string);
					}
					else
					{
						format(string,256," VIP-2 %s телепортировался к игроку %s",RealName[playerid],RealName[player[playerid]]);
						print(string);
					}
					new Float:PosX, Float:PosY, Float:PosZ;
					PlayCRTP[playerid] = 1;//блокировка контроля координат
					new nmod = GetVehicleModel(GetPlayerVehicleID(playerid));
					if(nmod == 538 || nmod == 537)
					{//если игрок в поезде, то высадить игрока из поезда
						GetPlayerPos(playerid,PosX,PosY,PosZ);
						SetPlayerPos(playerid,PosX+3,PosY+3,PosZ+5);
					}
					if(dopper3 == 0 && dopper4 == 1)//если игрок телепортируется НЕ С дерби НА дерби, то:
					{
						tpdrift[playerid] = 1;
						SetPlayerInterior(playerid, GetPlayerInterior(player[playerid]));
						SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(player[playerid]));
						GetPlayerPos(player[playerid], PosX, PosY, PosZ);
						SetPlayerPos(playerid, PosX, PosY+1, PosZ+1);
					}
					else//если игрок телепортируется в любом направлении, ЗА ИСКЛЮЧЕНИЕМ "НЕ С дерби НА дерби", то:
					{
						if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
						{
							new regm = 1, per1, per2, Float:per3, Float:cor1, Float:cor2, Float:cor3;
	 						per1 = GetPlayerInterior(player[playerid]);
							per2 = GetPlayerVirtualWorld(player[playerid]);
	   						GetPlayerPos(player[playerid], PosX, PosY, PosZ);
							cor1 = PosX;
							cor2 = PosY+1;
							cor3 = PosZ+1;
							StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
						}
						else//иначе:
						{
							tpdrift[playerid] = 1;
	 						SetPlayerInterior(playerid, GetPlayerInterior(player[playerid]));
							SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(player[playerid]));
	   						GetPlayerPos(player[playerid], PosX, PosY, PosZ);
							SetPlayerPos(playerid, PosX, PosY+1, PosZ+1);
						}
					}
				}
				return 1;
			}
			if(listitem == 1)//тп его к себе
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playerid == player[playerid])
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","Попытка ТП игрока к самому себе !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[player[playerid]][pPrisonsec] > 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок сидит в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600 && perfrost[player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !\n(+ был заморожен НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !\n(+ был заблокирован НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заняты наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    new dopper1, dopper2, dopper3, dopper4;
				dopper1 = 0;
				dopper2 = 0;
				dopper3 = 0;
				dopper4 = 0;
			    new Float:ConX, Float:ConY, Float:ConZ;
   				GetPlayerPos(playerid, ConX, ConY, ConZ);

				if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper1 = 1; }

				if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
				(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
				(GetPlayerInterior(playerid) == 15 || GetPlayerInterior(playerid) == 14)) { dopper3 = 1; }

   				GetPlayerPos(player[playerid], ConX, ConY, ConZ);

				if(-15500 >= ConX >= -20000 && 15500 <= ConY <= 20000) { dopper2 = 1; }

				if(((-1602 < ConX < -1193 && 840 < ConY < 1158 && 973 < ConZ < 1101) ||
				(-1547 < ConX < -1247 && 1506 < ConY < 1705 && 1002 < ConZ < 1123)) &&
				(GetPlayerInterior(player[playerid]) == 15 || GetPlayerInterior(player[playerid]) == 14)) { dopper4 = 1; }

				if(dopper1 == 1 && dopper2 == 0)//если игрока телепортируем c основной карты на админ-остров, то:
				{
			    	if(PlayerInfo[player[playerid]][pAdmin] == 0 && GetPVarInt(player[playerid], "TotPr") == 0)
					{
						ShowPlayerDialog(playerid,2,0,"Ошибка.","У выбранного игрока нет защитного тотема !","OK","");
						SetPVarInt(playerid, "DlgCont", 2);
						return 1;
					}
					format(string,256," *** Админ %s телепортировал игрока %s к себе.",RealName[playerid],RealName[player[playerid]]);
					print(string);
					SendAdminMessage(COLOR_RED,string);
					if(PlayerInfo[player[playerid]][pAdmin] == 0)
					{
						format(string,256," *** Админ %s телепортировал Вас к себе.",RealName[playerid]);
						SendClientMessage(player[playerid],COLOR_RED,string);
					}
					new Float:PosX, Float:PosY, Float:PosZ;
					PlayCRTP[player[playerid]] = 1;//блокировка контроля координат
					new nmod = GetVehicleModel(GetPlayerVehicleID(player[playerid]));
					if(nmod == 538 || nmod == 537)
					{//если игрок в поезде, то высадить игрока из поезда
						GetPlayerPos(player[playerid],PosX,PosY,PosZ);
						SetPlayerPos(player[playerid],PosX+3,PosY+3,PosZ+5);
					}
					tpdrift[player[playerid]] = 1;
					if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] == playerid)
					{//если игрок заблокирован, то ТП заблокированного игрока
						PlayLock1[1][player[playerid]] = GetPlayerInterior(playerid);//изменение интерьера блокировки
						PlayLock1[2][player[playerid]] = GetPlayerVirtualWorld(playerid);//изменение виртуального мира блокировки
						GetPlayerPos(playerid, PlayLock2[0][player[playerid]], PlayLock2[1][player[playerid]], PlayLock2[2][player[playerid]]);//изменение координат блокировки
						PlayLock2[1][player[playerid]] = PlayLock2[1][player[playerid]] + 1;
					}
					else//иначе - ТП НЕ заблокированного игрока
					{
						SetPlayerInterior(player[playerid], GetPlayerInterior(playerid));
						SetPlayerVirtualWorld(player[playerid], GetPlayerVirtualWorld(playerid));
						GetPlayerPos(playerid, PosX, PosY, PosZ);
						SetPlayerPos(player[playerid], PosX, PosY+1, PosZ+1);
					}
				}
				else//если игрока телепортируем в любом направлении, ТОЛЬКО НЕ c основной карты на админ-остров, то:
				{
					format(string,256," *** Админ %s телепортировал игрока %s к себе.",RealName[playerid],RealName[player[playerid]]);
					print(string);
					SendAdminMessage(COLOR_RED,string);
					if(PlayerInfo[player[playerid]][pAdmin] == 0)
					{
						format(string,256," *** Админ %s телепортировал Вас к себе.",RealName[playerid]);
						SendClientMessage(player[playerid],COLOR_RED,string);
					}
					new Float:PosX, Float:PosY, Float:PosZ;
					PlayCRTP[player[playerid]] = 1;//блокировка контроля координат
					new nmod = GetVehicleModel(GetPlayerVehicleID(player[playerid]));
					if(nmod == 538 || nmod == 537)
					{//если игрок в поезде, то высадить игрока из поезда
						GetPlayerPos(player[playerid],PosX,PosY,PosZ);
						SetPlayerPos(player[playerid],PosX+3,PosY+3,PosZ+5);
					}
					if(dopper3 == 1 && dopper4 == 0)//если игрока телепортируем НЕ С дерби НА дерби, то:
					{
						tpdrift[player[playerid]] = 1;
						if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] == playerid)
						{//если игрок заблокирован, то ТП заблокированного игрока
							PlayLock1[1][player[playerid]] = GetPlayerInterior(playerid);//изменение интерьера блокировки
							PlayLock1[2][player[playerid]] = GetPlayerVirtualWorld(playerid);//изменение виртуального мира блокировки
							GetPlayerPos(playerid, PlayLock2[0][player[playerid]], PlayLock2[1][player[playerid]], PlayLock2[2][player[playerid]]);//изменение координат блокировки
							PlayLock2[1][player[playerid]] = PlayLock2[1][player[playerid]] + 1;
						}
						else//иначе - ТП НЕ заблокированного игрока
						{
							SetPlayerInterior(player[playerid], GetPlayerInterior(playerid));
							SetPlayerVirtualWorld(player[playerid], GetPlayerVirtualWorld(playerid));
							GetPlayerPos(playerid, PosX, PosY, PosZ);
							SetPlayerPos(player[playerid], PosX, PosY+1, PosZ+1);
						}
					}
					else//если игрока телепортируем в любом направлении, ЗА ИСКЛЮЧЕНИЕМ "НЕ С дерби НА дерби", то:
					{
						if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] == playerid)
						{//если игрок заблокирован, то ТП заблокированного игрока
							tpdrift[player[playerid]] = 1;
							PlayLock1[1][player[playerid]] = GetPlayerInterior(playerid);//изменение интерьера блокировки
							PlayLock1[2][player[playerid]] = GetPlayerVirtualWorld(playerid);//изменение виртуального мира блокировки
							GetPlayerPos(playerid, PlayLock2[0][player[playerid]], PlayLock2[1][player[playerid]], PlayLock2[2][player[playerid]]);//изменение координат блокировки
							PlayLock2[1][player[playerid]] = PlayLock2[1][player[playerid]] + 1;
						}
						else//иначе - ТП НЕ заблокированного игрока
						{
							if(GetPlayerState(player[playerid]) == 2)//если игрок на месте водителя, то:
							{
								new regm = 1, per1, per2, Float:per3, Float:cor1, Float:cor2, Float:cor3;
	 							per1 = GetPlayerInterior(playerid);
								per2 = GetPlayerVirtualWorld(playerid);
	   							GetPlayerPos(playerid, PosX, PosY, PosZ);
								cor1 = PosX;
								cor2 = PosY+1;
								cor3 = PosZ+1;
								StopDrift(player[playerid],regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
							}
							else//иначе:
							{
								tpdrift[player[playerid]] = 1;
	 							SetPlayerInterior(player[playerid], GetPlayerInterior(playerid));
								SetPlayerVirtualWorld(player[playerid], GetPlayerVirtualWorld(playerid));
	   							GetPlayerPos(playerid, PosX, PosY, PosZ);
								SetPlayerPos(player[playerid], PosX, PosY+1, PosZ+1);
							}
						}
					}
				}
				return 1;
			}
			if(listitem == 2)//наблюдать
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[playerid][pPrisonsec] > 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы сидите в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(perfrost[playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заморожены !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заблокированы !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playerid == player[playerid])//если админ наблюдает за собой, то:
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Снимите наблюдение, и будете наблюдать за собой !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				else
				{
					format(string,256," *** Админ %s включил наблюдение за игроком %s",RealName[playerid],RealName[player[playerid]]);
					print(string);
					EnterTick33[playerid] = 1;//обход антикрашера - 3
					admper6[playerid] = 0;//обнуляем отметку о переключении наблюдения
					if(admper1[playerid] == 600)//если админ только включил наблюдение, то:
					{
						if (GetPlayerState(playerid) == 1)//если админ НЕ в транспорте, то:
//						if(!GetPlayerVehicleID(playerid))//если админ НЕ в транспорте, то:
						{
							admper4[playerid] = 0;//не будем изменять координаты при "обратном спавне"
						}
						else
						{
							admper4[playerid] = 3;//иначе, прибавим 3 к координатам X, Y, и 5 к Z при "обратном спавне"
						}
						TogglePlayerSpectating(playerid, 1);//разрешить наблюдение для админа
						admper1[playerid] = player[playerid];//установить статус включенного наблюдения
						admper2[playerid] = GetPlayerInterior(playerid);//запомнить интерьер админа
						admper3[playerid] = GetPlayerVirtualWorld(playerid);//запомнить мир админа
						GetPlayerPos(playerid, TelSpec[playerid][0],TelSpec[playerid][1],TelSpec[playerid][2]);//запомнить координаты админа
						mapiconid[playerid] = CreateDynamicMapIcon(TelSpec[playerid][0],TelSpec[playerid][1],TelSpec[playerid][2],
						0,ColorPlay[playerid],admper3[playerid],admper2[playerid],-1,60000);//создать и запомнить мап иконку на месте возврата админа
		 				SetPlayerInterior(playerid, GetPlayerInterior(player[playerid]));//установить интерьер админу
						SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(player[playerid]));//установить мир админу
						if(GetPlayerVehicleID(player[playerid]) != 0)//если игрок в транспорте, то:
						{
							new para44;
							para44 = GetPlayerVehicleID(player[playerid]);
							PlayerSpectateVehicle(playerid, para44, SPECTATE_MODE_NORMAL);

							PlayerTextDrawShow(playerid, VehicleSpeed[playerid]);//включаем текстдравы спидометра
							TextDrawShowForPlayer(playerid, KMH);
							TextDrawShowForPlayer(playerid, HMS22);//включаем текстдравы максимальной горизонтальной скорости
							PlayerTextDrawShow(playerid, HMS44[playerid]);

							format(string, sizeof(string), "%d", GetHMaxSpeed(para44));//показываем максимальную горизонтальную скорость
							PlayerTextDrawSetString(playerid, HMS44[playerid], string);

							admper5[playerid] = 1;//наблюдаем за транспортом
						}
						else
						{
							if(GetPlayerState(playerid) == 2)//если админ был в транспорте
							{//на месте водителя, то:
								PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);//отключаем текстдравы спидометра
								TextDrawHideForPlayer(playerid, KMH);
							}
							PlayerSpectatePlayer(playerid, player[playerid], SPECTATE_MODE_NORMAL);//включить наблюдение
							admper5[playerid] = 0;//наблюдаем за игроком
						}
					}
					else
					{
						admper1[playerid] = player[playerid];//поменять статус включенного наблюдения
		 				SetPlayerInterior(playerid, GetPlayerInterior(player[playerid]));//установить интерьер админу
						SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(player[playerid]));//установить мир админу
						if(GetPlayerVehicleID(player[playerid]) != 0)//если игрок в транспорте, то:
						{
							new para44;
							para44 = GetPlayerVehicleID(player[playerid]);
							PlayerSpectateVehicle(playerid, para44, SPECTATE_MODE_NORMAL);
							if(admper5[playerid] == 0)//если админ наблюдал за игроком, то:
							{
								PlayerTextDrawShow(playerid, VehicleSpeed[playerid]);//включаем текстдравы спидометра
								TextDrawShowForPlayer(playerid, KMH);
								TextDrawShowForPlayer(playerid, HMS22);//включаем текстдравы максимальной горизонтальной скорости
								PlayerTextDrawShow(playerid, HMS44[playerid]);
							}
							format(string, sizeof(string), "%d", GetHMaxSpeed(para44));//показываем максимальную горизонтальную скорость
							PlayerTextDrawSetString(playerid, HMS44[playerid], string);
							admper5[playerid] = 1;//наблюдаем за транспортом
						}
						else
						{
							if(admper5[playerid] == 1)//если админ наблюдал за транспортом, то:
							{
								PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);//отключаем текстдравы спидометра
								TextDrawHideForPlayer(playerid, KMH);
								TextDrawHideForPlayer(playerid, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
								PlayerTextDrawHide(playerid, HMS44[playerid]);
							}
							PlayerSpectatePlayer(playerid, player[playerid], SPECTATE_MODE_NORMAL);//включить наблюдение
							admper5[playerid] = 0;//наблюдаем за игроком
						}
					}
				}
				return 1;
			}
			if(listitem == 3)//снять наблюдение
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[playerid] == 600)//если админ ни за кем не наблюдает, то:
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Сейчас Вы ни за кем не наблюдаете !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[playerid] != 600)//если наблюдение было включено, то:
				{
					format(string,256," *** Админ %s снял наблюдение с игрока.",RealName[playerid]);
					print(string);
					if(admper5[playerid] == 1)//если админ наблюдал за транспортом, то:
					{
						PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);//отключаем текстдравы спидометра
						TextDrawHideForPlayer(playerid, KMH);
						TextDrawHideForPlayer(playerid, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
						PlayerTextDrawHide(playerid, HMS44[playerid]);
					}
					TogglePlayerSpectating(playerid, 0);//запретить наблюдение для админа
					admper6[playerid] = 0;//обнуляем отметку о переключении наблюдения
				}
				return 1;
			}
			if(listitem == 4)//пополнить жизнь и броню
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600 && perfrost[player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !\n(+ был заморожен НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !\n(+ был заблокирован НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256," *** Админ %s пополнил игроку %s жизнь и броню.",RealName[playerid],RealName[player[playerid]]);
				print(string);
				SendClientMessageToAll(COLOR_YELLOW, string);
   				SetPlayerHealth(player[playerid],100);
   				SetPlayerArmour(player[playerid],100);
				return 1;
			}
			if(listitem == 5)//бан постоянный
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(playerid == player[playerid])
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Защита от бана самого себя !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] <= 3 && PlayerInfo[player[playerid]][pAdmin] >= 1)
				{
					format(string,256," *** Админ %s попытался на постоянно забанить админа %s",RealName[playerid],RealName[player[playerid]]);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Забанить админа может только админ 4-го уровня !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 1)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранного игрока уже забанили\nили кикнули по таймеру !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите причину бана игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,6,DIALOG_STYLE_INPUT,"Причина бана игрока",string,"Бан","Отмена");
				SetPVarInt(playerid, "DlgCont", 6);
				return 1;
			}
			if(listitem == 6)//бан временный
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(playerid == player[playerid])
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Защита от бана самого себя !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] <= 3 && PlayerInfo[player[playerid]][pAdmin] >= 1)
				{
					format(string,256," *** Админ %s попытался на время забанить админа %s",RealName[playerid],RealName[player[playerid]]);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Забанить админа может только админ 4-го уровня !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 1)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранного игрока уже забанили\nили кикнули по таймеру !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите число суток (от 1 до 25) и через пробел причину бана игрока:\
				\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,55,DIALOG_STYLE_INPUT,"Число суток и причина бана игрока",string,"Бан","Отмена");
				SetPVarInt(playerid, "DlgCont", 55);
				return 1;
			}
			if(listitem == 7)//кик
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(playerid == player[playerid])
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Защита от кика самого себя !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] <= 3 && PlayerInfo[player[playerid]][pAdmin] >= 1)
				{
					format(string,256," *** Админ %s попытался кикнуть админа %s",RealName[playerid],RealName[player[playerid]]);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Кикнуть админа может только админ 4-го уровня !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 1)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранного игрока уже забанили\nили кикнули по таймеру !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите причину кика игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,7,DIALOG_STYLE_INPUT,"Причина кика игрока",string,"Кик","Отмена");
				SetPVarInt(playerid, "DlgCont", 7);
				return 1;
			}
			if(listitem == 8)//депортировать
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(playerid == player[playerid])
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Защита от депортации самого себя !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(gPlayerLogged[player[playerid]] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок ещё не залогинился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[player[playerid]][pVIP] == 3)
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок уже имеет статус депортации !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] <= 3 && PlayerInfo[player[playerid]][pAdmin] >= 1)
				{
					format(string,256," *** Админ %s попытался депортировать админа %s",RealName[playerid],RealName[player[playerid]]);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Депортировать админа может только админ 4-го уровня !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				ResetPlayerWeapons(player[playerid]);//отбираем оружие и предметы
				if(GetPlayerVehicleID(player[playerid]) != 0)//если игрок в транспорте, то:
				{
					new Float:igx, Float:igy, Float:igz;//высадить игрока
					GetPlayerPos(player[playerid], igx, igy, igz);
					SetPlayerPos(player[playerid], igx+3, igy+3, igz+5);
				}
				if(playcar[player[playerid]] != 0)//если у игрока есть свой транспорт, то:
				{
			    	for(new i=0;i<MAX_PLAYERS;i++)//поиск и удаление чужого неона И обход антикрашера - 3
					{
						if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
						{
							if(GetPlayerVehicleID(i) == playcar[player[playerid]])
							{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
								EnterTick33[i] = 1;//обход антикрашера - 3
							}
						}
			 			if(playcar[player[playerid]] == neon[i][2])
			 			{
							DestroyObject(neon[i][0]);//убрать неон
							DestroyObject(neon[i][1]);//убрать неон
							neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][2] = 0;//несуществующий ид транспорта с неоном
			 			}
					}
					if(neon[player[playerid]][0] != 0) { DestroyObject(neon[player[playerid]][0]); }//убрать неон
					if(neon[player[playerid]][1] != 0) { DestroyObject(neon[player[playerid]][1]); }//убрать неон
					neon[player[playerid]][0] = 0;//присваиваем неону несуществующий номер объекта
					neon[player[playerid]][1] = 0;//присваиваем неону несуществующий номер объекта
					neon[player[playerid]][2] = 0;//несуществующий ид транспорта с неоном
					DestroyVehicle(playcar[player[playerid]]);//уничтожить свой транспорт
					playcar[player[playerid]] = 0;//несуществующий ид транспорта
				}
 				SetTimerEx("PlayDeport", 300, 0, "ii", playerid, player[playerid]);
				return 1;
			}
			if(listitem == 9)//отменить депортацию
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[player[playerid]][pVIP] != 3)
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок не имеет статуса депортации !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				else
				{
					PlayerInfo[player[playerid]][pVIP] = 0;
					printf(" *** Админ %s отменил депортацию игрока %s .", RealName[playerid], RealName[player[playerid]]);
					format(string, sizeof(string), " *** Апелляционная жалоба игрока %s была удовлетворена.", RealName[player[playerid]]);
					SendClientMessageToAll(COLOR_GREEN, string);
					format(string, sizeof(string), " *** Админ %s отклонил депортацию игрока %s .", RealName[playerid], RealName[player[playerid]]);
					SendClientMessageToAll(COLOR_GREEN, string);
				}
				return 1;
			}
			if(listitem == 10)//заблокировать
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок УЖЕ заблокирован !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string, 256, " *** Админ %s заблокировал игрока %s по причине проверки !", RealName[playerid], RealName[player[playerid]]);
				print(string);
		    	SendClientMessageToAll(COLOR_RED, string);
 				PlayLock1[1][player[playerid]] = GetPlayerInterior(player[playerid]);//сохранение интерьера блокировки
				PlayLock1[2][player[playerid]] = GetPlayerVirtualWorld(player[playerid]);//сохранение виртуального мира блокировки
				GetPlayerPos(player[playerid], PlayLock2[0][player[playerid]], PlayLock2[1][player[playerid]], PlayLock2[2][player[playerid]]);//сохранение координат блокировки
				GetPlayerFacingAngle(player[playerid], PlayLock2[3][player[playerid]]);//сохранение угла блокировки
    			PlayLock1[0][player[playerid]] = playerid;//включение блокировки
				return 1;
			}
			if(listitem == 11)//разблокировать
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] == 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок НЕ заблокирован !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string, 256, " *** Админ %s разблокировал игрока %s", RealName[playerid], RealName[player[playerid]]);
				print(string);
		    	SendClientMessageToAll(COLOR_GREEN, string);
    			PlayLock1[0][player[playerid]] = 600;//отключение блокировки
				return 1;
			}
			if(listitem == 12)//заморозить
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок УЖЕ заморожен !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите причину заморозки игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,"Причина заморозки игрока",string,"Заморозить","Отмена");
				SetPVarInt(playerid, "DlgCont", 47);
				return 1;
			}
			if(listitem == 13)//разморозить
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] == 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок НЕ заморожен !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string, 256, " *** Админ %s разморозил игрока %s", RealName[playerid], RealName[player[playerid]]);
				print(string);
		    	SendClientMessageToAll(COLOR_GREEN, string);
    			perfrost[player[playerid]] = 600;//отключение заморозки
				SetPVarInt(player[playerid], "PlFrost", 0);//глобальная переменная заморозки игрока
				TogglePlayerControllable(player[playerid],1);
				return 1;
			}
			if(listitem == 14)//убить
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600 && perfrost[player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !\n(+ был заморожен НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !\n(+ был заблокирован НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите причину убийства игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,48,DIALOG_STYLE_INPUT,"Причина убийства игрока",string,"Убить","Отмена");
				SetPVarInt(playerid, "DlgCont", 48);
				return 1;
			}
			if(listitem == 15)//заткнуть
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите число секунд и через пробел причину затыка игрока:\
				\n(чтобы разоткнуть, введите 3 секунды)\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,8,DIALOG_STYLE_INPUT,"Секунды и причина затыка игрока",string,"Заткнуть","Отмена");
				SetPVarInt(playerid, "DlgCont", 8);
				return 1;
			}
			if(listitem == 16)//посадить в тюрьму
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600 && perfrost[player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !\n(+ был заморожен НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !\n(+ был заблокирован НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите число секунд и через пробел причину посадки игрока в тюрьму:\
				\n(чтобы освободить, введите 3 секунды)\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"Секунды и причина посадки игрока в тюрьму",string,"Посадить","Отмена");
				SetPVarInt(playerid, "DlgCont", 46);
				return 1;
			}
			if(listitem == 17)//тп себя в тюрьму
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[playerid][pPrisonsec] > 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы сидите в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(perfrost[playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заморожены !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заблокированы !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256," *** Админ %s телепортировался в тюрьму.",RealName[playerid]);
				print(string);
				tpdrift[playerid] = 1;
	 			SetPlayerInterior(playerid, 3);//интерьер тюрьмы
				SetPlayerVirtualWorld(playerid, 0);//виртуальный мир 0
				SetPlayerPos(playerid, 193.31, 173.87, 1003.02);//координаты тюрьмы
				SetPlayerFacingAngle(playerid, 0.44);//угол спавна в тюрьме
 				SetCameraBehindPlayer(playerid);//камера за спиной
				return 1;
			}
			if(listitem == 18)//тп себя в полицейский участок
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[playerid][pPrisonsec] > 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы сидите в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
   				if(perfrost[playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заморожены !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][playerid] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, Вы заблокированы !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256," *** Админ %s телепортировался в полицейский участок.",RealName[playerid]);
				print(string);
				tpdrift[playerid] = 1;
				SetPlayerInterior(playerid, 3);//интерьер полицейского участка
				SetPlayerVirtualWorld(playerid, 0);//виртуальный мир 0
				SetPlayerPos(playerid, 202.65, 179.72, 1003.03);//координаты полицейского участка
				SetPlayerFacingAngle(playerid, 96.66);//угол спавна в полицейском участке
 				SetCameraBehindPlayer(playerid);//камера за спиной
				return 1;
			}
			if(listitem == 19)//просмотреть статистику
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256," *** Админ %s просмотрел статистику игрока %s",RealName[playerid],RealName[player[playerid]]);
				print(string);
				ShowStats(playerid,player[playerid]);
				return 1;
			}
			if(listitem == 20)//сменить скин
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600 && perfrost[player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !\n(+ был заморожен НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !\n(+ был заблокирован НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				format(string,256,"Введите ид скина, на который Вы хотите сменить:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,9,DIALOG_STYLE_INPUT,"ID скина игрока",string,"Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 9);
				return 1;
			}
			if(listitem == 21)//узнать IP
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				new ip[126];
				GetPlayerIp(player[playerid], ip, sizeof(ip));
				format(string,256," *** Админ %s просмотрел IP игрока %s [%d]: %s",RealName[playerid],RealName[player[playerid]],player[playerid],ip);
				print(string);
				format(string,256," *** Игрок %s [%d] - IP: %s",RealName[player[playerid]],player[playerid],ip);
				SendClientMessage(playerid,COLOR_WHITE,string);
				return 1;
			}
            if(listitem == 22)//слапнуть
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayerInfo[player[playerid]][pPrisonsec] > 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок сидит в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(perfrost[player[playerid]] != 600 && perfrost[player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заморожен !\n(+ был заморожен НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] != playerid)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок заблокирован !\n(+ был заблокирован НЕ Вами !)","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(admper1[player[playerid]] != 600)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок занят наблюдением !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(playspa[player[playerid]] == 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Нельзя, выбранный игрок ещё не заспавнился !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				new Float:x, Float:y, Float:z, Float:hp;
				tpdrift[player[playerid]] = 1;
				EnterTick33[player[playerid]] = 1;//обход антикрашера - 3
				GetPlayerHealth(player[playerid],hp);
				SetPlayerHealth(player[playerid],hp-5);
				GetPlayerPos(player[playerid],x,y,z);
				if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] == playerid)
				{//если игрок заблокирован, то слапнуть заблокированного игрока
					x = x + 3;
					y = y + 3;
					z = z + 5;
					PlayLock2[0][player[playerid]] = x;//изменение координат блокировки
					PlayLock2[1][player[playerid]] = y;
					PlayLock2[2][player[playerid]] = z;
				}
				else//иначе - ТП НЕ заблокированного игрока
				{
					SetPlayerPos(player[playerid],x+3,y+3,z+5);
				}
				format(string,256," *** Админ %s слапнул игрока %s [%d]",RealName[playerid],RealName[player[playerid]],player[playerid]);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				return 1;
			}
			if(listitem == 23)//подключить к дрифт-соревнованию
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(compdrift[player[playerid]] >= 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок уже подключен к дрифт-соревнованию.","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				else
				{
					compdrift[player[playerid]] = 0;
					format(string,256," *** Админ %s подключил игрока %s [%d] к дрифт-соревнованию.",RealName[playerid],RealName[player[playerid]],player[playerid]);
					print(string);
					SendAdminMessage(COLOR_GREEN, string);
   					if(PlayerInfo[player[playerid]][pAdmin] == 0)
					{
						format(string, 256, " *** Админ %s подключил Вас к дрифт-соревнованию.", RealName[playerid]);
						SendClientMessage(player[playerid], COLOR_GREEN, string);
					}
				}
				return 1;
			}
			if(listitem == 24)//отключить от дрифт-соревнования
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(compdrift[player[playerid]] < 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок уже отключен от дрифт-соревнования.","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				else
				{
					compdrift[player[playerid]] = -1000000;
					format(string,256," *** Админ %s отключил игрока %s [%d] от дрифт-соревнования.",RealName[playerid],RealName[player[playerid]],player[playerid]);
					print(string);
					SendAdminMessage(COLOR_RED, string);
   					if(PlayerInfo[player[playerid]][pAdmin] == 0)
					{
						format(string, 256, " *** Админ %s отключил Вас от дрифт-соревнования.", RealName[playerid]);
						SendClientMessage(player[playerid], COLOR_RED, string);
					}
				}
				return 1;
			}
			if(listitem == 25)//обнулить очки дрифт-соревнования
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(PlayerInfo[playerid][pAdmin] == 1 && PlayerInfo[player[playerid]][pAdmin] > 1)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","Вы не можете этого сделать,\nт.к. уровень админки игрока выше Вашего !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(compdrift[player[playerid]] < 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Нельзя !!!, выбранный игрок отключен от дрифт-соревнования.","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(compdrift[player[playerid]] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","У выбранного игрока очки уже обнулены.","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				else
				{
					compdrift[player[playerid]] = 0;
					format(string,256," *** Админ %s обнулил игроку %s [%d] очки дрифт-соревнования.",RealName[playerid],RealName[player[playerid]],player[playerid]);
					print(string);
					SendAdminMessage(COLOR_YELLOW, string);
   					if(PlayerInfo[player[playerid]][pAdmin] == 0)
					{
						format(string, 256, " *** Админ %s обнулил Вам очки дрифт-соревнования.", RealName[playerid]);
						SendClientMessage(player[playerid], COLOR_YELLOW, string);
					}
				}
				return 1;
			}
			if(listitem == 26)//статус дрифт-соревнования
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
			  		ShowPlayerDialog(playerid,2,0,"Ошибка.","У Вас нет прав на использование этой команды !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
				if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}
			    if(compdrift[player[playerid]] < 0)
				{
					format(string,256,"Игрок: %s [%d]\nНЕ подключен к дрифт-соревнованию.",RealName[player[playerid]],player[playerid]);
			  		ShowPlayerDialog(playerid,2,0,"Информация.",string,"OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					format(string,256," *** Админ %s просмотрел статус дрифт-соревнования игрока %s [%d]: отключен.",RealName[playerid],RealName[player[playerid]],player[playerid]);
					print(string);
				}
			    else
				{
					format(string,256,"Игрок: %s [%d]\nподключен к дрифт-соревнованию.",RealName[player[playerid]],player[playerid]);
			  		ShowPlayerDialog(playerid,2,0,"Информация.",string,"OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					format(string,256," *** Админ %s просмотрел статус дрифт-соревнования игрока %s [%d]: подключен.",RealName[playerid],RealName[player[playerid]],player[playerid]);
					print(string);
				}
			}
		}
		return 1;
	}
    if(dialogid == 6)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите причину бана игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,6,DIALOG_STYLE_INPUT,"Причина бана игрока",string,"Бан","Отмена");
				SetPVarInt(playerid, "DlgCont", 6);
				return 1;
			}
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] <= 3 && PlayerInfo[player[playerid]][pAdmin] >= 1)
			{
				format(string,256," *** Админ %s попытался на постоянно забанить админа %s",RealName[playerid],RealName[player[playerid]]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				ShowPlayerDialog(playerid,2,0,"Информация.","Забанить админа может только админ 4-го уровня !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
   			if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 1)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранного игрока уже забанили\nили кикнули по таймеру !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
   			if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 0)
			{
				NameClick[player[playerid]] = 1;
				strdel(NameAdmin[player[playerid]], 0, MAX_PLAYER_NAME);
				strcat(NameAdmin[player[playerid]], RealName[playerid]);
				strdel(NameTarget[player[playerid]], 0, MAX_PLAYER_NAME);
				strcat(NameTarget[player[playerid]], playtarget[playerid]);
				strdel(ReasonTarget[player[playerid]], 0, 256);
				strcat(ReasonTarget[player[playerid]], inputtext);
 				SendClientMessage(playerid, COLOR_YELLOW, " Выбранный игрок ещё не залогинился !");
 				SendClientMessage(playerid, COLOR_YELLOW, " Поэтому , будет забанен через 20 секунд.");
				SetTimerEx("PlayBanTimer", 20000, 0, "ii", PlayerInfo[playerid][pAdmin], player[playerid]);
				return 1;
			}
			new ip[126];
			GetPlayerIp(player[playerid], ip, sizeof(ip));
			format(string, 256, " *** Админ %s забанил игрока %s , причина: %s", RealName[playerid], RealName[player[playerid]], inputtext);
			print(string);
			SendClientMessageToAll(COLOR_RED, string);
			format(string, 256 ," *** IP игрока %s : [%s]", RealName[player[playerid]], ip);
			print(string);
			SendAdminMessage(COLOR_RED, string);
			PlayerInfo[player[playerid]][pLock] = 1;
    		if(!strlen(inputtext))//делаем отметку, если причина не указана
			{
				format(inputtext, 256, "* Причина не указана.");
			}
			format(string, 256, " --- Админ: [ %s ]", RealName[playerid]);//формируем метку админа
			strdel(fbanreason[player[playerid]], 0, 256);//очистка причины бана
			strcat(fbanreason[player[playerid]], inputtext);//добавляем в символьную переменную причину
			strcat(fbanreason[player[playerid]], string);//добавляем в символьную переменную метку админа
			PlayBanList(player[playerid], fbanreason[player[playerid]], 0);
			SetTimerEx("PlayBan", 300, 0, "i", player[playerid]);
//			Ban(player[playerid]);
		}
		return 1;
	}
    if(dialogid == 55)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите число суток (от 1 до 25) и через пробел причину бана игрока:\
				\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
	    		ShowPlayerDialog(playerid,55,DIALOG_STYLE_INPUT,"Число суток и причина бана игрока",string,"Бан","Отмена");
				SetPVarInt(playerid, "DlgCont", 55);
				return 1;
			}
			new cause[256], i = 0, j = 0, m = 0;//выделение текста из строки
			while (inputtext[i] != 32)
			{
				if(inputtext[i] == 0 || i == 10)
				{
					m = 1;
					break;
				}
				i++;
			}
			if(m == 1)
			{
				cause[0] = 0;
			}
			else
			{
				i++;
				while (i < 256)
				{
					cause[j] = inputtext[i];
					if(inputtext[i] == 0) break;
					i++;
					j++;
				}
			}
			new csut;
			csut = strval(inputtext);
			if(csut < 1) {csut = 1;}
			if(csut > 25) {csut = 25;}
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] <= 3 && PlayerInfo[player[playerid]][pAdmin] >= 1)
			{
				format(string,256," *** Админ %s попытался на время забанить админа %s",RealName[playerid],RealName[player[playerid]]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				ShowPlayerDialog(playerid,2,0,"Информация.","Забанить админа может только админ 4-го уровня !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
   			if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 1)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранного игрока уже забанили\nили кикнули по таймеру !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
   			if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 0)
			{
				NameClick[player[playerid]] = 1;
				strdel(NameAdmin[player[playerid]], 0, MAX_PLAYER_NAME);
				strcat(NameAdmin[player[playerid]], RealName[playerid]);
				strdel(NameTarget[player[playerid]], 0, MAX_PLAYER_NAME);
				strcat(NameTarget[player[playerid]], playtarget[playerid]);
				strdel(ReasonTarget[player[playerid]], 0, 256);
				strcat(ReasonTarget[player[playerid]], cause);
 				SendClientMessage(playerid, COLOR_YELLOW, " Выбранный игрок ещё не залогинился !");
 				SendClientMessage(playerid, COLOR_YELLOW, " Поэтому , будет забанен через 20 секунд.");
				SetTimerEx("TMPlayBanTimer", 20000, 0, "iii", PlayerInfo[playerid][pAdmin], player[playerid], csut);
				return 1;
			}
			new ip[126];
			GetPlayerIp(player[playerid], ip, sizeof(ip));
			format(string, 256, " *** Админ %s забанил игрока %s на %d суток , причина: %s", RealName[playerid], RealName[player[playerid]], csut, cause);
			print(string);
			SendClientMessageToAll(COLOR_RED, string);
			format(string, 256 ," *** IP игрока %s : [%s]", RealName[player[playerid]], ip);
			print(string);
			SendAdminMessage(COLOR_RED, string);

			PlayerInfo[player[playerid]][pLock] = 1;

			gettime(timecor[0], timecor[1]);
			getdate(timecor[2], timecor[3], timecor[4]);
			TimCor();//коррекция времени
			DatCor();//коррекция даты

			new csut22, string999[256];
			csut22 = ProcUnban(csut);//вычисление дня разбана
			new doplll, doplll22, doplll33;//запись ид-файла временного бана
			doplll = 1;//переменная цикла
			doplll22 = 0;//маркерная переменная
			while(doplll < 1001)//создаём неполный цикл
			{
				format(string999,sizeof(string999),"bantime/%d.ini",doplll);
				if(!fexist(string999))//если файла с именем ид-переменной (doplll) нету, то:
				{//создаём такой файл
					doplll22 = 1;//устанавливаем маркерную переменную
					new File: hFile55 = fopen(string999, io_write);//запись файла
					if (hFile55)
					{
						new var[64];
						format(var, 64, "Login=%s\n",RealName[player[playerid]]);fwrite(hFile55, var);
						format(var, 64, "IPAdr=%s\n",ip);fwrite(hFile55, var);
						format(var, 64, "Dataunban=%d\n",csut22);fwrite(hFile55, var);
						fclose(hFile55);
					}
					printf("[BanTime] Временному бану игрока [%s] был присвоен ид [%d] .", RealName[player[playerid]], doplll);
					break;//завершаем неполный цикл
				}
				doplll++;//инкрементируем переменную цикла, и продолжаем цикл
			}
			doplll33 = doplll;//подготовка ид-файла к записи в бан-лист
			if(doplll22 == 0)//если после окончания цикла, маркерная переменная НЕ была установлена, то:
			{//передаём админам сообщение о переполнении таблицы временных банов
				doplll33 = 0;//ид-файла = 0 (файл НЕ создан)
				print("[BanTime] Превышен лимит файлов в таблице временных банов !!!");
				SendAdminMessage(COLOR_RED, " * Превышен лимит файлов в таблице временных банов !!!");
				print("[BanTime] Временный бан НЕ был сохранён !!!");
				SendAdminMessage(COLOR_RED, " * Временный бан НЕ был сохранён !!!");
			}

    		if(!strlen(cause))//делаем отметку, если причина не указана
			{
				format(cause, 256, "* Причина не указана.");
			}
			format(string, 256, " (на %d суток) --- Админ: [ %s ]", csut, RealName[playerid]);//формируем метку админа
			strdel(fbanreason[player[playerid]], 0, 256);//очистка причины бана
			strcat(fbanreason[player[playerid]], cause);//добавляем в символьную переменную причину
			strcat(fbanreason[player[playerid]], string);//добавляем в символьную переменную метку админа
			PlayBanList(player[playerid], fbanreason[player[playerid]], doplll33);
			SetTimerEx("PlayBan", 300, 0, "i", player[playerid]);
//			Ban(player[playerid]);
		}
		return 1;
	}
	if(dialogid == 7)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите причину кика игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,7,DIALOG_STYLE_INPUT,"Причина кика игрока",string,"Кик","Отмена");
				SetPVarInt(playerid, "DlgCont", 7);
				return 1;
			}
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] <= 3 && PlayerInfo[player[playerid]][pAdmin] >= 1)
			{
				format(string,256," *** Админ %s попытался кикнуть админа %s",RealName[playerid],RealName[player[playerid]]);
				print(string);
				SendAdminMessage(COLOR_GREEN, string);
				ShowPlayerDialog(playerid,2,0,"Информация.","Кикнуть админа может только админ 4-го уровня !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
   			if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 1)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранного игрока уже забанили\nили кикнули по таймеру !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
   			if(gPlayerLogged[player[playerid]] == 0 && NameClick[player[playerid]] == 0)
			{
				NameClick[player[playerid]] = 1;
				strdel(NameAdmin[player[playerid]], 0, MAX_PLAYER_NAME);
				strcat(NameAdmin[player[playerid]], RealName[playerid]);
				strdel(NameTarget[player[playerid]], 0, MAX_PLAYER_NAME);
				strcat(NameTarget[player[playerid]], playtarget[playerid]);
				strdel(ReasonTarget[player[playerid]], 0, 256);
				strcat(ReasonTarget[player[playerid]], inputtext);
 				SendClientMessage(playerid, COLOR_YELLOW, " Выбранный игрок ещё не залогинился !");
 				SendClientMessage(playerid, COLOR_YELLOW, " Поэтому , будет кикнут через 15 секунд.");
				SetTimerEx("PlayKickTimer", 15000, 0, "ii", PlayerInfo[playerid][pAdmin], player[playerid]);
				return 1;
			}
			format(string, 256, " *** Админ %s кикнул игрока %s , причина: %s", RealName[playerid], RealName[player[playerid]], inputtext);
			print(string);
			SendClientMessageToAll(COLOR_RED, string);
			SetTimerEx("PlayKick", 300, 0, "i", player[playerid]);
//    		Kick(player[playerid]);
		}
        return 1;
	}
	if(dialogid == 47)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите причину заморозки игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,"Причина заморозки игрока",string,"Заморозить","Отмена");
				SetPVarInt(playerid, "DlgCont", 47);
				return 1;
			}
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			format(string, 256, " *** Админ %s заморозил игрока %s , причина: %s", RealName[playerid], RealName[player[playerid]], inputtext);
			print(string);
			SendClientMessageToAll(COLOR_RED, string);
			perfrost[player[playerid]] = playerid;//включение заморозки
			SetPVarInt(player[playerid], "PlFrost", 1);//глобальная переменная заморозки игрока
 			TogglePlayerControllable(player[playerid],0);
		}
        return 1;
	}
	if(dialogid == 48)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите причину убийства игрока:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,48,DIALOG_STYLE_INPUT,"Причина убийства игрока",string,"Убить","Отмена");
				SetPVarInt(playerid, "DlgCont", 48);
				return 1;
			}
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			format(string, 256, " *** Админ %s убил игрока %s , причина: %s", RealName[playerid], RealName[player[playerid]], inputtext);
			print(string);
			SendClientMessageToAll(COLOR_RED, string);
			EnterTick33[player[playerid]] = 1;//обход антикрашера - 3
			SetPlayerArmour(player[playerid],0);
			SetPlayerHealth(player[playerid],0);
		}
        return 1;
	}
	if(dialogid == 8)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите число секунд и через пробел причину затыка игрока:\
				\n(чтобы разоткнуть, введите 3 секунды)\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,8,DIALOG_STYLE_INPUT,"Секунды и причина затыка игрока",string,"Заткнуть","Отмена");
				SetPVarInt(playerid, "DlgCont", 8);
				return 1;
			}
			new cause[256], i = 0, j = 0, m = 0;//выделение текста из строки
			while (inputtext[i] != 32)
			{
				if(inputtext[i] == 0 || i == 10)
				{
					m = 1;
					break;
				}
				i++;
			}
			if(m == 1)
			{
				cause[0] = 0;
			}
			else
			{
				i++;
				while (i < 256)
				{
					cause[j] = inputtext[i];
					if(inputtext[i] == 0) break;
					i++;
					j++;
				}
			}
			new secon;
			secon = strval(inputtext);
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(secon != 3)
			{
				if(secon < 5) {secon = 5;}
				new dopcis;
				dopcis = FCislit(secon);
				switch(dopcis)
				{
					case 0: format(string, 256, " *** Админ %s заткнул игрока %s на %d секунд , причина: %s", RealName[playerid], RealName[player[playerid]], secon, cause);
					case 1: format(string, 256, " *** Админ %s заткнул игрока %s на %d секунду , причина: %s", RealName[playerid], RealName[player[playerid]], secon, cause);
					case 2: format(string, 256, " *** Админ %s заткнул игрока %s на %d секунды , причина: %s", RealName[playerid], RealName[player[playerid]], secon, cause);
				}
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				if(PlayerInfo[player[playerid]][pMutedsec] == 0)//если игрок НЕ заткнут, то:
				{
					PlayerInfo[player[playerid]][pMuted]++;
				}
				PlayerInfo[player[playerid]][pMutedsec] = secon;
			}
			else
			{
				if(PlayerInfo[player[playerid]][pMutedsec] > 0)//если игрок заткнут, то:
				{
					format(string, 256, " *** Админ %s разоткнул игрока %s , причина: амнистия ;)))", RealName[playerid], RealName[player[playerid]]);
					print(string);
					SendClientMessageToAll(COLOR_GREEN, string);
  					PlayerInfo[player[playerid]][pMuted]--;
					PlayerInfo[player[playerid]][pMutedsec] = 0;
				}
				else
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок не заткнут !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
			}
		}
        return 1;
	}
	if(dialogid == 46)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите число секунд и через пробел причину посадки игрока в тюрьму:\
				\n(чтобы освободить, введите 3 секунды)\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"Секунды и причина посадки игрока в тюрьму",string,"Посадить","Отмена");
				SetPVarInt(playerid, "DlgCont", 46);
				return 1;
			}
			new cause[256], i = 0, j = 0, m = 0;//выделение текста из строки
			while (inputtext[i] != 32)
			{
				if(inputtext[i] == 0 || i == 10)
				{
					m = 1;
					break;
				}
				i++;
			}
			if(m == 1)
			{
				cause[0] = 0;
			}
			else
			{
				i++;
				while (i < 256)
				{
					cause[j] = inputtext[i];
					if(inputtext[i] == 0) break;
					i++;
					j++;
				}
			}
			new secon;
			secon = strval(inputtext);
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			if(secon != 3)
			{
				if(secon < 5) {secon = 5;}
				new dopcis;
				dopcis = FCislit(secon);
				switch(dopcis)
				{
					case 0: format(string, 256, " *** Админ %s посадил игрока %s в тюрьму на %d секунд , причина: %s", RealName[playerid], RealName[player[playerid]], secon, cause);
					case 1: format(string, 256, " *** Админ %s посадил игрока %s в тюрьму на %d секунду , причина: %s", RealName[playerid], RealName[player[playerid]], secon, cause);
					case 2: format(string, 256, " *** Админ %s посадил игрока %s в тюрьму на %d секунды , причина: %s", RealName[playerid], RealName[player[playerid]], secon, cause);
				}
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				if(PlayerInfo[player[playerid]][pPrisonsec] == 0)//если не в тюрьме, то сохранение слотов оружия игрока
				{
					if(DerbyID[player[playerid]] == 0)//если игрок НЕ в зоне дерби,
					{//то сохранение всех слотов
						for(new n=0;n<13;n++)//если игрок НЕ в X-зоне, то сохранение всех слотов
						{
							GetPlayerWeaponData(player[playerid], n, play2weap[player[playerid]][n], play2ammo[player[playerid]][n]);
						}
					}
					PlayerInfo[player[playerid]][pPrison]++;
					PlayerInfo[player[playerid]][pPrisonsec] = secon;
					if(PlayLock1[0][player[playerid]] != 600 && PlayLock1[0][player[playerid]] == playerid)
					{//если игрок заблокирован, то заменяем данные блокировки на данные тюрьмы
						PlayCRTP[player[playerid]] = 1;//блокировка контроля координат
						tpdrift[player[playerid]] = 1;
						PlayLock1[1][player[playerid]] = 3;//интерьер тюрьмы
						PlayLock1[2][player[playerid]] = 0;//виртуальный мир 0
						PlayLock2[0][player[playerid]] = 193.31;//координаты тюрьмы
						PlayLock2[1][player[playerid]] = 173.87;
						PlayLock2[2][player[playerid]] = 1003.02;
						PlayLock2[3][player[playerid]] = 0.44;//угол спавна в тюрьме
						SetCameraBehindPlayer(player[playerid]);//камера за спиной
					}
					SecSpa(player[playerid]);//респавн игрока (с блокировкой заполнения слотов оружия и предметов)
				}
				else//если игрок уже в тюрьме, то изменяем секунды тюрьмы
				{
					PlayerInfo[player[playerid]][pPrisonsec] = secon;
				}
			}
			else
			{
				if(PlayerInfo[player[playerid]][pPrisonsec] > 0)//если игрок в тюрьме, то:
				{
					format(string, 256, " *** Админ %s освободил игрока %s , причина: амнистия ;)))", RealName[playerid], RealName[player[playerid]]);
					print(string);
					SendClientMessageToAll(COLOR_GREEN, string);
					PlayerInfo[player[playerid]][pPrison]--;
					PlayerInfo[player[playerid]][pPrisonsec] = 0;
					weapstatplay[player[playerid]] = 0;
					SpawnPlayer(player[playerid]);//респавн игрока
				}
				else
				{
			  		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок не сидит в тюрьме !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
			}
		}
        return 1;
	}
	if(dialogid == 9)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
				format(string,256,"Введите ид скина, на который Вы хотите сменить:\nИгрок: %s [%d]",RealName[player[playerid]],player[playerid]);
 				ShowPlayerDialog(playerid,9,DIALOG_STYLE_INPUT,"ID скина игрока",string,"Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 9);
				return 1;
			}
#if (MOD11INS <= 3)
			if(strval(inputtext) < 0 || strval(inputtext) > 299) { SendClientMessage(playerid, COLOR_RED, " Ид скина должен быть от 0 до 299 !"); return 1; }
#endif
#if (MOD11INS == 4)
			if(strval(inputtext) < 0 || strval(inputtext) > 311) { SendClientMessage(playerid, COLOR_RED, " Ид скина должен быть от 0 до 311 !"); return 1; }
#endif
			if(!IsPlayerConnected(player[playerid]) || strcmp(playtarget[playerid],RealName[player[playerid]],false) != 0)
			{
				ShowPlayerDialog(playerid,2,0,"Ошибка.","Выбранный игрок вышел с сервера !","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
				return 1;
			}
			format(string, 256, " *** Админ %s сменил скин игроку %s на %d", RealName[playerid], RealName[player[playerid]], strval(inputtext));
			print(string);
			SendClientMessageToAll(COLOR_YELLOW, string);
			SetPVarInt(player[playerid], "PlSkin", strval(inputtext));
			SetPlayerSkin(player[playerid], GetPVarInt(player[playerid], "PlSkin"));
		}
        return 1;
	}
 	if(dialogid == 10)
 	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
 	    if(response)
		{
			if(listitem == 0)
			{
				new dopper;
				dopper = GetPlayerVirtualWorld(playerid);
				if(dopper < 0 || (dopper > 0 && dopper < 3000) ||
				(dopper > 4999 && dopper < 6000) || dopper > 7999)
				{
					SendClientMessage(playerid, COLOR_RED, " Транспорт можно выбрать (или купить) ТОЛЬКО на основной карте,");
					SendClientMessage(playerid, COLOR_RED, " или на специальных картах !");
					ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Транспортное средство", "Тип транспорта\nТюнинг\nОтключить / включить автоматический ремонт\nТюнинг в любом / своём транспорте   / неон и номер только в любом!!! /\nУничтожить свой транспорт\nУничтожить любой транспорт\nФлипнуть", "Выбор", "Отмена");
					SetPVarInt(playerid, "DlgCont", 10);
					return 1;
				}
				ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
				\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
				\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
				\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
				\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
				SetPVarInt(playerid, "DlgCont", 21);
				return 1;
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
				\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
				\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
				SetPVarInt(playerid, "DlgCont", 19);
				return 1;
			}
			if(listitem == 2)
			{
				if(DerbyID[playerid] == 2)
				{
					SendClientMessage(playerid, COLOR_RED, "* В зоне дерби эта функция не работает !");
					ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Транспортное средство", "Тип транспорта\nТюнинг\nОтключить / включить автоматический ремонт\nТюнинг в любом / своём транспорте   / неон и номер только в любом!!! /\nУничтожить свой транспорт\nУничтожить любой транспорт\nФлипнуть", "Выбор", "Отмена");
					SetPVarInt(playerid, "DlgCont", 10);
					return 1;
				}
		    	if(autorepair[playerid] == 0)
		    	{
					autorepair[playerid] = 1;
					ShowPlayerDialog(playerid, 2, 0, "Автоматический ремонт", "Автоматический ремонт включен!", "OK", "");
					SetPVarInt(playerid, "DlgCont", 2);
				}else{
			   	 	autorepair[playerid] = 0;
			   	 	ShowPlayerDialog(playerid, 2, 0, "Автоматический ремонт", "Автоматический ремонт отключен!", "OK", "");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				return 1;
			}
			if(listitem == 3)
			{
		    	if(tunset[playerid] == 0)
		    	{
					tunset[playerid] = 1;
					ShowPlayerDialog(playerid, 2, 0, "Тюнинг", "Тюнинг в своём транспорте включен!", "OK", "");
					SetPVarInt(playerid, "DlgCont", 2);
				}else{
			   	 	tunset[playerid] = 0;
			   	 	ShowPlayerDialog(playerid, 2, 0, "Тюнинг", "Тюнинг в любом транспорте включен!", "OK", "");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				return 1;
			}
			if(listitem == 4)//уничтожить свой транспорт
			{
				if(playcar[playerid] != 0)//если у игрока есть свой транспорт, то:
				{
			    	for(new i=0;i<MAX_PLAYERS;i++)//поиск и удаление чужого неона И обход антикрашера - 3
					{
						if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
						{
							if(GetPlayerVehicleID(i) == playcar[playerid])
							{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
								EnterTick33[i] = 1;//обход антикрашера - 3
							}
						}
			 			if(playcar[playerid] == neon[i][2])
			 			{
							DestroyObject(neon[i][0]);//убрать неон
							DestroyObject(neon[i][1]);//убрать неон
							neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][2] = 0;//несуществующий ид транспорта с неоном
			 			}
					}
					if(neon[playerid][0] != 0) { DestroyObject(neon[playerid][0]); }//убрать неон
					if(neon[playerid][1] != 0) { DestroyObject(neon[playerid][1]); }//убрать неон
					neon[playerid][0] = 0;//присваиваем неону несуществующий номер объекта
					neon[playerid][1] = 0;//присваиваем неону несуществующий номер объекта
					neon[playerid][2] = 0;//несуществующий ид транспорта с неоном
					DestroyVehicle(playcar[playerid]);//уничтожить свой транспорт
					playcar[playerid] = 0;//несуществующий ид транспорта
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " У Вас нет своего транспорта !");
				}
				return 1;
			}
			if(listitem == 5)//уничтожить любой транспорт
			{
				new car = GetPlayerVehicleID(playerid);
				if(TrainID[0] <= car <= TrainID22[0] || TrainID[1] <= car <= TrainID22[1] ||
				TrainID[2] <= car <= TrainID22[2] || TrainID[3] <= car <= TrainID22[3] ||
				TrainID[4] <= car <= TrainID22[4] || TrainID[5] <= car <= TrainID22[5] ||
				TrainID[6] <= car <= TrainID22[6] || TrainID[7] <= car <= TrainID22[7])
				{//если игрок в поезде или в вагоне сервера, то ничего не уничтожать
					SendClientMessage(playerid, COLOR_RED, " Этот транспорт уничтожить нельзя !");
					return 1;
				}
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					if(CallRemoteFunction("myobjvehfunc", "d", car) != 0)//чтение ИД транспорта из скпипта myobj
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это отдельно созданный транспорт !");
						return 1;
					}
					if(CallRemoteFunction("garagefunction", "d", car) != 0)//чтение ИД транспорта из системы гаражей
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это транспорт системы гаражей !");
						return 1;
					}
					if(CallRemoteFunction("mpsysvehfunc", "d", car) != 0)//чтение ИД транспорта из системы МП
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это транспорт системы МП !");
						return 1;
					}
					if(CallRemoteFunction("dssysvehfunc", "d", car) != 0)//чтение ИД транспорта из системы дерби-сумо
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это транспорт системы дерби-сумо !");
						return 1;
					}
					if(CallRemoteFunction("basesysvehfunc", "d", car) != 0)//чтение ИД транспорта из системы баз
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это транспорт системы баз !");
						return 1;
					}
					if(CallRemoteFunction("vehsys3vehfunc", "d", car) != 0)//чтение ИД транспорта из системы личного транспорта vehsys3
					{
						SendClientMessage(playerid, COLOR_RED, " Нельзя ! Это личный транспорт игрока !");
						return 1;
					}
			    	for(new i=0;i<MAX_PLAYERS;i++)//уничтожить любой транспорт
					{
						if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
						{
							if(GetPlayerVehicleID(i) == car)
							{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
								EnterTick33[i] = 1;//обход антикрашера - 3
							}
						}
			 			if(GetPlayerVehicleID(playerid) == playcar[i])//уничтожить чужой транспорт вместе с неоном
			 			{
							if(neon[i][0] != 0) { DestroyObject(neon[i][0]); }//убрать неон
							if(neon[i][1] != 0) { DestroyObject(neon[i][1]); }//убрать неон
							neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][2] = 0;//несуществующий ид транспорта с неоном
							playcar[i] = 0;//несуществующий ид транспорта
			 			}
			 			if(GetPlayerVehicleID(playerid) == neon[i][2])//уничтожить чужой неон на свободном транспорте
			 			{
							DestroyObject(neon[i][0]);//убрать неон
							DestroyObject(neon[i][1]);//убрать неон
							neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][2] = 0;//несуществующий ид транспорта с неоном
			 			}
					}
					DestroyVehicle(car);
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
				}
				return 1;
			}
			if(listitem == 6)
			{
				if(GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3)//если игрок на месте водителя,
				{//или на месте пассажира, то:
					new regm = 0, per1, per2, Float:per3, Float:cor1, Float:cor2, Float:cor3;//флипнуть
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
				}
			}
		}else{
		gettime(timecor[0], timecor[1]);
		TimCor();//коррекция времени
  	   	format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

		//Clans system
#if (MOD44INS == 0)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nПравила сервера\nПравила для админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
#if (MOD44INS == 1)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
 	if(dialogid == 45)//меню Предметы
 	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
 	    if(response)
		{
			if(listitem == 0)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 9, pweap, pammo);
				if(pweap == 43 && pammo > 1000)
				{
					SendClientMessage(playerid, COLOR_RED, "Больше взять нельзя.");
				}
				else
				{
					if((pweap == 43 || pweap == 0) && pammo <= 1000)
					{
						GivePlayerWeapon(playerid, 43, 1000);
					}
					else
					{
						GivePlayerWeapon(playerid, 43, pammo);
					}
				}
				ShowPlayerDialog(playerid, 45, DIALOG_STYLE_LIST, "Предметы", "Фотоаппарат   / слот 9 /\nБукет цветов   / слот 10 /\
				\nПарашют   / слот 11 /\nУбрать предметы", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 45);
				return 1;
			}
			if(listitem == 1)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 10, pweap, pammo);
				if(pweap == 14 && pammo >= 1)
				{
					pammo = 1;
				}
				else
				{
					GivePlayerWeapon(playerid, 14, 1);
				}
				ShowPlayerDialog(playerid, 45, DIALOG_STYLE_LIST, "Предметы", "Фотоаппарат   / слот 9 /\nБукет цветов   / слот 10 /\
				\nПарашют   / слот 11 /\nУбрать предметы", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 45);
				return 1;
			}
			if(listitem == 2)
			{
				new pweap, pammo;
				GetPlayerWeaponData(playerid, 11, pweap, pammo);
				if(pweap == 46 && pammo >= 1)
				{
					pammo = 1;
				}
				else
				{
					GivePlayerWeapon(playerid, 46, 1);
				}
				ShowPlayerDialog(playerid, 45, DIALOG_STYLE_LIST, "Предметы", "Фотоаппарат   / слот 9 /\nБукет цветов   / слот 10 /\
				\nПарашют   / слот 11 /\nУбрать предметы", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 45);
				return 1;
			}
			if(listitem == 3)
			{
				ResetPlayerWeapons(playerid);//отбираем оружие и предметы
				ShowPlayerDialog(playerid, 45, DIALOG_STYLE_LIST, "Предметы", "Фотоаппарат   / слот 9 /\nБукет цветов   / слот 10 /\
				\nПарашют   / слот 11 /\nУбрать предметы", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 45);
			}
		}else{
		gettime(timecor[0], timecor[1]);
		TimCor();//коррекция времени
  	   	format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

		//Clans system
#if (MOD44INS == 0)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nПравила сервера\nПравила для админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
#if (MOD44INS == 1)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
 	if(dialogid == 21)//меню Тип транспорта
 	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
 	    if(response)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, 14, DIALOG_STYLE_LIST, "Стритрейсерские авто", "Elegy\nFlash\nJester\nStratum\nSultan\
			 	\nUranus", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 14);
				return 1;
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, 22, DIALOG_STYLE_LIST, "Гоночные авто", "Banshee\nBullet\nCheetah\nComet\nHotknife\
			 	\nHotring\nHotring A\nHotring B\nInfernus\nSuper GT\nTurismo\nWindsor\nZR-350", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 22);
				return 1;
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, 23, DIALOG_STYLE_LIST, "Лоурайдеры", "Blade\nBroadway\nRemington\nSavanna\nSlamvan\
			 	\nTornado\nVoodoo", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 23);
				return 1;
			}
			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, 24, DIALOG_STYLE_LIST, "Двухдверные седаны", "Alpha\nBlista\nBravura\nBuccaneer\nCadrona\
			 	\nClub\nEsperanto\nEuros\nFeltzer\nFortune\nHermes\nHustler\nMajestic\nManana\nPicador\nPrevion\nStallion\
				\nTampa\nVirgo", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 24);
				return 1;
			}
			if(listitem == 4)
			{
				ShowPlayerDialog(playerid, 25, DIALOG_STYLE_LIST, "Четырёхдверные седаны", "Admiral\nElegant\nEmperor\nGlendale\
				\nGreenwood\nIntruder\nMerit\nNebula\nOceanic\nPremier\nPrimo\nSentinal\nStafford\nStretch\nSunrise\nTahoma\
			 	\nVincent\nWashington\nWillard", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 25);
				return 1;
			}
			if(listitem == 5)
			{
				ShowPlayerDialog(playerid, 26, DIALOG_STYLE_LIST, "Джипы", "Huntley\nLandstalker\nPerrenial\nRancher\nRegina\
				\nRomero\nSolair", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 26);
				return 1;
			}
			if(listitem == 6)
			{
				ShowPlayerDialog(playerid, 27, DIALOG_STYLE_LIST, "Мощные авто", "Buffalo\nClover\nPhoenix\
				\nSabre", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 27);
				return 1;
			}
			if(listitem == 7)
			{
				ShowPlayerDialog(playerid, 28, DIALOG_STYLE_LIST, "Грузовики и рабочий транспорт", "Benson\nBoxville\
				\nBoxville-Black\nCement Truck\nCombine Harvestor\nDFT-30\nDozer\nDumper\nDune\nFlatbed\nHotdog\
				\nLinerunner\nMr Woopee\nMule\nPacker\nRoadtrain\nTanker\nTractor\nYankee", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 28);
				return 1;
			}
			if(listitem == 8)
			{
				ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "Лёгкие грузовики и фургоны", "Topfun\nBobcat\nBurrito\
			 	\nForklift\nMoonbeam\nMower\nNewsvan\nPony\nRumpo\nSadler\nTug\nWalton\nYosemite", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 29);
				return 1;
			}
			if(listitem == 9)
			{
				ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "Транспорт для развлечения", "Bandito\nBF Injection\
			 	\nBloodring Banger\nCaddy\nCamper\nJourney\nKart\nMesa\nMonster\nMonster A\nMonster B\nQuad\nSandking\
			  	\nVortex\nJetPack   / на местах телепортов не брать! /", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 30);
				return 1;
			}
			if(listitem == 10)
			{
				ShowPlayerDialog(playerid, 31, DIALOG_STYLE_LIST, "Велосипеды и мотоциклы", "BMX\nBike\nMountain Bike\nBF-400\
			 	\nFaggio\nFCR-900\nFreeway\nNRG-500\nPCJ-600\nPizzaboy\nSanchez\nWayfarer", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 31);
				return 1;
			}
			if(listitem == 11)
			{
				ShowPlayerDialog(playerid, 32, DIALOG_STYLE_LIST, "Авто для транспортировки", "Baggage\nBus\nCabbie\nCoach\
				\nSweeper\nTaxi\nTowtruck\nTrashmaster\nUtility Van", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 32);
				return 1;
			}
			if(listitem == 12)
			{
				ShowPlayerDialog(playerid, 33, DIALOG_STYLE_LIST, "Коммерческий и государственный транспорт", "Ambulance\nBarracks\
			 	\nEnforcer\nFBI Rancher\nFBI Truck\nFire Truck\nFire Truck A\nHPV-1000\nPatriot\nPolice Los Santos\
			 	\nPolice San Fierro\nPolice Las Venturas\nPolice Ranger\nSecuricar\nSwat Tank", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 33);
				return 1;
			}
			if(listitem == 13)
			{
				if(DerbyID[playerid] == 2)//игрок в зоне дерби
				{
					SendClientMessage(playerid, COLOR_RED, "* В зоне дерби этот тип транспорта запрещён !");
					ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
					\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
					\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
					\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
					\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
					SetPVarInt(playerid, "DlgCont", 21);
					return 1;
				}
				ShowPlayerDialog(playerid, 34, DIALOG_STYLE_LIST, "Воздушный транспорт", "Andromada\nAT-400\nBeagle\nCargobob\
			 	\nCropduster\nDodo\nLeviathan\nMaverick\nNevada\nNews Maverick\nPolice Maverick\nRaindance\
			  	\nShamal\nSkimmer\nSparrow\nStunt Plane", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 34);
				return 1;
			}
			if(listitem == 14)
			{
				if(DerbyID[playerid] == 2)//игрок в зоне дерби
				{
					SendClientMessage(playerid, COLOR_RED, "* В зоне дерби этот тип транспорта запрещён !");
					ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
					\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
					\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
					\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
					\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
					SetPVarInt(playerid, "DlgCont", 21);
					return 1;
				}
				ShowPlayerDialog(playerid, 35, DIALOG_STYLE_LIST, "Водный транспорт", "Coastguard\nDingy\nJetmax\nLaunch\nMarquis\
			 	\nReefer\nSpeeder\nSquallo\nTropic", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 35);
				return 1;
			}
			if(listitem == 15)
			{
				if(DerbyID[playerid] == 2)//игрок в зоне дерби
				{
					SendClientMessage(playerid, COLOR_RED, "* В зоне дерби этот тип транспорта запрещён !");
					ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
					\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
					\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
					\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
					\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
					SetPVarInt(playerid, "DlgCont", 21);
					return 1;
				}
				ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, "Радиоуправляемые и побитые авто", "RC Bandit\nRC Cam\
			 	\nRC Goblin\nRC Tiger\nGlendale\nSadler", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 36);
			}
		}else{
		ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Транспортное средство", "Тип транспорта\nТюнинг\nОтключить / включить автоматический ремонт\nТюнинг в любом / своём транспорте   / неон и номер только в любом!!! /\nУничтожить свой транспорт\nУничтожить любой транспорт\nФлипнуть", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 10);
		}
		return 1;
	}
	if(dialogid == 16)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
 				ShowPlayerDialog(playerid, 16, DIALOG_STYLE_INPUT,"Смена скина","Введите ид скина, на который Вы хотите сменить:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 16);
				return 1;
			}
#if (MOD11INS <= 3)
		    if(strval(inputtext) < 0 || strval(inputtext) > 299)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид скина должен быть от 0 до 299 !");
 				ShowPlayerDialog(playerid, 16, DIALOG_STYLE_INPUT,"Смена скина","Введите ид скина, на который Вы хотите сменить:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 16);
				return 1;
			}
#endif
#if (MOD11INS == 4)
		    if(strval(inputtext) < 0 || strval(inputtext) > 311)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид скина должен быть от 0 до 311 !");
 				ShowPlayerDialog(playerid, 16, DIALOG_STYLE_INPUT,"Смена скина","Введите ид скина, на который Вы хотите сменить:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 16);
				return 1;
			}
#endif
			SetPVarInt(playerid, "PlSkin", strval(inputtext));
			SetPlayerSkin(playerid, GetPVarInt(playerid, "PlSkin"));
		}else{
		ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Действия", "Пополнить жизнь и броню\nАнимации\nСменить цвет ника\
		\nСменить скин\nСменить время\nСменить пароль\nСменить стиль боя\nСамоубийство\nПросмотреть собственную статистику", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 12);
		}
		return 1;
	}
#if (MOD66INS > 1)
	if(dialogid == 56)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(playspa[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы уже заспавнились !");
			return 1;
		}
	    if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
 				ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT,"Выбор скина","Введите ид скина:","OK","Spawn");
				SetPVarInt(playerid, "DlgCont", 56);
				return 1;
			}
#endif
#if (MOD11INS <= 3 && MOD66INS > 1)
		    if(strval(inputtext) < 0 || strval(inputtext) > 299)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид скина должен быть от 0 до 299 !");
 				ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT,"Выбор скина","Введите ид скина:","OK","Spawn");
				SetPVarInt(playerid, "DlgCont", 56);
				return 1;
			}
#endif
#if (MOD11INS == 4 && MOD66INS > 1)
		    if(strval(inputtext) < 0 || strval(inputtext) > 311)
			{
				SendClientMessage(playerid, COLOR_RED, " Ид скина должен быть от 0 до 311 !");
 				ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT,"Выбор скина","Введите ид скина:","OK","Spawn");
				SetPVarInt(playerid, "DlgCont", 56);
				return 1;
			}
#endif
#if (MOD66INS > 1)
			SetPVarInt(playerid, "PlSkin", strval(inputtext));
			SetPlayerSkin(playerid, GetPVarInt(playerid, "PlSkin"));
			ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT,"Выбор скина","Введите ид скина:","OK","Spawn");
			SetPVarInt(playerid, "DlgCont", 56);
		}else{
		playspascan[playerid] = 1;//делаем отметку о прохождении начального выбора скина, или сканера собейта
#endif
#if (MOD66INS == 3)
		TogglePlayerControllable(playerid, true);
#endif
#if (MOD66INS > 1)
		SpawnPlayer(playerid);//отправляем игрока на реальный спавн сервера
		}
		return 1;
	}
#endif
	if(dialogid == 57)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(playspa[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы уже заспавнились !");
			return 1;
		}
		ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT,"Выбор скина","Введите ид скина:","OK","Spawn");//показываем игроку диалог "Выбор скина" на его виртуальном спавне
		SetPVarInt(playerid, "DlgCont", 56);
		return 1;
	}
	if(dialogid == 61)//он-лайн админы
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)//если была нажата кнопка "Далее", то:
		{
			for(new i = 0; i < 20; i++)
			{
				strdel(NamAdm[i], 0, 80);
			}
			new locvar = 0;
			new locvar2 = 0;
			while(count2adm[playerid] < countadm[playerid])
			{
				strins(NamAdm[locvar], tabladm[playerid][count2adm[playerid]], 0, 80);
				count2adm[playerid]++;
				locvar++;
				if(locvar == 20 && count2adm[playerid] < countadm[playerid])
				{//выводим диалог С продолжением
					format(strdln,sizeof(strdln),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
					NamAdm[0],NamAdm[1],NamAdm[2],NamAdm[3],NamAdm[4],NamAdm[5],NamAdm[6],NamAdm[7],NamAdm[8],NamAdm[9],
					NamAdm[10],NamAdm[11],NamAdm[12],NamAdm[13],NamAdm[14],NamAdm[15],NamAdm[16],NamAdm[17],NamAdm[18],NamAdm[19]);
					ShowPlayerDialog(playerid, 61, 0, "On-Line админы:", strdln, "Далее", "Отмена");
					SetPVarInt(playerid, "DlgCont", 61);
					locvar2 = 1;//устанавливаем переменную-маркер
					break;//выходим из цикла
				}
				if(locvar == 20 && count2adm[playerid] == countadm[playerid])
				{//выводим диалог БЕЗ продолжения
					if(contover[playerid] == 0)
					{
						format(strdln,sizeof(strdln),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
						NamAdm[0],NamAdm[1],NamAdm[2],NamAdm[3],NamAdm[4],NamAdm[5],NamAdm[6],NamAdm[7],NamAdm[8],NamAdm[9],
						NamAdm[10],NamAdm[11],NamAdm[12],NamAdm[13],NamAdm[14],NamAdm[15],NamAdm[16],NamAdm[17],NamAdm[18],NamAdm[19]);
					}
					else
					{
						format(strdln,sizeof(strdln),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\
						\n\n     Список НЕ полный ! Переполнение данных !",
						NamAdm[0],NamAdm[1],NamAdm[2],NamAdm[3],NamAdm[4],NamAdm[5],NamAdm[6],NamAdm[7],NamAdm[8],NamAdm[9],
						NamAdm[10],NamAdm[11],NamAdm[12],NamAdm[13],NamAdm[14],NamAdm[15],NamAdm[16],NamAdm[17],NamAdm[18],NamAdm[19]);
					}
					ShowPlayerDialog(playerid, 2, 0, "On-Line админы:", strdln, "OK", "");
					SetPVarInt(playerid, "DlgCont", 2);
					locvar2 = 1;//устанавливаем переменную-маркер
					break;//выходим из цикла
				}
			}//выход из цикла
			if(locvar2 == 0)
			{//выводим диалог БЕЗ продолжения
				if(contover[playerid] == 0)
				{
					format(strdln,sizeof(strdln),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
					NamAdm[0],NamAdm[1],NamAdm[2],NamAdm[3],NamAdm[4],NamAdm[5],NamAdm[6],NamAdm[7],NamAdm[8],NamAdm[9],
					NamAdm[10],NamAdm[11],NamAdm[12],NamAdm[13],NamAdm[14],NamAdm[15],NamAdm[16],NamAdm[17],NamAdm[18],NamAdm[19]);
				}
				else
				{
					format(strdln,sizeof(strdln),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\
					\n\n     Список НЕ полный ! Переполнение данных !",
					NamAdm[0],NamAdm[1],NamAdm[2],NamAdm[3],NamAdm[4],NamAdm[5],NamAdm[6],NamAdm[7],NamAdm[8],NamAdm[9],
					NamAdm[10],NamAdm[11],NamAdm[12],NamAdm[13],NamAdm[14],NamAdm[15],NamAdm[16],NamAdm[17],NamAdm[18],NamAdm[19]);
				}
				ShowPlayerDialog(playerid, 2, 0, "On-Line админы:", strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
			}//если переменная-маркер БЫЛА установлена, то - конец проверки
		    return 1;
		}
		else//если была нажата кнопка "Отмена", то:
		{
		    return 1;//завершаем диалог
		}
	}
	if(dialogid == 62)//команда /editadmins
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)//если была нажата кнопка "Далее", то:
		{
			LogAdmcnt[playerid] = LogAdmcnt[playerid] + 20;//прибавляем к переменной регистрации админов-2 число отображаемых слотов
			new soob[2048], soob22[1024];//объявляем новые строковые переменные
#if (MOD90INS == 0)
			format(soob22,sizeof(soob22),"В первом ключе указан уровень админа, во втором ключе\
			\nуказано как админ получил админку:\n   1 - с помошью команд   /iadminset   или   /untouch\
			\n   2 - с помощью команды   /makeadmin  \n   3 - с помощью команды   /admakk\
			\n   4 - с помощью обычного логирования\n        (аккаунт админа был перенесён на данный сервер)\
			\n   5 - после дисконнекта (админ очистил\n        свой слот регистрации, но остался админом)\n");
#endif
#if (MOD90INS == 1)
			format(soob22,sizeof(soob22),"В первом ключе указан уровень админа, во втором ключе\
			\nуказано как админ получил админку:\n   1 - с помошью команд   /iadminset   или   /untouch\
			\n   2 - с помощью команды   /makeadmin  \n   3 - с помощью команды   /admakk\
			\n   4 - с помощью обычного логирования\n        (аккаунт админа был изменён в базе данных сервера)\
			\n   5 - после дисконнекта (админ очистил\n        свой слот регистрации, но остался админом)\n");
#endif
			new dopper, locstr[64];//объявляем дополнительные переменные
			dopper = LogAdmcnt[playerid] + 20;//записываем в переменную dopper число отображаемых слотов +20
			strdel(soob, 0, 2048);//очищаем длинную строку окна-сообщения
			strcat(soob, soob22);//добавляем к длинной строке окна-сообщения - верхнюю шапку сообщения (soob22)
			for(new i = LogAdmcnt[playerid]; i < dopper; i++)
			{//создаём цикл для 20 отображаемых слотов (начиная со слота LogAdmcnt[playerid])
				format(locstr,sizeof(locstr),"\nСлот %d: %s",i,LogAdm[i]);//создаём строку с одним слотом
				strcat(soob, locstr);//добавляем к длинной строке окна-сообщения - созданную строку с одним слотом
			}
			if(LogAdmcnt[playerid] >= 80)
			{//если это последнее окно-сообщение, то:
				LogAdmcnt[playerid] = 0;//обнуляем переменную регистрации админов-2
				ShowPlayerDialog(playerid, 2, 0, "Регистрации админов:", soob, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
			}
			else//иначе, (если это НЕ последнее окно-сообщение), то:
			{
				ShowPlayerDialog(playerid, 62, 0, "Регистрации админов:", soob, "Далее", "Отмена");
				SetPVarInt(playerid, "DlgCont", 62);
			}
		    return 1;
		}
		else//если была нажата кнопка "Отмена", то:
		{
			LogAdmcnt[playerid] = 0;//обнуляем переменную регистрации админов-2
		    return 1;//завершаем диалог
		}
	}
 	if(dialogid == 17)//меню Цвет
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			new vehicleid;
			if(tunset[playerid] == 0)//если тюнинг в ЛЮБОМ транспорте, то:
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					vehicleid = GetPlayerVehicleID(playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
#if (MOD11INS == 1)
					ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{F61B1B}Ярко-красный\n{00CCFF}Голубой\
					\n{373CFA}Синий\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{00FF00}Зеленый\n{3BF266}Ярко-зеленый\n{CCCCCC}Серый\
					\nЧерный\n{FFFFFF}Белый", "OK", "Отмена");
#endif
#if (MOD11INS >= 2)
					ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{991E1E}Кирпичный\n{332AE0}Синий\
					\n{A43FF9}Фиолетовый\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{28A937}Зеленый\n{1E9999}Бирюзовый\n{808080}Серый\
					\n{FFFFFF}Черный\n{FFFFFF}Белый", "OK", "Отмена");
#endif
					SetPVarInt(playerid, "DlgCont", 17);
					return 1;
				}
			}
			else
			{
			    vehicleid = playcar[playerid];
				if(vehicleid == 0)//если у игрока нет своего транспорта, то:
				{
					SendClientMessage(playerid, COLOR_RED, " У Вас нет своего транспорта !");
#if (MOD11INS == 1)
					ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{F61B1B}Ярко-красный\n{00CCFF}Голубой\
					\n{373CFA}Синий\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{00FF00}Зеленый\n{3BF266}Ярко-зеленый\n{CCCCCC}Серый\
					\nЧерный\n{FFFFFF}Белый", "OK", "Отмена");
#endif
#if (MOD11INS >= 2)
					ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{991E1E}Кирпичный\n{332AE0}Синий\
					\n{A43FF9}Фиолетовый\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{28A937}Зеленый\n{1E9999}Бирюзовый\n{808080}Серый\
					\n{FFFFFF}Черный\n{FFFFFF}Белый", "OK", "Отмена");
#endif
					SetPVarInt(playerid, "DlgCont", 17);
					return 1;
				}
			}
#if (MOD11INS == 1)
			if(listitem == 0)ChangeVehicleColor(vehicleid, 3, 3);
			if(listitem == 1)ChangeVehicleColor(vehicleid, 166, 166);
			if(listitem == 2)ChangeVehicleColor(vehicleid, 79, 79);
			if(listitem == 3)ChangeVehicleColor(vehicleid, 158, 158);
			if(listitem == 4)ChangeVehicleColor(vehicleid, 6, 6);
			if(listitem == 5)ChangeVehicleColor(vehicleid, 65, 65);
			if(listitem == 6)ChangeVehicleColor(vehicleid, 86, 86);
			if(listitem == 7)ChangeVehicleColor(vehicleid, 181, 181);
			if(listitem == 8)ChangeVehicleColor(vehicleid, 9, 9);
			if(listitem == 9)ChangeVehicleColor(vehicleid, 0, 0);
			if(listitem == 10)ChangeVehicleColor(vehicleid, 1, 1);
		    PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
			ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{F61B1B}Ярко-красный\n{00CCFF}Голубой\
			\n{373CFA}Синий\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{00FF00}Зеленый\n{3BF266}Ярко-зеленый\n{CCCCCC}Серый\
			\nЧерный\n{FFFFFF}Белый", "OK", "Отмена");
#endif
#if (MOD11INS >= 2)
			if(listitem == 0)ChangeVehicleColor(vehicleid, 3, 3);
			if(listitem == 1)ChangeVehicleColor(vehicleid, 175, 175);
			if(listitem == 2)ChangeVehicleColor(vehicleid, 79, 79);
			if(listitem == 3)ChangeVehicleColor(vehicleid, 211, 211);
			if(listitem == 4)ChangeVehicleColor(vehicleid, 6, 6);
			if(listitem == 5)ChangeVehicleColor(vehicleid, 65, 65);
			if(listitem == 6)ChangeVehicleColor(vehicleid, 86, 86);
			if(listitem == 7)ChangeVehicleColor(vehicleid, 155, 155);
			if(listitem == 8)ChangeVehicleColor(vehicleid, 9, 9);
			if(listitem == 9)ChangeVehicleColor(vehicleid, 0, 0);
			if(listitem == 10)ChangeVehicleColor(vehicleid, 1, 1);
		    PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
			ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{991E1E}Кирпичный\n{332AE0}Синий\
			\n{A43FF9}Фиолетовый\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{28A937}Зеленый\n{1E9999}Бирюзовый\n{808080}Серый\
			\n{FFFFFF}Черный\n{FFFFFF}Белый", "OK", "Отмена");
#endif
			SetPVarInt(playerid, "DlgCont", 17);
		}else{
		ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
		\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
		\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 19);
		}
		return 1;
	}
 	if(dialogid == 18)//меню Установка времени
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)SetPlayerTime(playerid,0,0);
			if(listitem == 1)SetPlayerTime(playerid,1,0);
			if(listitem == 2)SetPlayerTime(playerid,2,0);
			if(listitem == 3)SetPlayerTime(playerid,3,0);
			if(listitem == 4)SetPlayerTime(playerid,4,0);
			if(listitem == 5)SetPlayerTime(playerid,5,0);
			if(listitem == 6)SetPlayerTime(playerid,6,0);
			if(listitem == 7)SetPlayerTime(playerid,7,0);
			if(listitem == 8)SetPlayerTime(playerid,8,0);
			if(listitem == 9)SetPlayerTime(playerid,9,0);
			if(listitem == 10)SetPlayerTime(playerid,10,0);
			if(listitem == 11)SetPlayerTime(playerid,11,0);
			if(listitem == 12)SetPlayerTime(playerid,12,0);
			if(listitem == 13)SetPlayerTime(playerid,13,0);
			if(listitem == 14)SetPlayerTime(playerid,14,0);
			if(listitem == 15)SetPlayerTime(playerid,15,0);
			if(listitem == 16)SetPlayerTime(playerid,16,0);
			if(listitem == 17)SetPlayerTime(playerid,17,0);
			if(listitem == 18)SetPlayerTime(playerid,18,0);
			if(listitem == 19)SetPlayerTime(playerid,19,0);
			if(listitem == 20)SetPlayerTime(playerid,20,0);
			if(listitem == 21)SetPlayerTime(playerid,21,0);
			if(listitem == 22)SetPlayerTime(playerid,22,0);
			if(listitem == 23)SetPlayerTime(playerid,23,0);
			LocTime[playerid] = listitem;
		}else{
		ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Действия", "Пополнить жизнь и броню\nАнимации\nСменить цвет ника\
		\nСменить скин\nСменить время\nСменить пароль\nСменить стиль боя\nСамоубийство\nПросмотреть собственную статистику", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 12);
		}
		return 1;
	}
 	if(dialogid == 37)//меню Диски
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			new vehicleid;
			if(tunset[playerid] == 0)//если тюнинг в ЛЮБОМ транспорте, то:
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					vehicleid = GetPlayerVehicleID(playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
		    		ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Диски", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\
					\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nСтандарт", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 37);
					return 1;
				}
			}
			else
			{
			    vehicleid = playcar[playerid];
				if(vehicleid == 0)//если у игрока нет своего транспорта, то:
				{
					SendClientMessage(playerid, COLOR_RED, " У Вас нет своего транспорта !");
		    		ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Диски", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\
					\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nСтандарт", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 37);
					return 1;
				}
			}
		    if(listitem == 0)AddVehicleComponent(vehicleid,1073);
			if(listitem == 1)AddVehicleComponent(vehicleid,1074);
			if(listitem == 2)AddVehicleComponent(vehicleid,1076);
			if(listitem == 3)AddVehicleComponent(vehicleid,1077);
			if(listitem == 4)AddVehicleComponent(vehicleid,1075);
			if(listitem == 5)AddVehicleComponent(vehicleid,1079);
			if(listitem == 6)AddVehicleComponent(vehicleid,1078);
			if(listitem == 7)AddVehicleComponent(vehicleid,1080);
			if(listitem == 8)AddVehicleComponent(vehicleid,1081);
			if(listitem == 9)AddVehicleComponent(vehicleid,1082);
			if(listitem == 10)AddVehicleComponent(vehicleid,1083);
			if(listitem == 11)AddVehicleComponent(vehicleid,1084);
			if(listitem == 12)AddVehicleComponent(vehicleid,1085);
			if(listitem >= 0 && listitem <= 12)PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			if(listitem == 13)
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 7);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Диски", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\
			\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nСтандарт", "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 37);
		}else{
		ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
		\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
		\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 19);
		}
		return 1;
	}
 	if(dialogid == 38)//меню Винилы
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			new vehicleid;
			if(tunset[playerid] == 0)//если тюнинг в ЛЮБОМ транспорте, то:
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					vehicleid = GetPlayerVehicleID(playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
					ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Винилы", "Винил 1\nВинил 2\nВинил 3\nУдалить винил", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 38);
					return 1;
				}
			}
			else
			{
			    vehicleid = playcar[playerid];
				if(vehicleid == 0)//если у игрока нет своего транспорта, то:
				{
					SendClientMessage(playerid, COLOR_RED, " У Вас нет своего транспорта !");
					ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Винилы", "Винил 1\nВинил 2\nВинил 3\nУдалить винил", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 38);
					return 1;
				}
			}
			ChangeVehiclePaintjob(vehicleid,listitem);
		    PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
			ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Винилы", "Винил 1\nВинил 2\nВинил 3\nУдалить винил", "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 38);
		}else{
		ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
		\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
		\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 19);
		}
		return 1;
	}
    if(dialogid == 39)//меню Неон, Номер, дополнительно
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			new carid;
			if(tunset[playerid] == 0)//если тюнинг в ЛЮБОМ транспорте, то:
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					carid = GetPlayerVehicleID(playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
					ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Неон, Номер, дополнительно","Неон\nСменить номер\nОткрыть багажник\
					\nЗакрыть багажник\nОткрыть капот\nЗакрыть капот\nВключить свет\nВыключить свет\nЗамкнуть двери\nОткрыть двери\
					\nВключить сигнализацию\nВыключить сигнализацию\nЗавести двигатель\nЗаглушить двигатель","Выбор","Отмена");
					SetPVarInt(playerid, "DlgCont", 39);
					return 1;
				}
			}
			else
			{
			    carid = playcar[playerid];
				if(carid == 0)//если у игрока нет своего транспорта, то:
				{
					SendClientMessage(playerid, COLOR_RED, " У Вас нет своего транспорта !");
					ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Неон, Номер, дополнительно","Неон\nСменить номер\nОткрыть багажник\
					\nЗакрыть багажник\nОткрыть капот\nЗакрыть капот\nВключить свет\nВыключить свет\nЗамкнуть двери\nОткрыть двери\
					\nВключить сигнализацию\nВыключить сигнализацию\nЗавести двигатель\nЗаглушить двигатель","Выбор","Отмена");
					SetPVarInt(playerid, "DlgCont", 39);
					return 1;
				}
			}
			if(listitem == 0)//неон
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
			    	ShowPlayerDialog(playerid, 40,DIALOG_STYLE_LIST,"Неон","{FF3300}Красный\n{0033CC}Синий\n{33FF00}Зелёный\
					\n{FFFF00}Жёлтый\n{E63E85}Розовый\nБелый\nУдалить Неон","OK","Отмена");
					SetPVarInt(playerid, "DlgCont", 40);
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
					ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Неон, Номер, дополнительно","Неон\nСменить номер\nОткрыть багажник\
					\nЗакрыть багажник\nОткрыть капот\nЗакрыть капот\nВключить свет\nВыключить свет\nЗамкнуть двери\nОткрыть двери\
					\nВключить сигнализацию\nВыключить сигнализацию\nЗавести двигатель\nЗаглушить двигатель","Выбор","Отмена");
					SetPVarInt(playerid, "DlgCont", 39);
				}
				return 1;
			}
			if(listitem == 1)//сменить номер
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
			    	ShowPlayerDialog(playerid, 41,DIALOG_STYLE_INPUT,"Сменить номер","Введите номера авто","OK","Отмена");
					SetPVarInt(playerid, "DlgCont", 41);
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
					ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Неон, Номер, дополнительно","Неон\nСменить номер\nОткрыть багажник\
					\nЗакрыть багажник\nОткрыть капот\nЗакрыть капот\nВключить свет\nВыключить свет\nЗамкнуть двери\nОткрыть двери\
					\nВключить сигнализацию\nВыключить сигнализацию\nЗавести двигатель\nЗаглушить двигатель","Выбор","Отмена");
					SetPVarInt(playerid, "DlgCont", 39);
				}
				return 1;
			}
			new engine,lights,alarm,doors,bonnet,boot,objective;
			if(listitem == 2)//открыть багажник
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,true,objective);
			}
			if(listitem == 3)//закрыть багажник
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,false,objective);
			}
			if(listitem == 4)//открыть капот
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,alarm,doors,true,boot,objective);
			}
			if(listitem == 5)//закрыть капот
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,alarm,doors,false,boot,objective);
			}
			if(listitem == 6)//включить свет
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,true,alarm,doors,bonnet,boot,objective);
			}
			if(listitem == 7)//выключить свет
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,false,alarm,doors,bonnet,boot,objective);
			}
			if(listitem == 8)//замкнуть двери
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,alarm,true,bonnet,boot,objective);
			}
			if(listitem == 9)//открыть двери
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,alarm,false,bonnet,boot,objective);
			}
			if(listitem == 10)//включить сигнализацию
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,true,doors,bonnet,boot,objective);
			}
			if(listitem == 11)//выключить сигнализацию
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,engine,lights,false,doors,bonnet,boot,objective);
			}
			if(listitem == 12)//завести двигатель
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,true,lights,alarm,doors,bonnet,boot,objective);
			}
			if(listitem == 13)//заглушить двигатель
			{
			    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
              	SetVehicleParamsEx(carid,false,lights,alarm,doors,bonnet,boot,objective);
			}
			ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Неон, Номер, дополнительно","Неон\nСменить номер\nОткрыть багажник\
			\nЗакрыть багажник\nОткрыть капот\nЗакрыть капот\nВключить свет\nВыключить свет\nЗамкнуть двери\nОткрыть двери\
			\nВключить сигнализацию\nВыключить сигнализацию\nЗавести двигатель\nЗаглушить двигатель","Выбор","Отмена");
			SetPVarInt(playerid, "DlgCont", 39);
		}else{
		ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
		\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
		\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 19);
		}
		return 1;
	}
	if(dialogid == 40)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			for(new i=0;i<MAX_PLAYERS;i++)//убрать неон с любого транспорта
			{
 				if(GetPlayerVehicleID(playerid) == neon[i][2])
		 		{
					DestroyObject(neon[i][0]);//убрать неон
					DestroyObject(neon[i][1]);//убрать неон
					neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
					neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
					neon[i][2] = 0;//несуществующий ид транспорта с неоном
		 		}
			}
			if(neon[playerid][0] != 0) { DestroyObject(neon[playerid][0]); }//убрать неон
			if(neon[playerid][1] != 0) { DestroyObject(neon[playerid][1]); }//убрать неон
			if(listitem == 0)
			{
				neon[playerid][0] = CreateObject(18647,0,0,0,0,0,0,100.0);
				neon[playerid][1] = CreateObject(18647,0,0,0,0,0,0,100.0);
				neon[playerid][2] = GetPlayerVehicleID(playerid);//ид транспорта, на который устанавливается неон
				AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			}
			if(listitem == 1)
			{
				neon[playerid][0] = CreateObject(18648,0,0,0,0,0,0,100.0);
				neon[playerid][1] = CreateObject(18648,0,0,0,0,0,0,100.0);
				neon[playerid][2] = GetPlayerVehicleID(playerid);//ид транспорта, на который устанавливается неон
				AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			}
			if(listitem == 2)
			{
				neon[playerid][0] = CreateObject(18649,0,0,0,0,0,0,100.0);
				neon[playerid][1] = CreateObject(18649,0,0,0,0,0,0,100.0);
				neon[playerid][2] = GetPlayerVehicleID(playerid);//ид транспорта, на который устанавливается неон
				AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			}
			if(listitem==3)
			{
				neon[playerid][0] = CreateObject(18650,0,0,0,0,0,0,100.0);
				neon[playerid][1] = CreateObject(18650,0,0,0,0,0,0,100.0);
				neon[playerid][2] = GetPlayerVehicleID(playerid);//ид транспорта, на который устанавливается неон
				AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			}
			if(listitem==4)
			{
				neon[playerid][0] = CreateObject(18651,0,0,0,0,0,0,100.0);
				neon[playerid][1] = CreateObject(18651,0,0,0,0,0,0,100.0);
				neon[playerid][2] = GetPlayerVehicleID(playerid);//ид транспорта, на который устанавливается неон
				AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			}
			if(listitem==5)
			{
				neon[playerid][0] = CreateObject(18652,0,0,0,0,0,0,100.0);
				neon[playerid][1] = CreateObject(18652,0,0,0,0,0,0,100.0);
				neon[playerid][2] = GetPlayerVehicleID(playerid);//ид транспорта, на который устанавливается неон
				AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			}
			if(listitem==6)
			{
				neon[playerid][0] = 0;//присваиваем неону несуществующий номер объекта
				neon[playerid][1] = 0;//присваиваем неону несуществующий номер объекта
				neon[playerid][2] = 0;//несуществующий ид транспорта с неоном
			}
   			ShowPlayerDialog(playerid, 40,DIALOG_STYLE_LIST,"Неон","{FF3300}Красный\n{0033CC}Синий\n{33FF00}Зелёный\
			\n{FFFF00}Жёлтый\n{E63E85}Розовый\nБелый\nУдалить Неон","OK","Отмена");
			SetPVarInt(playerid, "DlgCont", 40);
		}else{
		ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Неон, Номер, дополнительно","Неон\nСменить номер\nОткрыть багажник\
		\nЗакрыть багажник\nОткрыть капот\nЗакрыть капот\nВключить свет\nВыключить свет\nЗамкнуть двери\nОткрыть двери\
		\nВключить сигнализацию\nВыключить сигнализацию\nЗавести двигатель\nЗаглушить двигатель","Выбор","Отмена");
		SetPVarInt(playerid, "DlgCont", 39);
		}
		return 1;
	}
	if(dialogid == 41)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, COLOR_RED, "запрещённые коды, или знак процентов, или ~ !!!");
 				ShowPlayerDialog(playerid, 41,DIALOG_STYLE_INPUT,"Сменить номер","Введите номер авто","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 41);
				return 1;
			}
			if(!strlen(inputtext))
			{
				ShowPlayerDialog(playerid, 41,DIALOG_STYLE_INPUT,"Сменить номер","Введите номер авто","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 41);
				return 1;
			}
			if(strlen(inputtext) > 10)
			{
				ShowPlayerDialog(playerid, 41,DIALOG_STYLE_INPUT,"Сменить номер","Cлишком длинный номер!\nВведите номер авто","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 41);
				return 1;
			}
			new Float:x,Float:y,Float:z,Float:ang,carid;
			carid = GetPlayerVehicleID(playerid);
			SetVehicleNumberPlate(carid, inputtext);
			GetVehiclePos(carid,x,y,z);
			GetVehicleZAngle(carid,ang);
			new Float:igx,Float:igy,Float:igz;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
				{
					if(GetPlayerVehicleID(i) == carid && playerid != i)
					{//если есть пассажир (пассажиры) в авто водителя, то:
						EnterTick33[i] = 1;//обход антикрашера - 3
						GetPlayerPos(i, igx, igy, igz);//высадить пассажира (пассажиров)
						SetPlayerPos(i, igx+3, igy+3, igz);
					}
					if(admper1[i] != 600 && admper1[i] == playerid)//если есть админ ведущий наблюдение,
					{//И этот админ наблюдает за игроком, то:
						admper5[i] = 2;//устанавливаем переключение наблюдения
					}
				}
			}
			SetVehicleToRespawn(carid);
			SetVehiclePos(carid,x,y,z);
			PutPlayerInVehicle(playerid,carid,0);
			SetVehicleZAngle(carid,ang);
		}
		ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Неон, Номер, дополнительно","Неон\nСменить номер\nОткрыть багажник\
		\nЗакрыть багажник\nОткрыть капот\nЗакрыть капот\nВключить свет\nВыключить свет\nЗамкнуть двери\nОткрыть двери\
		\nВключить сигнализацию\nВыключить сигнализацию\nЗавести двигатель\nЗаглушить двигатель","Выбор","Отмена");
		SetPVarInt(playerid, "DlgCont", 39);
		return 1;
	}
 	if(dialogid == 42)//меню Архангел тюнинг
 	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
  		if(response)
    	{
			new vehicleid, cartype;
			if(tunset[playerid] == 0)//если тюнинг в ЛЮБОМ транспорте, то:
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					vehicleid = GetPlayerVehicleID(playerid);
					cartype = GetVehicleModel(vehicleid);
					if(cartype != 562 && cartype != 560 && cartype != 565 &&
					cartype != 559 && cartype != 561 && cartype != 558)
					{
						SendClientMessage(playerid, COLOR_RED, " Вы должны быть в стритрейсерском авто !!!");
						ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Архангел тюнинг", "Передний бампер X-flow\nПередний бампер Alien\
						\nПередний бампер стандарт\nЗадний бампер X-Flow\nЗадний бампер Alien\nЗадний бампер стандарт\nСпойлер X-Flow\
						\nСпойлер Alien\nУдалить спойлер\nБоковые юбки X-Flow\nБоковые юбки Alien\nБоковые юбки стандарт\
						\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nУдалить воздухозаборник\nВыхлоп X-flow\nВыхлоп Alien\
						\nВыхлоп стандарт", "OK", "Отмена");
						SetPVarInt(playerid, "DlgCont", 42);
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
					ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Архангел тюнинг", "Передний бампер X-flow\nПередний бампер Alien\
					\nПередний бампер стандарт\nЗадний бампер X-Flow\nЗадний бампер Alien\nЗадний бампер стандарт\nСпойлер X-Flow\
					\nСпойлер Alien\nУдалить спойлер\nБоковые юбки X-Flow\nБоковые юбки Alien\nБоковые юбки стандарт\
					\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nУдалить воздухозаборник\nВыхлоп X-flow\nВыхлоп Alien\
					\nВыхлоп стандарт", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 42);
					return 1;
				}
			}
			else
			{
				vehicleid = playcar[playerid];
				if(vehicleid == 0)//если у игрока нет своего транспорта, то:
				{
					SendClientMessage(playerid, COLOR_RED, " У Вас нет своего транспорта !");
					ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Архангел тюнинг", "Передний бампер X-flow\nПередний бампер Alien\
					\nПередний бампер стандарт\nЗадний бампер X-Flow\nЗадний бампер Alien\nЗадний бампер стандарт\nСпойлер X-Flow\
					\nСпойлер Alien\nУдалить спойлер\nБоковые юбки X-Flow\nБоковые юбки Alien\nБоковые юбки стандарт\
					\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nУдалить воздухозаборник\nВыхлоп X-flow\nВыхлоп Alien\
					\nВыхлоп стандарт", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 42);
					return 1;
				}
				cartype = GetVehicleModel(vehicleid);
				if(cartype != 562 && cartype != 560 && cartype != 565 &&
				cartype != 559 && cartype != 561 && cartype != 558)
				{
					SendClientMessage(playerid, COLOR_RED, " У Вас должно быть стритрейсерское авто !!!");
					ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Архангел тюнинг", "Передний бампер X-flow\nПередний бампер Alien\
					\nПередний бампер стандарт\nЗадний бампер X-Flow\nЗадний бампер Alien\nЗадний бампер стандарт\nСпойлер X-Flow\
					\nСпойлер Alien\nУдалить спойлер\nБоковые юбки X-Flow\nБоковые юбки Alien\nБоковые юбки стандарт\
					\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nУдалить воздухозаборник\nВыхлоп X-flow\nВыхлоп Alien\
					\nВыхлоп стандарт", "OK", "Отмена");
					SetPVarInt(playerid, "DlgCont", 42);
					return 1;
				}
			}
  			if(listitem == 0)//Передний бампер X-flow
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1172);
				if(cartype == 560)AddVehicleComponent(vehicleid,1170);
				if(cartype == 565)AddVehicleComponent(vehicleid,1152);
				if(cartype == 559)AddVehicleComponent(vehicleid,1173);
				if(cartype == 561)AddVehicleComponent(vehicleid,1157);
				if(cartype == 558)AddVehicleComponent(vehicleid,1165);

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 1)//Передний бампер Alien
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1171);
				if(cartype == 560)AddVehicleComponent(vehicleid,1169);
				if(cartype == 565)AddVehicleComponent(vehicleid,1153);
				if(cartype == 559)AddVehicleComponent(vehicleid,1160);
				if(cartype == 561)AddVehicleComponent(vehicleid,1155);
				if(cartype == 558)AddVehicleComponent(vehicleid,1166);

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 2)//Передний бампер стандарт
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 10);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			if(listitem == 3)//Задний бампер X-Flow
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1148);
				if(cartype == 560)AddVehicleComponent(vehicleid,1140);
				if(cartype == 565)AddVehicleComponent(vehicleid,1151);
				if(cartype == 559)AddVehicleComponent(vehicleid,1161);
				if(cartype == 561)AddVehicleComponent(vehicleid,1156);
				if(cartype == 558)AddVehicleComponent(vehicleid,1167);

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 4)//Задний бампер Alien
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1149);
				if(cartype == 560)AddVehicleComponent(vehicleid,1141);
				if(cartype == 565)AddVehicleComponent(vehicleid,1150);
				if(cartype == 559)AddVehicleComponent(vehicleid,1159);
				if(cartype == 561)AddVehicleComponent(vehicleid,1154);
				if(cartype == 558)AddVehicleComponent(vehicleid,1168);

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 5)//Задний бампер стандарт
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 11);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			if(listitem == 6)//Спойлер X-Flow
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1146);
				if(cartype == 560)AddVehicleComponent(vehicleid,1139);
				if(cartype == 565)AddVehicleComponent(vehicleid,1050);
				if(cartype == 559)AddVehicleComponent(vehicleid,1158);
				if(cartype == 561)AddVehicleComponent(vehicleid,1060);
				if(cartype == 558)AddVehicleComponent(vehicleid,1163);

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 7)//Спойлер Alien
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1147);
				if(cartype == 560)AddVehicleComponent(vehicleid,1138);
				if(cartype == 565)AddVehicleComponent(vehicleid,1049);
				if(cartype == 559)AddVehicleComponent(vehicleid,1162);
				if(cartype == 561)AddVehicleComponent(vehicleid,1058);
				if(cartype == 558)AddVehicleComponent(vehicleid,1164);

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 8)//Удалить спойлер
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 0);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			if(listitem == 9)//Боковые юбки X-Flow
			{
				if(cartype == 562)
				{
					AddVehicleComponent(vehicleid,1041);
					AddVehicleComponent(vehicleid,1039);
				}
				if(cartype == 560)
				{
					AddVehicleComponent(vehicleid,1031);
					AddVehicleComponent(vehicleid,1030);
				}
				if(cartype == 565)
				{
					AddVehicleComponent(vehicleid,1052);
					AddVehicleComponent(vehicleid,1048);
				}
				if(cartype == 559)
				{
					AddVehicleComponent(vehicleid,1070);
					AddVehicleComponent(vehicleid,1072);
				}
				if(cartype == 561)
				{
					AddVehicleComponent(vehicleid,1057);
					AddVehicleComponent(vehicleid,1063);
				}
				if(cartype == 558)
				{
					AddVehicleComponent(vehicleid,1093);
                	AddVehicleComponent(vehicleid,1095);
				}

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 10)//Боковые юбки Alien
			{
				if(cartype == 562)
				{
					AddVehicleComponent(vehicleid,1036);
					AddVehicleComponent(vehicleid,1040);
				}
				if(cartype == 560)
				{
					AddVehicleComponent(vehicleid,1026);
					AddVehicleComponent(vehicleid,1027);
				}
				if(cartype == 565)
				{
					AddVehicleComponent(vehicleid,1051);
					AddVehicleComponent(vehicleid,1047);
				}
				if(cartype == 559)
				{
					AddVehicleComponent(vehicleid,1069);
					AddVehicleComponent(vehicleid,1071);
				}
				if(cartype == 561)
				{
					AddVehicleComponent(vehicleid,1056);
					AddVehicleComponent(vehicleid,1062);
				}
				if(cartype == 558)
				{
					AddVehicleComponent(vehicleid,1090);
                	AddVehicleComponent(vehicleid,1094);
				}

				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 11)//Боковые юбки стандарт
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 3);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			if(listitem == 12)//Воздухозаборник X-Flow
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1035);
				if(cartype == 560)AddVehicleComponent(vehicleid,1033);
				if(cartype == 565)AddVehicleComponent(vehicleid,1053);
				if(cartype == 559)AddVehicleComponent(vehicleid,1068);
				if(cartype == 561)AddVehicleComponent(vehicleid,1061);
				if(cartype == 558)AddVehicleComponent(vehicleid,1091);

            	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 13)//Воздухозаборник Alien
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1038);
				if(cartype == 560)AddVehicleComponent(vehicleid,1032);
				if(cartype == 565)AddVehicleComponent(vehicleid,1054);
				if(cartype == 559)AddVehicleComponent(vehicleid,1067);
				if(cartype == 561)AddVehicleComponent(vehicleid,1055);
				if(cartype == 558)AddVehicleComponent(vehicleid,1088);

	            PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 14)//Удалить воздухозаборник
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 2);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			if(listitem == 15)//Выхлоп X-flow
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1037);
				if(cartype == 560)AddVehicleComponent(vehicleid,1029);
				if(cartype == 565)AddVehicleComponent(vehicleid,1045);
				if(cartype == 559)AddVehicleComponent(vehicleid,1066);
				if(cartype == 561)AddVehicleComponent(vehicleid,1059);
				if(cartype == 558)AddVehicleComponent(vehicleid,1089);

                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
            if(listitem == 16)//Выхлоп Alien
			{
				if(cartype == 562)AddVehicleComponent(vehicleid,1034);
				if(cartype == 560)AddVehicleComponent(vehicleid,1028);
				if(cartype == 565)AddVehicleComponent(vehicleid,1046);
				if(cartype == 559)AddVehicleComponent(vehicleid,1065);
				if(cartype == 561)AddVehicleComponent(vehicleid,1064);
				if(cartype == 558)AddVehicleComponent(vehicleid,1092);

                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			}
			if(listitem == 17)//Выхлоп стандарт
			{
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 6);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
			}
			ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Архангел тюнинг", "Передний бампер X-flow\nПередний бампер Alien\
			\nПередний бампер стандарт\nЗадний бампер X-Flow\nЗадний бампер Alien\nЗадний бампер стандарт\nСпойлер X-Flow\
			\nСпойлер Alien\nУдалить спойлер\nБоковые юбки X-Flow\nБоковые юбки Alien\nБоковые юбки стандарт\
			\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nУдалить воздухозаборник\nВыхлоп X-flow\nВыхлоп Alien\
			\nВыхлоп стандарт", "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 42);
 		}else{
		ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
		\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
		\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 19);
		}
		return 1;
	}
 	if(dialogid == 19)//меню Тюнинг
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
		    	ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Диски", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\
				\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nСтандарт", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 37);
				return 1;
			}
			if(listitem == 1)
			{
				new vehicleid;
				if(tunset[playerid] == 0)//если тюнинг в ЛЮБОМ транспорте, то:
				{
					if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						vehicleid = GetPlayerVehicleID(playerid);
					}
					else
					{
						SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
						ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
						\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
						\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 19);
						return 1;
					}
				}
				else
				{
				    vehicleid = playcar[playerid];
					if(vehicleid == 0)//если у игрока нет своего транспорта, то:
					{
						SendClientMessage(playerid, COLOR_RED, " У Вас нет своего транспорта !");
						ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
						\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
						\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 19);
						return 1;
					}
				}
				if(StopHidrav[playerid] <= 0)//если переменная задержки меньше или равна нулю, то:
				{
					AddVehicleComponent(vehicleid,1087);
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					StopHidrav[playerid] = 5;
				}
				else//иначе (если переменная задержки больше нуля), то:
				{
					new dopcis;
					dopcis = FCislit(StopHidrav[playerid]);
					switch(dopcis)
					{
						case 0: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунд !", StopHidrav[playerid]);
						case 1: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунду !", StopHidrav[playerid]);
						case 2: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунды !", StopHidrav[playerid]);
					}
					SendClientMessage(playerid,COLOR_RED,string);
				}
				ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
				\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
				\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
				SetPVarInt(playerid, "DlgCont", 19);
				return 1;
			}
			if(listitem == 2)
			{
				new vehicleid;
				if(tunset[playerid] == 0)//если тюнинг в ЛЮБОМ транспорте, то:
				{
					if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						vehicleid = GetPlayerVehicleID(playerid);
					}
					else
					{
						SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
						ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
						\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
						\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 19);
						return 1;
					}
				}
				else
				{
				    vehicleid = playcar[playerid];
					if(vehicleid == 0)//если у игрока нет своего транспорта, то:
					{
						SendClientMessage(playerid, COLOR_RED, " У Вас нет своего транспорта !");
						ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
						\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
						\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 19);
						return 1;
					}
				}
				new dop;
				dop = GetVehicleComponentInSlot(vehicleid, 9);
				if(dop != 0)
				{
					RemoveVehicleComponent(vehicleid, dop);
					PlayerPlaySound(playerid,5202,0.0,0.0,0.0);
				}
				ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
				\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
				\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
				SetPVarInt(playerid, "DlgCont", 19);
				return 1;
			}
			if(listitem == 3)
			{
#if (MOD11INS == 1)
				ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{F61B1B}Ярко-красный\n{00CCFF}Голубой\
				\n{373CFA}Синий\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{00FF00}Зеленый\n{3BF266}Ярко-зеленый\n{CCCCCC}Серый\
				\nЧерный\n{FFFFFF}Белый", "OK", "Отмена");
#endif
#if (MOD11INS >= 2)
				ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Цвет", "{FF0000}Красный\n{991E1E}Кирпичный\n{332AE0}Синий\
				\n{A43FF9}Фиолетовый\n{FFFF33}Жёлтый\n{FF9933}Светло-жёлтый\n{28A937}Зеленый\n{1E9999}Бирюзовый\n{808080}Серый\
				\n{FFFFFF}Черный\n{FFFFFF}Белый", "OK", "Отмена");
#endif
				SetPVarInt(playerid, "DlgCont", 17);
				return 1;
			}
			if(listitem == 4)
			{
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Винилы", "Винил 1\nВинил 2\nВинил 3\nУдалить винил", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 38);
				return 1;
			}
			if(listitem == 5)
			{
				ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Архангел тюнинг", "Передний бампер X-flow\nПередний бампер Alien\
				\nПередний бампер стандарт\nЗадний бампер X-Flow\nЗадний бампер Alien\nЗадний бампер стандарт\nСпойлер X-Flow\
				\nСпойлер Alien\nУдалить спойлер\nБоковые юбки X-Flow\nБоковые юбки Alien\nБоковые юбки стандарт\
				\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nУдалить воздухозаборник\nВыхлоп X-flow\nВыхлоп Alien\
				\nВыхлоп стандарт", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 42);
				return 1;
			}
			if(listitem == 6)
			{
				ShowPlayerDialog(playerid, 39,DIALOG_STYLE_LIST,"Неон, Номер, дополнительно","Неон\nСменить номер\nОткрыть багажник\
				\nЗакрыть багажник\nОткрыть капот\nЗакрыть капот\nВключить свет\nВыключить свет\nЗамкнуть двери\nОткрыть двери\
				\nВключить сигнализацию\nВыключить сигнализацию\nЗавести двигатель\nЗаглушить двигатель","Выбор","Отмена");
				SetPVarInt(playerid, "DlgCont", 39);
				return 1;
			}
			if(listitem == 7)
			{
				ShowPlayerDialog(playerid, 52,DIALOG_STYLE_LIST,"Выключить фары","Левую переднюю\nПравую переднюю\nОбе передних\
				\nОбе задних\nЛевую переднюю и обе задних\nПравую переднюю и обе задних\nВсе\
				\nВключить все фары","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 52);
				return 1;
			}
			if(listitem == 8)
			{
				ShowPlayerDialog(playerid, 53,DIALOG_STYLE_LIST,"Удалить детали транспорта","Капот\nБагажник\nКапот и багажник\
				\nЛевую дверь\nЛевую дверь и капот\nЛевую дверь и багажник\nЛевую дверь ' капот и багажник\nПравую дверь\
				\nПравую дверь и капот\nПравую дверь и багажник\nПравую дверь ' капот и багажник\nОбе двери\nОбе двери и капот\
				\nОбе двери и багажник\nОбе двери ' капот и багажник\nВосстановить все детали","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 53);
				return 1;
			}
			if(listitem == 9)
			{
				ShowPlayerDialog(playerid, 54,DIALOG_STYLE_LIST,"Удалить бампера","Передний\nЗадний\nОба\
				\nВосстановить бампера","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 54);
				return 1;
			}
			if(listitem == 10)
			{
				ShowPlayerDialog(playerid, 51,DIALOG_STYLE_LIST,"Проколоть шины", "Правую заднюю / заднюю\nПравую переднюю / переднюю\
				\nОбе правых / обе\nЛевую заднюю\nОбе задних\nЛевую заднюю и правую переднюю\nЛевую заднюю и обе правых\
				\nЛевую переднюю\nЛевую переднюю и правую заднюю\nОбе передних\nЛевую переднюю и обе правых\nОбе левых\
				\nОбе левых и правую заднюю\nОбе левых и правую переднюю\nВсе\nВулканизировать все шины","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 51);
			}
		}else{
		ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Транспортное средство", "Тип транспорта\nТюнинг\nОтключить / включить автоматический ремонт\nТюнинг в любом / своём транспорте   / неон и номер только в любом!!! /\nУничтожить свой транспорт\nУничтожить любой транспорт\nФлипнуть", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 10);
		}
		return 1;
	}
 	if(dialogid == 51)//меню Проколоть шины
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			new vehicleid;
			if(tunset[playerid] == 0)//если тюнинг в ЛЮБОМ транспорте, то:
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					vehicleid = GetPlayerVehicleID(playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
					ShowPlayerDialog(playerid, 51,DIALOG_STYLE_LIST,"Проколоть шины", "Правую заднюю / заднюю\nПравую переднюю / переднюю\
					\nОбе правых / обе\nЛевую заднюю\nОбе задних\nЛевую заднюю и правую переднюю\nЛевую заднюю и обе правых\
					\nЛевую переднюю\nЛевую переднюю и правую заднюю\nОбе передних\nЛевую переднюю и обе правых\nОбе левых\
					\nОбе левых и правую заднюю\nОбе левых и правую переднюю\nВсе\nВулканизировать все шины","OK","Отмена");
					SetPVarInt(playerid, "DlgCont", 51);
					return 1;
				}
			}
			else
			{
			    vehicleid = playcar[playerid];
				if(vehicleid == 0)//если у игрока нет своего транспорта, то:
				{
					SendClientMessage(playerid, COLOR_RED, " У Вас нет своего транспорта !");
					ShowPlayerDialog(playerid, 51,DIALOG_STYLE_LIST,"Проколоть шины", "Правую заднюю / заднюю\nПравую переднюю / переднюю\
					\nОбе правых / обе\nЛевую заднюю\nОбе задних\nЛевую заднюю и правую переднюю\nЛевую заднюю и обе правых\
					\nЛевую переднюю\nЛевую переднюю и правую заднюю\nОбе передних\nЛевую переднюю и обе правых\nОбе левых\
					\nОбе левых и правую заднюю\nОбе левых и правую переднюю\nВсе\nВулканизировать все шины","OK","Отмена");
					SetPVarInt(playerid, "DlgCont", 51);
					return 1;
				}
			}
			new panels, doors, lights, tires;
			GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
			if(listitem == 15)
			{
				autorepair[playerid] = 1;
				if(tires != 0)
				{
					UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, 0);
                	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
				}

				ShowPlayerDialog(playerid, 51,DIALOG_STYLE_LIST,"Проколоть шины", "Правую заднюю / заднюю\nПравую переднюю / переднюю\
				\nОбе правых / обе\nЛевую заднюю\nОбе задних\nЛевую заднюю и правую переднюю\nЛевую заднюю и обе правых\
				\nЛевую переднюю\nЛевую переднюю и правую заднюю\nОбе передних\nЛевую переднюю и обе правых\nОбе левых\
				\nОбе левых и правую заднюю\nОбе левых и правую переднюю\nВсе\nВулканизировать все шины","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 51);
				return 1;
			}
			new dop;
			dop = listitem;
			dop++;

			autorepair[playerid] = 0;
			UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, dop);
			PlayerPlaySound(playerid,5202,0.0,0.0,0.0);

			ShowPlayerDialog(playerid, 51,DIALOG_STYLE_LIST,"Проколоть шины", "Правую заднюю / заднюю\nПравую переднюю / переднюю\
			\nОбе правых / обе\nЛевую заднюю\nОбе задних\nЛевую заднюю и правую переднюю\nЛевую заднюю и обе правых\
			\nЛевую переднюю\nЛевую переднюю и правую заднюю\nОбе передних\nЛевую переднюю и обе правых\nОбе левых\
			\nОбе левых и правую заднюю\nОбе левых и правую переднюю\nВсе\nВулканизировать все шины","OK","Отмена");
			SetPVarInt(playerid, "DlgCont", 51);
		}else{
		ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
		\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
		\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 19);
		}
		return 1;
	}
 	if(dialogid == 52)//меню Выключить фары
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			new vehicleid;
			if(tunset[playerid] == 0)//если тюнинг в ЛЮБОМ транспорте, то:
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					vehicleid = GetPlayerVehicleID(playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
					ShowPlayerDialog(playerid, 52,DIALOG_STYLE_LIST,"Выключить фары","Левую переднюю\nПравую переднюю\nОбе передних\
					\nОбе задних\nЛевую переднюю и обе задних\nПравую переднюю и обе задних\nВсе\
					\nВключить все фары","OK","Отмена");
					SetPVarInt(playerid, "DlgCont", 52);
					return 1;
				}
			}
			else
			{
			    vehicleid = playcar[playerid];
				if(vehicleid == 0)//если у игрока нет своего транспорта, то:
				{
					SendClientMessage(playerid, COLOR_RED, " У Вас нет своего транспорта !");
					ShowPlayerDialog(playerid, 52,DIALOG_STYLE_LIST,"Выключить фары","Левую переднюю\nПравую переднюю\nОбе передних\
					\nОбе задних\nЛевую переднюю и обе задних\nПравую переднюю и обе задних\nВсе\
					\nВключить все фары","OK","Отмена");
					SetPVarInt(playerid, "DlgCont", 52);
					return 1;
				}
			}
			new panels, doors, lights, tires;
			GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
			new dop;
			if(listitem == 0)dop = 3;
			if(listitem == 1)dop = 12;
			if(listitem == 2)dop = 15;
			if(listitem == 3)dop = 192;
			if(listitem == 4)dop = 195;
			if(listitem == 5)dop = 204;
			if(listitem == 6)dop = 207;
			if(listitem >= 0 && listitem <= 6)
			{
				autorepair[playerid] = 0;
				UpdateVehicleDamageStatus(vehicleid, panels, doors, dop, tires);
                PlayerPlaySound(playerid,5202,0.0,0.0,0.0);

				ShowPlayerDialog(playerid, 52,DIALOG_STYLE_LIST,"Выключить фары","Левую переднюю\nПравую переднюю\nОбе передних\
				\nОбе задних\nЛевую переднюю и обе задних\nПравую переднюю и обе задних\nВсе\
				\nВключить все фары","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 52);
				return 1;
			}
			if(listitem == 7)
			{
				autorepair[playerid] = 1;
				if(lights != 0)
				{
					UpdateVehicleDamageStatus(vehicleid, panels, doors, 0, tires);
                	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
				}

				ShowPlayerDialog(playerid, 52,DIALOG_STYLE_LIST,"Выключить фары","Левую переднюю\nПравую переднюю\nОбе передних\
				\nОбе задних\nЛевую переднюю и обе задних\nПравую переднюю и обе задних\nВсе\
				\nВключить все фары","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 52);
			}
		}else{
		ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
		\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
		\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 19);
		}
		return 1;
	}
 	if(dialogid == 53)//меню Удалить детали транспорта
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			new vehicleid;
			if(tunset[playerid] == 0)//если тюнинг в ЛЮБОМ транспорте, то:
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					vehicleid = GetPlayerVehicleID(playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
					ShowPlayerDialog(playerid, 53,DIALOG_STYLE_LIST,"Удалить детали транспорта","Капот\nБагажник\nКапот и багажник\
					\nЛевую дверь\nЛевую дверь и капот\nЛевую дверь и багажник\nЛевую дверь ' капот и багажник\nПравую дверь\
					\nПравую дверь и капот\nПравую дверь и багажник\nПравую дверь ' капот и багажник\nОбе двери\nОбе двери и капот\
					\nОбе двери и багажник\nОбе двери ' капот и багажник\nВосстановить все детали","OK","Отмена");
					SetPVarInt(playerid, "DlgCont", 53);
					return 1;
				}
			}
			else
			{
			    vehicleid = playcar[playerid];
				if(vehicleid == 0)//если у игрока нет своего транспорта, то:
				{
					SendClientMessage(playerid, COLOR_RED, " У Вас нет своего транспорта !");
					ShowPlayerDialog(playerid, 53,DIALOG_STYLE_LIST,"Удалить детали транспорта","Капот\nБагажник\nКапот и багажник\
					\nЛевую дверь\nЛевую дверь и капот\nЛевую дверь и багажник\nЛевую дверь ' капот и багажник\nПравую дверь\
					\nПравую дверь и капот\nПравую дверь и багажник\nПравую дверь ' капот и багажник\nОбе двери\nОбе двери и капот\
					\nОбе двери и багажник\nОбе двери ' капот и багажник\nВосстановить все детали","OK","Отмена");
					SetPVarInt(playerid, "DlgCont", 53);
					return 1;
				}
			}
			new panels, doors, lights, tires;
			GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
			new dop;
			if(listitem == 0)dop = 4;
			if(listitem == 1)dop = 1024;
			if(listitem == 2)dop = 1028;
			if(listitem == 3)dop = 262144;
			if(listitem == 4)dop = 262148;
			if(listitem == 5)dop = 263168;
			if(listitem == 6)dop = 263172;
			if(listitem == 7)dop = 67108864;
			if(listitem == 8)dop = 67108868;
			if(listitem == 9)dop = 67109888;
			if(listitem == 10)dop = 67109892;
			if(listitem == 11)dop = 67371008;
			if(listitem == 12)dop = 67371012;
			if(listitem == 13)dop = 67372032;
			if(listitem == 14)dop = 67372036;
			if(listitem >= 0 && listitem <= 14)
			{
				autorepair[playerid] = 0;
				UpdateVehicleDamageStatus(vehicleid, panels, 0, lights, tires);
				UpdateVehicleDamageStatus(vehicleid, panels, dop, lights, tires);
                PlayerPlaySound(playerid,5202,0.0,0.0,0.0);

				ShowPlayerDialog(playerid, 53,DIALOG_STYLE_LIST,"Удалить детали транспорта","Капот\nБагажник\nКапот и багажник\
				\nЛевую дверь\nЛевую дверь и капот\nЛевую дверь и багажник\nЛевую дверь ' капот и багажник\nПравую дверь\
				\nПравую дверь и капот\nПравую дверь и багажник\nПравую дверь ' капот и багажник\nОбе двери\nОбе двери и капот\
				\nОбе двери и багажник\nОбе двери ' капот и багажник\nВосстановить все детали","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 53);
				return 1;
			}
			if(listitem == 15)
			{
				autorepair[playerid] = 1;
				if(doors != 0)
				{
					UpdateVehicleDamageStatus(vehicleid, panels, 0, lights, tires);
                	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
				}

				ShowPlayerDialog(playerid, 53,DIALOG_STYLE_LIST,"Удалить детали транспорта","Капот\nБагажник\nКапот и багажник\
				\nЛевую дверь\nЛевую дверь и капот\nЛевую дверь и багажник\nЛевую дверь ' капот и багажник\nПравую дверь\
				\nПравую дверь и капот\nПравую дверь и багажник\nПравую дверь ' капот и багажник\nОбе двери\nОбе двери и капот\
				\nОбе двери и багажник\nОбе двери ' капот и багажник\nВосстановить все детали","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 53);
			}
		}else{
		ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
		\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
		\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 19);
		}
		return 1;
	}
 	if(dialogid == 54)//меню Удалить бампера
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			new vehicleid;
			if(tunset[playerid] == 0)//если тюнинг в ЛЮБОМ транспорте, то:
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					vehicleid = GetPlayerVehicleID(playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, " Вы должны быть на месте водителя !");
					ShowPlayerDialog(playerid, 54,DIALOG_STYLE_LIST,"Удалить бампера","Передний\nЗадний\nОба\
					\nВосстановить бампера","OK","Отмена");
					SetPVarInt(playerid, "DlgCont", 54);
					return 1;
				}
			}
			else
			{
			    vehicleid = playcar[playerid];
				if(vehicleid == 0)//если у игрока нет своего транспорта, то:
				{
					SendClientMessage(playerid, COLOR_RED, " У Вас нет своего транспорта !");
					ShowPlayerDialog(playerid, 54,DIALOG_STYLE_LIST,"Удалить бампера","Передний\nЗадний\nОба\
					\nВосстановить бампера","OK","Отмена");
					SetPVarInt(playerid, "DlgCont", 54);
					return 1;
				}
			}
			new panels, doors, lights, tires;
			GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
			new dop;
			if(listitem == 0)dop = 3145728;
			if(listitem == 1)dop = 50331648;
			if(listitem == 2)dop = 53477376;
			if(listitem >= 0 && listitem <= 2)
			{
				autorepair[playerid] = 0;
				UpdateVehicleDamageStatus(vehicleid, 0, doors, lights, tires);
				UpdateVehicleDamageStatus(vehicleid, dop, doors, lights, tires);
                PlayerPlaySound(playerid,5202,0.0,0.0,0.0);

				ShowPlayerDialog(playerid, 54,DIALOG_STYLE_LIST,"Удалить бампера","Передний\nЗадний\nОба\
				\nВосстановить бампера","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 54);
				return 1;
			}
			if(listitem == 3)
			{
				autorepair[playerid] = 1;
				if(panels != 0)
				{
					UpdateVehicleDamageStatus(vehicleid, 0, doors, lights, tires);
                	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
				}

				ShowPlayerDialog(playerid, 54,DIALOG_STYLE_LIST,"Удалить бампера","Передний\nЗадний\nОба\
				\nВосстановить бампера","OK","Отмена");
				SetPVarInt(playerid, "DlgCont", 54);
			}
		}else{
		ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Тюнинг", "Диски\nГидравлика\nУдалить гидравлику\nЦвет\
		\nВинилы\nАрхангел тюнинг\nНеон, Номер, дополнительно\nВыключить фары\nУдалить детали транспорта\
		\nУдалить бампера\nПроколоть шины", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 19);
		}
		return 1;
	}
	if(dialogid == 11)//меню Телепорты - 1   / места /
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			PlayCRTP[playerid] = 1;//блокировка контроля координат
			if(listitem == 0)
			{
//				ShowPlayerDialog(playerid,2,0,"Ошибка","В данный момент телепортация недоступна!","OK","");
//				SetPVarInt(playerid, "DlgCont", 2);
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -312.7, Float:cor2 = 1532.72, Float:cor3 = 75.36+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//ухо
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -312.7, 1532.72, 75.36+1);//ухо
				}
				return 1;
			}
			if(listitem == 1)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 2492.34, Float:cor2 = -1666.33, Float:cor3 = 13.34+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//грув
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 2492.34, -1666.33, 13.34+1);//грув
				}
				return 1;
			}
			if(listitem == 2)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 334.48, Float:cor2 = -1844.28, Float:cor3 = 3.5+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//пляж LS
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 334.48, -1844.28, 3.5+1);//пляж LS
				}
				return 1;
			}
			if(listitem == 3)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 1263.47, Float:cor2 = -2027.47, Float:cor3 = 59.32+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//холм LS
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 1263.47, -2027.47, 59.32+1);//холм LS
				}
				return 1;
			}
			if(listitem == 4)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 1543.83, Float:cor2 = -1353.65, Float:cor3 = 329.47+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//небоскрёб LS
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 1543.83, -1353.65, 329.47+1);//небоскрёб LS
				}
				return 1;
			}
			if(listitem == 5)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 1439.16, Float:cor2 = -2593.23, Float:cor3 = 13.55+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//взлётка аэропорта LS
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 1439.16, -2593.23, 13.55+1);//взлётка аэропорта LS
				}
				return 1;
			}
			if(listitem == 6)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -2318.08, Float:cor2 = -1621.49, Float:cor3 = 483.72+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//гора Чиллиад
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -2318.08, -1621.49, 483.72+1);//гора Чиллиад
				}
				return 1;
			}
			if(listitem == 7)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -1426.55, Float:cor2 = -949.91, Float:cor3 = 201.09+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//холм сельской местности
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -1426.55, -949.91, 201.09+1);//холм сельской местности
				}
				return 1;
			}
			if(listitem == 8)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -2205.31, Float:cor2 = -2148.74, Float:cor3 = 46.26+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//запад сельской местности
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -2205.31, -2148.74, 46.26+1);//запад сельской местности
				}
				return 1;
			}
			if(listitem == 9)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 1243.24, Float:cor2 = 118.28, Float:cor3 = 20.39+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//восток сельской местности
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 1243.24, 118.28, 20.39+1);//восток сельской местности
				}
				return 1;
			}
			if(listitem == 10)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -2633.45, Float:cor2 = 1359.5, Float:cor3 = 7.12+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//клуб Джиззи
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -2633.45, 1359.5, 7.12+1);//клуб Джиззи
				}
				return 1;
			}
			if(listitem == 11)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -1981.07, Float:cor2 = 444.14, Float:cor3 = 35.17+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//центр SF
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -1981.07, 444.14, 35.17+1);//центр SF
				}
				return 1;
			}
			if(listitem == 12)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -2405.46, Float:cor2 = -597.09, Float:cor3 = 132.65+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//холм SF
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -2405.46, -597.09, 132.65+1);//холм SF
				}
				return 1;
			}
			if(listitem == 13)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -1653.02, Float:cor2 = -224.51, Float:cor3 = 14.14+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//взлётка аэропорта SF
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -1653.02, -224.51, 14.14+1);//взлётка аэропорта SF
				}
				return 1;
			}
			if(listitem == 14)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 417.29, Float:cor2 = 2503.67, Float:cor3 = 16.48+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//заброшеный аэропорт
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 417.29, 2503.67, 16.48+1);//заброшеный аэропорт
				}
				return 1;
			}
			if(listitem == 15)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 214.16, Float:cor2 = 1866.24, Float:cor3 = 13.14+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//зона 51
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 214.16, 1866.24, 13.14+1);//зона 51
				}
				return 1;
			}
			if(listitem == 16)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 2169.01, Float:cor2 = 1676.55, Float:cor3 = 10.82+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//казино Калигула
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 2169.01, 1676.55, 10.82+1);//казино Калигула
				}
				return 1;
			}
			if(listitem == 17)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 685.67, Float:cor2 = 895.24, Float:cor3 = -39.61+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//карьер
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 685.67, 895.24, -39.61+1);//карьер
				}
				return 1;
			}
			if(listitem == 18)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 1517.47, Float:cor2 = 1280.76, Float:cor3 = 10.81+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//взлётка аэропорта LV
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 1517.47, 1280.76, 10.81+1);//взлётка аэропорта LV
				}
				return 1;
			}
			if(listitem == 19)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 5925.69, Float:cor2 = -1470.15, Float:cor3 = 8.97+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//4-й город
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 5925.69, -1470.15, 8.97+1);//4-й город
				}
				return 1;
			}
			if(listitem == 20)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -2955.00, Float:cor2 = 5867.00, Float:cor3 = 11.00+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//остров 1
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -2955.00, 5867.00, 11.00+1);//остров 1
				}
				return 1;
			}
			if(listitem == 21)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 45.00, Float:cor2 = 5867.00, Float:cor3 = 11.00+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//остров 2
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 45.00, 5867.00, 11.00+1);//остров 2
				}
				return 1;
			}
			if(listitem == 22)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 9045.00, Float:cor2 = 5867.00, Float:cor3 = 11.00+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//остров 3
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 9045.00, 5867.00, 11.00+1);//остров 3
				}
				return 1;
			}
			if(listitem == 23)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 12045.00, Float:cor2 = 5867.00, Float:cor3 = 11.00+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//остров 4
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 12045.00, 5867.00, 11.00+1);//остров 4
				}
			}
		}else{
		gettime(timecor[0], timecor[1]);
		TimCor();//коррекция времени
  	   	format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

		//Clans system
#if (MOD44INS == 0)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nПравила сервера\nПравила для админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
#if (MOD44INS == 1)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 13)//меню Телепорты - 2   / дрифт, драг, трассы /
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			PlayCRTP[playerid] = 1;//блокировка контроля координат
			if(listitem == 0)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 1600.00, Float:cor2 = -2378.25, Float:cor3 = 13.38+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт аэропорта LS
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 1600.00, -2378.25, 13.38+1);//дрифт аэропорта LS
				}
				return 1;
			}
			if(listitem == 1)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 1479.66, Float:cor2 = 1205.61, Float:cor3 = 10.82+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт аэропорта LV
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 1479.66, 1205.61, 10.82+1);//дрифт аэропорта LV
				}
				return 1;
			}
			if(listitem == 2)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 2805.03, Float:cor2 = -1449.16, Float:cor3 = 40.03+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт 1
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 2805.03, -1449.16, 40.03+1);//дрифт 1
				}
				return 1;
			}
			if(listitem == 3)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 2262.4363, Float:cor2 = 1398.1263, Float:cor3 = 42.8203+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт 2
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 2262.4363, 1398.1263, 42.8203+1);//дрифт 2
				}
				return 1;
			}
			if(listitem == 4)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 2221.8330, Float:cor2 = 1961.9558, Float:cor3 = 31.7797+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт 3
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 2221.8330, 1961.9558, 31.7797+1);//дрифт 3
				}
				return 1;
			}
			if(listitem == 5)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 1147.8013, Float:cor2 = 2179.0205, Float:cor3 = 10.8203+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт 4
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 1147.8013, 2179.0205, 10.8203+1);//дрифт 4
				}
				return 1;
			}
			if(listitem == 6)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -761.3758, Float:cor2 = 2755.0085, Float:cor3 = 45.7734+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт 5
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -761.3758, 2755.0085, 45.7734+1);//дрифт 5
				}
				return 1;
			}
			if(listitem == 7)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -2130.9165, Float:cor2 = 920.9220, Float:cor3 = 79.8516+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт 6
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -2130.9165, 920.9220, 79.8516+1);//дрифт 6
				}
				return 1;
			}
			if(listitem == 8)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -2668.0022, Float:cor2 = 577.6458, Float:cor3 = 14.4592+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт 7
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -2668.0022, 577.6458, 14.4592+1);//дрифт 7
				}
				return 1;
			}
			if(listitem == 9)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -2703.9224, Float:cor2 = 403.8004, Float:cor3 = 4.3672+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт 8
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -2703.9224, 403.8004, 4.3672+1);//дрифт 8
				}
				return 1;
			}
			if(listitem == 10)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -2427.9668, Float:cor2 = -602.8188, Float:cor3 = 132.5560+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт 8
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -2427.9668, -602.8188, 132.5560+1);//дрифт 9
				}
				return 1;
			}
			if(listitem == 11)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 475.52, Float:cor2 = -2095.68, Float:cor3 = 3.81+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт бонус LS
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 475.52, -2095.68, 3.81+1);//дрифт бонус LS
				}
				return 1;
			}
			if(listitem == 12)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 370.03, Float:cor2 = -2026.16, Float:cor3 = 7.67+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//драг LS
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 370.03, -2026.16, 7.67+1);//драг LS
				}
				return 1;
			}
			if(listitem == 13)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 496.13, Float:cor2 = 6077.00, Float:cor3 = 10.92+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//драг
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 496.13, 6077.00, 10.92+1);//драг
				}
				return 1;
			}
			if(listitem == 14)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 1948.3428, Float:cor2 = -1400.5156, Float:cor3 = 13.2192+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//байкер-скейт парк LS
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 1948.3428, -1400.5156, 13.2192+1);//байкер-скейт парк LS
				}
				return 1;
			}
			if(listitem == 15)
			{
				if(LineStat[1] == 1)
				{
					if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						new regm = 2, per1, per2, Float:per3 = 89.00, Float:cor1 = 2865.18, Float:cor2 = -1657.29, Float:cor3 = 10.88+1;
						StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//трасса 1
					}
					else//иначе:
					{
						tpdrift[playerid] = 1;
	 					SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			 			SetPlayerPos(playerid, 2865.18, -1657.29, 10.88+1);
						SetPlayerFacingAngle(playerid, 89.00);
						SetCameraBehindPlayer(playerid);//трасса 1
					}
				}
				else
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","В данный момент трасса 1 отключена !\
					\n\n{00FF00}Для подключения этой трассы\n{00FF00}обратитесь к любому он-лайн админу !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				return 1;
			}
			if(listitem == 16)
			{
				if(LineStat[2] == 1)
				{
					if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						new regm = 2, per1, per2, Float:per3 = 167.00, Float:cor1 = 500.85, Float:cor2 = -281.20, Float:cor3 = 40.21+1;
						StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//трасса 2
					}
					else//иначе:
					{
						tpdrift[playerid] = 1;
	 					SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			 			SetPlayerPos(playerid, 500.85, -281.20, 40.21+1);
						SetPlayerFacingAngle(playerid, 167.00);
						SetCameraBehindPlayer(playerid);//трасса 3
					}
				}
				else
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","В данный момент трасса 2 отключена !\
					\n\n{00FF00}Для подключения этой трассы\n{00FF00}обратитесь к любому он-лайн админу !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				return 1;
			}
			if(listitem == 17)
			{
				if(LineStat[3] == 1)
				{
					if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						new regm = 2, per1, per2, Float:per3 = 181.00, Float:cor1 = -2421.23, Float:cor2 = 19.95, Float:cor3 = 35.09+1;
						StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//трасса 3
					}
					else//иначе:
					{
						tpdrift[playerid] = 1;
	 					SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			 			SetPlayerPos(playerid, -2421.23, 19.95, 35.09+1);
						SetPlayerFacingAngle(playerid, 181.00);
						SetCameraBehindPlayer(playerid);//трасса 3
					}
				}
				else
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","В данный момент трасса 3 отключена !\
					\n\n{00FF00}Для подключения этой трассы\n{00FF00}обратитесь к любому он-лайн админу !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				return 1;
			}
			if(listitem == 18)
			{
				if(LineStat[4] == 1)
				{
					if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						new regm = 2, per1, per2, Float:per3 = 202.00, Float:cor1 = -1415.81, Float:cor2 = 2318.55, Float:cor3 = 54.48+1;
						StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//трасса 4
					}
					else//иначе:
					{
						tpdrift[playerid] = 1;
	 					SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			 			SetPlayerPos(playerid, -1415.81, 2318.55, 54.48+1);
						SetPlayerFacingAngle(playerid, 202.00);
						SetCameraBehindPlayer(playerid);//трасса 4
					}
				}
				else
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","В данный момент трасса 4 отключена !\
					\n\n{00FF00}Для подключения этой трассы\n{00FF00}обратитесь к любому он-лайн админу !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				return 1;
			}
			if(listitem == 19)
			{
				if(LineStat[5] == 1)
				{
					if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
					{
						new regm = 2, per1, per2, Float:per3 = 1.00, Float:cor1 = 2708.81, Float:cor2 = 1736.47, Float:cor3 = 6.74+1;
						StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//трасса 5
					}
					else//иначе:
					{
						tpdrift[playerid] = 1;
	 					SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
			 			SetPlayerPos(playerid, 2708.81, 1736.47, 6.74+1);
						SetPlayerFacingAngle(playerid, 1.00);
						SetCameraBehindPlayer(playerid);//трасса 5
					}
				}
				else
				{
					ShowPlayerDialog(playerid,2,0,"Информация.","В данный момент трасса 5 отключена !\
					\n\n{00FF00}Для подключения этой трассы\n{00FF00}обратитесь к любому он-лайн админу !","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
				}
				return 1;
			}
			if(listitem == 20)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -1675.55, Float:cor2 = 278.10, Float:cor3 = 7.19+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 1
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -1675.55, 278.10, 7.19+1);//дрифт-трасса 1
				}
				return 1;
			}
			if(listitem == 21)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 6276.00, Float:cor2 = -3292.84, Float:cor3 = 11.63+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 2
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 6276.00, -3292.84, 11.63+1);//дрифт-трасса 2
				}
				return 1;
			}
			if(listitem == 22)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 5853.88, Float:cor2 = 894.52, Float:cor3 = 11.00+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 3
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 5853.88, 894.52, 11.00+1);//дрифт-трасса 3
				}
				return 1;
			}
			if(listitem == 23)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 5813.85, Float:cor2 = 2907.17, Float:cor3 = 11.03+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 4
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 5813.85, 2907.17, 11.03+1);//дрифт-трасса 4
				}
				return 1;
			}
			if(listitem == 24)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 2818.26, Float:cor2 = -5739.77, Float:cor3 = 11.99+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 5
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 2818.26, -5739.77, 11.99+1);//дрифт-трасса 5
				}
				return 1;
			}
			if(listitem == 25)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 2411.72, Float:cor2 = -4119.59, Float:cor3 = 13.69+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 6
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 2411.72, -4119.59, 13.69+1);//дрифт-трасса 6
				}
				return 1;
			}
			if(listitem == 26)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 9121.15, Float:cor2 = 2941.34, Float:cor3 = 11.18+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 7
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 9121.15, 2941.34, 11.18+1);//дрифт-трасса 7
				}
				return 1;
			}
			if(listitem == 27)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -9273.04, Float:cor2 = -6014.93, Float:cor3 = 11.48+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 8
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -9273.04, -6014.93, 11.48+1);//дрифт-трасса 8
				}
				return 1;
			}
			if(listitem == 28)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -5937.48, Float:cor2 = -6142.41, Float:cor3 = 10.36+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 9
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -5937.48, -6142.41, 10.36+1);//дрифт-трасса 9
				}
				return 1;
			}
			if(listitem == 29)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -9051.16, Float:cor2 = -8925.66, Float:cor3 = 5.34+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 10
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -9051.16, -8925.66, 5.34+1);//дрифт-трасса 10
				}
				return 1;
			}
			if(listitem == 30)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -6211.97, Float:cor2 = -8966.21, Float:cor3 = 18.80+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 11
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -6211.97, -8966.21, 18.80+1);//дрифт-трасса 11
				}
				return 1;
			}
			if(listitem == 31)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -3032.29, Float:cor2 = -8935.98, Float:cor3 = 16.30+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 12
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -3032.29, -8935.98, 16.30+1);//дрифт-трасса 12
				}
				return 1;
			}
			if(listitem == 32)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -229.41, Float:cor2 = -8371.25, Float:cor3 = 11.59+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 13
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -229.41, -8371.25, 11.59+1);//дрифт-трасса 13
				}
				return 1;
			}
			if(listitem == 33)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = 3108.82, Float:cor2 = -8963.74, Float:cor3 = 33.98+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//дрифт-трасса 14
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, 3108.82, -8963.74, 33.98+1);//дрифт-трасса 14
				}
				return 1;
			}
			if(listitem == 34)
			{
				DestrCar(playerid);
				new per1 = 15, per2 = 0, Float:cor1 = -1487.27, Float:cor2 = 949.43, Float:cor3 = 1036.84+1;//Дерби 1
				SetTimerEx("TPDerby", 500, 0, "dddfff", playerid,per1,per2,Float:cor1,Float:cor2,Float:cor3);
				return 1;
			}
			if(listitem == 35)
			{
				DestrCar(playerid);
				new per1 = 14, per2 = 0, Float:cor1 = -1464.78, Float:cor2 = 1557.51, Float:cor3 = 1052.53+1;//Дерби 2
				SetTimerEx("TPDerby", 500, 0, "dddfff", playerid,per1,per2,Float:cor1,Float:cor2,Float:cor3);
				return 1;
			}
			if(listitem == 36)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -2961.64, Float:cor2 = -5889.14, Float:cor3 = 590.60+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт-спираль
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -2961.64, -5889.14, 590.60+1);//Дрифт-спираль
				}
				return 1;
			}
			if(listitem == 37)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -2023.99, Float:cor2 = -134.94, Float:cor3 = 35.29+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Дрифт-восьмёрка
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -2023.99, -134.94, 35.29+1);//Дрифт-восьмёрка
				}
				return 1;
			}
			if(listitem == 38)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -8722.82, Float:cor2 = 6152.05, Float:cor3 = 27.17+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Мото-паркур 1
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -8722.82, 6152.05, 27.17+1);//Мото-паркур 1
				}
				return 1;
			}
			if(listitem == 39)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -8708.47, Float:cor2 = 3363.80, Float:cor3 = 25.48+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Мото-паркур 2
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -8708.47, 3363.80, 25.48+1);//Мото-паркур 2
				}
				return 1;
			}
			if(listitem == 40)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -8905.41, Float:cor2 = -190.98, Float:cor3 = 163.72+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Мото-паркур 3
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -8905.41, -190.98, 163.72+1);//Мото-паркур 3
				}
				return 1;
			}
#if (MOD11INS <= 3)
			if(listitem == 41)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -8955.26, Float:cor2 = -3241.27, Float:cor3 = 13.72+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Мото-паркур 4
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -8955.26, -3241.27, 13.72+1);//Мото-паркур 4
				}
			}
#endif
#if (MOD11INS == 4)
			if(listitem == 41)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -8955.26, Float:cor2 = -3241.27, Float:cor3 = 13.72+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Мото-паркур 4
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -8955.26, -3241.27, 13.72+1);//Мото-паркур 4
				}
				return 1;
			}
			if(listitem == 42)
			{
				if(GetPlayerState(playerid) == 2)//если игрок на месте водителя, то:
				{
					new regm = 1, per1, per2, Float:per3, Float:cor1 = -122.11, Float:cor2 = -5816.30, Float:cor3 = 10.31+1;
					StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);//Стант-остров
				}
				else//иначе:
				{
					tpdrift[playerid] = 1;
	 				SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
			 		SetPlayerPos(playerid, -122.11, -5816.30, 10.31+1);//Стант-остров
				}
			}
#endif
		}else{
		gettime(timecor[0], timecor[1]);
		TimCor();//коррекция времени
  	   	format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

		//Clans system
#if (MOD44INS == 0)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nПравила сервера\nПравила для админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
#if (MOD44INS == 1)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 43)//меню Анимации
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{
			SetTimerEx("DopAnim", 300, 0, "ii", playerid, listitem);
			if(listitem == 0)
			{
//				SendClientMessage(playerid, COLOR_RED, "В разработке.");
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_HANDSUP);//поднять руки
				return 1;
			}
			if(listitem == 1)
			{
				ApplyAnimation(playerid,"PED", "SEAT_down", 4.1, 0, 0, 0, 1, 0, 0);//сесть-1
				return 1;
			}
			if(listitem == 2)
			{
				ApplyAnimation(playerid,"Attractors", "Stepsit_in", 4.1, 0, 0, 0, 1, 0, 0);//сесть-2
				return 1;
			}
			if(listitem == 3)
			{
				ApplyAnimation(playerid,"CRACK", "crckidle2", 4.1 ,0 ,0 ,0 ,1 ,0 ,0);//лечь
				return 1;
			}
			if(listitem == 4)
			{
				ApplyAnimation(playerid,"PED", "IDLE_chat", 4.1, 1, 1, 1, 0, 0, 0);//разговаривать
				return 1;
			}
			if(listitem == 5)
			{
				new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2, Float:angle, Float:angle2, Float:anglexx;
				new plint, plvw;
				GetPlayerPos(playerid, x, y, z);
				GetPlayerFacingAngle(playerid, angle);
				plint = GetPlayerInterior(playerid);
				plvw = GetPlayerVirtualWorld(playerid);
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerConnected(i))
					{
						if(GetPlayerInterior(i) == plint && GetPlayerVirtualWorld(i) == plvw && playerid != i)
						{
							GetPlayerPos(i, x2, y2, z2);
							GetPlayerFacingAngle(i, angle2);
							anglexx = angle - angle2;
							if(anglexx < 0){anglexx = anglexx * -1;}
							if((-1<(x-x2)<1 && -1<(y-y2)<1 && -1<(z-z2)<1) && (x != x2 || y != y2 || z != z2) && (anglexx > 150 && anglexx < 210))
							{
								ApplyAnimation(playerid,"GANGS", "hndshkfa", 4.1, 0, 0, 0, 0, 0, 0);//рукопожатие
								ApplyAnimation(i,"GANGS", "hndshkfa", 4.1, 0, 0, 0, 0, 0, 0);//рукопожатие
								return 1;
							}
						}
					}
				}
				return 1;
			}
			if(listitem == 6)
			{
				new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2, Float:angle, Float:angle2, Float:anglexx;
				new plint, plvw;
				GetPlayerPos(playerid, x, y, z);
				GetPlayerFacingAngle(playerid, angle);
				plint = GetPlayerInterior(playerid);
				plvw = GetPlayerVirtualWorld(playerid);
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerConnected(i))
					{
						if(GetPlayerInterior(i) == plint && GetPlayerVirtualWorld(i) == plvw && playerid != i)
						{
							GetPlayerPos(i, x2, y2, z2);
							GetPlayerFacingAngle(i, angle2);
							anglexx = angle - angle2;
							if(anglexx < 0){anglexx = anglexx * -1;}
							if((-1<(x-x2)<1 && -1<(y-y2)<1 && -1<(z-z2)<1) && (x != x2 || y != y2 || z != z2) && (anglexx > 150 && anglexx < 210))
							{
								ApplyAnimation(playerid,"KISSING", "Playa_Kiss_02", 4.1, 0, 0, 0, 0, 0, 0);//поцелуй
								ApplyAnimation(i,"KISSING", "Playa_Kiss_02", 4.1, 0, 0, 0, 0, 0, 0);//поцелуй
								SetTimerEx("DopAnim22", 400, 0, "ii", playerid, i);
								return 1;
							}
						}
					}
				}
				return 1;
			}
			if(listitem == 7)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);//звонить по телефону
				return 1;
			}
			if(listitem == 8)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);//убрать телефон
				return 1;
			}
			if(listitem == 9)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);//танец-1
				return 1;
			}
			if(listitem == 10)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);//танец-2
				return 1;
			}
			if(listitem == 11)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);//танец-3
				return 1;
			}
			if(listitem == 12)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);//танец-4
				return 1;
			}
			if(listitem == 13)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);//спрайт
				return 1;
			}
			if(listitem == 14)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);//сигарета
				return 1;
			}
			if(listitem == 15)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);//пиво
				return 1;
			}
			if(listitem == 16)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);//вино
				return 1;
			}
			if(listitem == 17)
			{
				ApplyAnimation(playerid,"PED", "WALK_drunk", 4.1, 1, 1, 1, 0, 0, 0);//набухаться
				return 1;
			}
			if(listitem == 18)
			{
				SetPlayerSpecialAction(playerid, 68);
//				ApplyAnimation(playerid,"PAULNMAC", "Piss_loop", 4.1, 0, 0, 0, 0, 0, 0);//справить малую нужду
				return 1;
			}
			if(listitem == 19)
			{
				ClearAnimations(playerid);//остановить анимацию
				return 1;
			}
			if(listitem == 20)
			{
				SetPlayerDrunkLevel(playerid, 0);//убрать степень опьянения
				return 1;
			}
			if(listitem == 21)
			{
				SetPlayerAttachedObject(playerid, 2, 19066, 2, 0.13, 0.0, 0.0, 0.0, 80.0, 80.0);//новогодняя шапка
				return 1;
			}
			if(listitem == 22)
			{
				RemovePlayerAttachedObject(playerid, 2);//убрать новогоднюю шапку
			}
		}else{
		ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Действия", "Пополнить жизнь и броню\nАнимации\nСменить цвет ника\
		\nСменить скин\nСменить время\nСменить пароль\nСменить стиль боя\nСамоубийство\nПросмотреть собственную статистику", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 12);
		}
		return 1;
	}
	if(dialogid == 44)//смена цвета ника
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			ColorPlay[playerid] = ColNick[listitem];
			SetPlayerColor(playerid, ColorPlay[playerid]);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				SetPlayerMarkerForPlayer(i, playerid, ColorPlay[playerid]);
			}

   			if(PGang[playerid] > 0)//Clans system
			{
				ShowPlayerDialog(playerid,2,0,"Информация.","У Вас поменялся цвет ника, но цвет в чате\
				\nостался в цвете Вашего клана.","OK","");
				SetPVarInt(playerid, "DlgCont", 2);
			}

		}else{
		ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Действия", "Пополнить жизнь и броню\nАнимации\nСменить цвет ника\
		\nСменить скин\nСменить время\nСменить пароль\nСменить стиль боя\nСамоубийство\nПросмотреть собственную статистику", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 12);
		}
		return 1;
	}
	if(dialogid == 12)//меню Действия
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
	    	if(listitem == 0)
			{
				if(StopHeal[playerid] != 0 && PlayerInfo[playerid][pAdmin] == 0)//если переменная задержки НЕ равна 0,
				{//И игрок НЕ админ, то:
					new dopcis;
					dopcis = FCislit(StopHeal[playerid]);
					switch(dopcis)
					{
						case 0: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунд !", StopHeal[playerid]);
						case 1: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунду !", StopHeal[playerid]);
						case 2: format(string, sizeof(string), " Сейчас нельзя !   Попробуйте через %d секунды !", StopHeal[playerid]);
					}
					SendClientMessage(playerid,COLOR_RED,string);
				}
				else//иначе:
				{
					SetPlayerHealth(playerid,100);
					SetPlayerArmour(playerid,100);
					if(PlayerInfo[playerid][pAdmin] == 0)//если игрок НЕ админ, то:
					{
						StopHeal[playerid] = 5;//устанавливаем переменную задержки на 5 секунд
					}
				}
				return 1;
			}
	    	if(listitem == 1)
			{
				ShowPlayerDialog(playerid, 43, DIALOG_STYLE_LIST, "Анимации", "Поднять руки\nСесть-1\nСесть-2\nЛечь\nРазговаривать\
				\nРукопожатие\nПоцелуй\nЗвонить по телефону\nУбрать телефон\nТанец-1\nТанец-2\nТанец-3\nТанец-4\nСпрайт\
				\nСигарета\nПиво\nВино\nНабухаться\nСправить малую нужду\nОстановить анимацию   / для малой нужды 'F' /\
				\nУбрать степень опьянения\nНовогодняя шапка\nУбрать новогоднюю шапку", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 43);
				return 1;
			}
			if(listitem == 2)
			{

   				if(PGang[playerid] > 0 && (PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pVIP] == 0))//Clans system
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка !","Если Вы состоите в клане, то для изменения цвета\
					\nВам нужно иметь VIP-уровень, или быть админом !!!","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}

				ShowPlayerDialog(playerid, 44, DIALOG_STYLE_LIST, "Цвет ника", "{FF0000}Красный\n{FF3F3F}Светло-красный\
				\n{FF3F00}Кирпичный\n{BF3F00}Коричневый\n{FF7F3F}Светло-коричневый\n{FF7F00}Оранжевый\n{FFFF00}Жёлтый\
				\n{3FFF3F}Светло-зелёный\n{00FF00}Зелёный\n{00BF00}Тёмно-зелёный\n{00FFFF}Бирюзовый\n{00BFFF}Голубой\
				\n{3F3FFF}Светло-синий\n{0000FF}Синий\n{7F3FFF}Светло-фиолетовый\n{7F00FF}Фиолетовый\
				\n{FF00FF}Сиреневый\n{7F7F7F}Серый\n{FFFFFF}Невидимый", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 44);
				return 1;
			}
			if(listitem == 3)
			{

				if(PGang[playerid] > 0 && GSkin[PGang[playerid]][GangLvl[playerid]-1] < 500 && (PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pVIP] == 0))//Clans system
				{
					ShowPlayerDialog(playerid,2,0,"Ошибка !","Если Вы состоите в клане, и на Вашем уровне\nустановлен скин, то для изменения скина Вам\
					\nнужно иметь VIP-уровень, или быть админом !!!","OK","");
					SetPVarInt(playerid, "DlgCont", 2);
					return 1;
				}

	    		ShowPlayerDialog(playerid, 16, DIALOG_STYLE_INPUT,"Смена скина","Введите ид скина, на который Вы хотите сменить:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 16);
				return 1;
			}
			if(listitem == 4)
			{
				ShowPlayerDialog(playerid, 18, DIALOG_STYLE_LIST, "Установка времени", "00:00\n01:00\n02:00\n03:00\n04:00\n05:00\n06:00\n07:00\n08:00\n09:00\n10:00\n11:00\n12:00\n13:00\n14:00\n15:00\n16:00\n17:00\n18:00\n19:00\n20:00\n21:00\n22:00\n23:00", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 18);
				return 1;
			}
			if(listitem == 5)
			{
	    		ShowPlayerDialog(playerid, 49, DIALOG_STYLE_INPUT,"Смена пароля","Введите новый пароль:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 49);
				return 1;
			}
			if(listitem == 6)
			{
				ShowPlayerDialog(playerid, 50, DIALOG_STYLE_LIST, "Смена стиля боя", "Normal\nBoxing\nKung Fu\nKnee-head\nGrab-kick\nElbow", "OK", "Отмена");
				SetPVarInt(playerid, "DlgCont", 50);
				return 1;
			}
			if(listitem == 7)
			{
				SetPlayerArmour(playerid,0);
				SetPlayerHealth(playerid,0);
				return 1;
			}
			if(listitem == 8)
			{
				STATPlayer(playerid);
			}
		}else{
		gettime(timecor[0], timecor[1]);
		TimCor();//коррекция времени
  	   	format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);

		//Clans system
#if (MOD44INS == 0)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nПравила сервера\nПравила для админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
#if (MOD44INS == 1)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
		SetPVarInt(playerid, "DlgCont", 4);

		}
		return 1;
	}
	if(dialogid == 49)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
 			if(strlen(inputtext) < 3 || strlen(inputtext) > 20)
			{
				SendClientMessage(playerid, COLOR_RED, " Длина пароля должна быть от 3 до 20 символов !");
 				ShowPlayerDialog(playerid, 49, DIALOG_STYLE_INPUT,"Смена пароля","Введите новый пароль:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 49);
				return 1;
			}
    		if(PassControl(inputtext) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В пароле можно использовать ТОЛЬКО латинские");
				SendClientMessage(playerid, COLOR_RED, " символы: от a до z , от A до Z , и цифры от 0 до 9 !");
 				ShowPlayerDialog(playerid, 49, DIALOG_STYLE_INPUT,"Смена пароля","Введите новый пароль:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 49);
				return 1;
			}
			if(strlen(inputtext) > 0 && strcmp(inputtext, PlayerInfo[playerid][pKey], false) == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Вы ввели свой старый пароль !!!");
 				ShowPlayerDialog(playerid, 49, DIALOG_STYLE_INPUT,"Смена пароля","Введите новый пароль:","Сменить","Отмена");
				SetPVarInt(playerid, "DlgCont", 49);
				return 1;
			}
			format(string, 256, " Игрок %s [%d] сменил свой пароль на (%s) FP: (%s) .", RealName[playerid], playerid, inputtext, PlayerInfo[playerid][pKey]);
			print(string);
			format(string, 256, " Вы сменили свой пароль на (%s)", inputtext);
			SendClientMessage(playerid, COLOR_GREEN, string);
			strmid(PlayerInfo[playerid][pKey], inputtext, 0, strlen(inputtext), 255);
		}else{
		ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Действия", "Пополнить жизнь и броню\nАнимации\nСменить цвет ника\
		\nСменить скин\nСменить время\nСменить пароль\nСменить стиль боя\nСамоубийство\nПросмотреть собственную статистику", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 12);
		}
		return 1;
	}
	if(dialogid == 50)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
	    	if(listitem == 0)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				return 1;
			}
	    	if(listitem == 1)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
				return 1;
			}
			if(listitem == 2)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
				return 1;
			}
			if(listitem == 3)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
				return 1;
			}
			if(listitem == 4)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
				return 1;
			}
			if(listitem == 5)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
			}
		}else{
		ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Действия", "Пополнить жизнь и броню\nАнимации\nСменить цвет ника\
		\nСменить скин\nСменить время\nСменить пароль\nСменить стиль боя\nСамоубийство\nПросмотреть собственную статистику", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 12);
		}
		return 1;
	}
	if(dialogid == 14)//стритрейсерские авто
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 562, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Elegy");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 565, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Flash");
				return 1;
			}
	    	if(listitem == 2)
			{
				new vehid = 559, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Jester");
				return 1;
			}
	    	if(listitem == 3)
			{
				new vehid = 561, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Stratum");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 560, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Sultan");
				return 1;
			}
	    	if(listitem == 5)
			{
				new vehid = 558, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Uranus");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 22)//гоночные авто
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 429, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Banshee");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 541, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Bullet");
				return 1;
			}
	    	if(listitem == 2)
			{
				new vehid = 415, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Cheetah");
				return 1;
			}
	    	if(listitem == 3)
			{
				new vehid = 480, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Comet");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 434, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Hotknife");
				return 1;
			}
	    	if(listitem == 5)
			{
				new vehid = 494, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Hotring");
				return 1;
			}
			if(listitem == 6)
			{
				new vehid = 502, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Hotring A");
				return 1;
			}
	    	if(listitem == 7)
			{
				new vehid = 503, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Hotring B");
				return 1;
			}
	    	if(listitem == 8)
			{
				new vehid = 411, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Infernus");
				return 1;
			}
	    	if(listitem == 9)
			{
				new vehid = 506, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Super GT");
				return 1;
			}
	    	if(listitem == 10)
			{
				new vehid = 451, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Turismo");
				return 1;
			}
	    	if(listitem == 11)
			{
				new vehid = 555, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Windsor");
				return 1;
			}
	    	if(listitem == 12)
			{
				new vehid = 477, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  ZR-350");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 23)//лоурайдеры
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 536, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Blade");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 575, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Broadway");
				return 1;
			}
	    	if(listitem == 2)
			{
				new vehid = 534, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Remington");
				return 1;
			}
	    	if(listitem == 3)
			{
				new vehid = 567, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Savanna");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 535, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Slamvan");
				return 1;
			}
	    	if(listitem == 5)
			{
				new vehid = 576, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Tornado");
				return 1;
			}
	    	if(listitem == 6)
			{
				new vehid = 412, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Voodoo");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 24)//двухдверные седаны
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 602, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Alpha");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 496, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Blista");
				return 1;
			}
	    	if(listitem == 2)
			{
				new vehid = 401, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Bravura");
				return 1;
			}
	    	if(listitem == 3)
			{
				new vehid = 518, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Buccaneer");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 527, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Cadrona");
				return 1;
			}
	    	if(listitem == 5)
			{
				new vehid = 589, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Club");
				return 1;
			}
	    	if(listitem == 6)
			{
				new vehid = 419, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Esperanto");
				return 1;
			}
			if(listitem == 7)
			{
				new vehid = 587, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Euros");
				return 1;
			}
			if(listitem == 8)
			{
				new vehid = 533, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Feltzer");
				return 1;
			}
	    	if(listitem == 9)
			{
				new vehid = 526, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Fortune");
				return 1;
			}
	    	if(listitem == 10)
			{
				new vehid = 474, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Hermes");
				return 1;
			}
	    	if(listitem == 11)
			{
				new vehid = 545, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Hustler");
				return 1;
			}
	    	if(listitem == 12)
			{
				new vehid = 517, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Majestic");
				return 1;
			}
	    	if(listitem == 13)
			{
				new vehid = 410, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Manana");
				return 1;
			}
	    	if(listitem == 14)
			{
				new vehid = 600, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Picador");
				return 1;
			}
	    	if(listitem == 15)
			{
				new vehid = 436, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Previon");
				return 1;
			}
	    	if(listitem == 16)
			{
				new vehid = 439, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Stallion");
				return 1;
			}
	    	if(listitem == 17)
			{
				new vehid = 549, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Tampa");
				return 1;
			}
	    	if(listitem == 18)
			{
				new vehid = 491, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Virgo");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 25)//четырёхдверные седаны
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 445, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Admiral");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 507, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Elegant");
				return 1;
			}
	    	if(listitem == 2)
			{
				new vehid = 585, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Emperor");
				return 1;
			}
	    	if(listitem == 3)
			{
				new vehid = 466, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Glendale");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 492, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Greenwood");
				return 1;
			}
	    	if(listitem == 5)
			{
				new vehid = 546, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Intruder");
				return 1;
			}
			if(listitem == 6)
			{
				new vehid = 551, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Merit");
				return 1;
			}
	    	if(listitem == 7)
			{
				new vehid = 516, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Nebula");
				return 1;
			}
	    	if(listitem == 8)
			{
				new vehid = 467, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Oceanic");
				return 1;
			}
	    	if(listitem == 9)
			{
				new vehid = 426, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Premier");
				return 1;
			}
	    	if(listitem == 10)
			{
				new vehid = 547, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Primo");
				return 1;
			}
	    	if(listitem == 11)
			{
				new vehid = 405, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Sentinal");
				return 1;
			}
	    	if(listitem == 12)
			{
				new vehid = 580, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Stafford");
				return 1;
			}
	    	if(listitem == 13)
			{
				new vehid = 409, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Stretch");
				return 1;
			}
	    	if(listitem == 14)
			{
				new vehid = 550, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Sunrise");
				return 1;
			}
	    	if(listitem == 15)
			{
				new vehid = 566, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Tahoma");
				return 1;
			}
	    	if(listitem == 16)
			{
				new vehid = 540, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Vincent");
				return 1;
			}
	    	if(listitem == 17)
			{
				new vehid = 421, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Washington");
				return 1;
			}
	    	if(listitem == 18)
			{
				new vehid = 529, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Willard");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 26)//джипы
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 579, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Huntley");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 400, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Landstalker");
				return 1;
			}
	    	if(listitem == 2)
			{
				new vehid = 404, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Perrenial");
				return 1;
			}
	    	if(listitem == 3)
			{
				new vehid = 489, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Rancher");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 479, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Regina");
				return 1;
			}
	    	if(listitem == 5)
			{
				new vehid = 442, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Romero");
				return 1;
			}
	    	if(listitem == 6)
			{
				new vehid = 458, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Solair");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 27)//мощные авто
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 402, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Buffalo");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 542, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Clover");
				return 1;
			}
	    	if(listitem == 2)
			{
				new vehid = 603, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Phoenix");
				return 1;
			}
	    	if(listitem == 3)
			{
				new vehid = 475, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Sabre");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 28)//грузовики и рабочий транспорт
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
	    	if(listitem == 0)
			{
				new vehid = 499, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Benson");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 498, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Boxville");
				return 1;
			}
			if(listitem == 2)
			{
				new vehid = 609, vehcol1 = 0, vehcol2 = 0, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Boxville-Black");
				return 1;
			}
	    	if(listitem == 3)
			{
				new vehid = 524, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Cement Truck");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 532, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Combine Harvestor");
				return 1;
			}
			if(listitem == 5)
			{
				new vehid = 578, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  DFT-30");
				return 1;
			}
	    	if(listitem == 6)
			{
				new vehid = 486, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Dozer");
				return 1;
			}
	    	if(listitem == 7)
			{
				new vehid = 406, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Dumper");
				return 1;
			}
			if(listitem == 8)
			{
				new vehid = 573, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Dune");
				return 1;
			}
	    	if(listitem == 9)
			{
				new vehid = 455, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Flatbed");
				return 1;
			}
	    	if(listitem == 10)
			{
				new vehid = 588, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Hotdog");
				return 1;
			}
			if(listitem == 11)
			{
				new vehid = 403, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Linerunner");
				return 1;
			}
	    	if(listitem == 12)
			{
				new vehid = 423, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Mr Woopee");
				return 1;
			}
	    	if(listitem == 13)
			{
				new vehid = 414, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Mule");
				return 1;
			}
			if(listitem == 14)
			{
				new vehid = 443, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Packer");
				return 1;
			}
	    	if(listitem == 15)
			{
				new vehid = 515, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Roadtrain");
				return 1;
			}
	    	if(listitem == 16)
			{
				new vehid = 514, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Tanker");
				return 1;
			}
			if(listitem == 17)
			{
				new vehid = 531, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Tractor");
				return 1;
			}
	    	if(listitem == 18)
			{
				new vehid = 456, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Yankee");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 29)//лёгкие грузовики и фургоны
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
	    	if(listitem == 0)
			{
				new vehid = 459, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Topfun");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 422, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Bobcat");
				return 1;
			}
			if(listitem == 2)
			{
				new vehid = 482, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Burrito");
				return 1;
			}
	    	if(listitem == 3)
			{
				new vehid = 530, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Forklift");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 418, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Moonbeam");
				return 1;
			}
			if(listitem == 5)
			{
				new vehid = 572, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Mower");
				return 1;
			}
	    	if(listitem == 6)
			{
				new vehid = 582, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Newsvan");
				return 1;
			}
	    	if(listitem == 7)
			{
				new vehid = 413, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Pony");
				return 1;
			}
			if(listitem == 8)
			{
				new vehid = 440, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Rumpo");
				return 1;
			}
	    	if(listitem == 9)
			{
				new vehid = 543, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Sadler");
				return 1;
			}
	    	if(listitem == 10)
			{
				new vehid = 583, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Tug");
				return 1;
			}
			if(listitem == 11)
			{
				new vehid = 478, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Walton");
				return 1;
			}
	    	if(listitem == 12)
			{
				new vehid = 554, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Yosemite");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 30)//транспорт для развлечения
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
	    	if(listitem == 0)
			{
				new vehid = 568, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Bandito");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 424, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  BF Injection");
				return 1;
			}
			if(listitem == 2)
			{
				new vehid = 504, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Bloodring Banger");
				return 1;
			}
	    	if(listitem == 3)
			{
				new vehid = 457, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Caddy");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 483, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Camper");
				return 1;
			}
			if(listitem == 5)
			{
				new vehid = 508, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Journey");
				return 1;
			}
	    	if(listitem == 6)
			{
				new vehid = 571, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Kart");
				return 1;
			}
	    	if(listitem == 7)
			{
				new vehid = 500, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Mesa");
				return 1;
			}
			if(listitem == 8)
			{
				new vehid = 444, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Monster");
				return 1;
			}
	    	if(listitem == 9)
			{
				new vehid = 556, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Monster A");
				return 1;
			}
	    	if(listitem == 10)
			{
				new vehid = 557, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Monster B");
				return 1;
			}
			if(listitem == 11)
			{
				new vehid = 471, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Quad");
				return 1;
			}
	    	if(listitem == 12)
			{
				new vehid = 495, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Sandking");
				return 1;
			}
	    	if(listitem == 13)
			{
				new vehid = 539, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Vortex");
				return 1;
			}
	    	if(listitem == 14)
			{
			    if(playcar[playerid] == 0)
			    {
					SetPlayerSpecialAction(playerid, 2);
					SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  JetPack");
				}else{
					if(neon[playerid][0] != 0) { DestroyObject(neon[playerid][0]); }//убрать неон
					if(neon[playerid][1] != 0) { DestroyObject(neon[playerid][1]); }//убрать неон
					neon[playerid][0] = 0;//присваиваем неону несуществующий номер объекта
					neon[playerid][1] = 0;//присваиваем неону несуществующий номер объекта
					neon[playerid][2] = 0;//несуществующий ид транспорта с неоном
					for(new i=0;i<MAX_PLAYERS;i++)//поиск и удаление чужого неона И обход антикрашера - 3
					{
						if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
						{
							if(GetPlayerVehicleID(i) == playcar[playerid])
							{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
								EnterTick33[i] = 1;//обход антикрашера - 3
							}
						}
						if(playcar[playerid] == neon[i][2])
						{
							DestroyObject(neon[i][0]);//убрать неон
							DestroyObject(neon[i][1]);//убрать неон
							neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][2] = 0;//несуществующий ид транспорта с неоном
 						}
					}
					DestroyVehicle(playcar[playerid]);//уничтожить свой транспорт
					playcar[playerid] = 0;//несуществующий ид транспорта
					SetPlayerSpecialAction(playerid, 2);
					SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  JetPack");
				}
/*
			    if(playcar[playerid] == 0)
			    {
	               	new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					CreatePickup(370, 4, x, y, z);
					SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  JetPack");
				}else{
					if(neon[playerid][0] != 0) { DestroyObject(neon[playerid][0]); }//убрать неон
					if(neon[playerid][1] != 0) { DestroyObject(neon[playerid][1]); }//убрать неон
					neon[playerid][0] = 0;//присваиваем неону несуществующий номер объекта
					neon[playerid][1] = 0;//присваиваем неону несуществующий номер объекта
					neon[playerid][2] = 0;//несуществующий ид транспорта с неоном
					for(new i=0;i<MAX_PLAYERS;i++)//поиск и удаление чужого неона И обход антикрашера - 3
					{
						if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
						{
							if(GetPlayerVehicleID(i) == playcar[playerid])
							{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
								EnterTick33[i] = 1;//обход антикрашера - 3
							}
						}
						if(playcar[playerid] == neon[i][2])
						{
							DestroyObject(neon[i][0]);//убрать неон
							DestroyObject(neon[i][1]);//убрать неон
							neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
							neon[i][2] = 0;//несуществующий ид транспорта с неоном
 						}
					}
					DestroyVehicle(playcar[playerid]);//уничтожить свой транспорт
					playcar[playerid] = 0;//несуществующий ид транспорта
				    new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					CreatePickup(370, 4, x, y, z);
					SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  JetPack");
				}
*/
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 31)//велосипеды и мотоциклы
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
	    	if(listitem == 0)
			{
				new vehid = 481, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  BMX");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 509, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Bike");
				return 1;
			}
			if(listitem == 2)
			{
				new vehid = 510, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Mountain Bike");
				return 1;
			}
	    	if(listitem == 3)
			{
				new vehid = 581, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  BF-400");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 462, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Faggio");
				return 1;
			}
			if(listitem == 5)
			{
				new vehid = 521, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  FCR-900");
				return 1;
			}
	    	if(listitem == 6)
			{
				new vehid = 463, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Freeway");
				return 1;
			}
	    	if(listitem == 7)
			{
				new vehid = 522, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  NRG-500");
				return 1;
			}
			if(listitem == 8)
			{
				new vehid = 461, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  PCJ-600");
				return 1;
			}
	    	if(listitem == 9)
			{
				new vehid = 448, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Pizzaboy");
				return 1;
			}
	    	if(listitem == 10)
			{
				new vehid = 468, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Sanchez");
				return 1;
			}
	    	if(listitem == 11)
			{
				new vehid = 586, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Wayfarer");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 32)//авто для транспортировки
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 485, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Baggage");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 431, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Bus");
				return 1;
			}
	    	if(listitem == 2)
			{
				new vehid = 438, vehcol1 = 6, vehcol2 = 6, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Cabbie");
				return 1;
			}
			if(listitem == 3)
			{
				new vehid = 437, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Coach");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 574, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Sweeper");
				return 1;
			}
			if(listitem == 5)
			{
				new vehid = 420, vehcol1 = 6, vehcol2 = 6, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Taxi");
				return 1;
			}
	    	if(listitem == 6)
			{
				new vehid = 525, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Towtruck");
				return 1;
			}
	    	if(listitem == 7)
			{
				new vehid = 408, vehcol1 = col4car, vehcol2 = col4car, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Trashmaster");
				return 1;
			}
	    	if(listitem == 8)
			{
				new vehid = 552, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Utility Van");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 33)//коммерческий и государственный транспорт
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 416, vehcol1 = 8, vehcol2 = 3, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Ambulance");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 433, vehcol1 = 0, vehcol2 = 1, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Barracks");
				return 1;
			}
	    	if(listitem == 2)
			{
				new vehid = 427, vehcol1 = 0, vehcol2 = 1, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Enforcer");
				return 1;
			}
			if(listitem == 3)
			{
				new vehid = 490, vehcol1 = 0, vehcol2 = 1, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  FBI Rancher");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 528, vehcol1 = 0, vehcol2 = 1, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  FBI Truck");
				return 1;
			}
			if(listitem == 5)
			{
				new vehid = 407, vehcol1 = 3, vehcol2 = 8, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Fire Truck");
				return 1;
			}
	    	if(listitem == 6)
			{
				new vehid = 544, vehcol1 = 3, vehcol2 = 8, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Fire Truck A");
				return 1;
			}
	    	if(listitem == 7)
			{
				new vehid = 523, vehcol1 = 0, vehcol2 = 1, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  HPV-1000");
				return 1;
			}
	    	if(listitem == 8)
			{
				new vehid = 470, vehcol1 = 0, vehcol2 = 1, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Patriot");
				return 1;
			}
	    	if(listitem == 9)
			{
				new vehid = 596, vehcol1 = 0, vehcol2 = 1, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Police Los Santos");
				return 1;
			}
			if(listitem == 10)
			{
				new vehid = 597, vehcol1 = 0, vehcol2 = 1, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Police San Fierro");
				return 1;
			}
	    	if(listitem == 11)
			{
				new vehid = 598, vehcol1 = 0, vehcol2 = 1, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Police Las Venturas");
				return 1;
			}
	    	if(listitem == 12)
			{
				new vehid = 599, vehcol1 = 0, vehcol2 = 1, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Police Ranger");
				return 1;
			}
	    	if(listitem == 13)
			{
				new vehid = 428, vehcol1 = 0, vehcol2 = 1, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Securicar");
				return 1;
			}
	    	if(listitem == 14)
			{
				new vehid = 601, vehcol1 = 0, vehcol2 = 1, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Swat Tank");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 34)//воздушный транспорт
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 592, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Andromada");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 577, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  AT-400");
				return 1;
			}
	    	if(listitem == 2)
			{
				new vehid = 511, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Beagle");
				return 1;
			}
			if(listitem == 3)
			{
				new vehid = 548, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Cargobob");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 512, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Cropduster");
				return 1;
			}
			if(listitem == 5)
			{
				new vehid = 593, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Dodo");
				return 1;
			}
	    	if(listitem == 6)
			{
				new vehid = 417, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Leviathan");
				return 1;
			}
	    	if(listitem == 7)
			{
				new vehid = 487, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Maverick");
				return 1;
			}
	    	if(listitem == 8)
			{
				new vehid = 553, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Nevada");
				return 1;
			}
			if(listitem == 9)
			{
				new vehid = 488, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  News Maverick");
				return 1;
			}
	    	if(listitem == 10)
			{
				new vehid = 497, vehcol1 = 0, vehcol2 = 1, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Police Maverick");
				return 1;
			}
	    	if(listitem == 11)
			{
				new vehid = 563, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Raindance");
				return 1;
			}
	    	if(listitem == 12)
			{
				new vehid = 519, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Shamal");
				return 1;
			}
	    	if(listitem == 13)
			{
				new vehid = 460, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Skimmer");
				return 1;
			}
			if(listitem == 14)
			{
				new vehid = 469, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Sparrow");
				return 1;
			}
	    	if(listitem == 15)
			{
				new vehid = 513, vehcol1 = 8, vehcol2 = 15, dispz = 1;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Stunt Plane");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 35)//водный транспорт
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 472, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Coastguard");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 473, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Dingy");
				return 1;
			}
	    	if(listitem == 2)
			{
				new vehid = 493, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Jetmax");
				return 1;
			}
			if(listitem == 3)
			{
				new vehid = 595, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Launch");
				return 1;
			}
	    	if(listitem == 4)
			{
				new vehid = 484, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Marquis");
				return 1;
			}
	    	if(listitem == 5)
			{
				new vehid = 453, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Reefer");
				return 1;
			}
	    	if(listitem == 6)
			{
				new vehid = 452, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Speeder");
				return 1;
			}
	    	if(listitem == 7)
			{
				new vehid = 446, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Squallo");
				return 1;
			}
	    	if(listitem == 8)
			{
				new vehid = 454, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Tropic");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}
	if(dialogid == 36)//радиоуправляемые и побитые авто
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
		{
			if(listitem == 0)
			{
				new vehid = 441, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  RC Bandit");
				return 1;
			}
	    	if(listitem == 1)
			{
				new vehid = 594, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  RC Cam");
				return 1;
			}
			if(listitem == 2)
			{
				new vehid = 465, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  RC Goblin");
				return 1;
			}
	    	if(listitem == 3)
			{
				new vehid = 564, vehcol1 = 8, vehcol2 = 15, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  RC Tiger");
				return 1;
			}
			if(listitem == 4)
			{
				new vehid = 604, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Glendale");
				return 1;
			}
	    	if(listitem == 5)
			{
				new vehid = 605, vehcol1 = col4car, vehcol2 = col4car, dispz = 0;
				VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
				SendClientMessage(playerid, COLOR_GREENISHGOLD, "Выбран  Sadler");
			}
		}else{
		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_LIST, "Тип транспорта", "Стритрейсерские авто\nГоночные авто\
		\nЛоурайдеры\nДвухдверные седаны\nЧетырёхдверные седаны\nДжипы\nМощные авто\nГрузовики и рабочий транспорт\
		\nЛёгкие грузовики и фургоны\nТранспорт для развлечения\nВелосипеды и мотоциклы\nАвто для транспортировки\
		\nКоммерческий и государственный транспорт\nВоздушный транспорт\nВодный транспорт\
		\nРадиоуправляемые и побитые авто", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 21);
		}
		return 1;
	}

	if(dialogid == 1001)//Clans system
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
		    switch(listitem)
		    {
		        case 0:
		        {
		            if((PGang[playerid] == 0 || PGang[playerid] == -600) && GetPVarInt(playerid, "PlMon") >= 1000000 && razresh[playerid] == 1)
					{
						if(GetFreeGang() >= (MAX_GANGS - 1))
						{
							printf("[ClansSystem] %s [%d] не смог создать клан (лимит кланов исчерпан).", RealName[playerid], playerid);
							SendClientMessage(playerid, 0xFF0000FF, "Клан не может быть создан ( лимит кланов исчерпан ) !");
							return true;
						}
	                	ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание клана", "Введите название клана:", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1002);
	                }else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы не должны состоять ни в каком клане, у Вас должно быть как минимум 1000000 $,");
						SendClientMessage(playerid, 0xFF0000FF, "и Вы должны получить разрешение на создание клана от любого админа сервера.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
						\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
						\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 1:
		        {
		            if(PGang[playerid] > 0 && GangLvl[playerid] == 6 && razresh[playerid] == 4)
					{
	                	ShowPlayerDialog(playerid, 1016, DIALOG_STYLE_MSGBOX, "Удаление клана", "Вы точно хотите удалить свой клан?", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1016);
	                }else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в клане, быть его главой, и Вы должны получить разрешение");
						SendClientMessage(playerid, 0xFF0000FF, "на удаление клана от любого админа сервера.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
						\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
						\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 2:
		        {
		            if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
	                	ShowPlayerDialog(playerid, 1011, DIALOG_STYLE_LIST, "Назначение скинов клана", "1 - Начинающий\n2 - Игрок\n3 - Про игрок\n4 - Элита\n5 - Зам главы\n6 - Глава", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1011);
	                }else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в клане, и быть главой клана.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
						\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
						\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 3:
		        {
		            if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
	                	ShowPlayerDialog(playerid, 1010, DIALOG_STYLE_MSGBOX, "Назначение спавна клана", "Вы точно хотите назначить место спавна на этом месте?", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1010);
	                }else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в клане, и быть главой клана.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
						\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
						\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 4:
		        {
		            if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
						if(GSpawnX[PGang[playerid]] == 0.00 && GSpawnY[PGang[playerid]] == 0.00 && GSpawnZ[PGang[playerid]] == 0.00 &&
						GInter[PGang[playerid]] == 0 && GWorld[PGang[playerid]] == 0)
						{
							SendClientMessage(playerid, 0xFF0000FF, "Спавн клана НЕ был назначен ранее !");
							ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
							\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
							\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
							SetPVarInt(playerid, "DlgCont", 1001);
							return true;
						}
	                	ShowPlayerDialog(playerid, 1015, DIALOG_STYLE_MSGBOX, "Отмена спавна клана", "Вы точно хотите отменить спавн клана?", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1015);
	                }else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в клане, и быть главой клана.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
						\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
						\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 5:
		        {
		            if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
	                	ShowPlayerDialog(playerid, 1013, DIALOG_STYLE_INPUT, "Назначение уровня", "Введите id игрока, которому хотите назначить уровень:", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1013);
	                }else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в клане, и быть главой клана.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
						\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
						\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 6:
		        {
					if(PGang[playerid] > 0 && GangLvl[playerid] >= 4)
					{
	                	ShowPlayerDialog(playerid, 1004, DIALOG_STYLE_INPUT, "Приглашение в клан", "Введите id игрока, которого хотите пригласить:", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1004);
					}else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в клане, и быть как минимум элитой клана.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
						\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
						\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 7:
		        {
					if(PGang[playerid] > 0 && GangLvl[playerid] >= 5)
					{
	                	ShowPlayerDialog(playerid, 1006, DIALOG_STYLE_INPUT, "Изгнание из клана", "Введите id игрока, которого хотите изгнать:", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1006);
					}else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в клане, и быть как минимум зам главы клана.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
						\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
						\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 8:
		        {
					if(PGang[playerid] == 0 || PGang[playerid] == -600)
					{
						if(PGang[playerid] == 0)
						{
							PGang[playerid] = -600;
							SendClientMessage(playerid, 0xFF0000FF, "Вы отключили разрешение приглашать Вас в клан.");
                        	return true;
						}
						else
						{
							PGang[playerid] = 0;
							SendClientMessage(playerid, 0x00FF00FF, "Вы включили разрешение приглашать Вас в клан.");
                        	return true;
						}
					}else{
						SendClientMessage(playerid, 0xFFFF00FF, "Вы уже состоите в клане ! (откл. / вкл. разрешения - не актуально) .");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
						\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
						\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
						return true;
					}
		        }
		        case 9:
		        {
					if(PGang[playerid] > 0 && GangLvl[playerid] == 6 && razresh[playerid] == 2)
					{
	                	ShowPlayerDialog(playerid, 1007, DIALOG_STYLE_INPUT, "Смена названия клана", "Введите новое название клана:", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1007);
					}else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в клане, быть его главой, и Вы должны получить разрешение");
						SendClientMessage(playerid, 0xFF0000FF, "на изменение названия клана от любого админа сервера.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
						\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
						\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
				}
		        case 10:
		        {
					if(PGang[playerid] > 0 && GangLvl[playerid] == 6)
					{
	                	ShowPlayerDialog(playerid, 1008, DIALOG_STYLE_INPUT, "Смена цвета клана", "Введите новый цвет клана: (формат RRGGBB)", "Принять", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1008);
					}else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в клане, и быть главой клана.");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
						\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
						\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		        case 11:
		        {
					if(PGang[playerid] > 0)
					{
						new string11[32], string22[128], string33[128], string44[128], string55[128], string99[512];
						switch(GangLvl[playerid])
						{
							case 1: format(string11, sizeof(string11), "Начинающий");
							case 2: format(string11, sizeof(string11), "Игрок");
							case 3: format(string11, sizeof(string11), "Про игрок");
							case 4: format(string11, sizeof(string11), "Элита");
							case 5: format(string11, sizeof(string11), "Зам главы");
							case 6: format(string11, sizeof(string11), "Глава");
						}
						format(string22, sizeof(string22), "Время и дата регистрации: [ %s ]", GTDReg[PGang[playerid]]);
						format(string33, sizeof(string33), "Мой уровень в клане: %d ( %s )", GangLvl[playerid], string11);
						format(string44, sizeof(string44), "Глава клана: %s", GHead[PGang[playerid]]);
						format(string55, sizeof(string55), "Число игроков в клане: %d", GPlayers[PGang[playerid]]);
						format(string99, sizeof(string99), "%s\n%s\n%s\n%s", string22, string33, string44, string55);
						ShowPlayerDialog(playerid,1018,0,"Информация о клане.",string99,"OK","");
						SetPVarInt(playerid, "DlgCont", 1018);
					}else{
						SendClientMessage(playerid, 0xFF0000FF, "Вы должны состоять в клане !");
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
						\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
						\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
						SetPVarInt(playerid, "DlgCont", 1001);
					}
					return true;
		        }
		    }
		}else{
		gettime(timecor[0], timecor[1]);
		TimCor();//коррекция времени
  	   	format(string, sizeof(string), "Игровое меню. Точное время: %02d:%02d",timecor[0],timecor[1]);
#if (MOD44INS == 0)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nПравила сервера\nПравила для админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
#if (MOD44INS == 1)
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, string, "Транспортное средство\nПредметы\nТелепорты - 1   / места /\nТелепорты - 2   / дрифт, драг, трассы, дерби /\nДействия\nКодекс игроков\nКодекс админов\nOn-Line админы\nО сервере\nСистема кланов", "Выбор", "Отмена");
#endif
		SetPVarInt(playerid, "DlgCont", 4);
		}
		return true;
	}
	if(dialogid == 1002)//создание клана
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание клана", "Введите название клана:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1002);
				return true;
			}
			if(strlen(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "В названии клана должен быть хотябы 1 символ !");
 				ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание клана", "Введите название клана:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1002);
				return true;
			}
			if(strlen(inputtext) > 128)
			{
				SendClientMessage(playerid, 0xFF0000FF, "В названии клана должно быть не больше 128 символов !");
 				ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание клана", "Введите название клана:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1002);
				return true;
			}
			new para1[130], para2;
			format(para1, 130, inputtext);
			para2 = GNameCon(para1);
			if(para2 == -1)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Неверный формат смены цвета внутри названия клана !");
				SendClientMessage(playerid, 0xFF0000FF, "Цвет должен состоять из 6 символов формата RRGGBB !");
 				ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание клана", "Введите название клана:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1002);
				return true;
			}
			if(para2 == -2)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Слишком тёмный изменяющийся цвет внутри названия клана !");
 				ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание клана", "Введите название клана:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1002);
				return true;
			}
			format(GangName[playerid], 130, para1);
	    	for(new i=1; i<(MAX_GANGS - 1); i++)
		    {
      			if(strcmp(GangName[playerid],GName[i],false) == 0 && strlen(GName[i]) != 0)
	        	{
			  		ShowPlayerDialog(playerid,1018,0,"Информация.","Клан с таким именем был создан ранее !","OK","");
					SetPVarInt(playerid, "DlgCont", 1018);
					return true;
				}
			}
			ShowPlayerDialog(playerid, 1003, DIALOG_STYLE_INPUT, "Создание клана", "Введите цвет клана: (формат RRGGBB)", "Принять", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1003);
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
			\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
			\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1003)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1003, DIALOG_STYLE_INPUT, "Создание клана", "Введите цвет клана: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1003);
				return true;
			}
			if(strlen(inputtext) != 6)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Цвет клана должен состоять из 6 символов формата RRGGBB !");
 				ShowPlayerDialog(playerid, 1003, DIALOG_STYLE_INPUT, "Создание клана", "Введите цвет клана: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1003);
				return true;
			}
			new para1[16], para2[16], para3, para4;
			format(para1, 16, inputtext);
			format(para2, 16, "%sFF", para1);
			para4 = HexToInt(para2, para3);
			if(para4 == -1)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Неверный формат цвета клана !");
				SendClientMessage(playerid, 0xFF0000FF, "Цвет клана должен состоять из 6 символов формата RRGGBB !");
 				ShowPlayerDialog(playerid, 1003, DIALOG_STYLE_INPUT, "Создание клана", "Введите цвет клана: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1003);
				return true;
			}
			if(para4 == -2)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Слишком тёмный цвет клана !");
 				ShowPlayerDialog(playerid, 1003, DIALOG_STYLE_INPUT, "Создание клана", "Введите цвет клана: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1003);
				return true;
			}
			razresh[playerid] = 0;
			format(string, sizeof(string), " <Clans> Игрок %s [%d] использовал разрешение на создание клана.", RealName[playerid], playerid);
			print(string);
			SendAdminMessage(COLOR_RED, string);
			if (PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Вы использовали разрешение на создание клана.");
			}
			new gangdata;
			gangdata = GetFreeGang();
			Gang[gangdata] = 1;
			PGang[playerid] = gangdata;
			GangLvl[playerid] = 6;
			format(GName[PGang[playerid]], 130, GangName[playerid]);
			format(GColor[PGang[playerid]], 16, para2);
			GColorDec[PGang[playerid]] = para3;
			strdel(GColorHex[PGang[playerid]], 0, 16);
			strcat(GColorHex[PGang[playerid]], para1);
			ColorPlay[playerid] = GColorDec[PGang[playerid]];
			SetPlayerColor(playerid, ColorPlay[playerid]);//устанавливаем цвет ника
			for(new i=0;i<MAX_PLAYERS;i++)//устанавливаем цвет маркера для всех игроков
			{
				SetPlayerMarkerForPlayer(i, playerid, GColorDec[PGang[playerid]]);
			}
//			GivePlayerMoney(playerid, -100);
			format(string, sizeof(string), "Клан успешно создан!\r\nНазвание клана: {%s}%s\r\n{A9C4E4}Цвет клана: %s", GColorHex[PGang[playerid]], GName[PGang[playerid]], GColor[PGang[playerid]]);
			ShowPlayerDialog(playerid,1018,0,"Создание клана",string,"Принять","");
			SetPVarInt(playerid, "DlgCont", 1018);
			strdel(GHead[PGang[playerid]], 0, 64);
			strcat(GHead[PGang[playerid]], RealName[playerid]);
			printf("[ClansSystem] %s [%d] создал клан %s (цвет клана %s) [ID: %d] .", RealName[playerid], playerid, GName[PGang[playerid]], GColor[PGang[playerid]], gangdata);
			GPlayers[PGang[playerid]] = 1;
			strdel(GTDReg[PGang[playerid]], 0, 32);//очистка времени и даты регистрации клана
			gettime(timecor[0], timecor[1]);
			getdate(timecor[2], timecor[3], timecor[4]);
			TimCor();//коррекция времени
			DatCor();//коррекция даты
			format(GTDReg[PGang[playerid]], 32, "%02d:%02d - %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
			GSpawnX[PGang[playerid]] = 0.00;//заполнение массивов клана
			GSpawnY[PGang[playerid]] = 0.00;
			GSpawnZ[PGang[playerid]] = 0.00;
			GInter[PGang[playerid]] = 0;
			GWorld[PGang[playerid]] = 0;
			GSkin[PGang[playerid]][0] = 500;
			GSkin[PGang[playerid]][1] = 500;
			GSkin[PGang[playerid]][2] = 500;
			GSkin[PGang[playerid]][3] = 500;
			GSkin[PGang[playerid]][4] = 500;
			GSkin[PGang[playerid]][5] = 500;
			new f[256];
			format(f, 256, "gangs/%i.ini", gangdata);
			new cfile = ini_createFile(f);
			if(cfile >= 0)
			{
			    ini_setString(cfile, "Gang TDReg", GTDReg[PGang[playerid]]);
			    ini_setString(cfile, "Gang head", GHead[PGang[playerid]]);
			    ini_setString(cfile, "Gang name", GName[PGang[playerid]]);
			    ini_setString(cfile, "Gang color", GColor[PGang[playerid]]);
   			    ini_setFloat(cfile, "SpawnX", GSpawnX[PGang[playerid]]);
			    ini_setFloat(cfile, "SpawnY", GSpawnY[PGang[playerid]]);
			    ini_setFloat(cfile, "SpawnZ", GSpawnZ[PGang[playerid]]);
		    	ini_setInteger(cfile, "GInter", GInter[PGang[playerid]]);
		    	ini_setInteger(cfile, "GWorld", GWorld[PGang[playerid]]);
       			ini_setInteger(cfile, "Skin1", GSkin[PGang[playerid]][0]);
			    ini_setInteger(cfile, "Skin2", GSkin[PGang[playerid]][1]);
			    ini_setInteger(cfile, "Skin3", GSkin[PGang[playerid]][2]);
			    ini_setInteger(cfile, "Skin4", GSkin[PGang[playerid]][3]);
			    ini_setInteger(cfile, "Skin5", GSkin[PGang[playerid]][4]);
			    ini_setInteger(cfile, "Skin6", GSkin[PGang[playerid]][5]);
			    ini_setInteger(cfile, "Players", GPlayers[PGang[playerid]]);
				ini_closeFile(cfile);
			}
			idgangsave[playerid] = PGang[playerid];//записываем в список ID клана игрока
			SetTimerEx("SaveGangOn", 300, 0, "i", gangdata);
	    }
		else
		{
			ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Создание клана", "Введите название клана:", "Принять", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1002);
		}
		return true;
	}
	if(dialogid == 1016)//удаление клана
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			razresh[playerid] = 0;
			format(string, sizeof(string), " <Clans> Игрок %s [%d] использовал разрешение на удаление клана.", RealName[playerid], playerid);
			print(string);
			SendAdminMessage(COLOR_RED, string);
			if (PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Вы использовали разрешение на удаление клана.");
			}
			for(new i = 0; i < MAX_PLAYERS; i++)//цикл для всех игроков
			{
				if(PGang[playerid] == idgangsave[i])
				{//поиск ID клана в списке:
					idgangsave[i] = 0;//очистка ID клана для записи
				}
			}
			GangSA[PGang[playerid]] = 0;
			SetTimerEx("SaveGangOff", 300, 0, "i", playerid);
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
			\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
			\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1004)//приглашение в клан
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1004, DIALOG_STYLE_INPUT, "Приглашение в клан", "Введите id игрока, которого хотите пригласить:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1004);
				return true;
			}
			new id22;
			id22 = strval(inputtext);
			if(IsPlayerConnected(id22))
			{
				if(PGang[id22] == -600)
				{
					SendClientMessage(playerid, 0xFF0000FF, "Этот игрок отключил разрешение приглашать себя в клан !");
					return true;
				}
				if(playspa[id22] == 1)
				{
					if(PGang[id22] == PGang[playerid])
					{
						return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок уже в Вашем клане !");
					}
					if(PGang[id22] == 0)
					{
				    	format(strdln, sizeof(strdln), "Игрок %s пригласил\nВас в клан {%s}%s\n\
						\n{FF3F3F}ВНИМАНИЕ !!! Вы НЕ сможете самостоятельно уйти из клана !\
						\nИз клана Вас могут только изгнать ! Поэтому, внимательно", RealName[playerid], GColorHex[PGang[playerid]], GName[PGang[playerid]]);
				    	format(strdln, sizeof(strdln), "%s\nобдумайте своё решение: вступать, или не вступать в клан !\n\
						\n{A9C4E4}Что бы Вас не могли приглашать в клан -\nнужно отключить разрешение приглашения:\
						\nМеню, Система кланов,\nОткл. / вкл. разрешение приглашать Вас в клан", strdln);
				    	ShowPlayerDialog(id22, 1005, DIALOG_STYLE_MSGBOX, "Приглашение в клан", strdln, "Принять", "Отказать");
						SetPVarInt(id22, "DlgCont", 1005);
				    	format(string, sizeof(string), "Игрок %s пригласил игрока %s в клан.", RealName[playerid], RealName[id22]);
						printf("[ClansSystem] %s [%d] пригласил игрока %s в клан.", RealName[playerid], playerid, RealName[id22]);
				    	for(new i; i<MAX_PLAYERS; i++)
				    	{
				        	if(IsPlayerConnected(i))
				        	{
				        		if(PGang[i] == PGang[playerid])
				        		{
									SendClientMessage(i, 0x00FF00FF, string);
				        		}
							}
						}
				    	tgang[id22] = PGang[playerid];
					}else return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок уже в клане !");
				}else return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок ещё не заспавнился !");
			}else return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок не в игре !");
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
			\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
			\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1005)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
            PGang[playerid] = tgang[playerid];
            GangLvl[playerid] = 1;
			if(GSkin[PGang[playerid]][GangLvl[playerid]-1] < 500)
			{//если у 1-го уровня установлен скин, то сменить скин вступившему игроку
				SetPVarInt(playerid, "PlSkin", GSkin[PGang[playerid]][GangLvl[playerid]-1]);
				SetPlayerSkin(playerid, GetPVarInt(playerid, "PlSkin"));
			}
			ColorPlay[playerid] = GColorDec[PGang[playerid]];
			SetPlayerColor(playerid, ColorPlay[playerid]);//устанавливаем цвет ника
			for(new i=0;i<MAX_PLAYERS;i++)//устанавливаем цвет маркера для всех игроков
			{
				SetPlayerMarkerForPlayer(i, playerid, GColorDec[PGang[playerid]]);
			}
            format(string, sizeof(string), "Вы вступили в клан: {%s}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]]);
            SendClientMessage(playerid, 0xFFFF00FF, string);
            format(string, sizeof(string), "Игрок %s вступил в Ваш клан !", RealName[playerid]);
			printf("[ClansSystem] %s [%d] вступил в клан %s.", RealName[playerid], playerid, GName[PGang[playerid]]);
            for(new i; i<MAX_PLAYERS; i++)
            {
				if(IsPlayerConnected(i))
				{
					if(PGang[i] == PGang[playerid] && playerid != i)
					{
				    	SendClientMessage(i, 0xFFFF00FF, string);
					}
				}
            }
			GPlayers[PGang[playerid]]++;
			GangSave(PGang[playerid]);//запись ID клана в файл
	    }
	    else
		{
            format(string, sizeof(string), "Вы отказались от вступления в клан: {%s}%s", GColorHex[tgang[playerid]], GName[tgang[playerid]]);
            SendClientMessage(playerid, 0xFF0000FF, string);
            format(string, sizeof(string), "Игрок %s отказался от вступления в Ваш клан !", RealName[playerid]);
			printf("[ClansSystem] %s [%d] отказался от вступления в клан %s.", RealName[playerid], playerid, GName[tgang[playerid]]);
            for(new i; i<MAX_PLAYERS; i++)
            {
				if(IsPlayerConnected(i))
				{
					if(PGang[i] == tgang[playerid] && playerid != i)
					{
				    	SendClientMessage(i, 0xFF0000FF, string);
					}
				}
            }
		}
		tgang[playerid] = -1600;
		return true;
	}
	if(dialogid == 1006)//изгнание из клана
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1006, DIALOG_STYLE_INPUT, "Изгнание из клана", "Введите id игрока, которого хотите изгнать:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1006);
				return true;
			}
			new dopper333;
			dopper333 = strval(inputtext);
			if(IsPlayerConnected(dopper333))
			{
				if(PGang[dopper333] == PGang[playerid])
				{
					if(dopper333 != playerid)
					{
						if(GangLvl[dopper333] <= GangLvl[playerid])
						{
							if(idgangsave[dopper333] > 0)//если ID клана для записи - активен, то:
							{
								new perloc;
								idgangsave[dopper333] = 0;//очистка ID клана для записи
								perloc = 0;
								while(perloc < MAX_PLAYERS)//цикл для всех игроков
								{
									if(PGang[dopper333] == PGang[perloc] && dopper333 != perloc)
									{//если есть хотя бы один игрок из клана выходящего, то:
										idgangsave[perloc] = PGang[dopper333];
										break;
									}
									perloc++;
								}
							}
							idgangsave[dopper333] = 0;//очистка ID клана для записи
							PGang[dopper333] = 0;
							GangLvl[dopper333] = 0;
							format(string, 256, "Вы были изгнаны из клана игроком %s !", RealName[playerid]);
							SendClientMessage(dopper333, 0xFF0000FF, string);
            				format(string, sizeof(string), "Игрок %s изгнал из клана игрока %s !", RealName[playerid], RealName[dopper333]);
							printf("[ClansSystem] %s [%d] изгнал из клана игрока %s.", RealName[playerid], playerid, RealName[dopper333]);
            				for(new i; i<MAX_PLAYERS; i++)
            				{
								if(IsPlayerConnected(i))
								{
									if(PGang[i] == PGang[playerid])
									{
				    					SendClientMessage(i, 0xFF0000FF, string);
									}
								}
            				}
							GPlayers[PGang[playerid]]--;
							GangSave(PGang[playerid]);//запись ID клана в файл
						}else return SendClientMessage(playerid, 0xFF0000FF, "Вы не можете изгнать главу клана !");
					}else return SendClientMessage(playerid, 0xFF0000FF, "Вы не можете изгнать самого себя !");
				}else return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок не в Вашем клане !");
			}else return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок не в игре !");
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
			\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
			\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1007)//смена названия клана
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1007, DIALOG_STYLE_INPUT, "Смена названия клана", "Введите новое название клана:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1007);
				return true;
			}
			if(strlen(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "В названии клана должен быть хотябы 1 символ !");
 				ShowPlayerDialog(playerid, 1007, DIALOG_STYLE_INPUT, "Смена названия клана", "Введите новое название клана:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1007);
				return true;
			}
			if(strlen(inputtext) > 128)
			{
				SendClientMessage(playerid, 0xFF0000FF, "В названии клана должно быть не больше 128 символов !");
 				ShowPlayerDialog(playerid, 1007, DIALOG_STYLE_INPUT, "Смена названия клана", "Введите новое название клана:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1007);
				return true;
			}
			new para1[130], para2;
			format(para1, 130, inputtext);
			para2 = GNameCon(para1);
			if(para2 == -1)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Неверный формат смены цвета внутри названия клана !");
				SendClientMessage(playerid, 0xFF0000FF, "Цвет должен состоять из 6 символов формата RRGGBB !");
 				ShowPlayerDialog(playerid, 1007, DIALOG_STYLE_INPUT, "Смена названия клана", "Введите новое название клана:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1007);
				return true;
			}
			if(para2 == -2)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Слишком тёмный изменяющийся цвет внутри названия клана !");
 				ShowPlayerDialog(playerid, 1007, DIALOG_STYLE_INPUT, "Смена названия клана", "Введите новое название клана:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1007);
				return true;
			}
			format(GangName[playerid], 130, para1);
	    	for(new i=1; i<(MAX_GANGS - 1); i++)
		    {
      			if(strcmp(GangName[playerid],GName[i],false) == 0 && strlen(GName[i]) != 0)
	        	{
			  		ShowPlayerDialog(playerid,1018,0,"Информация.","Клан с таким именем был создан ранее !","OK","");
					SetPVarInt(playerid, "DlgCont", 1018);
					return true;
				}
			}
			razresh[playerid] = 0;
			format(string, sizeof(string), " <Clans> Игрок %s [%d] использовал разрешение на изменение названия клана.", RealName[playerid], playerid);
			print(string);
			SendAdminMessage(COLOR_RED, string);
			if (PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Вы использовали разрешение на изменение названия клана.");
			}
			format(GName[PGang[playerid]], 130, GangName[playerid]);
			format(string, sizeof(string), "Теперь название Вашего клана: {%s}%s", GColorHex[PGang[playerid]], GName[PGang[playerid]]);
			SendClientMessage(playerid, 0x00FF00FF, string);
			printf("[ClansSystem] %s [%d] сменил название клана на %s.", RealName[playerid], playerid, GName[PGang[playerid]]);
			GangSave(PGang[playerid]);//запись ID клана в файл
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
			\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
			\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1008)//смена цвета клана
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1008, DIALOG_STYLE_INPUT, "Смена цвета клана", "Введите новый цвет клана: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1008);
				return true;
			}
			if(strlen(inputtext) != 6)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Цвет клана должен состоять из 6 символов формата RRGGBB !");
 				ShowPlayerDialog(playerid, 1008, DIALOG_STYLE_INPUT, "Смена цвета клана", "Введите новый цвет клана: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1008);
				return true;
			}
			new para1[16], para2[16], para3, para4;
			format(para1, 16, inputtext);
			format(para2, 16, "%sFF", para1);
			para4 = HexToInt(para2, para3);
			if(para4 == -1)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Неверный формат цвета клана !");
				SendClientMessage(playerid, 0xFF0000FF, "Цвет клана должен состоять из 6 символов формата RRGGBB !");
 				ShowPlayerDialog(playerid, 1008, DIALOG_STYLE_INPUT, "Смена цвета клана", "Введите новый цвет клана: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1008);
				return true;
			}
			if(para4 == -2)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Слишком тёмный цвет клана !");
 				ShowPlayerDialog(playerid, 1008, DIALOG_STYLE_INPUT, "Смена цвета клана", "Введите новый цвет клана: (формат RRGGBB)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1008);
				return true;
			}
			format(GColor[PGang[playerid]], 16, para2);
			GColorDec[PGang[playerid]] = para3;
			strdel(GColorHex[PGang[playerid]], 0, 16);
			strcat(GColorHex[PGang[playerid]], para1);
			format(string, sizeof(string), "Теперь цвет Вашего клана: %s", GColor[PGang[playerid]]);
			SendClientMessage(playerid, 0x00FF00FF, string);
			printf("[ClansSystem] %s [%d] сменил цвет клана на %s.", RealName[playerid], playerid, GColor[PGang[playerid]]);
			GangSave(PGang[playerid]);//запись ID клана в файл
			for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PGang[i] == PGang[playerid])//если игрок состоит в Вашем клане, то:
					{
						ColorPlay[i] = GColorDec[PGang[playerid]];
						SetPlayerColor(i, ColorPlay[i]);//устанавливаем цвет ника
						for(new j=0;j<MAX_PLAYERS;j++)//устанавливаем цвет маркера для всех игроков
						{
							SetPlayerMarkerForPlayer(j, i, GColorDec[PGang[playerid]]);
						}
					}
				}
			}
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
			\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
			\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1010)//назначение спавна клана
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
	        new Float:x, Float:y, Float:z, Interpl, Worldpl;
			GetPlayerPos(playerid, x, y, z);
			Interpl = GetPlayerInterior(playerid);
			Worldpl = GetPlayerVirtualWorld(playerid);
			if(PlayerInfo[playerid][pAdmin] == 0)
			{
				if((-15500 >= x >= -20000 && 15500 <= y <= 20000) ||
				((Worldpl < 6000 || Worldpl > 6999) && z > 1200) ||
				(6000 <= Worldpl <= 6999 && (z < 2900 || z > 3500)))
				{
					ShowPlayerDialog(playerid,1018,0,"Ошибка.","В выбранном месте нельзя назначить спавн клана !","OK","");
					SetPVarInt(playerid, "DlgCont", 1018);
					return true;
				}
			}
			GSpawnX[PGang[playerid]] = x;
			GSpawnY[PGang[playerid]] = y;
			GSpawnZ[PGang[playerid]] = z;
			GInter[PGang[playerid]] = Interpl;
			GWorld[PGang[playerid]] = Worldpl;
			SendClientMessage(playerid, 0x00FF00FF, "Вы назначили спавн клана.");
			printf("[ClansSystem] %s [%d] назначил спавн клана.", RealName[playerid], playerid);
			GangSave(PGang[playerid]);//запись ID клана в файл
	    }
		ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
		\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
		\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 1001);
		return true;
	}
	if(dialogid == 1015)//отмена спавна клана
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
	        new Float:x = 0.0, Float:y = 0.0, Float:z = 0.0, Interpl = 0, Worldpl = 0;
			GSpawnX[PGang[playerid]] = x;
			GSpawnY[PGang[playerid]] = y;
			GSpawnZ[PGang[playerid]] = z;
			GInter[PGang[playerid]] = Interpl;
			GWorld[PGang[playerid]] = Worldpl;
			SendClientMessage(playerid, 0xFFFF00FF, "Вы отменили спавн клана.");
			printf("[ClansSystem] %s [%d] отменил спавн клана.", RealName[playerid], playerid);
			GangSave(PGang[playerid]);//запись ID клана в файл
	    }
		ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
		\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
		\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
		SetPVarInt(playerid, "DlgCont", 1001);
		return true;
	}
	if(dialogid == 1011)//назначение скинов клана
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			switch(listitem)
			{
	            case 0: gangskin[playerid] = 1;
	            case 1: gangskin[playerid] = 2;
	            case 2: gangskin[playerid] = 3;
		        case 3: gangskin[playerid] = 4;
	            case 4: gangskin[playerid] = 5;
	            case 5: gangskin[playerid] = 6;
			}
			ShowPlayerDialog(playerid, 1012, DIALOG_STYLE_INPUT, "Назначение скинов клану", "Введите id скина, который хотите назначить:\
			\n(id = 500  отменит назначение скина в выбранном слоте)", "Принять", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1012);
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
			\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
			\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1012)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1012, DIALOG_STYLE_INPUT, "Назначение скинов клану", "Введите id скина, который хотите назначить:\
				\n(id = 500  отменит назначение скина в выбранном слоте)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1012);
				return true;
			}
			new level = strval(inputtext);
#if (MOD11INS <= 3)
			if((level > 299 || level < 0) && level != 500)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Неправильный id скина !");
				ShowPlayerDialog(playerid, 1012, DIALOG_STYLE_INPUT, "Назначение скинов клану", "Введите id скина, который хотите назначить:\
				\n(id = 500  отменит назначение скина в выбранном слоте)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1012);
				return true;
			}
#endif
#if (MOD11INS == 4)
			if((level > 311 || level < 0) && level != 500)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Неправильный id скина !");
				ShowPlayerDialog(playerid, 1012, DIALOG_STYLE_INPUT, "Назначение скинов клану", "Введите id скина, который хотите назначить:\
				\n(id = 500  отменит назначение скина в выбранном слоте)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1012);
				return true;
			}
#endif
			if(level == GSkin[PGang[playerid]][gangskin[playerid]-1])
			{
				SendClientMessage(playerid, 0xFF0000FF, "Выбранный id скина уже записан в выбранном слоте !");
				ShowPlayerDialog(playerid, 1012, DIALOG_STYLE_INPUT, "Назначение скинов клану", "Введите id скина, который хотите назначить:\
				\n(id = 500  отменит назначение скина в выбранном слоте)", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1012);
				return true;
			}
			GSkin[PGang[playerid]][gangskin[playerid]-1] = level;
			for(new i; i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PGang[i] == PGang[playerid] && GangLvl[i] == gangskin[playerid] && level != 500)
					{
						SetPVarInt(i, "PlSkin", level);
						SetPlayerSkin(i, GetPVarInt(i, "PlSkin"));
					}
				}
			}
			format(string, sizeof(string), "Скин успешно установлен !   id скина: %i (слот: %d)", level, gangskin[playerid]);
			SendClientMessage(playerid, 0xFFFF00FF, string);
			printf("[ClansSystem] %s [%d] сменил ID скина клана на %i (слот: %d).", RealName[playerid], playerid, level, gangskin[playerid]);
			gangskin[playerid] = 0;
			GangSave(PGang[playerid]);//запись ID клана в файл
	    }
		ShowPlayerDialog(playerid, 1011, DIALOG_STYLE_LIST, "Назначение скинов клана", "1 - Начинающий\n2 - Игрок\n3 - Про игрок\n4 - Элита\n5 - Зам главы\n6 - Глава", "Принять", "Отмена");
		SetPVarInt(playerid, "DlgCont", 1011);
		return true;
	}
	if(dialogid == 1013)//назначение уровня
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			if(InpTxtControl(inputtext) == 0)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка, недопустимый символ:");
				SendClientMessage(playerid, 0xFF0000FF, "запрещённые коды, или знак процентов, или ~ !");
 				ShowPlayerDialog(playerid, 1013, DIALOG_STYLE_INPUT, "Назначение уровня", "Введите id игрока, которому хотите назначить уровень:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1013);
				return true;
			}
			if(IsPlayerConnected(strval(inputtext)))
			{
				if(PGang[strval(inputtext)] != PGang[playerid])
				{
			    	SendClientMessage(playerid, 0xFF0000FF, "Этот игрок не в Вашем клане !");
					return true;
				}
				play333[playerid] = strval(inputtext);
				if(play333[playerid] == playerid)
				{
					SendClientMessage(playerid, 0xFF0000FF, "Вы являетесь главой клана, и не можете назначить уровень сам себе !");
					return true;
				}
				ShowPlayerDialog(playerid, 1014, DIALOG_STYLE_LIST, "Назначение уровня", "1 - Начинающий\n2 - Игрок\n3 - Про игрок\n4 - Элита\n5 - Зам главы\n6 - Глава", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1014);
			}else return SendClientMessage(playerid, 0xFF0000FF, "Этот игрок не в игре !");
	    }
		else
		{
			ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
			\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
			\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1001);
		}
		return true;
	}
	if(dialogid == 1014)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
	    if(response)
	    {
			GangDopper[playerid] = 0;
			if((listitem + 1) == GangLvl[play333[playerid]])
			{
				SendClientMessage(playerid, 0xFF0000FF, "У выбранного игрока уже есть выбранный уровень !");
				play333[playerid] = -1;
				ShowPlayerDialog(playerid, 1013, DIALOG_STYLE_INPUT, "Назначение уровня", "Введите id игрока, которому хотите назначить уровень:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1013);
				return true;
			}
	        switch(listitem)
			{
	            case 0: GangLvl[play333[playerid]] = 1;
	            case 1: GangLvl[play333[playerid]] = 2;
	            case 2: GangLvl[play333[playerid]] = 3;
		        case 3: GangLvl[play333[playerid]] = 4;
	            case 4: GangLvl[play333[playerid]] = 5;
	            case 5: GangDopper[playerid] = 6;
			}
			if(GangDopper[playerid] == 6)
			{
				ShowPlayerDialog(playerid, 1017, DIALOG_STYLE_MSGBOX, "Внимание !!!", "В клане может быть только один глава !!!\
				\nВыбранный игрок получит уровень главы клана,\nа Вы - уровень зам главы клана.\
				\n+ Вы должны получить разрешение на смену главы клана\nот любого админа сервера.", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1017);
			}
			else
			{
				format(string, sizeof(string), "Вы назначили игроку %s уровень %i", RealName[play333[playerid]], GangLvl[play333[playerid]]);
				SendClientMessage(playerid, 0xFFFF00FF, string);
				format(string, sizeof(string), "Глава клана %s назначил Вам уровень %i", RealName[playerid], GangLvl[play333[playerid]]);
				SendClientMessage(play333[playerid], 0xFFFF00FF, string);
				printf("[ClansSystem] %s [%d] назначил игроку %s уровень %i.", RealName[playerid], playerid, RealName[play333[playerid]], GangLvl[play333[playerid]]);
				if(GSkin[PGang[playerid]][GangLvl[play333[playerid]]-1] < 500)
				{
					SetPVarInt(play333[playerid], "PlSkin", GSkin[PGang[playerid]][GangLvl[play333[playerid]]-1]);
					SetPlayerSkin(play333[playerid], GetPVarInt(play333[playerid], "PlSkin"));
				}
				play333[playerid] = -1;
				ShowPlayerDialog(playerid, 1013, DIALOG_STYLE_INPUT, "Назначение уровня", "Введите id игрока, которому хотите назначить уровень:", "Принять", "Отмена");
				SetPVarInt(playerid, "DlgCont", 1013);
			}
	    }
		else
		{
			ShowPlayerDialog(playerid, 1013, DIALOG_STYLE_INPUT, "Назначение уровня", "Введите id игрока, которому хотите назначить уровень:", "Принять", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1013);
		}
		return true;
	}
	if(dialogid == 1017)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		GangDopper[playerid] = 0;
	    if(response)
	    {
			if(razresh[playerid] != 3)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Вы должны получить разрешение на смену главы клана");
				SendClientMessage(playerid, 0xFF0000FF, "от любого админа сервера.");
				return true;
			}
			if(razresh[playerid] == 3)
			{
				razresh[playerid] = 0;
				format(string, sizeof(string), " <Clans> Игрок %s [%d] использовал разрешение на смену главы клана.", RealName[playerid], playerid);
				print(string);
				SendAdminMessage(COLOR_RED, string);
				if (PlayerInfo[playerid][pAdmin] == 0)
				{
					SendClientMessage(playerid, COLOR_RED, " Вы использовали разрешение на смену главы клана.");
				}
			}
			strdel(GHead[PGang[play333[playerid]]], 0, 64);
			strcat(GHead[PGang[play333[playerid]]], RealName[play333[playerid]]);
			GangSave(PGang[play333[playerid]]);//запись ID клана в файл

			GangLvl[play333[playerid]] = 6;
			format(string, sizeof(string), "Вы назначили игроку %s уровень главы клана.", RealName[play333[playerid]]);
			SendClientMessage(playerid, 0xFFFF00FF, string);
			format(string, sizeof(string), "Глава клана %s назначил Вам уровень главы клана.", RealName[playerid]);
			SendClientMessage(play333[playerid], 0xFFFF00FF, string);
			printf("[ClansSystem] %s [%d] назначил игроку %s уровень главы клана.", RealName[playerid], playerid, RealName[play333[playerid]]);
			if(GSkin[PGang[playerid]][GangLvl[play333[playerid]]-1] < 500)
			{
				SetPVarInt(play333[playerid], "PlSkin", GSkin[PGang[playerid]][GangLvl[play333[playerid]]-1]);
				SetPlayerSkin(play333[playerid], GetPVarInt(play333[playerid], "PlSkin"));
			}

			GangLvl[playerid] = 5;
			SendClientMessage(playerid, 0xFFFF00FF, "Вы назначили себе уровень зам главы клана.");
			format(string, sizeof(string), "Глава клана %s назначил себе уровень зам главы клана.", RealName[playerid]);
			SendClientMessage(play333[playerid], 0xFFFF00FF, string);
			printf("[ClansSystem] %s [%d] назначил себе уровень зам главы клана.", RealName[playerid], playerid);
			if(GSkin[PGang[playerid]][GangLvl[playerid]-1] < 500)
			{
				SetPVarInt(playerid, "PlSkin", GSkin[PGang[playerid]][GangLvl[playerid]-1]);
				SetPlayerSkin(playerid, GetPVarInt(playerid, "PlSkin"));
			}

			play333[playerid] = -1;
		}
		else
		{
			ShowPlayerDialog(playerid, 1013, DIALOG_STYLE_INPUT, "Назначение уровня", "Введите id игрока, которому хотите назначить уровень:", "Принять", "Отмена");
			SetPVarInt(playerid, "DlgCont", 1013);
		}
		return true;
	}
	if(dialogid == 1018)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		SetTimerEx("DelDlgMes", 300, 0, "i", playerid);
		return true;
	}

//----------------------------- Elevator - 1 -----------------------------------
	if(dialogid == 150)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{

			new dop = 0;
			for(new i; i < sizeof(ElevatorQueue); i ++)
			{
				if(ElevatorQueue[i] == listitem){dop = 1;}
			}

			new dop22 = 0;
			for(new i; i < sizeof(FloorRequestedBy); i ++)
			{
				if(FloorRequestedBy[i] == playerid){dop22 = 1;}
			}

			if(FloorRequestedBy[listitem] != 10000 || dop == 1)
			{
				SendClientMessage(playerid, 0xAA3333FF, " Выбранный Вами этаж уже находится");
				SendClientMessage(playerid, 0xAA3333FF, " в очереди обслуживания !");
				return 1;
			}
			if(dop22 == 1)
			{
				SendClientMessage(playerid, 0xAA3333FF, " Вы уже выбрали этаж !");
				return 1;
			}
			CallElevator(playerid, listitem, 1);//вызов, или начало движения лифта
		}
		return 1;
	}
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	if(dialogid == 152)
	{
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		if(response)
		{

			new dop = 0;
			for(new i; i < sizeof(ElevatorQueue22); i ++)
			{
				if(ElevatorQueue22[i] == listitem){dop = 1;}
			}

			new dop22 = 0;
			for(new i; i < sizeof(FloorRequestedBy22); i ++)
			{
				if(FloorRequestedBy22[i] == playerid){dop22 = 1;}
			}

			if(FloorRequestedBy22[listitem] != 10000 || dop == 1)
			{
				SendClientMessage(playerid, 0xAA3333FF, " Выбранный Вами этаж уже находится");
				SendClientMessage(playerid, 0xAA3333FF, " в очереди обслуживания !");
				return 1;
			}
			if(dop22 == 1)
			{
				SendClientMessage(playerid, 0xAA3333FF, " Вы уже выбрали этаж !");
				return 1;
			}
			CallElevator22(playerid, listitem, 1);//вызов, или начало движения лифта
		}
		return 1;
	}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

//------------------------------ BusSystem -------------------------------------
	if(dialogid == 8000)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
		playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
		return 1;
	}
	if(dialogid == 8001)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
        if(response)
		{
			if(PlayerInfo[playerid][pVIP] == 3)
			{
				ShowPlayerDialog(playerid, 8000, 0, "Информация.", "{ADFF2F}Вы не можете купить бизнес,\nпока дело о Вашей депортации на слушании !", "OK", "");
				SetPVarInt(playerid, "DlgCont", 8000);
				return 1;
			}
			if(GetPVarInt(playerid, "PlMon") < buscost[playIDbus[playerid]])//если у игрока недостаточно денег, то:
			{
				ShowPlayerDialog(playerid, 8000, 0, "Информация.", "{ADFF2F}У Вас недостаточно денег для покупки этого бизнеса !", "OK", "");
				SetPVarInt(playerid, "DlgCont", 8000);
				return 1;
			}
			new para1 = 0;
			for(new i; i < BUS_MAX; i++)//подсчёт числа уже купленных бизнесов
			{
				if(buscount[i] == 1 && strcmp(RealName[playerid], busplayname[i], false) == 0) { para1++; }
			}
			if(para1 >= BUS_PLAY)
			{
				format(string, sizeof(string), "{ADFF2F}У вас уже есть %d бизнеса !   Что бы купить этот бизнес -\
				\nпродайте хотя бы один из своих существующих бизнесов !", para1);
				ShowPlayerDialog(playerid, 8000, 0, "Информация.", string, "OK", "");
				SetPVarInt(playerid, "DlgCont", 8000);
				return 1;
			}
			if(strcmp(busplayname[playIDbus[playerid]], "*** INV_PL_ID", false) != 0 && busday[playIDbus[playerid]] != 0)
			{//если в момент покупки, покупаемый бизнес успел купить другой игрок, то:
				SendClientMessage(playerid, 0xFF0000FF, " Этот бизнес уже принадлежит другому игроку !");
				format(string, sizeof(string), "{ADFF2F}Название бизнеса: %s\nВладелец бизнеса: %s\nСтоимость бизнеса: %d $", busname[playIDbus[playerid]],
				busplayname[playIDbus[playerid]], buscost[playIDbus[playerid]]);
				ShowPlayerDialog(playerid, 8000, 0, "Информация.", string, "OK", "");
				SetPVarInt(playerid, "DlgCont", 8000);
				return 1;
			}
			strdel(busplayname[playIDbus[playerid]], 0, MAX_PLAYER_NAME);//изменение имени владельца бизнеса
			strcat(busplayname[playIDbus[playerid]], RealName[playerid]);
			busday[playIDbus[playerid]] = 99;//временная блокировка возможности перекупки бизнеса
			new para2;
			para2 = GetPVarInt(playerid, "PlMon");
			SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - buscost[playIDbus[playerid]]);//списывание денег со счёта игрока
			gettime(timecor[0], timecor[1]);
			getdate(timecor[2], timecor[3], timecor[4]);
			TimCor();//коррекция времени
			DatCor();//коррекция даты
			new per99;//вычисление даты окончания срока без права перекупки
			per99 = ProcUnban(BUS_DAY);
			busidplay[playIDbus[playerid]] = playerid;//даём бизнесу ИД он-лайн игрока - владельца бизнеса
			busmoney[playIDbus[playerid]] = 0;//обнуляем счётчик минут бизнеса
			busday[playIDbus[playerid]] = per99;//изменение даты окончания срока без права перекупки
			new file, f[256];//записываем изменения в файл
			format(f, 256, "bussystem/%i.ini", playIDbus[playerid]);
			file = ini_openFile(f);
			if(file >= 0)
			{
		    	ini_setString(file, "PlayName", busplayname[playIDbus[playerid]]);
		    	ini_setInteger(file, "Day", busday[playIDbus[playerid]]);
				ini_closeFile(file);
			}
			CallRemoteFunction("GPSrfun", "iiisifff", 2, 1, playIDbus[playerid], busplayname[playIDbus[playerid]],
			busvw[playIDbus[playerid]], buscordx[playIDbus[playerid]], buscordy[playIDbus[playerid]], buscordz[playIDbus[playerid]]);
			DestroyDynamicMapIcon(MapIconID[playIDbus[playerid]]);//удаляем мап-иконку бизнеса
			printf("[BusSystem] Игрок %s [%d] купил бизнес %s [ID: %d] .", RealName[playerid], playerid, busname[playIDbus[playerid]], playIDbus[playerid]);
			format(string, sizeof(string), " Игрок %s [%d] купил бизнес %s .", RealName[playerid], playerid, busname[playIDbus[playerid]]);
			SendClientMessageToAll(0x00FFFFFF, string);
			printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para2);
			playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
		}
		else
		{
			playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
		}
		return 1;
	}
	if(dialogid == 8002)
    {
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
        if(response)
		{
			new para1;
			para1 = GetPVarInt(playerid, "PlMon");
			SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") + buscost[playIDbus[playerid]]);//возврат денег игроку
			busidplay[playIDbus[playerid]] = -600;//даём бизнесу несуществующий ИД игрока
			busmoney[playIDbus[playerid]] = 0;//обнуляем счётчик минут бизнеса
			strdel(busplayname[playIDbus[playerid]], 0, MAX_PLAYER_NAME);//изменение имени владельца бизнеса
			strcat(busplayname[playIDbus[playerid]], "*** INV_PL_ID");
			if(busday[playIDbus[playerid]] != 0)//если бизнес без права его перекупки, то:
			{
				MapIconID[playIDbus[playerid]] = CreateDynamicMapIcon(buscordx[playIDbus[playerid]], buscordy[playIDbus[playerid]],
				buscordz[playIDbus[playerid]], 52, -1, busvw[playIDbus[playerid]], busint[playIDbus[playerid]], -1, 200.0);//создаём мап-иконку бизнеса
			}
			busday[playIDbus[playerid]] = 0;//изменение даты окончания срока без права перекупки
			new file, f[256];//записываем изменения в файл
			format(f, 256, "bussystem/%i.ini", playIDbus[playerid]);
			file = ini_openFile(f);
			if(file >= 0)
			{
		    	ini_setString(file, "PlayName", busplayname[playIDbus[playerid]]);
		    	ini_setInteger(file, "Day", busday[playIDbus[playerid]]);
				ini_closeFile(file);
			}
			CallRemoteFunction("GPSrfun", "iiisifff", 2, 1, playIDbus[playerid], busplayname[playIDbus[playerid]],
			busvw[playIDbus[playerid]], buscordx[playIDbus[playerid]], buscordy[playIDbus[playerid]], buscordz[playIDbus[playerid]]);
			printf("[BusSystem] Игрок %s [%d] продал бизнес %s [ID: %d] .", RealName[playerid], playerid, busname[playIDbus[playerid]], playIDbus[playerid]);
			format(string, sizeof(string), " Игрок %s [%d] продал бизнес %s .", RealName[playerid], playerid, busname[playIDbus[playerid]]);
			SendClientMessageToAll(0x00FFFFFF, string);
			printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[playerid], playerid, para1);
			playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
		}
		else
		{
			playIDbus[playerid] = -600;//не существующий ИД бизнеса для игрока
		}
		return 1;
	}
//---------------------------- End BusSystem -----------------------------------

	return 0;
}

forward DelDlgMes(playerid);
public DelDlgMes(playerid)
{
	ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Система кланов", "Создать клан\nУдалить клан\nНазначить скины\
	\nНазначить место спавна\nОтменить спавн клана\nНазначить уровень\nПригласить в клан\nИзгнать из клана\nОткл. / вкл. разрешение приглашать Вас в клан\
	\nИзменить название клана\nИзменить цвет клана\nИнформация о клане", "Выбор", "Отмена");
	SetPVarInt(playerid, "DlgCont", 1001);
	return true;
}

//==============================================================================
//                              GarHouse
//==============================================================================
//==============================================================================
// GetPosInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance);
// Used to get the position infront of a player.
// Credits to whoever made this!
//==============================================================================
stock Float:GetPosInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	if (IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	else GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return a;
}
//##############################################################################
// 								Commands
//##############################################################################
// 							  By [03]Garsino!
//==============================================================================
// This command is used to display the house owner menu
// when a player is in a house and is the house owner.
//==============================================================================
dcmd_housemenu(playerid, params[])
{
	#pragma unused params

	if(GetPVarInt(playerid, "HousePrevTime") != 0) return SendClientMessage(playerid, COLOUR_SYSTEM, "Сейчас Вы не можете использовать меню дома.");//сообщение о запрете меню

 	if(strcmp(GetHouseOwner(GetPVarInt(playerid, "LastHouseCP")), RealName[playerid], CASE_SENSETIVE) && GetPVarInt(playerid, "IsInHouse") == 1) return SendClientMessage(playerid, COLOUR_SYSTEM, E_C_ACCESS_SE_HM);
	if(GetPVarInt(playerid, "IsInHouse") == 0) return SendClientMessage(playerid, COLOUR_SYSTEM, E_NOT_IN_HOUSE);
	if(GetOwnedHouses(playerid) == 0) return SendClientMessage(playerid, COLOUR_SYSTEM, E_NOT_HOWNER);
	if(GetPVarInt(playerid, "IsInHouse") == 1 && !strcmp(GetHouseOwner(GetPVarInt(playerid, "LastHouseCP")), RealName[playerid], CASE_SENSETIVE) && GetOwnedHouses(playerid) >= 1)
	{
	    #if defined GH_HINTERIOR_UPGRADE
			ShowPlayerDialog(playerid, 500, DIALOG_STYLE_LIST, "Меню дома", "Продажа дома\nХранение в доме\nИмя дома\nПароль для дома\nИнтерьер", "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 500);
		#endif
		#if !defined GH_HINTERIOR_UPGRADE
			ShowPlayerDialog(playerid, 500, DIALOG_STYLE_LIST, "Меню дома", "Продажа дома\nХранение в доме\nИмя дома\nПароль для дома", "OK", "Отмена");
			SetPVarInt(playerid, "DlgCont", 500);
		#endif
	}
	return 1;
}
//==============================================================================
// This command is used to create a house.
// The only thing you have to enter is the house value,
// the rest is done by the script.
//==============================================================================
dcmd_createhouse(playerid, params[])
{
	new cost, file[HOUSEFILE_LENGTH], h = GetFreeHouseID(), labeltext[150], hinterior;
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "dD(" #DEFAULT_H_INTERIOR ")", cost, hinterior)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_CREATEHOUSE);
	if(hinterior > 10)
	{
		hinterior = 0;
	}
	if(h < 0)
	{
		ShowInfoBox(playerid, INFORMATION_HEADER, E_TOO_MANY_HOUSES, MAX_HOUSES - 1);
    	return 1;
	}
	if(cost < MIN_HOUSE_VALUE || cost > MAX_HOUSE_VALUE) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HVALUE);
	else
	{
		new dvw;
		dvw = GetPlayerVirtualWorld(playerid);
	    format(file, sizeof(file), FILEPATH, h);
	    dini_Create(file);
		GetPlayerPos(playerid, Xgh, Ygh, Zgh);
		GetPlayerFacingAngle(playerid, Anglegh);
		dini_FloatSet(file, "CPOutX", Xgh);
		dini_FloatSet(file, "CPOutY", Ygh);
		dini_FloatSet(file, "CPOutZ", Zgh);
		dini_Set(file, "HouseName", DEFAULT_HOUSE_NAME);
		dini_Set(file, "HouseOwner", INVALID_HOWNER_NAME);
		dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
		dini_Set(file, "HouseCreator", RealName[playerid]);
		dini_IntSet(file, "HouseValue", cost);
		dini_IntSet(file, "HouseStorage", 0);
		CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, "*** INV_PL_ID", dvw, Xgh, Ygh, Zgh);
		format(labeltext, sizeof(labeltext), LABELTEXT1, DEFAULT_HOUSE_NAME, cost, h);
		HousePickupOut[h] = CreateDynamicPickup(PICKUP_MODEL_OUT, PICKUP_TYPE, Xgh, Ygh, Zgh, dvw, GetPlayerInterior(playerid), -1, 15.0);
//		HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2196.84, -1204.36, 1049.02, (h + 1000), 6, -1, 15.0);
		#if defined GH_USE_MAPICONS
 			HouseMIcon[h] = CreateDynamicMapIcon(Xgh, Ygh, Zgh, 31, -1, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, MICON_VD);
	 	#endif
//		HouseLabel[h] = Create3DTextLabel(labeltext, COLOUR_GREEN, Xgh, Ygh, Zgh+0.7, 25, GetPlayerVirtualWorld(playerid), 1);
		HouseLabel[h] = CreateDynamic3DTextLabel(labeltext, COLOUR_GREEN, Xgh, Ygh, Zgh+0.7, 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, dvw, GetPlayerInterior(playerid), -1);
		SendMSG(playerid, COLOUR_YELLOW, 128, I_H_CREATED, h);
		GetPosInFrontOfPlayer(playerid, Xgh, Ygh, -2.5);
		dini_FloatSet(file, "SpawnOutX", Xgh);
		dini_FloatSet(file, "SpawnOutY", Ygh);
		dini_FloatSet(file, "SpawnOutZ", Zgh);
		dini_FloatSet(file, "SpawnOutAngle", floatround((180 + Anglegh)));
		dini_IntSet(file, "SpawnWorld", dvw);
		dini_IntSet(file, "SpawnInterior", GetPlayerInterior(playerid));
		dini_IntSet(file, "HouseInterior", hinterior);
		switch(hinterior)
		{
		    case 1:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_1_VALUE);
				dini_Set(file, "HouseInteriorName", "Shitty Shack");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2260.38, -1135.89, 1050.64, (h + 1000), 10, -1, 15.0);
			}
			case 2:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_2_VALUE);
				dini_Set(file, "HouseInteriorName", "Motel Room");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2284.24, -1139.42, 1050.89, (h + 1000), 11, -1, 15.0);
			}
			case 3:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_3_VALUE);
				dini_Set(file, "HouseInteriorName", "Hotel Room 1");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2233.69, -1114.26, 1050.88, (h + 1000), 5, -1, 15.0);
			}
			case 4:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_4_VALUE);
				dini_Set(file, "HouseInteriorName", "Hotel Room 2");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2216.39, -1077.10, 1050.48, (h + 1000), 1, -1, 15.0);
			}
			case 5:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_5_VALUE);
				dini_Set(file, "HouseInteriorName", "Gang House");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2496.00, -1693.70, 1014.74, (h + 1000), 3, -1, 15.0);
			}
			case 6:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_6_VALUE);
				dini_Set(file, "HouseInteriorName", "Normal House");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2365.25, -1134.00, 1050.88, (h + 1000), 8, -1, 15.0);
			}
			case 0:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_0_VALUE);
				dini_Set(file, "HouseInteriorName", "Default House");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2195.84, -1204.36, 1049.02, (h + 1000), 6, -1, 15.0);
			}
			case 7:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_7_VALUE);
				dini_Set(file, "HouseInteriorName", "Medium Mansion");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2319.43, -1026.33, 1050.21, (h + 1000), 9, -1, 15.0);
			}
			case 8:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_8_VALUE);
				dini_Set(file, "HouseInteriorName", "Rich Mansion");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2324.41, -1148.54, 1050.71, (h + 1000), 12, -1, 15.0);
			}
			case 9:
			{
				dini_IntSet(file, "HouseInteriorValue", H_INT_9_VALUE);
				dini_Set(file, "HouseInteriorName", "Huge Mansion");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 143.40, 1366.66, 1083.85, (h + 1000), 5, -1, 15.0);
			}
			case 10:
			{
			    dini_IntSet(file, "HouseInteriorValue", H_INT_10_VALUE);
				dini_Set(file, "HouseInteriorName", "Mad Dogg's Mansion");
				HousePickupInt[h] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 1263.11, -785.26, 1091.9063, (h + 1000), 5, -1, 15.0);
			}
		}
		dini_IntSet("/GarHouse/House.ini", "CurrentID", dini_Int("/GarHouse/House.ini", "CurrentID") + 1);
		dini_IntSet("/GarHouse/House.ini", "CurrentWorld", dini_Int("/GarHouse/House.ini", "CurrentID") + 1000);
		SetPVarInt(playerid, "JustCreatedHouse", 1);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD1, RealName[playerid], playerid, h, cost, GetTotalHouses());
		#endif
	}
    return 1;
}
//==============================================================================
// просмотр пароля дома.
//==============================================================================
dcmd_passhouse(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || GetPVarInt(playerid, "AdmLvl") >= 4)
	{
		new file[HOUSEFILE_LENGTH], h;
		if(sscanf(params, "d", h))
		{
			SendClientMessage(playerid, 0xBFC0C2FF, " Используйте: /passhouse [ид дома]");
			return 1;
		}
    	format(file, sizeof(file), FILEPATH, h);
		if(!dini_Exists(file)) return SendClientMessage(playerid, 0xAA3333AA, " Дома с таким ID не существует !");
		new para1 = 0, para2 = 0, strloc[128];
		if(!strcmp(dini_Get(file, "HouseOwner"), INVALID_HOWNER_NAME, CASE_SENSETIVE)) { para1 = 1; }
		if(!strcmp(dini_Get(file, "HouseOwner"), "* Дом заблокирован", CASE_SENSETIVE)) { para1 = 2; }
		format(strloc, sizeof(strloc), "%s", dini_Get(file, "HousePassword"));
		if(strcmp(strloc, "INVALID_HOUSE_PASSWORD", false) == 0) { para2 = 1; }
		new string[256];
		if(para2 == 1)
		{
			format(string, sizeof(string), "Дом ID %d  {FFFFFF}пароль НЕ создан.", h);
		}
		else
		{
			format(string, sizeof(string), "Дом ID %d  {FFFFFF}пароль: %s .", h, strloc);
		}
		SendClientMessage(playerid, 0xFFFF00FF, string);
		if(para1 == 1)
		{
			format(string, sizeof(string), "Дом ID %d  {FFFFFF}свободен.", h);
			SendClientMessage(playerid, 0xFFFF00FF, string);
		}
		if(para1 == 2)
		{
			format(string, sizeof(string), "Дом ID %d  {FFFFFF}заблокирован !", h);
			SendClientMessage(playerid, 0xFFFF00FF, string);
		}
		format(string, sizeof(string), " *** Админ %s [%d] просмотрел пароль дома ID %d .", RealName[playerid], playerid, h);
		print(string);
	}
	else
	{
		SendClientMessage(playerid, 0xAA3333AA, " У Вас нет прав на использование этой команды !");
	}
    return 1;
}
//==============================================================================
// перезагрузка системы домов.
//==============================================================================
dcmd_relhouses(playerid, params[])
{
	#pragma unused params
	if(IsPlayerAdmin(playerid) || GetPVarInt(playerid, "AdmLvl") >= 4)
	{
		new string[256];
		format(string, sizeof(string), " *** Админ %s [%d] начал перезагрузку системы домов.", RealName[playerid], playerid);
		print(string);
		SendClientMessageToAll(0xAA3333AA, string);
		SetTimerEx("relhoyses1", 1000, 0, "i", playerid);
	}
	else
	{
		SendClientMessage(playerid, 0xAA3333AA, " У Вас нет прав на использование этой команды !");
	}
    return 1;
}
forward relhoyses1(playerid);
public relhoyses1(playerid)
{
	new file[HOUSEFILE_LENGTH], tmp;
	Loop(i, MAX_PLAYERS)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
 		{
  			tmp = GetPVarInt(i, "LastHouseCP");
			format(file, sizeof(file), FILEPATH, tmp);
  			if(!strcmp(GetHouseOwner(tmp), RealName[playerid], CASE_SENSETIVE) && GetPVarInt(i, "IsInHouse") == 1 && dini_Exists(file))
			{
  				dini_IntSet(file, "QuitInHouse", 1);
	    		#if defined GH_HOUSECARS
	    			SaveHouseCar(tmp);
       			#endif
			}
		}
	}
	UnloadHouses(); // Выгрузка домов (также разгружает дом автомобили)
	SetTimerEx("relhoyses2", 1000, 0, "i", playerid);
    return 1;
}
forward relhoyses2(playerid);
public relhoyses2(playerid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)//обнуление массива блокировок диалога ввода пароля
	{
		lockpas[i] = 0;
	}

    LoadHouses(); // Загрузка фс дома
    Loop(i, MAX_PLAYERS)
    {
        if(IsPlayerConnected(i) && !IsPlayerNPC(i))
        {
            SetPVarInt(i, "HousePrevTime", 0);
        }
    }
	SetTimerEx("relhoyses3", 1000, 0, "i", playerid);
    return 1;
}
forward relhoyses3(playerid);
public relhoyses3(playerid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			TogglePlayerControllable(i, 1);//разморозить всех игроков
		}
	}
	new string[256];
	format(string, sizeof(string), " *** Админ %s [%d] перезагрузил систему домов.", RealName[playerid], playerid);
	print(string);
	SendClientMessageToAll(0xAA3333AA, string);
    return 1;
}
//==============================================================================
// блокировка дома по его ИД.
//==============================================================================
dcmd_lchouse(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || GetPVarInt(playerid, "AdmLvl") >= 1)
	{
		new file[HOUSEFILE_LENGTH], h;
		if(sscanf(params, "d", h))
		{
			SendClientMessage(playerid, 0xBFC0C2FF, " Используйте: /lchouse [ид дома]");
			SendClientMessage(playerid, 0xFF0000FF, " Внимание !!! Команда блокирует дом по его ID !!!");
			SendClientMessage(playerid, 0xFF0000FF, " Используйте только в КРАЙНЕМ случае !!!");
			return 1;
		}
    	format(file, sizeof(file), FILEPATH, h);
		if(!dini_Exists(file)) return SendClientMessage(playerid, 0xAA3333AA, " Дома с таким ID не существует !");
		if(!strcmp(dini_Get(file, "HouseOwner"), INVALID_HOWNER_NAME, CASE_SENSETIVE)) return SendClientMessage(playerid, 0xAA3333AA, " Нельзя ! Дом свободен !");
		if(!strcmp(dini_Get(file, "HouseOwner"), "* Дом заблокирован", CASE_SENSETIVE)) return SendClientMessage(playerid, 0xAA3333AA, " Дом уже заблокирован !");
		dini_Set(file, "HouseOwner", "* Дом заблокирован");
		dini_Set(file, "HouseName", "* Дом заблокирован");
		UpdateHouseText(h);
		new string[256];
		format(string, sizeof(string), " *** Админ %s [%d] заблокировал дом ID %d .", RealName[playerid], playerid, h);
		print(string);
		SendAdminMessage(0xAA3333AA, string);
	}
	else
	{
		SendClientMessage(playerid, 0xAA3333AA, " У Вас нет прав на использование этой команды !");
	}
    return 1;
}
//==============================================================================
// This command is used to add a house car for a house.
// The only thing you have to enter is the house value,
// the rest is done by the script.
//==============================================================================
dcmd_addhcar(playerid, params[])
{
	new file[HOUSEFILE_LENGTH], h;
	if(!IsPlayerAdmin(playerid)) return 0;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_HCAR_NOT_IN_VEH);
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_ADDHCAR);
	format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	else
	{
	    if(dini_Int(file, "HCar") == 1) { SendMSG(playerid, COLOUR_YELLOW, 128, I_HCAR_EXIST_ALREADY, h); }
	    if(dini_Int(file, "HCar") == 0) { SendMSG(playerid, COLOUR_YELLOW, 128, I_HCAR_CREATED, h); }
		GetVehiclePos(GetPlayerVehicleID(playerid), Xgh, Ygh, Zgh);
		GetVehicleZAngle(GetPlayerVehicleID(playerid), Anglegh);
		dini_FloatSet(file, "HCarPosX", Xgh);
		dini_FloatSet(file, "HCarPosY", Ygh);
		dini_FloatSet(file, "HCarPosZ", Zgh);
		dini_FloatSet(file, "HCarAngle", Anglegh);
		dini_IntSet(file, "HCar", 1);
		dini_IntSet(file, "HCarWorld", GetPlayerVirtualWorld(playerid));
		dini_IntSet(file, "HCarInt", GetPlayerInterior(playerid));
		dini_IntSet(file, "HCarModel", GetVehicleModel(GetPlayerVehicleID(playerid)));
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD2, RealName[playerid], playerid, h);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used to delete a house.
// Note: It does not give any money to the house owner when the house is deleted
//==============================================================================
dcmd_removehouse(playerid, params[])
{
	new h, file[HOUSEFILE_LENGTH];
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_REMOVEHOUSE);
    format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	else
	{
     	DestroyHouseEntrance(h, TYPE_OUT);
	    DestroyHouseEntrance(h, TYPE_INT);
	    #if defined GH_USE_MAPICONS
			DestroyDynamicMapIcon(HouseMIcon[h]);
		#endif
//	    Delete3DTextLabel(HouseLabel[h]);
	    DestroyDynamic3DTextLabel(HouseLabel[h]);
		SendMSG(playerid, COLOUR_YELLOW, 128, I_H_DESTROYED, h);
		dini_Remove(file);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD3, RealName[playerid], playerid, h);
		#endif
		CallRemoteFunction("GPSrfun", "iiisifff", 1, 0, h, "*** INV_PL_ID", 0, 0.0, 0.0, 0.0);
	}
    return 1;
}
//==============================================================================
// This command is used to remove the house car for a house.
//==============================================================================
dcmd_removehcar(playerid, params[])
{
	new file[HOUSEFILE_LENGTH], h;
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_REMOVEHCAR);
	format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	if(dini_Int(file, "HCar") == 0) return SendClientMessage(playerid, COLOUR_SYSTEM, E_NO_HCAR);
	else
	{
	    UnloadHouseCar(h);
		dini_IntSet(file, "HCar", 0);
		SendMSG(playerid, COLOUR_YELLOW, 128, I_HCAR_REMOVED, h);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD4, RealName[playerid], playerid, h);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used to change the modelid of a housecar.
//==============================================================================
dcmd_changehcar(playerid, params[])
{
	new file[HOUSEFILE_LENGTH], h, modelid;
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "dd", h, modelid)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_CHANGEHCAR);
	format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	if(modelid < 400 || modelid > 611) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HCAR_MODEL);
	else
	{
		dini_IntSet(file, "HCarModel", modelid);
		SendMSG(playerid, COLOUR_YELLOW, 128, I_HCAR_CHANGED, h, modelid);
    	#if defined GH_HOUSECARS
		if(GetVehicleModel(HouseCar[h]) != -1)
		{
		    if(IsVehicleOccupied(HouseCar[h]))
		    {
		        new Float:Velocity[3], Float:Pos[4], Seat[MAX_PLAYERS] = -1, interior, vw = GetVehicleVirtualWorld(HouseCar[h]);
		        Loop(i, MAX_PLAYERS)
		        {
		            if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
		            if(IsPlayerInVehicle(i, HouseCar[h]))
		            {
		                Seat[i] = GetPlayerVehicleSeat(i);
		                if(Seat[i] == 0)
		                {
		                    interior = GetPlayerInterior(i); // Have to do it this way because there is no GetVehicleInterior..
						}
		            }
		        }
		        GetVehiclePos(HouseCar[h], Pos[0], Pos[1], Pos[2]);
		        GetVehicleZAngle(HouseCar[h], Pos[3]);
		        GetVehicleVelocity(HouseCar[h], Velocity[0], Velocity[1], Velocity[2]);
		        DestroyVehicle(HouseCar[h]);
		        HouseCar[h] = CreateVehicle(modelid, Pos[0], Pos[1], Pos[2], Pos[3], HCAR_COLOUR1, HCAR_COLOUR2, HCAR_RESPAWN);
				LinkVehicleToInterior(HouseCar[h], interior);
				SetVehicleVirtualWorld(HouseCar[h], vw);
				Loop(i, MAX_PLAYERS)
		        {
		            if(!IsPlayerConnected(i) || IsPlayerNPC(i) || Seat[i] == -1) continue;
		            if(IsPlayerInVehicle(i, HouseCar[h]))
		            {
		                PutPlayerInVehicle(i, HouseCar[h], Seat[i]);
		            }
		        }
				SetVehicleVelocity(HouseCar[h], Velocity[0], Velocity[1], Velocity[2]);

		    }
            if(!IsVehicleOccupied(HouseCar[h]))
		    {
		        UnloadHouseCar(h);
		        LoadHouseCar(h);
		    }
		}
		#endif
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD12, RealName[playerid], playerid, h, modelid);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used to delete all houses.
// It does not give any money to the house owners when the houses is deleted.
//==============================================================================
dcmd_removeallhouses(playerid, params[])
{
	#pragma unused params
	new hcount, file[HOUSEFILE_LENGTH];
	if(!IsPlayerAdmin(playerid)) return 0;
	else
	{
	    Loop(h, MAX_HOUSES)
	    {
	        format(file, sizeof(file), FILEPATH, h);
	        if(dini_Exists(file))
	        {
	            UnloadHouseCar(h);
		     	DestroyHouseEntrance(h, TYPE_OUT);
			    DestroyHouseEntrance(h, TYPE_INT);
			    #if defined GH_USE_MAPICONS
					DestroyDynamicMapIcon(HouseMIcon[h]);
				#endif
//			    Delete3DTextLabel(HouseLabel[h]);
			    DestroyDynamic3DTextLabel(HouseLabel[h]);
				dini_Remove(file);
				hcount++;
			}
			CallRemoteFunction("GPSrfun", "iiisifff", 1, 0, h, "*** INV_PL_ID", 0, 0.0, 0.0, 0.0);
		}
		SendMSG(playerid, COLOUR_YELLOW, 128, I_ALLH_DESTROYED, hcount);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD5, RealName[playerid], playerid, hcount);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used remove all house cars.
// It does not delete the house cars itself due to SA:MP mixing up vehicle ID's.
//==============================================================================
dcmd_removeallhcars(playerid, params[])
{
	#pragma unused params
	new hcount, file[HOUSEFILE_LENGTH];
	if(!IsPlayerAdmin(playerid)) return 0;
	else
	{
	    Loop(h, MAX_HOUSES)
	    {
	        UnloadHouseCar(h);
	        format(file, sizeof(file), FILEPATH, h);
	        if(dini_Exists(file))
	        {
				dini_IntSet(file, "HCar", 0);
			}
		}
		SendMSG(playerid, COLOUR_YELLOW, 128, I_ALLHCAR_REMOVED, hcount);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD6, RealName[playerid], playerid, hcount);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used to change the spawnposition details of a house
//==============================================================================
dcmd_changespawn(playerid, params[])
{
	new h, file[HOUSEFILE_LENGTH];
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_CHANGESPAWN);
    format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	else
	{
	    GetPlayerPos(playerid, Xgh, Ygh, Zgh);
		GetPlayerFacingAngle(playerid, Anglegh);
	    dini_FloatSet(file, "SpawnOutX", Xgh);
		dini_FloatSet(file, "SpawnOutY", Ygh);
		dini_FloatSet(file, "SpawnOutZ", Zgh);
		dini_FloatSet(file, "SpawnOutAngle", Anglegh);
		dini_IntSet(file, "SpawnWorld", GetPlayerVirtualWorld(playerid));
		dini_IntSet(file, "SpawnInterior", GetPlayerInterior(playerid));
		SendMSG(playerid, COLOUR_YELLOW, 128, I_HSPAWN_CHANGED, h);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD7, RealName[playerid], playerid, h);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used to teleport to a house.
//==============================================================================
dcmd_gotohouse(playerid, params[])
{
	new h, file[HOUSEFILE_LENGTH];
	if(!IsPlayerAdmin(playerid)) return 0;
	if(GetPVarInt(playerid, "SecPris") > 0)
	{
		SendClientMessage(playerid, COLOUR_SYSTEM, "В тюрьме команда не работает !");
		return 1;
	}
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_GOTOHOUSE);
    format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	else
	{
	    SetPlayerPosEx(playerid, dini_Float(file, "SpawnOutX"), dini_Float(file, "SpawnOutY"), dini_Float(file, "SpawnOutZ"), -600.0, dini_Int(file, "SpawnInterior"), dini_Int(file, "SpawnWorld"));
		SendMSG(playerid, COLOUR_YELLOW, 128, I_TELEPORT_MSG, h);
	}
    return 1;
}
//==============================================================================
// This command is used to sell a house.
// If the house owner is connected while selling the house,
// the amount in the house storage and 75% of the house value will be given to the house owner.
//==============================================================================
dcmd_sellhouse(playerid, params[])
{
	new file[HOUSEFILE_LENGTH], h, file2[HOUSEFILE_LENGTH];
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_SELLHOUSE);
    format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	if(!strcmp(GetHouseOwner(h), INVALID_HOWNER_NAME, CASE_SENSETIVE)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_H_A_F_SALE);
	else
	{
		SendMSG(playerid, COLOUR_YELLOW, 128, I_H_SOLD, h);
		new para1, para2, para3, strd[256];
		new dvw, Float:dcX, Float:dcY, Float:dcZ;
		para1 = GetHouseOwnerEx(h);
		if(IsPlayerConnected(para1))
		{
			para2 = dini_Int(file, "HouseStorage") + ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT);
			para3 = GetPVarInt(para1, "PlMon");
			SetPVarInt(para1, "PlMon", para3 + para2);
			printf("[GarHouse] Сумма %d $ была возвращена игроку %s [%d] (админ продал дом игрока)", para2, RealName[para1], para1);
			format(strd, sizeof(strd), "Сумма %d $ была Вам возвращена (админ продал Ваш дом)", para2);
			SendClientMessage(para1, COLOUR_GREEN, strd);
			printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[para1], para1, para3);
		}
		dini_IntSet(file, "HouseValue", ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT));
		dini_Set(file, "HouseOwner", INVALID_HOWNER_NAME);
		dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
		dini_Set(file, "HouseName", DEFAULT_HOUSE_NAME);
		dini_IntSet(file, "HouseStorage", 0);
		Loop(h2, MAX_HOUSES)
		{
			if(IsHouseInRangeOfHouse(h, h2, RANGE_BETWEEN_HOUSES) && h2 != h)
			{
		    	format(file2, sizeof(file2), FILEPATH, h2);
				dini_IntSet(file2, "HouseValue", (dini_Int(file2, "HouseValue") - ReturnProcent(GetHouseValue(h2), HOUSE_SELLING_PROCENT2)));
			}
		}
		Loop(i, MAX_PLAYERS)
		{
		    if(GetPVarInt(i, "LastHouseCP") == h && GetPVarInt(i, "IsInHouse") == 1)
		    {
		    	SetPVarInt(i, "IsInHouse", 0);
       			SetPlayerPosEx(i, dini_Float(file, "SpawnOutX"), dini_Float(file, "SpawnOutY"), dini_Float(file, "SpawnOutZ"), dini_Float(file, "SpawnOutAngle"), dini_Int(file, "SpawnInterior"), dini_Int(file, "SpawnWorld"));
			}
		}
		dcX = dini_Float(file, "CPOutX");
		dcY = dini_Float(file, "CPOutY");
		dcZ = dini_Float(file, "CPOutZ");
		dvw = dini_Int(file, "SpawnWorld");
		#if defined GH_USE_MAPICONS
			DestroyDynamicMapIcon(HouseMIcon[h]);
			HouseMIcon[h] = CreateDynamicMapIcon(dcX, dcY, dcZ, 31, -1, dvw, dini_Int(file, "SpawnInterior"), -1, MICON_VD);
		#endif
		UpdateHouseText(h);
		CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, "*** INV_PL_ID", dvw, dcX, dcY, dcZ);
        #if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD8, RealName[playerid], playerid, h);
		#endif
	}
    return 1;
}
//==============================================================================
// This command is used to sell a house.
// If the house owner is connected while selling the house,
// the amount in the house storage and 75% of the house value will be given to the house owner.
//==============================================================================
dcmd_sellallhouses(playerid, params[])
{
	#pragma unused params
	new file[HOUSEFILE_LENGTH], hcount;
	if(!IsPlayerAdmin(playerid)) return 0;
	else
	{
		new para1, para2, para3, strd[256];
		new dvw, Float:dcX, Float:dcY, Float:dcZ;
	    Loop(h, MAX_HOUSES)
	    {
	        format(file, sizeof(file), FILEPATH, h);
	        if(dini_Exists(file) && strcmp(GetHouseOwner(h), INVALID_HOWNER_NAME, CASE_SENSETIVE))
	        {
				para1 = GetHouseOwnerEx(h);
				if(IsPlayerConnected(para1))
				{
					para2 = dini_Int(file, "HouseStorage") + ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT);
					para3 = GetPVarInt(para1, "PlMon");
					SetPVarInt(para1, "PlMon", para3 + para2);
					printf("[GarHouse] Сумма %d $ была возвращена игроку %s [%d] (продажа всех домов)", para2, RealName[para1], para1);
					format(strd, sizeof(strd), "Сумма %d $ была Вам возвращена (продажа всех домов)", para2);
					SendClientMessage(para1, COLOUR_GREEN, strd);
					printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[para1], para1, para3);
				}
				dini_IntSet(file, "HouseValue", ReturnProcent(GetHouseValue(h), HOUSE_SELLING_PROCENT));
				dini_Set(file, "HouseOwner", INVALID_HOWNER_NAME);
				dini_Set(file, "HousePassword", "INVALID_HOUSE_PASSWORD");
				dini_Set(file, "HouseName", DEFAULT_HOUSE_NAME);
				dini_IntSet(file, "HouseStorage", 0);
				dcX = dini_Float(file, "CPOutX");
				dcY = dini_Float(file, "CPOutY");
				dcZ = dini_Float(file, "CPOutZ");
				dvw = dini_Int(file, "SpawnWorld");
				#if defined GH_USE_MAPICONS
					DestroyDynamicMapIcon(HouseMIcon[h]);
					HouseMIcon[h] = CreateDynamicMapIcon(dcX, dcY, dcZ, 31, -1, dvw, dini_Int(file, "SpawnInterior"), -1, MICON_VD);
				#endif
				UpdateHouseText(h);
				hcount++;
				CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, "*** INV_PL_ID", dvw, dcX, dcY, dcZ);
			}
		}
		SendMSG(playerid, COLOUR_YELLOW, 128, I_ALLH_SOLD, hcount);
        #if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD9, RealName[playerid], playerid, hcount);
		#endif
	}
    return 1;
}
//==============================================================================
// 			This command is used to change the value of a house.
//==============================================================================
dcmd_changeprice(playerid, params[])
{
	new h, file[HOUSEFILE_LENGTH], price;
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "dd", h, price)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_CHANGEPRICE);
    format(file, sizeof(file), FILEPATH, h);
	if(!dini_Exists(file)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HID);
	if(price < 1500000 || price > 25000000) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HVALUE);
	else
	{
	    dini_IntSet(file, "HouseValue", price);
		SendMSG(playerid, COLOUR_YELLOW, 128, I_H_PRICE_CHANGED, h, price);
		UpdateHouseText(h);
		#if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD10, RealName[playerid], playerid, h, price);
		#endif
	}
    return 1;
}
//==============================================================================
// 		This command is used to change the value of all houses on the server.
//==============================================================================
dcmd_changeallprices(playerid, params[])
{
	new hcount, file[HOUSEFILE_LENGTH], price;
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "d", price)) return SendClientMessage(playerid, COLOUR_SYSTEM, E_CMD_USAGE_CHANGEALLPRICE);
	if(price < 1500000 || price > 25000000) return SendClientMessage(playerid, COLOUR_SYSTEM, E_INVALID_HVALUE);
	else
	{
	    Loop(h, MAX_HOUSES)
	    {
	        format(file, sizeof(file), FILEPATH, h);
	        if(dini_Exists(file))
	        {
		    	dini_IntSet(file, "HouseValue", price);
		    	UpdateHouseText(h);
		    	hcount++;
	    	}
	    }
		SendMSG(playerid, COLOUR_YELLOW, 128, I_ALLH_PRICE_CHANGED, price, hcount);
        #if defined GH_DEBUGGING
			printf(DEBUG_OP_CMD11, RealName[playerid], playerid, price, hcount);
		#endif
	}
    return 1;
}
dcmd_ghcmds(playerid, params[])
{
	#pragma unused params
	if(!IsPlayerAdmin(playerid)) return 0;
	else
	{
		ShowPlayerDialog(playerid, 520, DIALOG_STYLE_MSGBOX, "Команды", "/removeallhouses\n/changeallprices\n/sellallhouses\n/createhouse\n/removehouse\n/changeprice\n/sellhouse\n/gotohouse\n/passhouse\n/relhouses\n/lchouse\n/housemenu\n/ghcmds", "Закрыть", "Закрыть");
		SetPVarInt(playerid, "DlgCont", 520);
	    return 1;
    }
}
//##############################################################################
// 								      Publics
//##############################################################################
forward HouseVisiting(playerid);
public HouseVisiting(playerid)
{

	SetPVarInt(playerid, "HousePrevTime", 0);//сбрасываем блокировку меню дома

	new string[200], tmpstring[50];
	GetPVarString(playerid, "HousePrevName", tmpstring, 50);
	format(string, sizeof(string), I_HINT_VISIT_OVER, tmpstring, GetPVarInt(playerid, "HousePrevValue"));
	ShowPlayerDialog(playerid, 517, DIALOG_STYLE_MSGBOX, "Интерьер", string, "Купить", "Отмена");
	SetPVarInt(playerid, "DlgCont", 517);
	return 1;
}
forward HouseSpawning(playerid);
public HouseSpawning(playerid)
{

	if(GetPVarInt(playerid, "SecPris") > 0)//если игрок в тюрьме, то в доме НЕ спавниться
	{
		SetPVarInt(playerid, "FirstSpawn", 1);
		return 1;
	}
	else
	{

		new file[HOUSEFILE_LENGTH];
		Loop(h, MAX_HOUSES)
		{
			if(!strcmp(GetHouseOwner(h), RealName[playerid], CASE_SENSETIVE))
			{
  				format(file, sizeof(file), FILEPATH, h);
  				if(dini_Int(file, "QuitInHouse") == 1)
	    		{
		    		SetPVarInt(playerid, "IsInHouse", 1);
			    	SetPVarInt(playerid, "LastHouseCP", h);
       				SetPlayerHouseInterior(playerid, h);
       				#if defined GH_HOUSECARS
       					LoadHouseCar(h);
       				#endif
			    	SendClientMessage(playerid, COLOUR_INFO, I_HMENU);
			    	dini_IntSet(file, "QuitInHouse", 0);
		    		#if defined GH_DEBUGGING
  	    				printf(DEBUG_OP_SPAWN, RealName[playerid], playerid);
		    		#endif
				}
			}
		}
		SetPVarInt(playerid, "FirstSpawn", 1);
		return 1;
	}
}
//##############################################################################
// 								Functions
//##############################################################################
// 							  By [03]Garsino!
//==============================================================================
// LoadHouses();
// This function is used to load the houses.
// It creates all the checkpoints, map icons and
// 3D texts for all the houses and sets the correct 3D text information.
//==============================================================================
stock LoadHouses()
{

	for(new i = 0; i < MAX_PLAYERS; i++)//цикл для всех игроков
	{
		if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
		{
			SetPVarInt(i, "HousePrevTime", 0);//обнуление важных глобальных переменных !!!
			SetPVarInt(i, "HousePreview", 0);
			SetPVarInt(i, "IsHouseVisiting", 0);
			SetPVarInt(i, "LastHouseCP", 0);
			SetPVarInt(i, "IsInHouse", 0);
			SetPVarInt(i, "HousePrevInt", 0);
			SetPVarInt(i, "IsHouseVisiting", 0);
			SetPVarInt(i, "ChangeHouseInt", 0);
			SetPVarInt(i, "HouseIntUpgradeMod", 0);
			SetPVarInt(i, "JustCreatedHouse", 0);
			SetPVarInt(i, "FirstSpawn", 0);
		}
	}

	new hcount = 0;
	new dname[64], dvw, Float:dcX, Float:dcY, Float:dcZ;
	Loop(h, MAX_HOUSES)
	{
		HousePickupOut[h] = -600;//задаём несуществующие ID-номера пикапов для дома
		HousePickupInt[h] = -600;
	    new file[HOUSEFILE_LENGTH], labeltext[150];
	    format(file, sizeof(file), FILEPATH, h);
	    if(dini_Exists(file))
	    {
			dcX = dini_Float(file, "CPOutX");
			dcY = dini_Float(file, "CPOutY");
			dcZ = dini_Float(file, "CPOutZ");
			strdel(dname, 0, 64);
			strcat(dname, dini_Get(file, "HouseOwner"));
			dvw = dini_Int(file, "SpawnWorld");
			HousePickupOut[h] = CreateDynamicPickup(PICKUP_MODEL_OUT, PICKUP_TYPE, dcX, dcY, dcZ, dvw, dini_Int(file, "SpawnInterior"), -1, 15.0);
			CreateCorrectHouseExitCP(h);
		    if(!strcmp(dname, INVALID_HOWNER_NAME, CASE_SENSETIVE))
		    {
		        format(labeltext, sizeof(labeltext), LABELTEXT1, GetHouseName(h), GetHouseValue(h), h);
//				HouseLabel[h] = Create3DTextLabel(labeltext, COLOUR_GREEN, dcX, dcY, dcZ+0.7, 25, dvw, 1);
				HouseLabel[h] = CreateDynamic3DTextLabel(labeltext, COLOUR_GREEN, dcX, dcY, dcZ+0.7, 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, dvw, dini_Int(file, "SpawnInterior"), -1);
                #if defined GH_USE_MAPICONS
					HouseMIcon[h] = CreateDynamicMapIcon(dcX, dcY, dcZ, 31, -1, dvw, dini_Int(file, "SpawnInterior"), -1, MICON_VD);
				#endif
			}
		    if(strcmp(dname, INVALID_HOWNER_NAME, CASE_SENSETIVE))
		    {
		        format(labeltext, sizeof(labeltext), LABELTEXT2, GetHouseName(h), GetHouseOwner(h), GetHouseValue(h), h);
//				HouseLabel[h] = Create3DTextLabel(labeltext, COLOUR_GREEN, dcX, dcY, dcZ+0.7, 25, dvw, 1);
				HouseLabel[h] = CreateDynamic3DTextLabel(labeltext, COLOUR_GREEN, dcX, dcY, dcZ+0.7, 25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, dvw, dini_Int(file, "SpawnInterior"), -1);
                #if defined GH_USE_MAPICONS
					HouseMIcon[h] = CreateDynamicMapIcon(dcX, dcY, dcZ, 32, -1, dvw, dini_Int(file, "SpawnInterior"), -1, MICON_VD);
				#endif
			}
			CallRemoteFunction("GPSrfun", "iiisifff", 1, 1, h, dname, dvw, dcX, dcY, dcZ);
		    hcount++;
		}
		else
		{
			CallRemoteFunction("GPSrfun", "iiisifff", 1, 0, h, "*** INV_PL_ID", 0, 0.0, 0.0, 0.0);
		}
	}
	print(" ");
	printf("Total Houses Loaded: %d\n", hcount);
	return 1;
}
//==============================================================================
// LoadHouseCar(houseid);
// This function is used to load the house car for a house.
//==============================================================================
stock LoadHouseCar(houseid)
{
	#if defined GH_HOUSECARS
		new file[HOUSEFILE_LENGTH];
		format(file, sizeof(file), FILEPATH, houseid);
		if(dini_Exists(file) && dini_Int(file, "HCar") == 1)
		{
			HouseCar[houseid] = CreateVehicle(dini_Int(file, "HCarModel"), dini_Float(file, "HCarPosX"), dini_Float(file, "HCarPosY"), dini_Float(file, "HCarPosZ"), dini_Float(file, "HCarAngle"), HCAR_COLOUR1, HCAR_COLOUR2, HCAR_RESPAWN);
			SetVehicleVirtualWorld(HouseCar[houseid], dini_Int(file, "HCarWorld"));
			LinkVehicleToInterior(HouseCar[houseid], dini_Int(file, "HCarInt"));
		}
	#endif
	return 1;
}
//==============================================================================
// UnloadHouseCar(houseid);
// This function is used to the unload house car for a house.
//==============================================================================
stock UnloadHouseCar(houseid)
{
	#if !defined GH_HOUSECARS
	    #pragma unused houseid
	#endif
	#if defined GH_HOUSECARS
		new file[HOUSEFILE_LENGTH];
		format(file, sizeof(file), FILEPATH, houseid);
		if(dini_Exists(file) && dini_Int(file, "HCar") == 1)
		{
		    if(GetVehicleModel(HouseCar[houseid]) >= 400 && GetVehicleModel(HouseCar[houseid]) <= 611 && HouseCar[houseid] >= 1)
			{
			    DestroyVehicle(HouseCar[houseid]);
			    HouseCar[houseid] = -1;
			}
		}
	#endif
	return 1;
}
//==============================================================================
// SaveHouseCar(houseid);
// This function is used to check if there is any vehicles
// near the housecar spawn.
//==============================================================================
stock SaveHouseCar(houseid)
{
	#if defined GH_HOUSECARS
		new file[HOUSEFILE_LENGTH], Float:tmpx, Float:tmpy, Float:tmpz;
		format(file, sizeof(file), FILEPATH, houseid);
		if(dini_Exists(file) && dini_Int(file, "HCar") == 1)
		{
		    tmpx = dini_Float(file, "HCarPosX"), tmpy = dini_Float(file, "HCarPosY"), tmpz = dini_Float(file, "HCarPosZ");
		    Loop(v, MAX_VEHICLES)
			{
			    if(GetVehicleModel(v) < 400 || GetVehicleModel(v) > 611 || IsVehicleOccupied(v)) continue;
			    GetVehiclePos(v, Xgh, Ygh, Zgh);
			    if(PointInRangeOfPoint(HCAR_RANGE, Xgh, Ygh, Zgh, tmpx, tmpy, tmpz))
			    {
			        dini_IntSet(file, "HCarModel", GetVehicleModel(v));
			        DestroyVehicle(v);
			        break;
			    }
			}
		}
	#endif
	return 1;
}
//==============================================================================
// GetOwnedHouses(playerid);
// This function is used to find out how many houses a player owns
//==============================================================================
stock GetOwnedHouses(playerid)
{
	new file[HOUSEFILE_LENGTH], tmpcount;
	Loop(h, MAX_HOUSES)
	{
	    format(file, sizeof(file), FILEPATH, h);
	    if(dini_Exists(file))
	    {
		    if(!strcmp(dini_Get(file, "HouseOwner"), RealName[playerid], CASE_SENSETIVE))
		    {
		        tmpcount++;
		    }
		}
	}
	return tmpcount;
}
//==============================================================================
// GetHouseOwnerEx(houseid);
// This function is used to get the house owner of a house
// and return the playerid, it will return INVALID_PLAYER_ID
// if the house owner is not connected
//==============================================================================
stock GetHouseOwnerEx(houseid)
{
	new file[HOUSEFILE_LENGTH];
	format(file, sizeof(file), FILEPATH, houseid);
 	if(dini_Exists(file))
  	{
   		Loop(i, MAX_PLAYERS)
   		{
	    	if(!strcmp(RealName[i], GetHouseOwner(houseid), CASE_SENSETIVE))
   			{
      			return i;
   			}
		}
	}
	return INVALID_PLAYER_ID;
}
//==============================================================================
// ReturnPlayerHouseID(playerid, houseslot);
// This function is used to return the house id from a players house 'slot'
// Example: ReturnPlayerHouseID(playerid, 0);
// Would return for example house ID 500.
//==============================================================================
stock ReturnPlayerHouseID(playerid, houseslot)
{
	new file[HOUSEFILE_LENGTH], tmpcount = 0;
	if(houseslot < 1 && houseslot > MAX_HOUSES_OWNED) return -1;
	Loop(h, MAX_HOUSES)
	{
	    format(file, sizeof(file), FILEPATH, h);
	    if(dini_Exists(file))
	    {
		    if(!strcmp(RealName[playerid], dini_Get(file, "HouseOwner"), CASE_SENSETIVE))
		    {
		        tmpcount++;
		        if(tmpcount == houseslot)
		        {
		        	return h;
		        }
		    }
		}
	}
	return -1;
}
//==============================================================================
// UnloadHouses();
// This function is used to unload the houses.
// It deletes all the checkpoints, map icons and 3D texts for all the houses.
//==============================================================================
stock UnloadHouses()
{
	Loop(h, MAX_HOUSES)
	{
		DestroyHouseEntrance(h, TYPE_OUT);
		DestroyHouseEntrance(h, TYPE_INT);
		#if defined GH_USE_MAPICONS
			DestroyDynamicMapIcon(HouseMIcon[h]);
		#endif
//		Delete3DTextLabel(HouseLabel[h]);
		DestroyDynamic3DTextLabel(HouseLabel[h]);
		#if defined GH_HOUSECARS
			UnloadHouseCar(h);
		#endif
		CallRemoteFunction("GPSrfun", "iiisifff", 1, 0, h, "*** INV_PL_ID", 0, 0.0, 0.0, 0.0);
	}
	return 1;
}
//==============================================================================
// GetHouseValue(houseid);
// This function is used to get the value of a house
//==============================================================================
stock GetHouseValue(houseid)
{
	new file[HOUSEFILE_LENGTH];
	format(file, sizeof(file), FILEPATH, houseid);
	if(dini_Exists(file))
	{
		return dini_Int(file, "HouseValue");
	}
	else return printf("Couldn't Get House Value For House ID %d. File Doesn't Exist...", houseid);
}
//==============================================================================
// GetHouseName(houseid);
// This function is used to get the name of a house
//==============================================================================
stock GetHouseName(houseid)
{
	new file[HOUSEFILE_LENGTH], hname[MAX_HOUSE_NAME];
	format(hname, MAX_HOUSE_NAME, "%s", DEFAULT_HOUSE_NAME);
	format(file, sizeof(file), FILEPATH, houseid);
	if(dini_Exists(file))
	{
	    format(hname, MAX_HOUSE_NAME, "%s", dini_Get(file, "HouseName"));
		return hname;
	}
	return hname;
}
//==============================================================================
// GetHouseOwner(houseid);
// This function is used to get the owner of a house
//==============================================================================
stock GetHouseOwner(houseid)
{
	new file[HOUSEFILE_LENGTH], howner[MAX_PLAYER_NAME];
	format(howner, MAX_PLAYER_NAME, INVALID_HOWNER_NAME);
	format(file, sizeof(file), FILEPATH, houseid);
	if(dini_Exists(file))
	{
	    format(howner, MAX_PLAYER_NAME, "%s", dini_Get(file, "HouseOwner"));
		return howner;
	}
	return howner;
}
//==============================================================================
// IsHouseInRangeOfHouse(house, house2, Float:range);
// This function is used to check if a house is in range of another house
// Default range is 250.0
//==============================================================================
stock IsHouseInRangeOfHouse(house, house2, Float:range = 250.0)
{
	new file[HOUSEFILE_LENGTH], file2[25];
	format(file, sizeof(file), FILEPATH, house);
	format(file2, sizeof(file2), FILEPATH, house2);
	if(dini_Exists(file) && dini_Exists(file2))
	{
		if(PointInRangeOfPoint(range, dini_Float(file, "CPOutX"), dini_Float(file, "CPOutY"), dini_Float(file, "CPOutZ"), dini_Float(file2, "CPOutX"), dini_Float(file2, "CPOutY"), dini_Float(file2, "CPOutZ")))
		{
		    return 1;
		}
	}
	return 0;
}
//==============================================================================
// CreateCorrectHouseExitCP(houseid);
// This function is used to create the correct house exit checkpoint for the houseid
// based on the house interior ID
//==============================================================================
stock CreateCorrectHouseExitCP(houseid)
{
    new file[HOUSEFILE_LENGTH];
	format(file, sizeof(file), FILEPATH, houseid);
	switch(dini_Int(file, "HouseInterior"))
	{
	 	case 0: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2195.84, -1204.36, 1049.02, (houseid + 1000), 6, -1, 15.0); // Default House
		case 1: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2260.38, -1135.89, 1050.64, (houseid + 1000), 10, -1, 15.0); // Shitty Shack House Interior
		case 2: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2284.24, -1139.42, 1050.89, (houseid + 1000), 11, -1, 15.0); // Motel House Interior
		case 3: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2233.69, -1114.26, 1050.88, (houseid + 1000), 5, -1, 15.0); // Hotel House Interior
		case 4: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2216.39, -1077.10, 1050.48, (houseid + 1000), 1, -1, 15.0); // Hotel 2 House Interior
		case 5: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2496.00, -1693.70, 1014.74, (houseid + 1000), 3, -1, 15.0); // CJ's House Interior
		case 6: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2365.25, -1134.00, 1050.88, (houseid + 1000), 8, -1, 15.0); // Verdant Bluff's Safehouse House Interior
		case 7: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2319.43, -1026.33, 1050.21, (houseid + 1000), 9, -1, 15.0); // Medium Mansion House Interior
		case 8: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2324.41, -1148.54, 1050.71, (houseid + 1000), 12, -1, 15.0); // Rich Mansion House Interior
		case 9: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 143.40, 1366.66, 1083.85, (houseid + 1000), 5, -1, 15.0); // Huge Mansion House Interior
		case 10: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 1263.11, -785.26, 1091.9063, (houseid + 1000), 5, -1, 15.0); // Madd Dogg's Mansion House Interior
	}
	return 1;
}
stock CreateCorrectHouseExitCP22(playerid, houseid)
{
	switch(GetPVarInt(playerid, "HousePrevInt"))
	{
	 	case 0: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2195.84, -1204.36, 1049.02, (houseid + 1000), 6, -1, 15.0); // Default House
		case 1: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2260.38, -1135.89, 1050.64, (houseid + 1000), 10, -1, 15.0); // Shitty Shack House Interior
		case 2: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2284.24, -1139.42, 1050.89, (houseid + 1000), 11, -1, 15.0); // Motel House Interior
		case 3: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2233.69, -1114.26, 1050.88, (houseid + 1000), 5, -1, 15.0); // Hotel House Interior
		case 4: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2216.39, -1077.10, 1050.48, (houseid + 1000), 1, -1, 15.0); // Hotel 2 House Interior
		case 5: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2496.00, -1693.70, 1014.74, (houseid + 1000), 3, -1, 15.0); // CJ's House Interior
		case 6: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2365.25, -1134.00, 1050.88, (houseid + 1000), 8, -1, 15.0); // Verdant Bluff's Safehouse House Interior
		case 7: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2319.43, -1026.33, 1050.21, (houseid + 1000), 9, -1, 15.0); // Medium Mansion House Interior
		case 8: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 2324.41, -1148.54, 1050.71, (houseid + 1000), 12, -1, 15.0); // Rich Mansion House Interior
		case 9: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 143.40, 1366.66, 1083.85, (houseid + 1000), 5, -1, 15.0); // Huge Mansion House Interior
		case 10: HousePickupInt[houseid] = CreateDynamicPickup(PICKUP_MODEL_INT, PICKUP_TYPE, 1263.11, -785.26, 1091.9063, (houseid + 1000), 5, -1, 15.0); // Madd Dogg's Mansion House Interior
	}
	return 1;
}
//==============================================================================
// SetPlayerHouseInterior(playerid, house);
// This function is used to set the correct house interior for a player when he enters a house or buy a new house interior.
//==============================================================================
stock SetPlayerHouseInterior(playerid, house)
{
    new file[HOUSEFILE_LENGTH];
    format(file, sizeof(file), FILEPATH, house);
	switch(dini_Int(file, "HouseInterior"))
	{
	 	case 0: SetPlayerPosEx(playerid, 2193.9001, -1202.4185, 1049.0234, 91.9386, 6, (house + 1000)); // Default House Interior - Spawnpoint
		case 1: SetPlayerPosEx(playerid, 2262.5627, -1136.1664, 1050.6328, 267.5372, 10, (house + 1000)); // Shitty Shack House Interior - Spawnpoint
		case 2: SetPlayerPosEx(playerid, 2283.0632, -1136.9760, 1050.8984, 358.7963, 11, (house + 1000)); // Motel Room House Interior - Spawnpoint
		case 3: SetPlayerPosEx(playerid, 2233.6057, -1111.7039, 1050.8828, 2.9124, 5, (house + 1000)); // Hotel House Interior - Spawnpoint
		case 4: SetPlayerPosEx(playerid, 2214.8909, -1076.0967, 1050.4844, 88.8910, 1, (house + 1000)); // Hotel 2 House Interior - Spawnpoint
		case 5: SetPlayerPosEx(playerid, 2495.8035, -1695.0997, 1014.7422, 181.9661, 3, (house + 1000)); // CJ's House Interior - Spawnpoint
		case 6: SetPlayerPosEx(playerid, 2365.2883, -1132.5228, 1050.8750, 358.0393, 8, (house + 1000)); // Verdant Bluff's Safehouse House Interior - Spawnpoint
		case 7: SetPlayerPosEx(playerid, 2320.0730, -1023.9533, 1050.2109, 358.4915, 9, (house + 1000)); // Medium Mansion House Interior - Spawnpoint
		case 8: SetPlayerPosEx(playerid, 2324.4490, -1145.2841, 1050.7101, 357.5873, 12, (house + 1000)); // Richouse Mansion House Interior - Spawnpoint
		case 9: SetPlayerPosEx(playerid, 140.1788, 1369.1936, 1083.8641, 359.2263, 5, (house + 1000)); // Huge Mansion House Interior - Spawnpoint
		case 10: SetPlayerPosEx(playerid, 1264.7765, -781.2485, 1091.9063, 270.6992, 5, (house + 1000)); // Madd Dogg's Mansion House Interior - Spawnpoint
	}
	return 1;
}
stock SetPlayerHouseInterior22(playerid, house)
{
	switch(GetPVarInt(playerid, "HousePrevInt"))
	{
	 	case 0: SetPlayerPosEx(playerid, 2193.9001, -1202.4185, 1049.0234, 91.9386, 6, (house + 1000)); // Default House Interior - Spawnpoint
		case 1: SetPlayerPosEx(playerid, 2262.5627, -1136.1664, 1050.6328, 267.5372, 10, (house + 1000)); // Shitty Shack House Interior - Spawnpoint
		case 2: SetPlayerPosEx(playerid, 2283.0632, -1136.9760, 1050.8984, 358.7963, 11, (house + 1000)); // Motel Room House Interior - Spawnpoint
		case 3: SetPlayerPosEx(playerid, 2233.6057, -1111.7039, 1050.8828, 2.9124, 5, (house + 1000)); // Hotel House Interior - Spawnpoint
		case 4: SetPlayerPosEx(playerid, 2214.8909, -1076.0967, 1050.4844, 88.8910, 1, (house + 1000)); // Hotel 2 House Interior - Spawnpoint
		case 5: SetPlayerPosEx(playerid, 2495.8035, -1695.0997, 1014.7422, 181.9661, 3, (house + 1000)); // CJ's House Interior - Spawnpoint
		case 6: SetPlayerPosEx(playerid, 2365.2883, -1132.5228, 1050.8750, 358.0393, 8, (house + 1000)); // Verdant Bluff's Safehouse House Interior - Spawnpoint
		case 7: SetPlayerPosEx(playerid, 2320.0730, -1023.9533, 1050.2109, 358.4915, 9, (house + 1000)); // Medium Mansion House Interior - Spawnpoint
		case 8: SetPlayerPosEx(playerid, 2324.4490, -1145.2841, 1050.7101, 357.5873, 12, (house + 1000)); // Richouse Mansion House Interior - Spawnpoint
		case 9: SetPlayerPosEx(playerid, 140.1788, 1369.1936, 1083.8641, 359.2263, 5, (house + 1000)); // Huge Mansion House Interior - Spawnpoint
		case 10: SetPlayerPosEx(playerid, 1264.7765, -781.2485, 1091.9063, 270.6992, 5, (house + 1000)); // Madd Dogg's Mansion House Interior - Spawnpoint
	}
	return 1;
}
//==============================================================================
// PointInRangeOfPoint(Float:range, Float:x2, Float:y2, Float:z2, Float:X2, Float:Y2, Float:Z2);
// Used to check if a point is in range of another point.
// Credits to whoever made this!
//==============================================================================
stock PointInRangeOfPoint(Float:range, Float:x2, Float:y2, Float:z2, Float:X2, Float:Y2, Float:Z2)
{
    X2 -= x2;
    Y2 -= y2;
    Z2 -= z2;
    return ((X2 * X2) + (Y2 * Y2) + (Z2 * Z2)) < (range * range);
}
//==============================================================================
// ReturnProcent(Float:amount, Float:procent);
// Used to return the procent of an value.
//==============================================================================
stock ReturnProcent(Float:amount, Float:procent)
{
	return floatround((amount / 100 * procent));
}
//==============================================================================
// SetPlayerPosEx(playerid, Float:posX, Float:posY, Float:posZ, Interior = 0, World = 0);
// Used to set the position of a player with optional interiorid and worldid parameters
//==============================================================================
stock SetPlayerPosEx(playerid, Float:posX, Float:posY, Float:posZ, Float:angp, Interior, World)
{
	SetPlayerVirtualWorld(playerid, World);
	SetPlayerInterior(playerid, Interior);
	if(Interior == 0 && World == 0 && (posX > 3050.0 || posX < -3050.0 || posY > 3050.0 || posY < -3050.0))
	{
		SetPlayerPos(playerid, posX, posY, posZ+2.0);
	}
	else
	{
		SetPlayerPos(playerid, posX, posY, posZ);
	}
	if(angp != -600.0) { SetPlayerFacingAngle(playerid, angp); }
	SetCameraBehindPlayer(playerid);
	return 1;
}
//==============================================================================
// GetFreeHouseID();
// Used to get the next free house ID. Will return -1 if there is none free.
//==============================================================================
stock GetFreeHouseID()
{
	new file[HOUSEFILE_LENGTH];
    Loop(h, MAX_HOUSES)
    {
        format(file, sizeof(file), FILEPATH, h);
        if(!dini_Exists(file))
        {
            return h;
		}
	}
    return -1;
}
//==============================================================================
// GetTotalHouses();
// Used to get the amount of existing houses.
//==============================================================================
stock GetTotalHouses()
{
	new tmpcount, file[HOUSEFILE_LENGTH];
    Loop(h, MAX_HOUSES)
    {
        format(file, sizeof(file), FILEPATH, h);
        if(dini_Exists(file))
        {
            tmpcount++;
		}
	}
    return tmpcount;
}
stock UpdateHouseText(houseid)
{
	new labeltext[150], file[HOUSEFILE_LENGTH];
	format(file, sizeof(file), FILEPATH, houseid);
	if(dini_Exists(file))
	{
	    if(!strcmp(dini_Get(file, "HouseOwner"), INVALID_HOWNER_NAME, CASE_SENSETIVE))
	    {
			format(labeltext, sizeof(labeltext), LABELTEXT1, GetHouseName(houseid), GetHouseValue(houseid), houseid);
		}
		else
		{
			format(labeltext, sizeof(labeltext), LABELTEXT2, GetHouseName(houseid), GetHouseOwner(houseid), GetHouseValue(houseid), houseid);
		}
//		Update3DTextLabelText(HouseLabel[houseid], COLOUR_GREEN, labeltext);
		UpdateDynamic3DTextLabelText(HouseLabel[houseid], COLOUR_GREEN, labeltext);
    }
	return 1;
}
//==============================================================================
// FM(amount, Optional(Delimiter));
// Used to format the money (from 100000 to 100,000).
// Credits to mick88
//==============================================================================
stock FM(amount, delimiter[2]=",")
{
	new txt[20];
	format(txt, 20, "$%d", amount);
	new l = strlen(txt);
	if (amount < 0) // -
	{
	  	if (l >= 5) strins(txt, delimiter, l-3);
		if (l >= 8) strins(txt, delimiter, l-6);
		if (l >= 11) strins(txt, delimiter, l-9);
	}
	else
	{
		if (l >= 4) strins(txt, delimiter, l-3);
		if (l >= 7) strins(txt, delimiter, l-6);
		if (l >= 10) strins(txt, delimiter, l-9);
	}
	return txt;
}
//==============================================================================
// AddS(amount);
// By [03]Garsino.
//==============================================================================
stock AddS(amount)
{
	new returnstring[2];
	format(returnstring, 2, "");
	if(amount != 1 && amount != -1)
	{
	    format(returnstring, 2, "s");
	}
	return returnstring;
}
//==============================================================================
// GetSecondsBetweenAction(action);
// By [03]Garsino.
//==============================================================================
//	stock GetSecondsBetweenAction(action)
//	{
//		return floatround(floatdiv((GetTickCount() - action), 1000), floatround_tozero);
//	}
//==============================================================================
// DestroyHouseEntrance(houseid, type);
// Destroys the house entrance of a house (pickup or checkpoint).
// Type can be: TYPE_OUT (0) and TYPE_INT (1)
// By [03]Garsino.
//==============================================================================
stock DestroyHouseEntrance(houseid, type)
{
	if(type == TYPE_OUT)
	{
		DestroyDynamicPickup(HousePickupOut[houseid]);
		HousePickupOut[houseid] = -600;//задаём несуществующий ID-номер пикапа для дома
	}
	if(type == TYPE_INT)
	{
		DestroyDynamicPickup(HousePickupInt[houseid]);
		HousePickupInt[houseid] = -600;//задаём несуществующий ID-номер пикапа для дома
	}
	return 1;
}
//==============================================================================
// IsVehicleOccupied(vehicleid);
// Checks if a vehicle is occupied or not.
// By [03]Garsino.
//==============================================================================
stock IsVehicleOccupied(vehicleid)
{
  	Loop(i, MAX_PLAYERS)
	{
		if(IsPlayerInVehicle(i, vehicleid))
		{
			return 1;
		}
	}
	return 0;
}
//==============================================================================
//                              End GarHouse
//==============================================================================

forward DelAkk22(para1);
public DelAkk22(para1)
{
	new string[256], ssss[256];
	format(string,sizeof(string),"gangs/%d.ini",para1);
	new para3[130];
	strdel(para3, 0, 130);
	strcat(para3, GName[para1]);
	strdel(GTDReg[para1], 0, 32);
	strdel(GHead[para1], 0, 64);
	strdel(GName[para1], 0, 130);
	strdel(GColor[para1], 0, 16);
	strdel(GColorHex[para1], 0, 16);
	GSpawnX[para1] = 0.00;
	GSpawnY[para1] = 0.00;
	GSpawnZ[para1] = 0.00;
	GInter[para1] = 0;
	GWorld[para1] = 0;
	GSkin[para1][0] = 500;
	GSkin[para1][1] = 500;
	GSkin[para1][2] = 500;
	GSkin[para1][3] = 500;
	GSkin[para1][4] = 500;
	GSkin[para1][5] = 500;
	GPlayers[para1] = 0;
	fremove(string);//удаляем клан
	printf(" *** и удалил клан [ID: %d] [%s{33CCFF}] (автоматически) .", para1, para3);
	format(ssss,sizeof(ssss)," *** и удалил клан [%s{33CCFF}] (автоматически) .", para3);
	SendClientMessageToAll(COLOR_LIGHTBLUE, ssss);
	for(new i; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PGang[i] == para1)
			{
				SendClientMessage(i, 0xFF0000FF, "Ваш клан был удалён !");
				PGang[i] = 0;
				GangLvl[i] = 0;
			}
		}
	}
	SetTimerEx("DelAkk33", 300, 0, "i", para1);
	return 1;
}

forward DelAkk33(para1);
public DelAkk33(para1)
{
	Gang[para1] = 0;
	return 1;
}

stock GetFreeGang()//Clans system
{
	for(new i=1; i<MAX_GANGS; i++)
	{
		if(Gang[i] == 0) return i;
	}
	return false;
}

forward SaveGangOn(gangid);
public SaveGangOn(gangid)
{
	GangSA[gangid] = 1;
	return true;
}

forward SaveGangOff(playerid);
public SaveGangOff(playerid)
{
	new gangdata;
	gangdata = PGang[playerid];
	strdel(GTDReg[PGang[playerid]], 0, 32);
	strdel(GHead[PGang[playerid]], 0, 64);
	strdel(GColor[PGang[playerid]], 0, 16);
	strdel(GColorHex[PGang[playerid]], 0, 16);
	GSpawnX[PGang[playerid]] = 0.00;
	GSpawnY[PGang[playerid]] = 0.00;
	GSpawnZ[PGang[playerid]] = 0.00;
	GInter[PGang[playerid]] = 0;
	GWorld[PGang[playerid]] = 0;
	GSkin[PGang[playerid]][0] = 500;
	GSkin[PGang[playerid]][1] = 500;
	GSkin[PGang[playerid]][2] = 500;
	GSkin[PGang[playerid]][3] = 500;
	GSkin[PGang[playerid]][4] = 500;
	GSkin[PGang[playerid]][5] = 500;
	GPlayers[PGang[playerid]] = 0;
	for(new i; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
 		{
			if(PGang[i] == PGang[playerid] && i != playerid)
			{
				SendClientMessage(i, 0xFF0000FF, "Ваш клан был удалён !");
				PGang[i] = 0;
				GangLvl[i] = 0;
			}
		}
	}
	printf("[ClansSystem] %s [%d] удалил клан %s [ID: %d] .", RealName[playerid], playerid, GName[PGang[playerid]], PGang[playerid]);
	new string[256];
	format(string,sizeof(string),"gangs/%d.ini",PGang[playerid]);
	fremove(string);
	SendClientMessage(playerid, 0xFF0000FF, "Ваш клан был удалён !");
	strdel(GName[PGang[playerid]], 0, 130);
	PGang[playerid] = 0;
	GangLvl[playerid] = 0;
	SetTimerEx("SaveGangOff22", 300, 0, "i", gangdata);
	return true;
}

forward SaveGangOff22(gangid);
public SaveGangOff22(gangid)
{
	Gang[gangid] = 0;
	return true;
}

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
forward LoadGangAcc(playerid);
public LoadGangAcc(playerid)
{
    new f[256];
    format(f, 256, "gangs/players/%s.ini", RealName[playerid]);
	if(fexist(f))
	{
		new file = ini_openFile(f);
		if(file >= 0)
		{
		    ini_getInteger(file, "Gang", PGang[playerid]);
		    ini_getInteger(file, "GangLvl", GangLvl[playerid]);
			ini_closeFile(file);
		}
		fremove(f);
	}
	return true;
}
//---------------------------------- конец -------------------------------------

forward GangLoad();
public GangLoad()
{
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
	new dopper;
	new dopper22;
	new para1, para2, para3[64];
//---------------------------------- конец -------------------------------------
    new file, f[256];
	for(new i=1; i<(MAX_GANGS - 1); i++)
	{
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
	    format(f, 256, "gangs/idgn/%i.ini", i);
		file = ini_openFile(f);
		if(file >= 0)
		{
		    ini_getString(file, "Gang TDReg", GTDReg[i]);
		    ini_getString(file, "Gang head", GHead[i]);
		    ini_getString(file, "Gang name", GName[i]);
		    ini_getString(file, "Gang color", GColor[i]);
		    ini_getFloat(file, "SpawnX", GSpawnX[i]);
		    ini_getFloat(file, "SpawnY", GSpawnY[i]);
		    ini_getFloat(file, "SpawnZ", GSpawnZ[i]);
		    ini_getInteger(file, "GInter", GInter[i]);
		    ini_getInteger(file, "GWorld", GWorld[i]);
		    ini_getInteger(file, "Skin1", GSkin[i][0]);
		    ini_getInteger(file, "Skin2", GSkin[i][1]);
		    ini_getInteger(file, "Skin3", GSkin[i][2]);
		    ini_getInteger(file, "Skin4", GSkin[i][3]);
		    ini_getInteger(file, "Skin5", GSkin[i][4]);
		    ini_getInteger(file, "Skin6", GSkin[i][5]);
		    ini_getInteger(file, "Players", GPlayers[i]);
			ini_closeFile(file);
		}
		if(fexist(f))
		{
			fremove(f);
			format(f, 256, "gangs/%i.ini", i);
			file = ini_createFile(f);
			if(file >= 0)
			{
				ini_setString(file, "Gang TDReg", GTDReg[i]);
				ini_setString(file, "Gang head", GHead[i]);
				ini_setString(file, "Gang name", GName[i]);
				ini_setString(file, "Gang color", GColor[i]);
				ini_setFloat(file, "SpawnX", GSpawnX[i]);
				ini_setFloat(file, "SpawnY", GSpawnY[i]);
				ini_setFloat(file, "SpawnZ", GSpawnZ[i]);
				ini_setInteger(file, "GInter", GInter[i]);
				ini_setInteger(file, "GWorld", GWorld[i]);
				ini_setInteger(file, "Skin1", GSkin[i][0]);
				ini_setInteger(file, "Skin2", GSkin[i][1]);
				ini_setInteger(file, "Skin3", GSkin[i][2]);
				ini_setInteger(file, "Skin4", GSkin[i][3]);
				ini_setInteger(file, "Skin5", GSkin[i][4]);
				ini_setInteger(file, "Skin6", GSkin[i][5]);
				ini_setInteger(file, "Players", GPlayers[i]);
				ini_closeFile(file);
			}
		}
//---------------------------------- конец -------------------------------------
	    format(f, 256, "gangs/%i.ini", i);
		file = ini_openFile(f);
		if(file >= 0)
		{
		    ini_getString(file, "Gang TDReg", GTDReg[i]);
		    ini_getString(file, "Gang head", GHead[i]);
		    ini_getString(file, "Gang name", GName[i]);
		    ini_getString(file, "Gang color", GColor[i]);
		    ini_getFloat(file, "SpawnX", GSpawnX[i]);
		    ini_getFloat(file, "SpawnY", GSpawnY[i]);
		    ini_getFloat(file, "SpawnZ", GSpawnZ[i]);
		    ini_getInteger(file, "GInter", GInter[i]);
		    ini_getInteger(file, "GWorld", GWorld[i]);
		    ini_getInteger(file, "Skin1", GSkin[i][0]);
		    ini_getInteger(file, "Skin2", GSkin[i][1]);
		    ini_getInteger(file, "Skin3", GSkin[i][2]);
		    ini_getInteger(file, "Skin4", GSkin[i][3]);
		    ini_getInteger(file, "Skin5", GSkin[i][4]);
		    ini_getInteger(file, "Skin6", GSkin[i][5]);
		    ini_getInteger(file, "Players", GPlayers[i]);
#if (MOD11INS <= 3)
			for(new j = 0; j < 6; j++)//сброс ID скинов клана (если ID больше 299)
			{
				if(GSkin[i][j] > 299 && GSkin[i][j] != 500) { GSkin[i][j] = 500; }
			}
#endif
		    Gang[i] = 1;
		    GangSA[i] = 1;
			ini_closeFile(file);
		}
		else
		{
		    Gang[i] = 0;
		    GangSA[i] = 0;
		}
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
		dopper = 0;//замена запрещённых кодов на 20h (пробел) в названии клана
		dopper22 = strlen(GName[i]);
		for(new j = 0; j < dopper22; j++)
		{
			if(GName[i][j] < 32 || GName[i][j] == 37 || GName[i][j] == 126 ||
			GName[i][j] == 127 || GName[i][j] == 152 || GName[i][j] == 160)
			{
				GName[i][j] = 32;
				dopper = 1;
			}
		}
		para2 = HexToInt(GColor[i], para1);//определение цвета клана
		if(para2 == -1 || para2 == -2)
		{
			strdel(GColor[i], 0, 16);
			strcat(GColor[i], "A0A0A0FF");
			dopper = 1;
		}
		para2 = GNameCon(GName[i]);//определение смены цвета внутри названия клана
		if(para2 == -1 || para2 == -2)
		{
			format(para3, 64, "Default - %d", i);
			strdel(GName[i], 0, 130);
			strcat(GName[i], para3);
			dopper = 1;
		}
		if(dopper == 1)//если были надены и заменены запрещённые коды в названии клана, ИЛИ был неверно
		{//определён цвет клана, ИЛИ была неверно определена смена цвета внутри названия клана, то:
			file = ini_openFile(f);//записываем изменения в файл клана
			if(file >= 0)
			{
				ini_setString(file, "Gang name", GName[i]);
				ini_setString(file, "Gang color", GColor[i]);
				ini_closeFile(file);
			}
		}
//---------------------------------- конец -------------------------------------
		GColorDec[i] = para1;
		strdel(GColorHex[i], 0, 16);
		strmid(GColorHex[i], GColor[i], 0, 6, 16);
	}
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
	new dfile, df1[256], dakk[64], ddata1, ddata2, ddata3, ddata4;
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты
	ddata4 = ((timecor[2] - 2000) * 366) + (timecor[3] * 31) + timecor[4];
	for(new i = 0; i < 200; i++)
	{
		format(df1, sizeof(df1), "madmins/data/%d.ini", i);
		if(fexist(df1))
		{
			dfile = ini_openFile(df1);
			if(dfile >= 0)
			{
				ini_getString(dfile, "DataName", dakk);
				ini_closeFile(dfile);
			}
			fremove(df1);
			if(strlen(dakk) > 0)
			{
				format(df1, sizeof(df1), "madmins/players/%s.ini", dakk);
				if(fexist(df1))
				{
					dfile = ini_openFile(df1);
					if(dfile >= 0)
					{
						ini_getInteger(dfile, "DataDay", ddata1);
						ini_getInteger(dfile, "TwenLim", ddata2);
						ini_getInteger(dfile, "RestLim", ddata3);
						ini_closeFile(dfile);
					}
					fremove(df1);
					format(df1, sizeof(df1), "madmins/%s.ini", dakk);
					if(fexist(df1))
					{
						fremove(df1);
					}
					dfile = ini_createFile(df1);
					if(dfile >= 0)
					{
						ini_setInteger(dfile, "DataDay", ddata1);
						ini_setInteger(dfile, "TwenLim", ddata2);
						ini_setInteger(dfile, "RestLim", ddata3);
						ini_closeFile(dfile);
					}
				}
				else
				{
					format(df1, sizeof(df1), "madmins/%s.ini", dakk);
					if(fexist(df1))
					{
						fremove(df1);
					}
					dfile = ini_createFile(df1);
					if(dfile >= 0)
					{
						ini_setInteger(dfile, "DataDay", ddata4);
						ini_setInteger(dfile, "TwenLim", 0);
						ini_setInteger(dfile, "RestLim", 0);
						ini_closeFile(dfile);
					}
				}
			}
		}
	}
//---------------------------------- конец -------------------------------------
	return true;
}

forward GangSave(gangid);
public GangSave(gangid)
{
	if(GangSA[gangid] == 1)
	{
		new f[256];
		format(f, 256, "gangs/%i.ini", gangid);
		new file = ini_openFile(f);
		if(file >= 0)
		{
			ini_setString(file, "Gang TDReg", GTDReg[gangid]);
			ini_setString(file, "Gang head", GHead[gangid]);
			ini_setString(file, "Gang name", GName[gangid]);
			ini_setString(file, "Gang color", GColor[gangid]);
			ini_setFloat(file, "SpawnX", GSpawnX[gangid]);
			ini_setFloat(file, "SpawnY", GSpawnY[gangid]);
			ini_setFloat(file, "SpawnZ", GSpawnZ[gangid]);
			ini_setInteger(file, "GInter", GInter[gangid]);
			ini_setInteger(file, "GWorld", GWorld[gangid]);
			ini_setInteger(file, "Skin1", GSkin[gangid][0]);
			ini_setInteger(file, "Skin2", GSkin[gangid][1]);
			ini_setInteger(file, "Skin3", GSkin[gangid][2]);
			ini_setInteger(file, "Skin4", GSkin[gangid][3]);
			ini_setInteger(file, "Skin5", GSkin[gangid][4]);
			ini_setInteger(file, "Skin6", GSkin[gangid][5]);
			ini_setInteger(file, "Players", GPlayers[gangid]);
			ini_closeFile(file);
		}
	}
	return true;
}

stock HexToInt(string[], &mres)
{
	new para = 1;//функция выполнена успешно
	new cur = 1;
	mres = 0;
	new cur22 = 1, res[4], locper = 0, ind;
	res[0] = 0;
	res[1] = 0;
	res[2] = 0;
	res[3] = 0;
	new i = strlen(string);
	if(i < 1 || i > 8) { return -1; }//ошибка в формате цвета
	if(i == 1 || i == 3 || i == 5 || i == 7) { locper = 1; }
	while(i > 0)
	{
		if(string[i-1] < 48 || (string[i-1] > 57 && string[i-1] < 65) || string[i-1] > 70)
		{
			para = -1;//ошибка в формате цвета
			break;
		}
        ind = ((i + locper) / 2) - 1;
    	if(string[i-1] < 58)
		{
			mres = mres + cur * (string[i-1] - 48);
			res[ind] = res[ind] + cur22 * (string[i-1] - 48);
		}
		else
		{
			mres = mres + cur * (string[i-1] - 65 + 10);
			res[ind] = res[ind] + cur22 * (string[i-1] - 65 + 10);
		}
    	cur = cur * 16;
    	cur22 = cur22 * 16;
		i--;
		locper++;
		if(locper > 1)
		{
			locper = 0;
			cur22 = 1;
		}
	}
	if(para == -1) { return -1; }//ошибка в формате цвета
	if((res[0] + res[1] + res[2]) < 192) { para = -2; }//тёмный цвет
	return para;
}

stock GNameCon(string[])
{
	new para = 1;//функция выполнена успешно
	new strd[16];
	strdel(strd, 0, 16);
	new para22 = 0;
	new para33;
	new para44;
	new para55;
	new i = 0;
	new locper = strlen(string);
	while(i < locper)
	{
		if(string[i] == 125) { para22 = 0; }
		if(strlen(strd) == 6 && para22 == 0)
		{
			para44 = HexToInt(strd, para55);
			if(para44 == -1 || para44 == -2)
			{
				para = para44;//ошибка в формате цвета,
				break;//ИЛИ тёмный цвет
			}
		}
		if(para22 == 1)
		{
			strd[para33] = string[i];
			para33++;
		}
		if(string[i] == 123)
		{
			para22 = 1;
			strdel(strd, 0, 16);
			para33 = 0;
		}
		i++;
	}
	return para;
}

VehicleSpeedTextDraw_R()//speedometer
{
	new String[64];
//Vehicle K/MH
	KMH = TextDrawCreate(500.000000,107.000000,"KM/H:");
	TextDrawAlignment(KMH,0);
	TextDrawBackgroundColor(KMH,0x000000ff);
	TextDrawFont(KMH,1);
	TextDrawLetterSize(KMH,0.599999,2.599999);
	TextDrawColor(KMH,0x7777ffff);
	TextDrawSetOutline(KMH,1);
	TextDrawSetProportional(KMH,1);
	TextDrawSetShadow(KMH,1);

	HMS22 = TextDrawCreate(510.000000,325.000000,"HMS:");//создаём текстдрав максимальной горизонтальной скорости
	TextDrawAlignment(HMS22,0);
	TextDrawBackgroundColor(HMS22,0x000000ff);
	TextDrawFont(HMS22,1);
	TextDrawLetterSize(HMS22,0.599999,2.599999);
	TextDrawColor(HMS22,0x7777ffff);
	TextDrawSetOutline(HMS22,1);
	TextDrawSetProportional(HMS22,1);
	TextDrawSetShadow(HMS22,1);

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
//Vehicle K/MH_2
			VehicleSpeed[i] = CreatePlayerTextDraw(i,565.000000,106.000000,"_");
			PlayerTextDrawAlignment(i,VehicleSpeed[i],0);
			PlayerTextDrawBackgroundColor(i,VehicleSpeed[i],0x0000ff66);
			PlayerTextDrawFont(i,VehicleSpeed[i],2);
			PlayerTextDrawLetterSize(i,VehicleSpeed[i],0.699999,2.699999);
			PlayerTextDrawColor(i,VehicleSpeed[i],0xffffffff);
			PlayerTextDrawSetOutline(i,VehicleSpeed[i],1);
			PlayerTextDrawSetProportional(i,VehicleSpeed[i],1);
			PlayerTextDrawSetShadow(i,VehicleSpeed[i],1);

			HMS44[i] = CreatePlayerTextDraw(i,560.000000,324.000000,"_");//создаём текстдравы максимальной горизонтальной скорости
			PlayerTextDrawAlignment(i,HMS44[i],0);
			PlayerTextDrawBackgroundColor(i,HMS44[i],0x0000ff66);
			PlayerTextDrawFont(i,HMS44[i],2);
			PlayerTextDrawLetterSize(i,HMS44[i],0.699999,2.699999);
			PlayerTextDrawColor(i,HMS44[i],0xffffffff);
			PlayerTextDrawSetOutline(i,HMS44[i],1);
			PlayerTextDrawSetProportional(i,HMS44[i],1);
			PlayerTextDrawSetShadow(i,HMS44[i],1);

			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				TextDrawShowForPlayer(i, KMH);

				format(String, sizeof(String), "%d", GetPlayerSpeed(i));
				PlayerTextDrawSetString(i, VehicleSpeed[i], String);
				PlayerTextDrawShow(i, VehicleSpeed[i]);

				R_Vehicle[i] = VehicleSpeed_2;
			}
			conconTD[i] = 1;//блокировка создания текст-дравов при подключении игрока
		}
	}
	return 1;
}

stock GetPlayerSpeed(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))
	GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatmul(ST[0], ST[0]) + floatmul(ST[1], ST[1]) + floatmul(ST[2], ST[2])) * 200;
//	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 200;
//	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 253.3;
    return floatround(ST[3]);
}

stock GetHMaxSpeed(vehicid)
{
	new modelcar = GetVehicleModel(vehicid);
	modelcar = modelcar - 400;
	if(modelcar < 0 || modelcar > 211) { return -1; }
	return HMS77[modelcar];
}

Float:GetPlayerTheoreticAngle(i)//drift bonus
{
	new Float:sin;
	new Float:dis;
	new Float:angle2;
	new Float:x,Float:y,Float:z;
	new Float:tmp3;
	new Float:tmp4;
	new Float:MindAngle;
	GetPlayerPos(i,x,y,z);
	dis = floatsqroot(floatpower(floatabs(floatsub(x,ppos[i][0])),2)+floatpower(floatabs(floatsub(y,ppos[i][1])),2));
	if(IsPlayerInAnyVehicle(i))GetVehicleZAngle(GetPlayerVehicleID(i), angle2); else GetPlayerFacingAngle(i, angle2);
	if(x>ppos[i][0]){tmp3=x-ppos[i][0];}else{tmp3=ppos[i][0]-x;}
	if(y>ppos[i][1]){tmp4=y-ppos[i][1];}else{tmp4=ppos[i][1]-y;}
	if(ppos[i][1]>y && ppos[i][0]>x){
		sin = asin(tmp3/dis);
		MindAngle = floatsub(floatsub(floatadd(sin, 90), floatmul(sin, 2)), -90.0);
	}
	if(ppos[i][1]<y && ppos[i][0]>x){
		sin = asin(tmp3/dis);
		MindAngle = floatsub(floatadd(sin, 180), 180.0);
	}
	if(ppos[i][1]<y && ppos[i][0]<x){
		sin = acos(tmp4/dis);
		MindAngle = floatsub(floatadd(sin, 360), floatmul(sin, 2));
	}
	if(ppos[i][1]>y && ppos[i][0]<x){
		sin = asin(tmp3/dis);
		MindAngle = floatadd(sin, 180);
	}
	if(MindAngle == 0.0){
		return angle2;
	} else
		return MindAngle;
}

public LevelUpdate()
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {

		if(IsPlayerConnected(i))
		{
			new Score = GetPVarInt(i, "PlMon");//drift bonus
			if(Score >= 0 && Score < 100000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}1{FFFFFF}.*\n*{00CCFF}Нуб в дрифтинге{FFFFFF}*");
			if(Score >= 100000 && Score < 200000) format(Playerdr[i][Level],200,"{FFFFFF}*Игрок{FFFFFF}*\n*Уровень: {00CCFF}2{FFFFFF}.*\n*{00CCFF}Новичок{FFFFFF}*");
			if(Score >= 200000 && Score < 300000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}3{FFFFFF}.*\n*{00CCFF}Начинающий дрифтер{FFFFFF}*");
			if(Score >= 300000 && Score < 400000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}4{FFFFFF}.*\n*{00CCFF}Проживающий{FFFFFF}*");
			if(Score >= 400000 && Score < 500000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}5{FFFFFF}.*\n*{00CCFF}Свой{FFFFFF}*");
			if(Score >= 500000 && Score < 600000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}Игрок{FFFFFF}*\n*Уровень: {00CCFF}6{FFFFFF}.*\n*{00CCFF}Пахан{FFFFFF}*");
			if(Score >= 600000 && Score < 700000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}7{FFFFFF}.*\n*{00CCFF}Pro Drifter{FFFFFF}*");
			if(Score >= 700000 && Score < 800000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}8{FFFFFF}.*\n*{00CCFF}VIP{FFFFFF}*");
			if(Score >= 800000 && Score < 900000) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}9{FFFFFF}.*\n*{00CCFF}Гловарь{FFFFFF}*");
			if(Score >= 900000 ) format(Playerdr[i][Level],200,"{FFFFFF}*{00CCFF}*ViP*{FFFFFF}*\n*Уровень: {00CCFF}*10*{FFFFFF}.*\n*{00CCFF}Король дрифта{FFFFFF}*");
			if(scrmod[3][i] == 0)
			{
				if(LevelStats[i] == 0) Attach3DTextLabelToPlayer(Level3D[i],i,0.0,0.0,1.00);
//				if(LevelStats[i] == 0) Attach3DTextLabelToPlayer(Level3D[i],i,0.0,0.0,0.47);
				Update3DTextLabelText(Level3D[i],0x00FF00FF,Playerdr[i][Level]);
				LevelStats[i] = 1;
			}
		}

 		TextDrawHideForPlayer(i,leveldr[0]);
        TextDrawHideForPlayer(i,leveldr[1]);
        TextDrawHideForPlayer(i,leveldr[2]);
        TextDrawHideForPlayer(i,leveldr[3]);
        TextDrawHideForPlayer(i,leveldr[4]);
        TextDrawHideForPlayer(i,leveldr[5]);
        TextDrawHideForPlayer(i,leveldr[6]);
        TextDrawHideForPlayer(i,leveldr[7]);
        TextDrawHideForPlayer(i,leveldr[8]);
        TextDrawHideForPlayer(i,leveldr[9]);
        TextDrawHideForPlayer(i,leveldr[10]);

		if(scrmod[0][i] == 0)
		{
        	new kill  = GetPVarInt(i, "PlMon");
        	if(kill >= 0 && kill <= 100000) { TextDrawShowForPlayer(i,leveldr[0]); }
        	else if(kill >= 100000 && kill <= 200000) { TextDrawShowForPlayer(i,leveldr[1]); }
        	else if(kill >= 200000 && kill <= 300000) { TextDrawShowForPlayer(i,leveldr[2]); }
        	else if(kill >= 300000 && kill <= 400000) { TextDrawShowForPlayer(i,leveldr[3]); }
        	else if(kill >= 400000 && kill <= 500000) { TextDrawShowForPlayer(i,leveldr[4]); }
        	else if(kill >= 500000 && kill <= 600000) { TextDrawShowForPlayer(i,leveldr[5]); }
        	else if(kill >= 600000 && kill <= 700000) { TextDrawShowForPlayer(i,leveldr[6]); }
        	else if(kill >= 700000 && kill <= 800000) { TextDrawShowForPlayer(i,leveldr[7]); }
        	else if(kill >= 800000 && kill <= 900000) { TextDrawShowForPlayer(i,leveldr[8]); }
        	else if(kill >= 900000 && kill <= 1000000) { TextDrawShowForPlayer(i,leveldr[9]); }
        	else if(kill >= 1000000) { TextDrawShowForPlayer(i,leveldr[10]); }

        	else { TextDrawShowForPlayer(i,leveldr[0]); }
		}
    }
    return 1;
}

public DriftCancellation(playerid){
	PlayerDriftCancellation[playerid] = 0;
	if(scrmod[2][playerid] == 0)
	{
		GameTextForPlayer(playerid, Split("~n~~n~~n~~n~~n~~n~~n~~n~~w~~w~Drifting Bonus:~b~ ", tostr(DriftPointsNow[playerid]), "~w~ !"), 3000, 3);
	}
	SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") + DriftPointsNow[playerid]);//добавляем дрифт-очки
	if(compdrift[playerid] >= 0)//если игрок подключен к дрифт-соревнованию, то:
	{
		compdrift[playerid] = compdrift[playerid] + DriftPointsNow[playerid];//добавляем очки к дрифт-соревнованию
	}
	DriftPointsNow[playerid] = 0;
	dddrift[playerid] = 0;
	return 1;
}

Float:ReturnPlayerAngle(playerid){
	new Float:Ang;
	if(IsPlayerInAnyVehicle(playerid))GetVehicleZAngle(GetPlayerVehicleID(playerid), Ang); else GetPlayerFacingAngle(playerid, Ang);
	return Ang;
}

public Drift(){
	new Float:Angle1, Float:Angle2, Float:BySpeed, s[256];
	new Float:Z;
	new Float:X;
	new Float:Y;
	new Float:SpeedX;
	for(new g=0;g<MAX_PLAYERS;g++){
		if(IsPlayerConnected(g))
		{
			NETafkPl[g][0]++;//прибавить контрольную переменную AFK
			GetPlayerPos(g, X, Y, Z);
			SavedPos[ g ][ dltX ] = floatsub(X,SavedPos[ g ][ sX ]);
			SavedPos[ g ][ dltY ] = floatsub(Y,SavedPos[ g ][ sY ]);
			SavedPos[ g ][ dltZ ] = floatsub(Z,SavedPos[ g ][ sZ ]);
			SpeedX = floatsqroot(floatadd(floatadd(floatmul(SavedPos[ g ][ dltX ],SavedPos[ g ][ dltX ]),floatmul(SavedPos[ g ][ dltY ],SavedPos[ g ][ dltY ])),floatmul(SavedPos[ g ][ dltZ ],SavedPos[ g ][ dltZ ])));
//			SpeedX = floatsqroot(floatadd(floatadd(floatpower(floatabs(floatsub(X,SavedPos[ g ][ sX ])),2),floatpower(floatabs(floatsub(Y,SavedPos[ g ][ sY ])),2)),floatpower(floatabs(floatsub(Z,SavedPos[ g ][ sZ ])),2)));
			Angle1 = ReturnPlayerAngle(g);
			Angle2 = GetPlayerTheoreticAngle(g);
			BySpeed = floatmul(SpeedX, 12);
			if(tpdrift[g] == 1)//если игрок ТП, то:
			{
				DriftPointsNow[g] = 0;//обнуляем дрифт-очки (если авто НЕ в движении)
			}
			if(IsPlayerInAnyVehicle(g) && floatabs(floatsub(Angle1, Angle2)) > DRIFT_MINKAT && floatabs(floatsub(Angle1, Angle2)) < DRIFT_MAXKAT && BySpeed > DRIFT_SPEED){
//			if(IsPlayerInAnyVehicle(g) && IsCar(GetPlayerVehicleID(g)) && floatabs(floatsub(Angle1, Angle2)) > DRIFT_MINKAT && floatabs(floatsub(Angle1, Angle2)) < DRIFT_MAXKAT && BySpeed > DRIFT_SPEED){
				if(PlayerDriftCancellation[g] > 0)KillTimer(PlayerDriftCancellation[g]);
				PlayerDriftCancellation[g] = 0;
				dddrift[g] += floatval( floatabs(floatsub(Angle1, Angle2)) * 3 * (BySpeed*0.1) )/10;
				if((dddrift[g] - DriftPointsNow[g]) > 2000)//если дрифт больше xxx, то:
				{
					dddrift[g] = 0;//обнуляем дрифт-очки
				}
				DriftPointsNow[g] = dddrift[g];//запоминаем последний дрифт
				if(tpdrift[g] == 1)//если игрок ТП, то:
				{
					DriftPointsNow[g] = 0;//обнуляем дрифт-очки (если авто в движении)
					tpdrift[g] = 0;//обнуляем переменную ТП
				}
				PlayerDriftCancellation[g] = SetTimerEx("DriftCancellation", 3000, 0, "d", g);
			}
			if(DriftPointsNow[g] > 0 && scrmod[2][g] == 0){
				format(s, sizeof(s), "~n~~n~~n~~n~~n~~n~~n~~n~~w~Drifting Score: ~b~%d~w~ !", DriftPointsNow[g]);
				GameTextForPlayer(g, s, 3000, 3);
			}
			SavedPos[ g ][ sX ] = X;
			SavedPos[ g ][ sY ] = Y;
			SavedPos[ g ][ sZ ] = Z;

			new Float:x333, Float:y333, Float:z333;
			if(IsPlayerInAnyVehicle(g))GetVehiclePos(GetPlayerVehicleID(g), x333, y333, z333); else GetPlayerPos(g, x333, y333, z333);
			ppos[g][0] = x333;
			ppos[g][1] = y333;
			ppos[g][2] = z333;

//функция мода "FunNickCol" (НЕ дрифтовая)
//(функция случайных цветов транспорта, цветов ников и маркеров, координат спавна игрока)
			SetPVarInt(g, "AdmLvl", PlayerInfo[g][pAdmin]);//записываем в глобальную переменную уровень админки
			SetPVarInt(g, "SecPris", PlayerInfo[g][pPrisonsec]);//записываем в глобальную переменную секунды тюрьмы
			SetPVarInt(g, "SecMute", PlayerInfo[g][pMutedsec]);//записываем в глобальную переменную секунды затыка
			SetPVarInt(g, "PlGng", PGang[g]);//записываем в глобальную переменную ID клана игрока
			SetPVarInt(g, "PlGLvl", GangLvl[g]);//записываем в глобальную переменную Lvl игрока в клане
			SetPVarInt(g, "AdmSpect", admper1[g]);//записываем в глобальную переменную статус наблюдения админа
    		if(PlayerInfo[g][pVIP] == 3)//если игрок в депортации, то:
    		{
				SetPVarInt(g, "PlMon", 1000);//устанавливаем игроку 1000 $
				SetPVarInt(g, "PlDeport", 1);//записываем в глобальную переменную статус депортации игрока
			}
			else//если у игрока нет депортации, то:
			{
				SetPVarInt(g, "PlDeport", 0);//записываем в глобальную переменную статус депортации игрока
			}
			ResetPlayerMoney(g);//обнуляем мониторинг денег
			GivePlayerMoney(g, GetPVarInt(g, "PlMon"));//передаём в мониторинг деньги игрока
			if(compdrift[g] < 0)//если игрок отключен от дрифт-соревнования, то:
			{
	 			SetPlayerScore(g, GetPVarInt(g, "PlMon"));//передаём в мониторинг очков - деньги игрока
			}
			else//иначе:
			{
	 			SetPlayerScore(g, compdrift[g]);//передаём в мониторинг очков - очки дрифт-соревнования
			}
			if (PlayerInfo[g][pAdmin] >= 3 && PlayerInfo[g][pAdmlive] == 1)//обновление жизни и брони для админов 3 и 4 левела
			{
				SetPlayerHealth(g,255);
				SetPlayerArmour(g,255);
				livdop[g] = 1;
			}
			if (PlayerInfo[g][pAdmin] >= 3 && PlayerInfo[g][pAdmlive] == 0 && livdop[g] == 1)//выключение бессмертия
			{
				SetPlayerHealth(g,100);
				SetPlayerArmour(g,100);
				livdop[g] = 0;
			}
			new string[256], reg88, Float:coord[3];
			reg88 = GetPlayerCameraMode(g);
			GetPlayerCameraPos(g, coord[0], coord[1], coord[2]);
//---------------- антикрашер игроков - 2 (январь 2015) ------------------------
    		if(reg88 == 53 && (coord[0] < -50000.0 || coord[0] > 50000.0 ||
			coord[1] < -50000.0 || coord[1] > 50000.0 ||
			coord[2] < -50000.0 || coord[2] > 50000.0))
			{
				format(string, sizeof(string), "* Игрок %s [%d] был кикнут за краш игроков - 2 !", RealName[g], g);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				SetTimerEx("PlayKick", 300, 0, "i", g);
 			}
//-------------------- антикрашер игроков - 2 (конец) --------------------------
//---- антикрашер игроков - 6 (январь 2018, краш обнаружен на версии 0.3.7) ----
			if(reg88 != 0 &&
			-0.0005 < coord[0] < 0.0005 && -0.0005 < coord[1] < 0.0005 && -0.0005 < coord[2] < 0.0005)
			{
				crash6[g]++;
			}
			else
			{
				crash6[g] = 0;
			}
			if(crash6[g] >= 3)
			{
				format(string, sizeof(string), "* Игрок %s [%d] был кикнут за краш игроков - 6 !", RealName[g], g);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				format(string, sizeof(string), "* ( или использование стороннего ПО ! )");
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				SetTimerEx("PlayKick", 300, 0, "i", g);
			}
//-------------------- антикрашер игроков - 6 (конец) --------------------------
		}
	}
	nick5col++;
	if (nick5col == 18)
	{
		nick5col = 0;
	}
	switch(nick5col)
	{
		case 0: col4car = 3, tpspa = 0;
		case 1: col4car = 79, tpspa = 1;
		case 2: col4car = 6, tpspa = 2;
		case 3: col4car = 65, tpspa = 3;
		case 4: col4car = 86, tpspa = 4;
		case 5: col4car = 9, tpspa = 5;
		case 6: col4car = 3, tpspa = 0;
		case 7: col4car = 79, tpspa = 1;
		case 8: col4car = 6, tpspa = 2;
		case 9: col4car = 65, tpspa = 3;
		case 10: col4car = 86, tpspa = 4;
		case 11: col4car = 9, tpspa = 5;
		case 12: col4car = 3, tpspa = 0;
		case 13: col4car = 79, tpspa = 1;
		case 14: col4car = 6, tpspa = 2;
		case 15: col4car = 65, tpspa = 3;
		case 16: col4car = 86, tpspa = 4;
		case 17: col4car = 9, tpspa = 5;
	}
	return 1;
}

Split(s1[], s2[], s3[]=""){
	new rxx[256];
	format(rxx, 256, "%s%s%s", s1, s2, s3);
	return rxx;
}

tostr(int){
	new st[256];
	format(st, 256, "%d", int);
	return st;
}

floatval(Float:val){
	new str[256];
	format(str, 256, "%.0f", val);
	return todec(str);
}
/*
IsCar(model)
{
	new model55;
	model55 = GetVehicleModel(model);
	switch(model55)
	{
		case 443:return 0;
		case 448:return 0;
		case 461:return 0;
		case 462:return 0;
		case 463:return 0;
		case 468:return 0;
		case 521:return 0;
		case 522:return 0;
		case 523:return 0;
		case 581:return 0;
		case 586:return 0;
		case 481:return 0;
		case 509:return 0;
		case 510:return 0;
		case 430:return 0;
		case 446:return 0;
		case 452:return 0;
		case 453:return 0;
		case 454:return 0;
		case 472:return 0;
		case 473:return 0;
		case 484:return 0;
		case 493:return 0;
		case 595:return 0;
		case 417:return 0;
		case 425:return 0;
		case 447:return 0;
		case 465:return 0;
		case 469:return 0;
		case 487:return 0;
		case 488:return 0;
		case 497:return 0;
		case 501:return 0;
		case 548:return 0;
		case 563:return 0;
		case 406:return 0;
		case 444:return 0;
		case 556:return 0;
		case 557:return 0;
		case 573:return 0;
		case 460:return 0;
		case 464:return 0;
		case 476:return 0;
		case 511:return 0;
		case 512:return 0;
		case 513:return 0;
		case 519:return 0;
		case 520:return 0;
		case 539:return 0;
		case 553:return 0;
		case 577:return 0;
		case 592:return 0;
		case 593:return 0;
		case 471:return 0;
	}
	return 1;
}
*/
todec(str[]){ // By Luby
	return strval(str);
}

//----------------------------- Elevator - 1 -----------------------------------
stock PlaySoundForPlayersInRange(soundid, Float:range, Float:x, Float:y, Float:z)
{//генерация звука открывания/закрывания дверей для игроков возле кабины лифта
    for(new i = 0; i < MAX_PLAYERS; i ++)
    {
        if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i, range ,x ,y ,z ))
        {
            PlayerPlaySound(i, soundid, x, y, z);
        }
    }

	return 1;
}

stock Elevator_OpenDoors()
{//открывание дверей лифта
	new Float:x, Float:y, Float:z;
	GetObjectPos(Obj_ElevatorDoors[0], x, y, z);
	MoveObject(Obj_ElevatorDoors[0], X_DOOR_L_OPENED, y, z, DOORS_SPEED);
	MoveObject(Obj_ElevatorDoors[1], X_DOOR_R_OPENED, y, z, DOORS_SPEED);

	return 1;
}

stock Floor_OpenDoors(floorid)
{//открывание дверей этажа
    MoveDynamicObject(Obj_FloorDoors[floorid][0], X_DOOR_L_OPENED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	MoveDynamicObject(Obj_FloorDoors[floorid][1], X_DOOR_R_OPENED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	PlaySoundForPlayersInRange(6401, 10.0, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(floorid) + 5.0);

	return 1;
}

public Elevator_MoveToFloor(floorid)
{//начало движения лифта
	MovObj = 1;//включение мониторинга лифта

	ElevatorState = 2;
	ElevatorFloor = floorid;
	MoveObject(Obj_Elevator, 1786.678100, -1303.459472, GetElevatorZCoordForFloor(floorid), 0.25);
    MoveObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), 0.25);
    MoveObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), 0.25);
    DestroyDynamic3DTextLabel(Label_Elevator);
	ElevatorBoostTimer = SetTimerEx("Elevator_Boost", 1000, 0, "i", floorid);//таймер перехода на увеличенную скорость

	return 1;
}

public Elevator_Boost(floorid)
{//продолжение движения лифта с увеличенной скоростью
	StopObject(Obj_Elevator);
	StopObject(Obj_ElevatorDoors[0]);
	StopObject(Obj_ElevatorDoors[1]);
	MoveObject(Obj_Elevator, 1786.678100, -1303.459472, GetElevatorZCoordForFloor(floorid), ELEVATOR_SPEED);
    MoveObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), ELEVATOR_SPEED);
    MoveObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), ELEVATOR_SPEED);

	return 1;
}

public Elevator_TurnToIdle()
{//очередь обслуживания
	ElevatorState = 0;
	ReadNextFloorInQueue();//закрывание дверей лифта и этажа перед началом движения

	return 1;
}

public StopMonit()
{//включение мониторинга лифта
	MovObj = 0;

	return 1;
}

stock ReadNextFloorInQueue()
{//закрывание дверей лифта и этажа перед началом движения
	if(ElevatorState != 0 || ElevatorQueue[0] == -1){return 1;}//если очередь обслуживания пустая, то завершить функцию
	if(ElevatorState == 2){return 1;}//если лифт в движении, то завершить функцию
	ElevatorState = 1;//присвоить лифту статус "занят"
    new Float:x, Float:y, Float:z;
	GetObjectPos(Obj_ElevatorDoors[0], x, y, z);
	MoveObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, y, z, DOORS_SPEED);
	MoveObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, y, z, DOORS_SPEED);
    MoveDynamicObject(Obj_FloorDoors[ElevatorFloor][0], X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(ElevatorFloor), DOORS_SPEED);
	MoveDynamicObject(Obj_FloorDoors[ElevatorFloor][1], X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(ElevatorFloor), DOORS_SPEED);
	PlaySoundForPlayersInRange(6401, 10.0, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(ElevatorFloor) + 5.0);
	new Float:dop22, string[128], dop;//вычисление задержки перед началом движения лифта
	dop22 = ( 1 / DOORS_SPEED ) * 2000;
	format(string, sizeof(string), "%f", dop22);
	dop = strval(string);
	SetTimerEx("Elevator_MoveToFloor", dop, 0, "i", ElevatorQueue[0]);//таймер задержки начала движения лифта

	return 1;
}

stock CallElevator(playerid, floorid, elevator)
{//вызов, или начало движения лифта
	new dop = 0;
	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    if(ElevatorQueue[i] == floorid){dop = 1;}
	}

	if(FloorRequestedBy[floorid] != 10000 || dop == 1)
	{
		if(elevator == 1){return 1;}
		SendClientMessage(playerid, 0xAA3333FF, " Ваш вызов уже находится");
		SendClientMessage(playerid, 0xAA3333FF, " в очереди обслуживания !");
		return 1;
	}
	if(elevator == 0){SendClientMessage(playerid, 0x33AA33FF, " Лифт вызван !");}
	FloorRequestedBy[floorid] = playerid;//занятие места игрока в очереди обслуживания
	new slot = -1;//запись вызова, или начала движения лифта в очередь обслуживания
	new i = 0;
	while(i < sizeof(ElevatorQueue))
	{
	    if(ElevatorQueue[i] == -1)
	    {
	        slot = i;
	        break;
	    }
		i ++;
	}
	if(slot != -1)
	{
	    ElevatorQueue[slot] = floorid;
	    if(ElevatorState == 0){ReadNextFloorInQueue();}//если лифт свободен, то перейти к закрыванию дверей
	}

	return 1;
}

stock Float:GetElevatorZCoordForFloor(floorid)
{//вычисление координат лифта
    return (GROUND_Z_COORD + FloorZOffsets[floorid] + ELEVATOR_OFFSET);
}

stock Float:GetDoorsZCoordForFloor(floorid)
{//вычисление координат дверей
	return (GROUND_Z_COORD + FloorZOffsets[floorid]);
}
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	stock Elevator_OpenDoors22()
	{//открывание дверей лифта
		new Float:x, Float:y, Float:z;
		GetObjectPos(Obj_ElevatorDoors22[0], x, y, z);
		MoveObject(Obj_ElevatorDoors22[0], X_DOOR_L_OPENED22, -1609.0200, z, DOORS_SPEED22);
		MoveObject(Obj_ElevatorDoors22[1], X_DOOR_R_OPENED22, -1609.6200, z, DOORS_SPEED22);

		return 1;
	}

	stock Floor_OpenDoors22(floorid)
	{//открывание дверей этажа
    	MoveDynamicObject(Obj_FloorDoors22[floorid][0], X_DOOR_L_OPENED22 - 0.05, -1609.3100, GetDoorsZCoordForFloor22(floorid), DOORS_SPEED22);
		MoveDynamicObject(Obj_FloorDoors22[floorid][1], X_DOOR_R_OPENED22 - 0.05, -1609.9100, GetDoorsZCoordForFloor22(floorid), DOORS_SPEED22);
		PlaySoundForPlayersInRange(6401, 10.0, X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(floorid) + 5.0);

		return 1;
	}

	public Elevator_MoveToFloor22(floorid)
	{//начало движения лифта
		MovObj22 = 1;//включение мониторинга лифта

		ElevatorState22 = 2;
		ElevatorFloor22 = floorid;
		MoveObject(Obj_Elevator22, 287.9500, -1609.3200, GetElevatorZCoordForFloor22(floorid), 0.25);
    	MoveObject(Obj_ElevatorDoors22[0], X_DOOR_CLOSED22, -1609.3200, GetDoorsZCoordForFloor22(floorid), 0.25);
    	MoveObject(Obj_ElevatorDoors22[1], X_DOOR_CLOSED22, -1609.3200, GetDoorsZCoordForFloor22(floorid), 0.25);
    	DestroyDynamic3DTextLabel(Label_Elevator22);
		ElevatorBoostTimer22 = SetTimerEx("Elevator_Boost22", 1000, 0, "i", floorid);//таймер перехода на увеличенную скорость

		return 1;
	}

	public Elevator_Boost22(floorid)
	{//продолжение движения лифта с увеличенной скоростью
		StopObject(Obj_Elevator22);
		StopObject(Obj_ElevatorDoors22[0]);
		StopObject(Obj_ElevatorDoors22[1]);
		MoveObject(Obj_Elevator22, 287.9500, -1609.3200, GetElevatorZCoordForFloor22(floorid), ELEVATOR_SPEED22);
    	MoveObject(Obj_ElevatorDoors22[0], X_DOOR_CLOSED22, -1609.3200, GetDoorsZCoordForFloor22(floorid), ELEVATOR_SPEED22);
    	MoveObject(Obj_ElevatorDoors22[1], X_DOOR_CLOSED22, -1609.3200, GetDoorsZCoordForFloor22(floorid), ELEVATOR_SPEED22);

		return 1;
	}

	public Elevator_TurnToIdle22()
	{//очередь обслуживания
		ElevatorState22 = 0;
		ReadNextFloorInQueue22();//закрывание дверей лифта и этажа перед началом движения

		return 1;
	}

	public StopMonit22()
	{//включение мониторинга лифта
		MovObj22 = 0;

		return 1;
	}

	stock ReadNextFloorInQueue22()
	{//закрывание дверей лифта и этажа перед началом движения
		if(ElevatorState22 != 0 || ElevatorQueue22[0] == -1){return 1;}//если очередь обслуживания пустая, то завершить функцию
    	if(ElevatorState22 == 2){return 1;}//если лифт в движении, то завершить функцию
		ElevatorState22 = 1;//присвоить лифту статус "занят"
    	new Float:x, Float:y, Float:z;
		GetObjectPos(Obj_ElevatorDoors22[0], x, y, z);
		MoveObject(Obj_ElevatorDoors22[0], X_DOOR_CLOSED22, -1609.3200, z, DOORS_SPEED22);
		MoveObject(Obj_ElevatorDoors22[1], X_DOOR_CLOSED22, -1609.3200, z, DOORS_SPEED22);
    	MoveDynamicObject(Obj_FloorDoors22[ElevatorFloor22][0], X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(ElevatorFloor22), DOORS_SPEED22);
		MoveDynamicObject(Obj_FloorDoors22[ElevatorFloor22][1], X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(ElevatorFloor22), DOORS_SPEED22);
		PlaySoundForPlayersInRange(6401, 10.0, X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(ElevatorFloor22) + 5.0);
		new Float:dop22, string[128], dop;//вычисление задержки перед началом движения лифта
		dop22 = ( 1 / DOORS_SPEED22 ) * 2000;
		format(string, sizeof(string), "%f", dop22);
		dop = strval(string);
		SetTimerEx("Elevator_MoveToFloor22", dop, 0, "i", ElevatorQueue22[0]);//таймер задержки начала движения лифта

		return 1;
	}

	stock CallElevator22(playerid, floorid, elevator)
	{//вызов, или начало движения лифта
		new dop = 0;
		for(new i; i < sizeof(ElevatorQueue22); i ++)
		{
	    	if(ElevatorQueue22[i] == floorid){dop = 1;}
		}

		if(FloorRequestedBy22[floorid] != 10000 || dop == 1)
		{
			if(elevator == 1){return 1;}
			SendClientMessage(playerid, 0xAA3333FF, " Ваш вызов уже находится");
			SendClientMessage(playerid, 0xAA3333FF, " в очереди обслуживания !");
			return 1;
		}
		if(elevator == 0){SendClientMessage(playerid, 0x33AA33FF, " Лифт вызван !");}
		FloorRequestedBy22[floorid] = playerid;//занятие места игрока в очереди обслуживания
		new slot = -1;//запись вызова, или начала движения лифта в очередь обслуживания
		new i = 0;
		while(i < sizeof(ElevatorQueue22))
		{
	    	if(ElevatorQueue22[i] == -1)
	    	{
	        	slot = i;
	        	break;
	    	}
			i ++;
		}
		if(slot != -1)
		{
	    	ElevatorQueue22[slot] = floorid;
	    	if(ElevatorState22 == 0){ReadNextFloorInQueue22();}//если лифт свободен, то перейти к закрыванию дверей
		}

		return 1;
	}

	stock Float:GetElevatorZCoordForFloor22(floorid)
	{//вычисление координат лифта
    	return (GROUND_Z_COORD22 + FloorZOffsets22[floorid] + ELEVATOR_OFFSET22);
	}

	stock Float:GetDoorsZCoordForFloor22(floorid)
	{//вычисление координат дверей
		return (GROUND_Z_COORD22 + FloorZOffsets22[floorid]);
	}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

forward VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
public VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz)
{
	if(admper1[playerid] != 600)
	{
		SendClientMessage(playerid, COLOR_RED, " В режиме наблюдения эта команда не работает !");
		return 1;
	}
	new plvw;
	plvw = GetPlayerVirtualWorld(playerid);
	if(plvw == 0 || (plvw >= 3000 && plvw <= 4999) || (plvw >= 6000 && plvw <= 7999))
	{
		VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
	}
	else
	{
		SendClientMessage(playerid, COLOR_RED, " Транспорт можно взять ТОЛЬКО на основной карте,");
		SendClientMessage(playerid, COLOR_RED, " или на специальных картах !");
	}
	return 1;
}

public VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz)
{
	if(GetPlayerVehicleID(playerid) == playcar[playerid] && playcar[playerid] != 0)
	{//если игрок в своём авто, и у игрока ТОЧНО есть свой авто, то:
		new Float:igx, Float:igy, Float:igz;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
			{
				if(GetPlayerVehicleID(i) == playcar[playerid] && playerid != i)
				{//если есть пассажир (пассажиры) в авто водителя, то:
					EnterTick33[i] = 1;//обход антикрашера - 3
					GetPlayerPos(i, igx, igy, igz);//высадить пассажира (пассажиров)
					SetPlayerPos(i, igx+3, igy+3, igz);
				}
				if(admper1[i] != 600 && admper1[i] == playerid)//если есть админ ведущий наблюдение,
				{//И этот админ наблюдает за игроком, то:
					admper5[i] = 2;//устанавливаем переключение наблюдения
				}
			}
		}
	}
	if(GetPlayerVehicleID(playerid) != playcar[playerid] && IsPlayerInAnyVehicle(playerid))
	{//если игрок НЕ в своём авто (но обязательно в авто), то:
		EnterTick33[playerid] = 1;//обход антикрашера - 3
		new Float:igx, Float:igy, Float:igz;
		GetPlayerPos(playerid, igx, igy, igz);//выйти самому из авто
		SetPlayerPos(playerid, igx+3, igy+3, igz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
			{
				if(admper1[i] != 600 && admper1[i] == playerid)//если есть админ ведущий наблюдение,
				{//И этот админ наблюдает за игроком, то:
					admper5[i] = 2;//устанавливаем переключение наблюдения
				}
			}
		}
	}
	SetTimerEx("VehicSecSpawn", 300, 0, "iiiii", playerid, vehid, vehcol1, vehcol2, dispz);
	return 1;
}

public VehicSecSpawn(playerid, vehid, vehcol1, vehcol2, dispz)
{
	new Float:x, Float:y, Float:z, Float:Angle;
	GetPlayerPos(playerid, x, y, z);
	if (GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3)
	{
		GetVehicleZAngle(GetPlayerVehicleID(playerid), Angle);
	}
	else
	{
		GetPlayerFacingAngle(playerid, Angle);
	}
	new plvw;
	plvw = GetPlayerVirtualWorld(playerid);
	if(playcar[playerid] == 0)//если у игрока нет своего транспорта, то:
	{
		playcar[playerid] = CreateVehicle(vehid, x, y, z+dispz, Angle, vehcol1, vehcol2, 90000);//создать новый транспорт
		LinkVehicleToInterior(playcar[playerid], GetPlayerInterior(playerid));//подключить транспорт к интерьеру игрока
		if(plvw == 0 || (plvw >= 3000 && plvw <= 4999) ||
		(plvw >= 6000 && plvw <= 7999))//если игрок на основной карте, ИЛИ на специальных картах, то:
		{
			SetVehicleVirtualWorld(playcar[playerid], plvw);//установить транспорту виртуальный мир игрока
		}
		PutPlayerInVehicle(playerid, playcar[playerid], 0);//посадить игрока на место водителя
	}else{//иначе: (если у игрока ЕСТЬ свой транспорт)
		if(playcar[playerid] == neon[playerid][2])//если у игрока установлен свой неон на транспорте, то:
		{
			EnterTick33[playerid] = 1;//обход антикрашера - 3
			DestroyVehicle(playcar[playerid]);//удалить старый транспорт
			playcar[playerid] = CreateVehicle(vehid, x, y, z+dispz, Angle, vehcol1, vehcol2, 90000);//создать новый транспорт
			LinkVehicleToInterior(playcar[playerid], GetPlayerInterior(playerid));//подключить транспорт к интерьеру игрока
			if(plvw == 0 || (plvw >= 3000 && plvw <= 4999) ||
			(plvw >= 6000 && plvw <= 7999))//если игрок на основной карте, ИЛИ на специальных картах, то:
			{
				SetVehicleVirtualWorld(playcar[playerid], plvw);//установить транспорту виртуальный мир игрока
			}
			PutPlayerInVehicle(playerid, playcar[playerid], 0);//посадить игрока на место водителя
			AttachObjectToVehicle(neon[playerid][0], playcar[playerid], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);//прикрепить неон к транспорту
			AttachObjectToVehicle(neon[playerid][1], playcar[playerid], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);//прикрепить неон к транспорту
			neon[playerid][2] = playcar[playerid];//заменить ид транспорта с неоном
		}
		else//иначе: (если у игрока НЕ установлен свой неон на транспорте)
		{
			new dopper = 0;
			new dopper22 = -600;
			while(dopper < MAX_PLAYERS)//поиск чужого неона на транспорте игрока
			{
				if(playcar[playerid] == neon[dopper][2] && playerid != dopper)
				{//если был найден чужой неон на транспорте игрока, то:
					dopper22 = dopper;
					break;
				}
				dopper++;
			}
			EnterTick33[playerid] = 1;//обход антикрашера - 3
			if(dopper22 != -600)//если был найден чужой неон на транспорте игрока, то:
			{
				DestroyVehicle(playcar[playerid]);//удалить старый транспорт
				playcar[playerid] = CreateVehicle(vehid, x, y, z+dispz, Angle, vehcol1, vehcol2, 90000);//создать новый транспорт
				LinkVehicleToInterior(playcar[playerid], GetPlayerInterior(playerid));//подключить транспорт к интерьеру игрока
				if(plvw == 0 || (plvw >= 3000 && plvw <= 4999) ||
				(plvw >= 6000 && plvw <= 7999))//если игрок на основной карте, ИЛИ на специальных картах, то:
				{
					SetVehicleVirtualWorld(playcar[playerid], plvw);//установить транспорту виртуальный мир игрока
				}
				PutPlayerInVehicle(playerid, playcar[playerid], 0);//посадить игрока на место водителя
				AttachObjectToVehicle(neon[dopper22][0], playcar[playerid], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);//прикрепить неон к транспорту
				AttachObjectToVehicle(neon[dopper22][1], playcar[playerid], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);//прикрепить неон к транспорту
				neon[dopper22][2] = playcar[playerid];//заменить ид транспорта с неоном
			}
			else//иначе: (если НЕ был найден чужой неон на транспорте игрока)
			{
				DestroyVehicle(playcar[playerid]);//удалить старый транспорт
				playcar[playerid] = CreateVehicle(vehid, x, y, z+dispz, Angle, vehcol1, vehcol2, 90000);//создать новый транспорт
				LinkVehicleToInterior(playcar[playerid], GetPlayerInterior(playerid));//подключить транспорт к интерьеру игрока
				if(plvw == 0 || (plvw >= 3000 && plvw <= 4999) ||
				(plvw >= 6000 && plvw <= 7999))//если игрок на основной карте, ИЛИ на специальных картах, то:
				{
					SetVehicleVirtualWorld(playcar[playerid], plvw);//установить транспорту виртуальный мир игрока
				}
				PutPlayerInVehicle(playerid, playcar[playerid], 0);//посадить игрока на место водителя
			}
		}
	}
	return 1;
}

forward DubTlp(playerid);
public DubTlp(playerid)
{
	PlayCRTP[playerid] = 1;//блокировка контроля координат
	if (GetPlayerState(playerid) == 2)
	{
		new regm = 2, per1 = 0, per2 = 0, Float:per3;
		per3 = TpDestP[playerid][3];
		StopDrift(playerid,regm,per1,per2,Float:per3,Float:TpDestP[playerid][0],Float:TpDestP[playerid][1],Float:TpDestP[playerid][2]+1);
	}
	else
	{
		tpdrift[playerid] = 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, TpDestP[playerid][0],TpDestP[playerid][1],TpDestP[playerid][2]+1);
		SetPlayerFacingAngle(playerid, TpDestP[playerid][3]);
		SetCameraBehindPlayer(playerid);
	}
	SendClientMessage(playerid, COLOR_GREEN, " Вы были телепортированы на сохранённую позицию.");
	return 1;
}

forward DopAnim(playerid, nanim);
public DopAnim(playerid, nanim)
{
	if(nanim == 2)
	{
		ApplyAnimation(playerid,"Attractors", "Stepsit_in", 4.1, 0, 0, 0, 1, 0, 0);//сесть-2
		return 1;
	}
	if(nanim == 3)
	{
		ApplyAnimation(playerid,"CRACK", "crckidle2", 4.1 ,0 ,0 ,0 ,1 ,0 ,0);//лечь
	}
	return 1;
}

forward DopAnim22(playerid, playdop);
public DopAnim22(playerid, playdop)
{
	ApplyAnimation(playerid,"KISSING", "Playa_Kiss_02", 4.1, 0, 0, 0, 0, 0, 0);//поцелуй
	ApplyAnimation(playdop,"KISSING", "Playa_Kiss_02", 4.1, 0, 0, 0, 0, 0, 0);//поцелуй
	return 1;
}

public AdminsLvl(playerid)
{
	new strdln[2048];
	contover[playerid] = 0;
	countadm[playerid] = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerAdmin(i) && PlayerInfo[i][pAdmshad] == 0)
			{
				if(countadm[playerid] < MAX_PLAYERS)
				{
					format(tabladm[playerid][countadm[playerid]], 80, " [%d]", i);
					strins(tabladm[playerid][countadm[playerid]], RealName[i], 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "RCON-админ: ", 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "     ", 0, 80);
					countadm[playerid]++;
				}
				else
				{
					contover[playerid] = 1;
				}
			}
			if(PlayerInfo[playerid][pAdmin] >= 1 && IsPlayerAdmin(i) && PlayerInfo[i][pAdmshad] == 1)
			{
				if(countadm[playerid] < MAX_PLAYERS)
				{
					format(tabladm[playerid][countadm[playerid]], 80, " [%d]", i);
					strins(tabladm[playerid][countadm[playerid]], RealName[i], 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "RCON-админ: ", 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "(s) ", 0, 80);
					countadm[playerid]++;
				}
				else
				{
					contover[playerid] = 1;
				}
			}
		}
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if((PlayerInfo[i][pAdmin] == 4 || PlayerInfo[i][pAdmin] == 5) && PlayerInfo[i][pAdmshad] == 0)
			{
				if(countadm[playerid] < MAX_PLAYERS)
				{
					format(tabladm[playerid][countadm[playerid]], 80, " [%d]", i);
					strins(tabladm[playerid][countadm[playerid]], RealName[i], 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "4 LVL (главный админ): ", 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "     ", 0, 80);
					countadm[playerid]++;
				}
				else
				{
					contover[playerid] = 1;
				}
			}
			if(PlayerInfo[playerid][pAdmin] >= 1 && (PlayerInfo[i][pAdmin] == 4 || PlayerInfo[i][pAdmin] == 5) && PlayerInfo[i][pAdmshad] == 1)
			{
				if(countadm[playerid] < MAX_PLAYERS)
				{
					format(tabladm[playerid][countadm[playerid]], 80, " [%d]", i);
					strins(tabladm[playerid][countadm[playerid]], RealName[i], 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "4 LVL (главный админ): ", 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "(s) ", 0, 80);
					countadm[playerid]++;
				}
				else
				{
					contover[playerid] = 1;
				}
			}
		}
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] == 3 && PlayerInfo[i][pAdmshad] == 0)
			{
				if(countadm[playerid] < MAX_PLAYERS)
				{
					format(tabladm[playerid][countadm[playerid]], 80, " [%d]", i);
					strins(tabladm[playerid][countadm[playerid]], RealName[i], 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "3 LVL (зам главного админа): ", 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "     ", 0, 80);
					countadm[playerid]++;
				}
				else
				{
					contover[playerid] = 1;
				}
			}
			if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[i][pAdmin] == 3 && PlayerInfo[i][pAdmshad] == 1)
			{
				if(countadm[playerid] < MAX_PLAYERS)
				{
					format(tabladm[playerid][countadm[playerid]], 80, " [%d]", i);
					strins(tabladm[playerid][countadm[playerid]], RealName[i], 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "3 LVL (зам главного админа): ", 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "(s) ", 0, 80);
					countadm[playerid]++;
				}
				else
				{
					contover[playerid] = 1;
				}
			}
		}
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] == 2 && PlayerInfo[i][pAdmshad] == 0)
			{
				if(countadm[playerid] < MAX_PLAYERS)
				{
					format(tabladm[playerid][countadm[playerid]], 80, " [%d]", i);
					strins(tabladm[playerid][countadm[playerid]], RealName[i], 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "2 LVL (старший админ): ", 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "     ", 0, 80);
					countadm[playerid]++;
				}
				else
				{
					contover[playerid] = 1;
				}
			}
			if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[i][pAdmin] == 2 && PlayerInfo[i][pAdmshad] == 1)
			{
				if(countadm[playerid] < MAX_PLAYERS)
				{
					format(tabladm[playerid][countadm[playerid]], 80, " [%d]", i);
					strins(tabladm[playerid][countadm[playerid]], RealName[i], 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "2 LVL (старший админ): ", 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "(s) ", 0, 80);
					countadm[playerid]++;
				}
				else
				{
					contover[playerid] = 1;
				}
			}
		}
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] == 1 && PlayerInfo[i][pAdmshad] == 0)
			{
				if(countadm[playerid] < MAX_PLAYERS)
				{
					format(tabladm[playerid][countadm[playerid]], 80, " [%d]", i);
					strins(tabladm[playerid][countadm[playerid]], RealName[i], 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "1 LVL (младший админ): ", 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "     ", 0, 80);
					countadm[playerid]++;
				}
				else
				{
					contover[playerid] = 1;
				}
			}
			if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[i][pAdmin] == 1 && PlayerInfo[i][pAdmshad] == 1)
			{
				if(countadm[playerid] < MAX_PLAYERS)
				{
					format(tabladm[playerid][countadm[playerid]], 80, " [%d]", i);
					strins(tabladm[playerid][countadm[playerid]], RealName[i], 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "1 LVL (младший админ): ", 0, 80);
					strins(tabladm[playerid][countadm[playerid]], "(s) ", 0, 80);
					countadm[playerid]++;
				}
				else
				{
					contover[playerid] = 1;
				}
			}
		}
	}
	if(countadm[playerid] == 0)
	{
		ShowPlayerDialog(playerid, 2, 0, "On-Line админы:", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "OK", "");
		SetPVarInt(playerid, "DlgCont", 2);
	}
	if(countadm[playerid] != 0)
	{
		for(new i = 0; i < 20; i++)
		{
			strdel(NamAdm[i], 0, 80);
		}
		count2adm[playerid] = 0;
		new locvar = 0;
		new locvar2 = 0;
		while(count2adm[playerid] < countadm[playerid])
		{
			strins(NamAdm[locvar], tabladm[playerid][count2adm[playerid]], 0, 80);
			count2adm[playerid]++;
			locvar++;
			if(locvar == 20 && count2adm[playerid] < countadm[playerid])
			{//выводим диалог С продолжением
				format(strdln,sizeof(strdln),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
				NamAdm[0],NamAdm[1],NamAdm[2],NamAdm[3],NamAdm[4],NamAdm[5],NamAdm[6],NamAdm[7],NamAdm[8],NamAdm[9],
				NamAdm[10],NamAdm[11],NamAdm[12],NamAdm[13],NamAdm[14],NamAdm[15],NamAdm[16],NamAdm[17],NamAdm[18],NamAdm[19]);
				ShowPlayerDialog(playerid, 61, 0, "On-Line админы:", strdln, "Далее", "Отмена");
				SetPVarInt(playerid, "DlgCont", 61);
				locvar2 = 1;//устанавливаем переменную-маркер
				break;//выходим из цикла
			}
			if(locvar == 20 && count2adm[playerid] == countadm[playerid])
			{//выводим диалог БЕЗ продолжения
				if(contover[playerid] == 0)
				{
					format(strdln,sizeof(strdln),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
					NamAdm[0],NamAdm[1],NamAdm[2],NamAdm[3],NamAdm[4],NamAdm[5],NamAdm[6],NamAdm[7],NamAdm[8],NamAdm[9],
					NamAdm[10],NamAdm[11],NamAdm[12],NamAdm[13],NamAdm[14],NamAdm[15],NamAdm[16],NamAdm[17],NamAdm[18],NamAdm[19]);
				}
				else
				{
					format(strdln,sizeof(strdln),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\
					\n\n     Список НЕ полный ! Переполнение данных !",
					NamAdm[0],NamAdm[1],NamAdm[2],NamAdm[3],NamAdm[4],NamAdm[5],NamAdm[6],NamAdm[7],NamAdm[8],NamAdm[9],
					NamAdm[10],NamAdm[11],NamAdm[12],NamAdm[13],NamAdm[14],NamAdm[15],NamAdm[16],NamAdm[17],NamAdm[18],NamAdm[19]);
				}
				ShowPlayerDialog(playerid, 2, 0, "On-Line админы:", strdln, "OK", "");
				SetPVarInt(playerid, "DlgCont", 2);
				locvar2 = 1;//устанавливаем переменную-маркер
				break;//выходим из цикла
			}
		}//выход из цикла
		if(locvar2 == 0)
		{//выводим диалог БЕЗ продолжения
			if(contover[playerid] == 0)
			{
				format(strdln,sizeof(strdln),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
				NamAdm[0],NamAdm[1],NamAdm[2],NamAdm[3],NamAdm[4],NamAdm[5],NamAdm[6],NamAdm[7],NamAdm[8],NamAdm[9],
				NamAdm[10],NamAdm[11],NamAdm[12],NamAdm[13],NamAdm[14],NamAdm[15],NamAdm[16],NamAdm[17],NamAdm[18],NamAdm[19]);
			}
			else
			{
				format(strdln,sizeof(strdln),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\
				\n\n     Список НЕ полный ! Переполнение данных !",
				NamAdm[0],NamAdm[1],NamAdm[2],NamAdm[3],NamAdm[4],NamAdm[5],NamAdm[6],NamAdm[7],NamAdm[8],NamAdm[9],
				NamAdm[10],NamAdm[11],NamAdm[12],NamAdm[13],NamAdm[14],NamAdm[15],NamAdm[16],NamAdm[17],NamAdm[18],NamAdm[19]);
			}
			ShowPlayerDialog(playerid, 2, 0, "On-Line админы:", strdln, "OK", "");
			SetPVarInt(playerid, "DlgCont", 2);
		}//если переменная-маркер БЫЛА установлена, то - конец проверки
	}//конец проверки
	return 1;
}

public STATPlayer(playerid)
{
	new string[512];
	new dop22;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		dop22 = 2;
	}
	else
	{
		dop22 = PlayerInfo[playerid][pVIP];
	}
	printf(" --> Игрок %s [%d] просмотрел собственную статистику.", RealName[playerid], playerid);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
	new dopcis;
	dopcis = FCislit(LocTime[playerid]);
	switch(dopcis)
	{
		case 0: format(string, sizeof(string), " Время: {FFFF00}%d часов. {33AA33}ID погоды: {FFFF00}[%d] . {33AA33}Гравитация: {FFFF00}[%f]",
				LocTime[playerid], GlWeat, GlGrav);
		case 1: format(string, sizeof(string), " Время: {FFFF00}%d час. {33AA33}ID погоды: {FFFF00}[%d] . {33AA33}Гравитация: {FFFF00}[%f]",
				LocTime[playerid], GlWeat, GlGrav);
		case 2: format(string, sizeof(string), " Время: {FFFF00}%d часа. {33AA33}ID погоды: {FFFF00}[%d] . {33AA33}Гравитация: {FFFF00}[%f]",
				LocTime[playerid], GlWeat, GlGrav);
	}
	SendClientMessage(playerid, COLOR_GREEN, string);
	format(string, sizeof(string), " Время и дата регистрации: {FFFF00}[ %s ]",
	PlayerInfo[playerid][pTDReg]);
	SendClientMessage(playerid, COLOR_GREEN, string);
	if(dop22 <= 2)
	{
		dopcis = FCislit(PlayerInfo[playerid][pMinlog]);
		switch(dopcis)
		{
			case 0: format(string, sizeof(string), " Вы отыграли на сервере: {FFFF00}%d минут. {33AA33}Ваш VIP-уровень: {FFFF00}[%d]",
					PlayerInfo[playerid][pMinlog], dop22);
			case 1: format(string, sizeof(string), " Вы отыграли на сервере: {FFFF00}%d минуту. {33AA33}Ваш VIP-уровень: {FFFF00}[%d]",
					PlayerInfo[playerid][pMinlog], dop22);
			case 2: format(string, sizeof(string), " Вы отыграли на сервере: {FFFF00}%d минуты. {33AA33}Ваш VIP-уровень: {FFFF00}[%d]",
					PlayerInfo[playerid][pMinlog], dop22);
		}
	}
	else
	{
		dopcis = FCislit(PlayerInfo[playerid][pMinlog]);
		switch(dopcis)
		{
			case 0: format(string, sizeof(string), " Вы отыграли на сервере: {FFFF00}%d минут. {AA3333}У Вас статус депортации !",
					PlayerInfo[playerid][pMinlog]);
			case 1: format(string, sizeof(string), " Вы отыграли на сервере: {FFFF00}%d минуту. {AA3333}У Вас статус депортации !",
					PlayerInfo[playerid][pMinlog]);
			case 2: format(string, sizeof(string), " Вы отыграли на сервере: {FFFF00}%d минуты. {AA3333}У Вас статус депортации !",
					PlayerInfo[playerid][pMinlog]);
		}
	}
	SendClientMessage(playerid, COLOR_GREEN, string);
	new sstr1[128], sstr2[128];
	dopcis = FCislit(PlayerInfo[playerid][pMutedsec]);
	switch(dopcis)
	{
		case 0: format(sstr1, sizeof(sstr1), " Ваше время затыка: {FFFF00}%d секунд. ", PlayerInfo[playerid][pMutedsec]);
		case 1: format(sstr1, sizeof(sstr1), " Ваше время затыка: {FFFF00}%d секунда. ", PlayerInfo[playerid][pMutedsec]);
		case 2: format(sstr1, sizeof(sstr1), " Ваше время затыка: {FFFF00}%d секунды. ", PlayerInfo[playerid][pMutedsec]);
	}
	dopcis = FCislit(PlayerInfo[playerid][pPrisonsec]);
	switch(dopcis)
	{
		case 0: format(sstr2, sizeof(sstr2), "{33AA33}Ваше время тюрьмы: {FFFF00}%d секунд.", PlayerInfo[playerid][pPrisonsec]);
		case 1: format(sstr2, sizeof(sstr2), "{33AA33}Ваше время тюрьмы: {FFFF00}%d секунда.", PlayerInfo[playerid][pPrisonsec]);
		case 2: format(sstr2, sizeof(sstr2), "{33AA33}Ваше время тюрьмы: {FFFF00}%d секунды.", PlayerInfo[playerid][pPrisonsec]);
	}
	format(string, sizeof(string), "%s%s", sstr1, sstr2);
	SendClientMessage(playerid, COLOR_GREEN, string);
	dopcis = FCislit(PlayerInfo[playerid][pKills]);
	switch(dopcis)
	{
		case 0, 2: format(sstr1, sizeof(sstr1), " Вы убили: {FFFF00}%d игроков. ", PlayerInfo[playerid][pKills]);
		case 1: format(sstr1, sizeof(sstr1), " Вы убили: {FFFF00}%d игрока. ", PlayerInfo[playerid][pKills]);
	}
	dopcis = FCislit(PlayerInfo[playerid][pDeaths]);
	switch(dopcis)
	{
		case 0, 1: format(sstr2, sizeof(sstr2), "{33AA33}Вас убили: {FFFF00}%d раз.", PlayerInfo[playerid][pDeaths]);
		case 2: format(sstr2, sizeof(sstr2), "{33AA33}Вас убили: {FFFF00}%d раза.", PlayerInfo[playerid][pDeaths]);
	}
	format(string, sizeof(string), "%s%s", sstr1, sstr2);
	SendClientMessage(playerid, COLOR_GREEN, string);
	if(pertrain == 0)
	{
		SendClientMessage(playerid, COLOR_RED, " Всем игрокам ЗАПРЕЩЕНО водить поезда !");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREEN, " Всем игрокам РАЗРЕШЕНО водить поезда !");
	}
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "---------------------------------------------------------------");
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    player[playerid] = clickedplayerid;
	format(playtarget[playerid], MAX_PLAYER_NAME, "%s", RealName[player[playerid]]);
    if(((PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 4) || PlayerInfo[playerid][pVIP] == 2) && PlayerInfo[player[playerid]][pAdmin] >= 5)
	{
		ShowPlayerDialog(playerid,2,0,"Информация.","Выбранный игрок защищён !","OK","");
		SetPVarInt(playerid, "DlgCont", 2);
		return 1;
	}
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pVIP] == 2)
	{
	new string[128];
	new strdln[1024];
	format(strdln,sizeof(strdln),"Тп к нему\nТп его к себе\nНаблюдать\nСнять наблюдение\
	\nПополнить жизнь и броню\nБан постоянный\nБан временный\nКик\nДепортировать\
	\nОтменить депортацию\nЗаблокировать\nРазблокировать\nЗаморозить\nРазморозить\nУбить\
	\nЗаткнуть\nПосадить в тюрьму");
	format(strdln,sizeof(strdln),"%s\nТп себя в тюрьму\nТп себя в полицейский участок\
	\nПросмотреть статистику\nСменить скин\nУзнать IP\nСлапнуть\nПодключить к дрифт-соревнованию\
	\nОтключить от дрифт-соревнования\nОбнулить очки дрифт-соревнования\nСтатус дрифт-соревнования", strdln);
	format(string,sizeof(string),"Админ-меню. ( %s [%d] )",playtarget[playerid],player[playerid]);
	ShowPlayerDialog(playerid,5,DIALOG_STYLE_LIST,string,strdln,"Выбор","Отмена");
	SetPVarInt(playerid, "DlgCont", 5);
	}else{
	SendClientMessage(playerid, COLOR_RED, " Для доступа к админ-меню Вам нужно иметь VIP 2-го уровня, или быть админом !");
	}
	return 1;
}

public ClearIP(playerid)
{
	strdel(twoIP[playerid],0,126);
	return 1;
}

public AdmUpdate(AdmName[], AdmLvl, AdmReas)//регистрация админов (пользовательская функция)
{
	new string[256], persea[64], rea[8], dopper, dopper22;//объявление новых переменных
	dopper = 0;//записываем 0 в 1-маркерную переменную
	dopper22 = 0;//записываем 0 во 2-маркерную переменную
	format(persea, sizeof(persea), "%s -[%d]", AdmName, AdmLvl);//формируем переменную для поиска
	format(rea, sizeof(rea), " -[%d]", AdmReas);//формируем дополнительную переменную для регистрации
	for(new i = 0; i < 100; i++)//поиск лога админа в регистрации
	{
		strdel(string, 0, 256);//очистить вспомоготельную переменную
 		if(strlen(LogAdm[i]))//если есть лог админа (переменная в регистрации не пустая), то:
		{
			strcat(string, LogAdm[i]);//переносим во вспомогательную переменную лог админа
			strdel(string, strlen(string)-10, strlen(string));//корректировка переменной string
			if(strcmp(AdmName, string, false) == 0)//если лог админа уже есть в регистрации, то:
			{
				dopper = 1;//делаем отметку в 1-маркерной переменной dopper
				strdel(string, 0, 256);//очистить вспомоготельную переменную
				strcat(string, LogAdm[i]);//переносим во вспомогательную переменную лог админа
				strdel(string, strlen(string)-5, strlen(string));//корректировка переменной string
				if(strcmp(persea, string, false) != 0)//если уровень админа не сходится с зарегистрированным, то:
				{
					strdel(LogAdm[i], 0, 256);//очистить лог админа
					strcat(LogAdm[i], persea);//"собираем" переменную перерегистрации
					strcat(LogAdm[i], rea);
					SaveLogAdm();//запись регистрации админов
				}
			}
		}
	}
	if(dopper == 0)//если 1-маркерная переменная dopper = 0 (лога админа нет в регистрации), то:
	{
		for(new i = 0; i < 100; i++)//поиск первой пустой переменной в регистрации
		{
 			if(!strlen(LogAdm[i]) && dopper22 == 0)//если переменная в регистрации - пустая,
			{//и 2-маркерная переменная = 0, то:
				dopper22 = 1;//делаем отметку во 2-маркерной переменной dopper22
				strcat(LogAdm[i], persea);//"собираем" переменную регистрации
				strcat(LogAdm[i], rea);
			}
		}
		SaveLogAdm();//запись регистрации админов
	}
	return 1;//возвращаем "1" (функция завершена успешно)
}

public ReadLogAdm()
{
	new string[256];
	format(string,sizeof(string),"data/cash.ini");
	new File: UserFile = fopen(string, io_read);//чтение файла
	new key[ 256 ];
	new Data[ 256 ];
	new para1 = 0;
	new locstr[16];
	while ( fread( UserFile , Data , sizeof( Data ) ) )
	{
		key = ini_GetKey( Data );
		format(locstr, sizeof(locstr), "I%02d", para1);
		if( strcmp( key , locstr , true ) == 0 ) { LogAdm[para1] = ini_GetValue( Data ); }
		para1++;
	}
	fclose(UserFile);
	for(new mm = 0; mm < 100; mm++)
	{
		strdel(LogAdm[mm], strlen(LogAdm[mm])-1, strlen(LogAdm[mm]));//корректировки LogAdm
	}
	return 1;
}

public SaveLogAdm()
{
	new string[256];
	format(string,sizeof(string),"data/cash.ini");
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[128];
		for(new mm = 0; mm < 100; mm++)
		{
			format(var, 128, "I%02d=%s\n",mm,LogAdm[mm]);fwrite(hFile, var);
		}
		fclose(hFile);
	}
	return 1;
}

public ReadServCon()
{
	new string[256];
	format(string,sizeof(string),"data/servcon.ini");
	new File: UserFile = fopen(string, io_read);//чтение файла
	new key[ 256 ] , val[ 256 ];
	new Data[ 256 ];
	while ( fread( UserFile , Data , sizeof( Data ) ) )
	{
		key = ini_GetKey( Data );
		if( strcmp( key , "servname" , true ) == 0 ) { servname = ini_GetValue( Data ); }
		if( strcmp( key , "servpass" , true ) == 0 ) { servpass = ini_GetValue( Data ); }
		if( strcmp( key , "servmap" , true ) == 0 ) { servmap = ini_GetValue( Data ); }
		if( strcmp( key , "servurl" , true ) == 0 ) { servurl = ini_GetValue( Data ); }
 		if( strcmp( key , "status" , true ) == 0 ) { val = ini_GetValue( Data ); status = strval( val ); }
		if( strcmp( key , "relfs0" , true ) == 0 ) { relfs[0] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs1" , true ) == 0 ) { relfs[1] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs2" , true ) == 0 ) { relfs[2] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs3" , true ) == 0 ) { relfs[3] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs4" , true ) == 0 ) { relfs[4] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs5" , true ) == 0 ) { relfs[5] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs6" , true ) == 0 ) { relfs[6] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs7" , true ) == 0 ) { relfs[7] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs8" , true ) == 0 ) { relfs[8] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs9" , true ) == 0 ) { relfs[9] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs10" , true ) == 0 ) { relfs[10] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs11" , true ) == 0 ) { relfs[11] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs12" , true ) == 0 ) { relfs[12] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs13" , true ) == 0 ) { relfs[13] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs14" , true ) == 0 ) { relfs[14] = ini_GetValue( Data ); }
		if( strcmp( key , "relfs15" , true ) == 0 ) { relfs[15] = ini_GetValue( Data ); }
 		if( strcmp( key , "servchas" , true ) == 0 ) { val = ini_GetValue( Data ); servchas = strval( val ); }
 		if( strcmp( key , "packlim" , true ) == 0 ) { val = ini_GetValue( Data ); packlim = strval( val ); }
 		if( strcmp( key , "netreccon" , true ) == 0 ) { val = ini_GetValue( Data ); NETrecCon = strval( val ); }
 		if( strcmp( key , "netsencon" , true ) == 0 ) { val = ini_GetValue( Data ); NETsenCon = strval( val ); }
	}
	fclose(UserFile);
	strdel(servname, strlen(servname)-1, strlen(servname));//корректировка servname
	strdel(servpass, strlen(servpass)-1, strlen(servpass));//корректировка servpass
	strdel(servmap, strlen(servmap)-1, strlen(servmap));//корректировка servmap
	strdel(servurl, strlen(servurl)-1, strlen(servurl));//корректировка servurl
	for(new mm = 0; mm < 16; mm++)
	{
		strdel(relfs[mm], strlen(relfs[mm])-1, strlen(relfs[mm]));//корректировки relfs
	}
	return 1;
}

public SaveServCon()
{
	new string[256];
	format(string,sizeof(string),"data/servcon.ini");
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[128];
		format(var, 128, "servname=%s\n",servname);fwrite(hFile, var);
		format(var, 128, "servpass=%s\n",servpass);fwrite(hFile, var);
		format(var, 128, "servmap=%s\n",servmap);fwrite(hFile, var);
		format(var, 128, "servurl=%s\n",servurl);fwrite(hFile, var);
		format(var, 128, "status=%d\n",status);fwrite(hFile, var);
		format(var, 128, "relfs0=%s\n",relfs[0]);fwrite(hFile, var);
		format(var, 128, "relfs1=%s\n",relfs[1]);fwrite(hFile, var);
		format(var, 128, "relfs2=%s\n",relfs[2]);fwrite(hFile, var);
		format(var, 128, "relfs3=%s\n",relfs[3]);fwrite(hFile, var);
		format(var, 128, "relfs4=%s\n",relfs[4]);fwrite(hFile, var);
		format(var, 128, "relfs5=%s\n",relfs[5]);fwrite(hFile, var);
		format(var, 128, "relfs6=%s\n",relfs[6]);fwrite(hFile, var);
		format(var, 128, "relfs7=%s\n",relfs[7]);fwrite(hFile, var);
		format(var, 128, "relfs8=%s\n",relfs[8]);fwrite(hFile, var);
		format(var, 128, "relfs9=%s\n",relfs[9]);fwrite(hFile, var);
		format(var, 128, "relfs10=%s\n",relfs[10]);fwrite(hFile, var);
		format(var, 128, "relfs11=%s\n",relfs[11]);fwrite(hFile, var);
		format(var, 128, "relfs12=%s\n",relfs[12]);fwrite(hFile, var);
		format(var, 128, "relfs13=%s\n",relfs[13]);fwrite(hFile, var);
		format(var, 128, "relfs14=%s\n",relfs[14]);fwrite(hFile, var);
		format(var, 128, "relfs15=%s\n",relfs[15]);fwrite(hFile, var);
		format(var, 128, "servchas=%d\n",servchas);fwrite(hFile, var);
		format(var, 128, "packlim=%d\n",packlim);fwrite(hFile, var);
		format(var, 128, "netreccon=%d\n",NETrecCon);fwrite(hFile, var);
		format(var, 128, "netsencon=%d\n",NETsenCon);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

public ReadOpenIP()
{
	new string[256];
	format(string,sizeof(string),"data/openip.ini");
	if(!fexist(string)) {return 1;}//строка оставлена для совместимости с ранней версией мода !!!
	new File: UserFile = fopen(string, io_read);//чтение файла
	new key[ 256 ] , val[ 256 ];
	new Data[ 256 ];
	while ( fread( UserFile , Data , sizeof( Data ) ) )
	{
		key = ini_GetKey( Data );
		if( strcmp( key , "openip00" , true ) == 0 ) { OpenIP[0] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon00" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[0] = strval( val ); }
		if( strcmp( key , "openip01" , true ) == 0 ) { OpenIP[1] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon01" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[1] = strval( val ); }
		if( strcmp( key , "openip02" , true ) == 0 ) { OpenIP[2] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon02" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[2] = strval( val ); }
		if( strcmp( key , "openip03" , true ) == 0 ) { OpenIP[3] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon03" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[3] = strval( val ); }
		if( strcmp( key , "openip04" , true ) == 0 ) { OpenIP[4] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon04" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[4] = strval( val ); }
		if( strcmp( key , "openip05" , true ) == 0 ) { OpenIP[5] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon05" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[5] = strval( val ); }
		if( strcmp( key , "openip06" , true ) == 0 ) { OpenIP[6] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon06" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[6] = strval( val ); }
		if( strcmp( key , "openip07" , true ) == 0 ) { OpenIP[7] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon07" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[7] = strval( val ); }
		if( strcmp( key , "openip08" , true ) == 0 ) { OpenIP[8] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon08" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[8] = strval( val ); }
		if( strcmp( key , "openip09" , true ) == 0 ) { OpenIP[9] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon09" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[9] = strval( val ); }
		if( strcmp( key , "openip10" , true ) == 0 ) { OpenIP[10] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon10" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[10] = strval( val ); }
		if( strcmp( key , "openip11" , true ) == 0 ) { OpenIP[11] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon11" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[11] = strval( val ); }
		if( strcmp( key , "openip12" , true ) == 0 ) { OpenIP[12] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon12" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[12] = strval( val ); }
		if( strcmp( key , "openip13" , true ) == 0 ) { OpenIP[13] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon13" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[13] = strval( val ); }
		if( strcmp( key , "openip14" , true ) == 0 ) { OpenIP[14] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon14" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[14] = strval( val ); }
		if( strcmp( key , "openip15" , true ) == 0 ) { OpenIP[15] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon15" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[15] = strval( val ); }
		if( strcmp( key , "openip16" , true ) == 0 ) { OpenIP[16] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon16" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[16] = strval( val ); }
		if( strcmp( key , "openip17" , true ) == 0 ) { OpenIP[17] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon17" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[17] = strval( val ); }
		if( strcmp( key , "openip18" , true ) == 0 ) { OpenIP[18] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon18" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[18] = strval( val ); }
		if( strcmp( key , "openip19" , true ) == 0 ) { OpenIP[19] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon19" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[19] = strval( val ); }
		if( strcmp( key , "openip20" , true ) == 0 ) { OpenIP[20] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon20" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[20] = strval( val ); }
		if( strcmp( key , "openip21" , true ) == 0 ) { OpenIP[21] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon21" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[21] = strval( val ); }
		if( strcmp( key , "openip22" , true ) == 0 ) { OpenIP[22] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon22" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[22] = strval( val ); }
		if( strcmp( key , "openip23" , true ) == 0 ) { OpenIP[23] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon23" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[23] = strval( val ); }
		if( strcmp( key , "openip24" , true ) == 0 ) { OpenIP[24] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon24" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[24] = strval( val ); }
		if( strcmp( key , "openip25" , true ) == 0 ) { OpenIP[25] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon25" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[25] = strval( val ); }
		if( strcmp( key , "openip26" , true ) == 0 ) { OpenIP[26] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon26" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[26] = strval( val ); }
		if( strcmp( key , "openip27" , true ) == 0 ) { OpenIP[27] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon27" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[27] = strval( val ); }
		if( strcmp( key , "openip28" , true ) == 0 ) { OpenIP[28] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon28" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[28] = strval( val ); }
		if( strcmp( key , "openip29" , true ) == 0 ) { OpenIP[29] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon29" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[29] = strval( val ); }
		if( strcmp( key , "openip30" , true ) == 0 ) { OpenIP[30] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon30" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[30] = strval( val ); }
		if( strcmp( key , "openip31" , true ) == 0 ) { OpenIP[31] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon31" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[31] = strval( val ); }
		if( strcmp( key , "openip32" , true ) == 0 ) { OpenIP[32] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon32" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[32] = strval( val ); }
		if( strcmp( key , "openip33" , true ) == 0 ) { OpenIP[33] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon33" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[33] = strval( val ); }
		if( strcmp( key , "openip34" , true ) == 0 ) { OpenIP[34] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon34" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[34] = strval( val ); }
		if( strcmp( key , "openip35" , true ) == 0 ) { OpenIP[35] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon35" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[35] = strval( val ); }
		if( strcmp( key , "openip36" , true ) == 0 ) { OpenIP[36] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon36" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[36] = strval( val ); }
		if( strcmp( key , "openip37" , true ) == 0 ) { OpenIP[37] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon37" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[37] = strval( val ); }
		if( strcmp( key , "openip38" , true ) == 0 ) { OpenIP[38] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon38" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[38] = strval( val ); }
		if( strcmp( key , "openip39" , true ) == 0 ) { OpenIP[39] = ini_GetValue( Data ); }
		if( strcmp( key , "numcon39" , true ) == 0 ) { val = ini_GetValue( Data ); OpenIP22[39] = strval( val ); }
	}
	fclose(UserFile);
	for(new i = 0; i < 40; i++)
	{
		strdel(OpenIP[i], strlen(OpenIP[i])-1, strlen(OpenIP[i]));//корректировки OpenIP
	}
	return 1;
}

public SaveOpenIP()
{
	new string[256];
	format(string,sizeof(string),"data/openip.ini");
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[128];
		format(var, 128, "openip00=%s\n",OpenIP[0]);fwrite(hFile, var);
		format(var, 128, "numcon00=%d\n",OpenIP22[0]);fwrite(hFile, var);
		format(var, 128, "openip01=%s\n",OpenIP[1]);fwrite(hFile, var);
		format(var, 128, "numcon01=%d\n",OpenIP22[1]);fwrite(hFile, var);
		format(var, 128, "openip02=%s\n",OpenIP[2]);fwrite(hFile, var);
		format(var, 128, "numcon02=%d\n",OpenIP22[2]);fwrite(hFile, var);
		format(var, 128, "openip03=%s\n",OpenIP[3]);fwrite(hFile, var);
		format(var, 128, "numcon03=%d\n",OpenIP22[3]);fwrite(hFile, var);
		format(var, 128, "openip04=%s\n",OpenIP[4]);fwrite(hFile, var);
		format(var, 128, "numcon04=%d\n",OpenIP22[4]);fwrite(hFile, var);
		format(var, 128, "openip05=%s\n",OpenIP[5]);fwrite(hFile, var);
		format(var, 128, "numcon05=%d\n",OpenIP22[5]);fwrite(hFile, var);
		format(var, 128, "openip06=%s\n",OpenIP[6]);fwrite(hFile, var);
		format(var, 128, "numcon06=%d\n",OpenIP22[6]);fwrite(hFile, var);
		format(var, 128, "openip07=%s\n",OpenIP[7]);fwrite(hFile, var);
		format(var, 128, "numcon07=%d\n",OpenIP22[7]);fwrite(hFile, var);
		format(var, 128, "openip08=%s\n",OpenIP[8]);fwrite(hFile, var);
		format(var, 128, "numcon08=%d\n",OpenIP22[8]);fwrite(hFile, var);
		format(var, 128, "openip09=%s\n",OpenIP[9]);fwrite(hFile, var);
		format(var, 128, "numcon09=%d\n",OpenIP22[9]);fwrite(hFile, var);
		format(var, 128, "openip10=%s\n",OpenIP[10]);fwrite(hFile, var);
		format(var, 128, "numcon10=%d\n",OpenIP22[10]);fwrite(hFile, var);
		format(var, 128, "openip11=%s\n",OpenIP[11]);fwrite(hFile, var);
		format(var, 128, "numcon11=%d\n",OpenIP22[11]);fwrite(hFile, var);
		format(var, 128, "openip12=%s\n",OpenIP[12]);fwrite(hFile, var);
		format(var, 128, "numcon12=%d\n",OpenIP22[12]);fwrite(hFile, var);
		format(var, 128, "openip13=%s\n",OpenIP[13]);fwrite(hFile, var);
		format(var, 128, "numcon13=%d\n",OpenIP22[13]);fwrite(hFile, var);
		format(var, 128, "openip14=%s\n",OpenIP[14]);fwrite(hFile, var);
		format(var, 128, "numcon14=%d\n",OpenIP22[14]);fwrite(hFile, var);
		format(var, 128, "openip15=%s\n",OpenIP[15]);fwrite(hFile, var);
		format(var, 128, "numcon15=%d\n",OpenIP22[15]);fwrite(hFile, var);
		format(var, 128, "openip16=%s\n",OpenIP[16]);fwrite(hFile, var);
		format(var, 128, "numcon16=%d\n",OpenIP22[16]);fwrite(hFile, var);
		format(var, 128, "openip17=%s\n",OpenIP[17]);fwrite(hFile, var);
		format(var, 128, "numcon17=%d\n",OpenIP22[17]);fwrite(hFile, var);
		format(var, 128, "openip18=%s\n",OpenIP[18]);fwrite(hFile, var);
		format(var, 128, "numcon18=%d\n",OpenIP22[18]);fwrite(hFile, var);
		format(var, 128, "openip19=%s\n",OpenIP[19]);fwrite(hFile, var);
		format(var, 128, "numcon19=%d\n",OpenIP22[19]);fwrite(hFile, var);
		format(var, 128, "openip20=%s\n",OpenIP[20]);fwrite(hFile, var);
		format(var, 128, "numcon20=%d\n",OpenIP22[20]);fwrite(hFile, var);
		format(var, 128, "openip21=%s\n",OpenIP[21]);fwrite(hFile, var);
		format(var, 128, "numcon21=%d\n",OpenIP22[21]);fwrite(hFile, var);
		format(var, 128, "openip22=%s\n",OpenIP[22]);fwrite(hFile, var);
		format(var, 128, "numcon22=%d\n",OpenIP22[22]);fwrite(hFile, var);
		format(var, 128, "openip23=%s\n",OpenIP[23]);fwrite(hFile, var);
		format(var, 128, "numcon23=%d\n",OpenIP22[23]);fwrite(hFile, var);
		format(var, 128, "openip24=%s\n",OpenIP[24]);fwrite(hFile, var);
		format(var, 128, "numcon24=%d\n",OpenIP22[24]);fwrite(hFile, var);
		format(var, 128, "openip25=%s\n",OpenIP[25]);fwrite(hFile, var);
		format(var, 128, "numcon25=%d\n",OpenIP22[25]);fwrite(hFile, var);
		format(var, 128, "openip26=%s\n",OpenIP[26]);fwrite(hFile, var);
		format(var, 128, "numcon26=%d\n",OpenIP22[26]);fwrite(hFile, var);
		format(var, 128, "openip27=%s\n",OpenIP[27]);fwrite(hFile, var);
		format(var, 128, "numcon27=%d\n",OpenIP22[27]);fwrite(hFile, var);
		format(var, 128, "openip28=%s\n",OpenIP[28]);fwrite(hFile, var);
		format(var, 128, "numcon28=%d\n",OpenIP22[28]);fwrite(hFile, var);
		format(var, 128, "openip29=%s\n",OpenIP[29]);fwrite(hFile, var);
		format(var, 128, "numcon29=%d\n",OpenIP22[29]);fwrite(hFile, var);
		format(var, 128, "openip30=%s\n",OpenIP[30]);fwrite(hFile, var);
		format(var, 128, "numcon30=%d\n",OpenIP22[30]);fwrite(hFile, var);
		format(var, 128, "openip31=%s\n",OpenIP[31]);fwrite(hFile, var);
		format(var, 128, "numcon31=%d\n",OpenIP22[31]);fwrite(hFile, var);
		format(var, 128, "openip32=%s\n",OpenIP[32]);fwrite(hFile, var);
		format(var, 128, "numcon32=%d\n",OpenIP22[32]);fwrite(hFile, var);
		format(var, 128, "openip33=%s\n",OpenIP[33]);fwrite(hFile, var);
		format(var, 128, "numcon33=%d\n",OpenIP22[33]);fwrite(hFile, var);
		format(var, 128, "openip34=%s\n",OpenIP[34]);fwrite(hFile, var);
		format(var, 128, "numcon34=%d\n",OpenIP22[34]);fwrite(hFile, var);
		format(var, 128, "openip35=%s\n",OpenIP[35]);fwrite(hFile, var);
		format(var, 128, "numcon35=%d\n",OpenIP22[35]);fwrite(hFile, var);
		format(var, 128, "openip36=%s\n",OpenIP[36]);fwrite(hFile, var);
		format(var, 128, "numcon36=%d\n",OpenIP22[36]);fwrite(hFile, var);
		format(var, 128, "openip37=%s\n",OpenIP[37]);fwrite(hFile, var);
		format(var, 128, "numcon37=%d\n",OpenIP22[37]);fwrite(hFile, var);
		format(var, 128, "openip38=%s\n",OpenIP[38]);fwrite(hFile, var);
		format(var, 128, "numcon38=%d\n",OpenIP22[38]);fwrite(hFile, var);
		format(var, 128, "openip39=%s\n",OpenIP[39]);fwrite(hFile, var);
		format(var, 128, "numcon39=%d\n",OpenIP22[39]);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

public DatCor()
{
	new Float:flyear;
	timecor[3] = timecor[3] + CorTime[3];//обработка месяца
	timecor[5] = 0;//перенос на год
	if(timecor[3] < 1)
	{
		timecor[3] = 12 + timecor[3];
		timecor[5] = -1;//перенос на год
	}
	if(timecor[3] > 12)
	{
		timecor[3] = timecor[3] - 12;
		timecor[5] = 1;//перенос на год
	}
	timecor[2] = timecor[2] + CorTime[4] + timecor[5];//обработка года
	flyear = float(timecor[2]);
	flyear = floatdiv(flyear, 4);
	flyear = floatfract(flyear);
	if(flyear != 0){timecor[7] = 0;}//НЕ високосный год
	if(flyear == 0){timecor[7] = 1;}//високосный год
	timecor[4] = timecor[4] + CorTime[2] + timecor[6];//обработка числа
	timecor[5] = 0;//перенос на месяц
	if(timecor[4] < 1 && timecor[3] == 3 && timecor[7] == 0)
	{
		timecor[4] = 28 + timecor[4];
		timecor[5] = -1;//перенос на месяц
	}
	if(timecor[4] < 1 && timecor[3] == 3 && timecor[7] == 1)
	{
		timecor[4] = 29 + timecor[4];
		timecor[5] = -1;//перенос на месяц
	}
	if(timecor[4] < 1 && (timecor[3] == 5 || timecor[3] == 7 || timecor[3] == 10 || timecor[3] == 12))
	{
		timecor[4] = 30 + timecor[4];
		timecor[5] = -1;//перенос на месяц
	}
	if(timecor[4] < 1 && (timecor[3] == 2 || timecor[3] == 4 || timecor[3] == 6 || timecor[3] == 8 || timecor[3] == 9 || timecor[3] == 11 || timecor[3] == 1))
	{
		timecor[4] = 31 + timecor[4];
		timecor[5] = -1;//перенос на месяц
	}
	if(timecor[4] > 28 && timecor[3] == 2 && timecor[7] == 0)
	{
		timecor[4] = timecor[4] - 28;
		timecor[5] = 1;//перенос на месяц
	}
	if(timecor[4] > 29 && timecor[3] == 2 && timecor[7] == 1)
	{
		timecor[4] = timecor[4] - 29;
		timecor[5] = 1;//перенос на месяц
	}
	if(timecor[4] > 30 && (timecor[3] == 4 || timecor[3] == 6 || timecor[3] == 9 || timecor[3] == 11))
	{
		timecor[4] = timecor[4] - 30;
		timecor[5] = 1;//перенос на месяц
	}
	if(timecor[4] > 31 && (timecor[3] == 1 || timecor[3] == 3 || timecor[3] == 5 || timecor[3] == 7 || timecor[3] == 8 || timecor[3] == 10 || timecor[3] == 12))
	{
		timecor[4] = timecor[4] - 31;
		timecor[5] = 1;//перенос на месяц
	}
	timecor[3] = timecor[3] + timecor[5];//коррекция месяца
	timecor[5] = 0;//перенос на год
	if(timecor[3] < 1)
	{
		timecor[3] = 12 + timecor[3];
		timecor[5] = -1;//перенос на год
	}
	if(timecor[3] > 12)
	{
		timecor[3] = timecor[3] - 12;
		timecor[5] = 1;//перенос на год
	}
	timecor[2] = timecor[2] + timecor[5];//коррекция года
	return 1;
}

public TimCor()
{
	timecor[1] = timecor[1] + CorTime[1];//обработка минут
	timecor[5] = 0;//перенос на час
	if(timecor[1] < 0)
	{
		timecor[1] = 60 + timecor[1];
		timecor[5] = -1;//перенос на час
	}
	if(timecor[1] > 59)
	{
		timecor[1] = timecor[1] - 60;
		timecor[5] = 1;//перенос на час
	}
	timecor[0] = timecor[0] + CorTime[0] + timecor[5];//обработка часов
	timecor[6] = 0;//перенос на день
	if(timecor[0] < 0)
	{
		timecor[0] = 24 + timecor[0];
		timecor[6] = -1;//перенос на день
	}
	if(timecor[0] > 23)
	{
		timecor[0] = timecor[0] - 24;
		timecor[6] = 1;//перенос на день
	}
	return 1;
}

public ReadCorTime()
{
	new string[256];
	format(string,sizeof(string),"data/cortime.ini");
	new File: UserFile = fopen(string, io_read);//чтение файла
	new key[ 256 ] , val[ 256 ];
	new Data[ 256 ];
	while ( fread( UserFile , Data , sizeof( Data ) ) )
	{
		key = ini_GetKey( Data );
		if( strcmp( key , "realtime" , true ) == 0 ) { val = ini_GetValue( Data ); timecor[8] = strval( val ); }
		if( strcmp( key , "hour" , true ) == 0 ) { val = ini_GetValue( Data ); CorTime[0] = strval( val ); }
		if( strcmp( key , "minute" , true ) == 0 ) { val = ini_GetValue( Data ); CorTime[1] = strval( val ); }
		if( strcmp( key , "day" , true ) == 0 ) { val = ini_GetValue( Data ); CorTime[2] = strval( val ); }
		if( strcmp( key , "month" , true ) == 0 ) { val = ini_GetValue( Data ); CorTime[3] = strval( val ); }
		if( strcmp( key , "year" , true ) == 0 ) { val = ini_GetValue( Data ); CorTime[4] = strval( val ); }
	}
	fclose(UserFile);
	return 1;
}

public SaveCorTime()
{
	new string[256];
	format(string,sizeof(string),"data/cortime.ini");
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[32];
		format(var, 32, "realtime=%d\n",timecor[8]);fwrite(hFile, var);
		format(var, 32, "hour=%d\n",CorTime[0]);fwrite(hFile, var);
		format(var, 32, "minute=%d\n",CorTime[1]);fwrite(hFile, var);
		format(var, 32, "day=%d\n",CorTime[2]);fwrite(hFile, var);
		format(var, 32, "month=%d\n",CorTime[3]);fwrite(hFile, var);
		format(var, 32, "year=%d\n",CorTime[4]);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

public DestrCar(playerid)
{
	if(GetPlayerVehicleID(playerid) != 0)//если игрок в транспорте, то:
	{
		new Float:igx, Float:igy, Float:igz;//высадить игрока
		GetPlayerPos(playerid, igx, igy, igz);
		SetPlayerPos(playerid, igx+3, igy+3, igz+5);
	}
	if(playcar[playerid] != 0)//если у игрока есть свой транспорт, то:
	{
		for(new i=0;i<MAX_PLAYERS;i++)//поиск и удаление чужого неона И обход антикрашера - 3
		{
			if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
			{
				if(GetPlayerVehicleID(i) == playcar[playerid])
				{//если есть пассажир (пассажиры) И (ИЛИ) водитель в авто, то:
					EnterTick33[i] = 1;//обход антикрашера - 3
				}
			}
			if(playcar[playerid] == neon[i][2])
			{
				DestroyObject(neon[i][0]);//убрать неон
				DestroyObject(neon[i][1]);//убрать неон
				neon[i][0] = 0;//присваиваем неону несуществующий номер объекта
				neon[i][1] = 0;//присваиваем неону несуществующий номер объекта
				neon[i][2] = 0;//несуществующий ид транспорта с неоном
 			}
		}
		if(neon[playerid][0] != 0) { DestroyObject(neon[playerid][0]); }//убрать неон
		if(neon[playerid][1] != 0) { DestroyObject(neon[playerid][1]); }//убрать неон
		neon[playerid][0] = 0;//присваиваем неону несуществующий номер объекта
		neon[playerid][1] = 0;//присваиваем неону несуществующий номер объекта
		neon[playerid][2] = 0;//несуществующий ид транспорта с неоном
		DestroyVehicle(playcar[playerid]);//уничтожить свой транспорт
		playcar[playerid] = 0;//несуществующий ид транспорта
	}
	return 1;
}

public StopDrift(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3)
{
	new carpl;
	carpl = GetPlayerVehicleID(playerid);//получение ид авто инициатора
	new Float: X, Float:Y, Float: Z;
	GetPlayerPos(playerid, X, Y, Z);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPlayerVehicleID(i) == carpl)//если игрок в авто инициатора,
			{//или это сам инициатор, то:
				PlayCRTP[i] = 1;//блокировка контроля координат
				tpdrift[i] = 1;//блокировка счётчика дрифта
				SetPVarInt(i, "PlCRct9", 1);//блокировка античита управления чужим транспортом
			}
			if(IsPlayerInRangeOfPoint(i, 15.0, X, Y, Z))//если игрок в радиусе 15 (стоит на машине), то:
			{
				PlayCRTP[i] = 1;//блокировка контроля координат
			}
		}
	}
	SetTimerEx("TelPort", 300, 0, "ddddffff", playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3);
	return 1;
}

public TelPort(playerid,regm,per1,per2,Float:per3,Float:cor1,Float:cor2,Float:cor3)
{
	new carpl;
	carpl = GetPlayerVehicleID(playerid);//получение ид авто инициатора
	new Float: X, Float:Y, Float: Z;
	GetPlayerPos(playerid, X, Y, Z);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPlayerVehicleID(i) == carpl)//если игрок в авто инициатора,
			{//или это сам инициатор, то:
				PlayCRTP[i] = 1;//блокировка контроля координат
				tpdrift[i] = 1;//блокировка счётчика дрифта
			}
			if(IsPlayerInRangeOfPoint(i, 15.0, X, Y, Z))//если игрок в радиусе 15 (стоит на машине), то:
			{
				PlayCRTP[i] = 1;//блокировка контроля координат
			}
		}
	}
	if(regm == 0)
	{
		new car;//флипнуть
		new Float:angle;
		car = GetPlayerVehicleID(playerid);
		GetVehicleZAngle(car, angle);
		SetVehicleZAngle(car, angle);
		return 1;
	}
	if(regm == 1)
	{
		if(PlayerInfo[playerid][pAdmin] == 0 && (per2 >= 1 || GetPlayerVirtualWorld(playerid) >=1))
		{//если игрок НЕ админ, И тп НЕ на основную карту ИЛИ находится НЕ на основной карте то:
			SetPlayerInterior(playerid, per1);//тп БЕЗ транспорта
			SetPlayerVirtualWorld(playerid, per2);
			SetPlayerPos(playerid, cor1, cor2, cor3);
		}
		else//иначе:
		{
			SetPlayerInterior(playerid, per1);//телепортировать
			SetPlayerVirtualWorld(playerid, per2);
			new VID = GetPlayerVehicleID(playerid);
			new Float:angle;
			LinkVehicleToInterior(VID, per1);//подключить транспорт к ТП интерьеру
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{//если игрок админ, то:
				SetVehicleVirtualWorld(VID, per2);//установить транспорту виртуальный мир игрока
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(GetPlayerVehicleID(i) == VID && i != playerid)
						{//установить пассажирам интерьер и виртуальный мир игрока
							SetPlayerInterior(i, per1);
							SetPlayerVirtualWorld(i, per2);
						}
					}
				}
			}
			SetVehiclePos(VID, cor1, cor2, cor3);
			GetVehicleZAngle(VID, angle);//флипнуть
			SetVehicleZAngle(VID, angle);
			SetPlayerPos(playerid, cor1, cor2, cor3);
			PutPlayerInVehicle(playerid, VID, 0);
		}
		return 1;
	}
	if(regm == 2)
	{
		if(PlayerInfo[playerid][pAdmin] == 0 && (per2 >= 1 || GetPlayerVirtualWorld(playerid) >=1))
		{//если игрок НЕ админ, И тп НЕ на основную карту ИЛИ находится НЕ на основной карте то:
			SetPlayerInterior(playerid, per1);//тп БЕЗ транспорта
			SetPlayerVirtualWorld(playerid, per2);
			SetPlayerPos(playerid, cor1, cor2, cor3);
		}
		else//иначе:
		{
			SetPlayerInterior(playerid, per1);//телепортировать с углом авто
			SetPlayerVirtualWorld(playerid, per2);
			new VID = GetPlayerVehicleID(playerid);
			LinkVehicleToInterior(VID, per1);//подключить транспорт к ТП интерьеру
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{//если игрок админ, то:
				SetVehicleVirtualWorld(VID, per2);//установить транспорту виртуальный мир игрока
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(GetPlayerVehicleID(i) == VID && i != playerid)
						{//установить пассажирам интерьер и виртуальный мир игрока
							SetPlayerInterior(i, per1);
							SetPlayerVirtualWorld(i, per2);
						}
					}
				}
			}
			SetVehiclePos(VID, cor1, cor2, cor3);
			SetVehicleZAngle(VID, per3);
			SetPlayerPos(playerid, cor1, cor2, cor3);
			PutPlayerInVehicle(playerid, VID, 0);
		}
		return 1;
	}
	if(regm == 6)//дополнительный режим "телепортировать"
	{
		SetPlayerInterior(playerid, per1);//телепортировать
		SetPlayerVirtualWorld(playerid, per2);
		new VID = GetPlayerVehicleID(playerid);
		new Float:angle;
		LinkVehicleToInterior(VID, per1);//подключить транспорт к ТП интерьеру
		SetVehicleVirtualWorld(VID, per2);//установить транспорту виртуальный мир игрока
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(GetPlayerVehicleID(i) == VID && i != playerid)
				{//установить пассажирам интерьер и виртуальный мир игрока
					SetPlayerInterior(i, per1);
					SetPlayerVirtualWorld(i, per2);
				}
			}
		}
		SetVehiclePos(VID, cor1, cor2, cor3);
		GetVehicleZAngle(VID, angle);//флипнуть
		SetVehicleZAngle(VID, angle);
		SetPlayerPos(playerid, cor1, cor2, cor3);
		PutPlayerInVehicle(playerid, VID, 0);
		return 1;
	}
	if(regm == 7)//дополнительный режим "телепортировать с углом авто"
	{
		SetPlayerInterior(playerid, per1);//телепортировать с углом авто
		SetPlayerVirtualWorld(playerid, per2);
		new VID = GetPlayerVehicleID(playerid);
		LinkVehicleToInterior(VID, per1);//подключить транспорт к ТП интерьеру
		SetVehicleVirtualWorld(VID, per2);//установить транспорту виртуальный мир игрока
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(GetPlayerVehicleID(i) == VID && i != playerid)
				{//установить пассажирам интерьер и виртуальный мир игрока
					SetPlayerInterior(i, per1);
					SetPlayerVirtualWorld(i, per2);
				}
			}
		}
		SetVehiclePos(VID, cor1, cor2, cor3);
		SetVehicleZAngle(VID, per3);
		SetPlayerPos(playerid, cor1, cor2, cor3);
		PutPlayerInVehicle(playerid, VID, 0);
	}
	return 1;
}

forward TPDerby(playerid,per1,per2,Float:cor1,Float:cor2,Float:cor3);
public TPDerby(playerid,per1,per2,Float:cor1,Float:cor2,Float:cor3)
{
	tpdrift[playerid] = 1;
	SetPlayerInterior(playerid, per1);
	SetPlayerVirtualWorld(playerid, per2);
	SetPlayerPos(playerid, cor1, cor2, cor3);
	return 1;
}

public LineOn1()
{
	MoveDynamicObject(LineObj1[0], 2835.44, -1657.23, 9.69, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj1[1], 2836.30, -1660.23, 17.15, 20); //0.00, 0.00, 269.36);
	MoveDynamicObject(LineObj1[2], 2836.31, -1657.30, 17.15, 20); //0.00, 0.00, 269.36);
	MoveDynamicObject(LineObj1[3], 2836.29, -1654.31, 17.15, 20); //0.00, 0.00, 269.36);
	MoveDynamicObject(LineObj1[4], 2823.33, -1650.61, 10.46, 20); //0.00, 0.00, 196.58);
	MoveDynamicObject(LineObj1[5], 2740.17, -1648.85, 12.79, 20); //0.00, 0.00, 187.50);
	MoveDynamicObject(LineObj1[6], 2730.98, -1650.00, 12.79, 20); //0.00, 0.00, 186.61);
	MoveDynamicObject(LineObj1[7], 2721.73, -1651.11, 12.79, 20); //0.00, 0.00, 186.74);
	MoveDynamicObject(LineObj1[8], 2635.18, -1661.60, 10.59, 20); //0.00, 0.00, 254.96);
	MoveDynamicObject(LineObj1[9], 2648.33, -1650.41, 10.53, 20); //0.00, 0.00, 191.68);
	MoveDynamicObject(LineObj1[10], 2640.04, -1654.23, 10.53, 20); //0.00, 0.00, 217.69);
	MoveDynamicObject(LineObj1[11], 2648.32, -1737.32, 10.60, 20); //0.00, 0.00, 31.55);
	MoveDynamicObject(LineObj1[12], 2639.80, -1740.47, 10.60, 20); //0.00, 0.00, 9.52);
	MoveDynamicObject(LineObj1[13], 2527.49, -1739.47, 13.08, 20); //0.00, 0.00, 341.45);
	MoveDynamicObject(LineObj1[14], 2431.01, -1724.72, 13.41, 20); //0.00, 0.00, 197.71);
	MoveDynamicObject(LineObj1[15], 2413.74, -1739.72, 13.07, 20); //0.00, 0.00, 341.46);
	MoveDynamicObject(LineObj1[16], 2342.74, -1725.10, 13.41, 20); //0.00, 0.00, 200.35);
	MoveDynamicObject(LineObj1[17], 2313.70, -1740.14, 13.09, 20); //0.00, 0.00, 343.65);
	MoveDynamicObject(LineObj1[18], 2217.92, -1724.51, 13.19, 20); //0.00, 0.00, 210.19);
	MoveDynamicObject(LineObj1[19], 2212.31, -1731.37, 13.19, 20); //0.00, 0.00, 250.60);
	MoveDynamicObject(LineObj1[20], 2210.78, -1740.52, 13.19, 20); //0.00, 0.00, 269.91);
	MoveDynamicObject(LineObj1[21], 2211.37, -1894.33, 13.19, 20); //0.00, 0.00, 292.25);
	MoveDynamicObject(LineObj1[22], 2225.35, -1894.73, 13.18, 20); //0.00, 0.00, 71.52);
	MoveDynamicObject(LineObj1[23], 2221.17, -1972.03, 13.12, 20); //0.00, 0.00, 67.79);
	MoveDynamicObject(LineObj1[24], 2289.06, -2073.82, 13.15, 20); //0.00, 0.00, 129.90);
	MoveDynamicObject(LineObj1[25], 2291.81, -2081.95, 13.15, 20); //0.00, 0.00, 87.13);
	MoveDynamicObject(LineObj1[26], 2288.21, -2089.73, 13.15, 20); //0.00, 0.00, 43.88);
	MoveDynamicObject(LineObj1[27], 2267.33, -2108.72, 13.32, 20); //0.00, 0.00, 32.75);
	MoveDynamicObject(LineObj1[28], 2255.69, -2097.16, 13.33, 20); //0.00, 0.00, 244.26);
	MoveDynamicObject(LineObj1[29], 2204.08, -2169.74, 13.21, 20); //0.00, 0.00, 29.10);
	MoveDynamicObject(LineObj1[30], 2194.43, -2160.27, 13.12, 20); //0.00, 0.00, 242.30);
	MoveDynamicObject(LineObj1[31], 2140.19, -2227.21, 13.25, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj1[32], 2148.92, -2224.95, 13.25, 20); //0.00, 0.00, 29.03);
	MoveDynamicObject(LineObj1[33], 2132.67, -2223.65, 13.25, 20); //0.00, 0.00, 309.95);
	MoveDynamicObject(LineObj1[34], 1963.46, -2173.74, 13.08, 20); //0.00, 0.00, 341.65);
	MoveDynamicObject(LineObj1[35], 1956.02, -2168.75, 13.08, 20); //0.00, 0.00, 310.37);
	MoveDynamicObject(LineObj1[36], 1953.24, -2160.52, 13.08, 20); //0.00, 0.00, 267.15);
	MoveDynamicObject(LineObj1[37], 1968.51, -2110.19, 13.08, 20); //0.00, 0.00, 107.99);
	MoveDynamicObject(LineObj1[38], 1968.82, -2060.70, 13.08, 20); //0.00, 0.00, 106.98);
	MoveDynamicObject(LineObj1[39], 1954.40, -2052.61, 13.12, 20); //0.00, 0.00, 253.21);
	MoveDynamicObject(LineObj1[40], 1969.29, -1956.69, 13.28, 20); //0.00, 0.00, 105.84);
	MoveDynamicObject(LineObj1[41], 1954.02, -1955.91, 13.26, 20); //0.00, 0.00, 257.96);
	MoveDynamicObject(LineObj1[42], 1954.03, -1933.10, 13.18, 20); //0.00, 0.00, 257.02);
	MoveDynamicObject(LineObj1[43], 1968.88, -1932.71, 12.98, 20); //0.00, 0.00, 103.62);
	MoveDynamicObject(LineObj1[44], 1953.89, -1787.06, 12.96, 20); //0.00, 0.00, 245.72);
	MoveDynamicObject(LineObj1[45], 1969.83, -1812.39, 13.05, 20); //0.00, 0.00, 108.81);
	MoveDynamicObject(LineObj1[46], 1967.76, -1751.78, 13.08, 20); //0.00, 0.00, 125.37);
	MoveDynamicObject(LineObj1[47], 1960.78, -1746.48, 13.08, 20); //0.00, 0.00, 160.23);
	MoveDynamicObject(LineObj1[48], 1943.51, -1759.92, 13.18, 20); //0.00, 0.00, 348.05);
	MoveDynamicObject(LineObj1[49], 1936.50, -1755.00, 13.18, 20); //0.00, 0.00, 301.72);
	MoveDynamicObject(LineObj1[50], 1934.32, -1746.40, 13.18, 20); //0.00, 0.00, 266.33);
	MoveDynamicObject(LineObj1[51], 1937.54, -1605.19, 13.27, 20); //0.00, 0.00, 169.55);
	MoveDynamicObject(LineObj1[52], 1824.84, -1619.86, 13.08, 20); //0.00, 0.00, 353.04);
	MoveDynamicObject(LineObj1[53], 1817.04, -1615.92, 13.08, 20); //0.00, 0.00, 313.52);
	MoveDynamicObject(LineObj1[54], 1813.98, -1607.80, 13.08, 20); //0.00, 0.00, 268.40);
	MoveDynamicObject(LineObj1[55], 1832.10, -1577.99, 13.27, 20); //0.00, 0.00, 89.41);
	MoveDynamicObject(LineObj1[56], 1832.46, -1568.84, 13.27, 20); //0.00, 0.00, 86.07);
	MoveDynamicObject(LineObj1[57], 1833.59, -1559.74, 13.27, 20); //0.00, 0.00, 79.88);
	MoveDynamicObject(LineObj1[58], 1839.82, -1461.70, 13.07, 20); //0.00, 0.00, 258.29);
	MoveDynamicObject(LineObj1[59], 1858.54, -1464.20, 13.18, 20); //0.00, 0.00, 106.62);
	MoveDynamicObject(LineObj1[60], 1858.94, -1341.01, 13.07, 20); //0.00, 0.00, 109.23);
	MoveDynamicObject(LineObj1[61], 1858.78, -1260.86, 13.06, 20); //0.00, 0.00, 105.20);
	MoveDynamicObject(LineObj1[62], 1839.73, -1261.31, 13.21, 20); //0.00, 0.00, 255.05);
	MoveDynamicObject(LineObj1[63], 1840.29, -1186.67, 23.34, 20); //0.00, 0.00, 261.59);
	MoveDynamicObject(LineObj1[64], 1843.84, -1178.44, 23.34, 20); //0.00, 0.00, 231.75);
	MoveDynamicObject(LineObj1[65], 1851.33, -1173.89, 23.34, 20); //0.00, 0.00, 190.71);
	MoveDynamicObject(LineObj1[66], 1874.13, -1135.96, 23.43, 20); //0.00, 0.00, 108.95);
	MoveDynamicObject(LineObj1[67], 1983.85, -1045.88, 24.13, 20); //0.00, 0.00, 139.77);
	MoveDynamicObject(LineObj1[68], 1979.98, -1060.34, 24.06, 20); //0.00, 0.00, 4.27);
	MoveDynamicObject(LineObj1[69], 2068.95, -1097.47, 24.61, 20); //0.00, 0.00, 352.51);
	MoveDynamicObject(LineObj1[70], 2175.65, -1126.70, 24.83, 20); //0.00, 0.00, 11.84);
	MoveDynamicObject(LineObj1[71], 2192.39, -1116.30, 24.49, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[72], 2200.96, -1119.81, 25.01, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[73], 2209.56, -1123.31, 25.21, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[74], 2218.60, -1140.44, 25.44, 20); //0.00, 0.00, 1.96);
	MoveDynamicObject(LineObj1[75], 2218.00, -1126.76, 25.31, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[76], 2270.95, -1154.09, 26.55, 20); //0.00, 0.00, 3.14);
	MoveDynamicObject(LineObj1[77], 2303.51, -1158.66, 26.40, 20); //0.00, 0.00, 6.97);
	MoveDynamicObject(LineObj1[78], 2323.76, -1146.46, 26.58, 20); //0.00, 0.00, 156.02);
	MoveDynamicObject(LineObj1[79], 2369.98, -1160.04, 27.22, 20); //0.00, 0.00, 8.05);
	MoveDynamicObject(LineObj1[80], 2361.12, -1162.24, 27.22, 20); //0.00, 0.00, 19.68);
	MoveDynamicObject(LineObj1[81], 2862.98, -1128.34, 10.59, 20); //0.00, 0.00, 171.76);
	MoveDynamicObject(LineObj1[82], 2871.13, -1132.05, 10.59, 20); //0.00, 0.00, 139.42);
	MoveDynamicObject(LineObj1[83], 2878.08, -1138.02, 10.59, 20); //0.00, 0.00, 139.42);
	MoveDynamicObject(LineObj1[84], 2879.43, -1662.23, 10.59, 20); //0.00, 0.00, 40.25);
	MoveDynamicObject(LineObj1[85], 2871.59, -1667.10, 10.59, 20); //0.00, 0.00, 23.66);
	MoveDynamicObject(LineObj1[86], 2862.66, -1669.59, 10.59, 20); //0.00, 0.00, 7.50);
	MoveDynamicObject(LineObj1[87], 2853.43, -1669.38, 10.59, 20); //0.00, 0.00, 349.68);
	return 1;
}

public LineOff1()
{
	MoveDynamicObject(LineObj1[0], 2835.44, -1657.23, -5.31, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj1[1], 2836.30, -1660.23, 2.15, 20); //0.00, 0.00, 269.36);
	MoveDynamicObject(LineObj1[2], 2836.31, -1657.30, 2.15, 20); //0.00, 0.00, 269.36);
	MoveDynamicObject(LineObj1[3], 2836.29, -1654.31, 2.15, 20); //0.00, 0.00, 269.36);
	MoveDynamicObject(LineObj1[4], 2823.33, -1650.61, -4.54, 20); //0.00, 0.00, 196.58);
	MoveDynamicObject(LineObj1[5], 2740.17, -1648.85, -2.21, 20); //0.00, 0.00, 187.50);
	MoveDynamicObject(LineObj1[6], 2730.98, -1650.00, -2.21, 20); //0.00, 0.00, 186.61);
	MoveDynamicObject(LineObj1[7], 2721.73, -1651.11, -2.21, 20); //0.00, 0.00, 186.74);
	MoveDynamicObject(LineObj1[8], 2635.18, -1661.60, -4.41, 20); //0.00, 0.00, 254.96);
	MoveDynamicObject(LineObj1[9], 2648.33, -1650.41, -4.47, 20); //0.00, 0.00, 191.68);
	MoveDynamicObject(LineObj1[10], 2640.04, -1654.23, -4.47, 20); //0.00, 0.00, 217.69);
	MoveDynamicObject(LineObj1[11], 2648.32, -1737.32, -4.4, 20); //0.00, 0.00, 31.55);
	MoveDynamicObject(LineObj1[12], 2639.80, -1740.47, -4.4, 20); //0.00, 0.00, 9.52);
	MoveDynamicObject(LineObj1[13], 2527.49, -1739.47, -1.92, 20); //0.00, 0.00, 341.45);
	MoveDynamicObject(LineObj1[14], 2431.01, -1724.72, -1.59, 20); //0.00, 0.00, 197.71);
	MoveDynamicObject(LineObj1[15], 2413.74, -1739.72, -1.93, 20); //0.00, 0.00, 341.46);
	MoveDynamicObject(LineObj1[16], 2342.74, -1725.10, -1.59, 20); //0.00, 0.00, 200.35);
	MoveDynamicObject(LineObj1[17], 2313.70, -1740.14, -1.91, 20); //0.00, 0.00, 343.65);
	MoveDynamicObject(LineObj1[18], 2217.92, -1724.51, -1.81, 20); //0.00, 0.00, 210.19);
	MoveDynamicObject(LineObj1[19], 2212.31, -1731.37, -1.81, 20); //0.00, 0.00, 250.60);
	MoveDynamicObject(LineObj1[20], 2210.78, -1740.52, -1.81, 20); //0.00, 0.00, 269.91);
	MoveDynamicObject(LineObj1[21], 2211.37, -1894.33, -1.81, 20); //0.00, 0.00, 292.25);
	MoveDynamicObject(LineObj1[22], 2225.35, -1894.73, -1.82, 20); //0.00, 0.00, 71.52);
	MoveDynamicObject(LineObj1[23], 2221.17, -1972.03, -1.88, 20); //0.00, 0.00, 67.79);
	MoveDynamicObject(LineObj1[24], 2289.06, -2073.82, -1.85, 20); //0.00, 0.00, 129.90);
	MoveDynamicObject(LineObj1[25], 2291.81, -2081.95, -1.85, 20); //0.00, 0.00, 87.13);
	MoveDynamicObject(LineObj1[26], 2288.21, -2089.73, -1.85, 20); //0.00, 0.00, 43.88);
	MoveDynamicObject(LineObj1[27], 2267.33, -2108.72, -1.68, 20); //0.00, 0.00, 32.75);
	MoveDynamicObject(LineObj1[28], 2255.69, -2097.16, -1.67, 20); //0.00, 0.00, 244.26);
	MoveDynamicObject(LineObj1[29], 2204.08, -2169.74, -1.79, 20); //0.00, 0.00, 29.10);
	MoveDynamicObject(LineObj1[30], 2194.43, -2160.27, -1.88, 20); //0.00, 0.00, 242.30);
	MoveDynamicObject(LineObj1[31], 2140.19, -2227.21, -1.75, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj1[32], 2148.92, -2224.95, -1.75, 20); //0.00, 0.00, 29.03);
	MoveDynamicObject(LineObj1[33], 2132.67, -2223.65, -1.75, 20); //0.00, 0.00, 309.95);
	MoveDynamicObject(LineObj1[34], 1963.46, -2173.74, -1.92, 20); //0.00, 0.00, 341.65);
	MoveDynamicObject(LineObj1[35], 1956.02, -2168.75, -1.92, 20); //0.00, 0.00, 310.37);
	MoveDynamicObject(LineObj1[36], 1953.24, -2160.52, -1.92, 20); //0.00, 0.00, 267.15);
	MoveDynamicObject(LineObj1[37], 1968.51, -2110.19, -1.92, 20); //0.00, 0.00, 107.99);
	MoveDynamicObject(LineObj1[38], 1968.82, -2060.70, -1.92, 20); //0.00, 0.00, 106.98);
	MoveDynamicObject(LineObj1[39], 1954.40, -2052.61, -1.88, 20); //0.00, 0.00, 253.21);
	MoveDynamicObject(LineObj1[40], 1969.29, -1956.69, -1.72, 20); //0.00, 0.00, 105.84);
	MoveDynamicObject(LineObj1[41], 1954.02, -1955.91, -1.74, 20); //0.00, 0.00, 257.96);
	MoveDynamicObject(LineObj1[42], 1954.03, -1933.10, -1.82, 20); //0.00, 0.00, 257.02);
	MoveDynamicObject(LineObj1[43], 1968.88, -1932.71, -2.02, 20); //0.00, 0.00, 103.62);
	MoveDynamicObject(LineObj1[44], 1953.89, -1787.06, -2.04, 20); //0.00, 0.00, 245.72);
	MoveDynamicObject(LineObj1[45], 1969.83, -1812.39, -1.95, 20); //0.00, 0.00, 108.81);
	MoveDynamicObject(LineObj1[46], 1967.76, -1751.78, -1.92, 20); //0.00, 0.00, 125.37);
	MoveDynamicObject(LineObj1[47], 1960.78, -1746.48, -1.92, 20); //0.00, 0.00, 160.23);
	MoveDynamicObject(LineObj1[48], 1943.51, -1759.92, -1.82, 20); //0.00, 0.00, 348.05);
	MoveDynamicObject(LineObj1[49], 1936.50, -1755.00, -1.82, 20); //0.00, 0.00, 301.72);
	MoveDynamicObject(LineObj1[50], 1934.32, -1746.40, -1.82, 20); //0.00, 0.00, 266.33);
	MoveDynamicObject(LineObj1[51], 1937.54, -1605.19, -1.73, 20); //0.00, 0.00, 169.55);
	MoveDynamicObject(LineObj1[52], 1824.84, -1619.86, -1.92, 20); //0.00, 0.00, 353.04);
	MoveDynamicObject(LineObj1[53], 1817.04, -1615.92, -1.92, 20); //0.00, 0.00, 313.52);
	MoveDynamicObject(LineObj1[54], 1813.98, -1607.80, -1.92, 20); //0.00, 0.00, 268.40);
	MoveDynamicObject(LineObj1[55], 1832.10, -1577.99, -1.73, 20); //0.00, 0.00, 89.41);
	MoveDynamicObject(LineObj1[56], 1832.46, -1568.84, -1.73, 20); //0.00, 0.00, 86.07);
	MoveDynamicObject(LineObj1[57], 1833.59, -1559.74, -1.73, 20); //0.00, 0.00, 79.88);
	MoveDynamicObject(LineObj1[58], 1839.82, -1461.70, -1.93, 20); //0.00, 0.00, 258.29);
	MoveDynamicObject(LineObj1[59], 1858.54, -1464.20, -1.82, 20); //0.00, 0.00, 106.62);
	MoveDynamicObject(LineObj1[60], 1858.94, -1341.01, -1.93, 20); //0.00, 0.00, 109.23);
	MoveDynamicObject(LineObj1[61], 1858.78, -1260.86, -1.94, 20); //0.00, 0.00, 105.20);
	MoveDynamicObject(LineObj1[62], 1839.73, -1261.31, -1.79, 20); //0.00, 0.00, 255.05);
	MoveDynamicObject(LineObj1[63], 1840.29, -1186.67, 8.34, 20); //0.00, 0.00, 261.59);
	MoveDynamicObject(LineObj1[64], 1843.84, -1178.44, 8.34, 20); //0.00, 0.00, 231.75);
	MoveDynamicObject(LineObj1[65], 1851.33, -1173.89, 8.34, 20); //0.00, 0.00, 190.71);
	MoveDynamicObject(LineObj1[66], 1874.13, -1135.96, 8.43, 20); //0.00, 0.00, 108.95);
	MoveDynamicObject(LineObj1[67], 1983.85, -1045.88, 9.13, 20); //0.00, 0.00, 139.77);
	MoveDynamicObject(LineObj1[68], 1979.98, -1060.34, 9.06, 20); //0.00, 0.00, 4.27);
	MoveDynamicObject(LineObj1[69], 2068.95, -1097.47, 9.61, 20); //0.00, 0.00, 352.51);
	MoveDynamicObject(LineObj1[70], 2175.65, -1126.70, 9.83, 20); //0.00, 0.00, 11.84);
	MoveDynamicObject(LineObj1[71], 2192.39, -1116.30, 9.49, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[72], 2200.96, -1119.81, 10.01, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[73], 2209.56, -1123.31, 10.21, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[74], 2218.60, -1140.44, 10.44, 20); //0.00, 0.00, 1.96);
	MoveDynamicObject(LineObj1[75], 2218.00, -1126.76, 10.31, 20); //0.00, 0.00, 157.89);
	MoveDynamicObject(LineObj1[76], 2270.95, -1154.09, 11.55, 20); //0.00, 0.00, 3.14);
	MoveDynamicObject(LineObj1[77], 2303.51, -1158.66, 11.4, 20); //0.00, 0.00, 6.97);
	MoveDynamicObject(LineObj1[78], 2323.76, -1146.46, 11.58, 20); //0.00, 0.00, 156.02);
	MoveDynamicObject(LineObj1[79], 2369.98, -1160.04, 12.22, 20); //0.00, 0.00, 8.05);
	MoveDynamicObject(LineObj1[80], 2361.12, -1162.24, 12.22, 20); //0.00, 0.00, 19.68);
	MoveDynamicObject(LineObj1[81], 2862.98, -1128.34, -4.41, 20); //0.00, 0.00, 171.76);
	MoveDynamicObject(LineObj1[82], 2871.13, -1132.05, -4.41, 20); //0.00, 0.00, 139.42);
	MoveDynamicObject(LineObj1[83], 2878.08, -1138.02, -4.41, 20); //0.00, 0.00, 139.42);
	MoveDynamicObject(LineObj1[84], 2879.43, -1662.23, -4.41, 20); //0.00, 0.00, 40.25);
	MoveDynamicObject(LineObj1[85], 2871.59, -1667.10, -4.41, 20); //0.00, 0.00, 23.66);
	MoveDynamicObject(LineObj1[86], 2862.66, -1669.59, -4.41, 20); //0.00, 0.00, 7.50);
	MoveDynamicObject(LineObj1[87], 2853.43, -1669.38, -4.41, 20); //0.00, 0.00, 349.68);
	return 1;
}

public LineOn2()
{
	MoveDynamicObject(LineObj2[0], 494.77, -307.58, 39.26, 20); //0.00, 0.00, 76.04);
	MoveDynamicObject(LineObj2[1], 495.09, -306.60, 46.72, 20); //0.00, 0.00, 347.94);
	MoveDynamicObject(LineObj2[2], 492.06, -305.94, 46.72, 20); //0.00, 0.00, 347.94);
	MoveDynamicObject(LineObj2[3], 498.06, -307.40, 46.72, 20); //0.00, 0.00, 347.94);
	MoveDynamicObject(LineObj2[4], 475.69, -410.62, 28.20, 20); //0.00, 0.00, 61.01);
	MoveDynamicObject(LineObj2[5], 461.76, -407.31, 28.07, 20); //0.00, 0.00, 267.86);
	MoveDynamicObject(LineObj2[6], 428.41, -588.99, 37.06, 20); //0.00, 0.00, 46.05);
	MoveDynamicObject(LineObj2[7], 420.88, -594.13, 36.60, 20); //0.00, 0.00, 21.49);
	MoveDynamicObject(LineObj2[8], 412.24, -594.03, 36.14, 20); //0.00, 0.00, 336.79);
	MoveDynamicObject(LineObj2[9], 34.37, -658.49, 3.21, 20); //0.00, 0.00, 332.07);
	MoveDynamicObject(LineObj2[10], 28.13, -652.15, 3.21, 20); //0.00, 0.00, 296.75);
	MoveDynamicObject(LineObj2[11], 27.32, -643.47, 3.21, 20); //0.00, 0.00, 253.78);
	MoveDynamicObject(LineObj2[12], -256.69, -271.16, 1.17, 20); //0.00, 0.00, 295.17);
	MoveDynamicObject(LineObj2[13], -299.64, -149.71, 0.86, 20); //0.00, 0.00, 124.75);
	MoveDynamicObject(LineObj2[14], -298.59, -71.51, 1.25, 20); //0.00, 0.00, 99.61);
	MoveDynamicObject(LineObj2[15], -236.61, 133.86, 1.83, 20); //0.00, 0.00, 85.63);
	MoveDynamicObject(LineObj2[16], -207.01, 206.24, 11.12, 20); //0.00, 0.00, 79.51);
	MoveDynamicObject(LineObj2[17], -225.80, 206.35, 10.73, 20); //0.00, 0.00, 230.96);
	MoveDynamicObject(LineObj2[18], -206.32, 245.29, 11.83, 20); //0.00, 0.00, 213.66);
	MoveDynamicObject(LineObj2[19], -212.95, 238.97, 11.83, 20); //0.00, 0.00, 233.07);
	MoveDynamicObject(LineObj2[20], -197.85, 247.03, 11.83, 20); //0.00, 0.00, 169.92);
	MoveDynamicObject(LineObj2[21], -26.40, 166.45, 2.23, 20); //0.00, 0.00, 349.28);
	MoveDynamicObject(LineObj2[22], 231.82, 41.21, 2.11, 20); //0.00, 0.00, 9.58);
	MoveDynamicObject(LineObj2[23], 325.15, 74.36, 3.13, 20); //0.00, 0.00, 40.56);
	MoveDynamicObject(LineObj2[24], 511.41, 224.17, 13.28, 20); //0.00, 0.00, 55.41);
	MoveDynamicObject(LineObj2[25], 620.00, 317.28, 19.50, 20); //0.00, 0.00, 170.85);
	MoveDynamicObject(LineObj2[26], 754.38, 331.24, 19.83, 20); //0.00, 0.00, 180.59);
	MoveDynamicObject(LineObj2[27], 754.13, 316.28, 19.91, 20); //0.00, 0.00, 25.14);
	MoveDynamicObject(LineObj2[28], 769.04, 319.09, 19.91, 20); //0.00, 0.00, 21.94);
	MoveDynamicObject(LineObj2[29], 1029.28, 473.46, 19.78, 20); //0.00, 0.00, 85.57);
	MoveDynamicObject(LineObj2[30], 1350.50, 466.03, 19.85, 20); //0.00, 0.00, 143.17);
	MoveDynamicObject(LineObj2[31], 1380.39, 436.61, 19.66, 20); //0.00, 0.00, 62.74);
	MoveDynamicObject(LineObj2[32], 1381.73, 445.35, 19.66, 20); //0.00, 0.00, 100.59);
	MoveDynamicObject(LineObj2[33], 1377.34, 453.02, 19.66, 20); //0.00, 0.00, 139.43);
	MoveDynamicObject(LineObj2[34], 1331.53, 361.91, 19.20, 20); //0.00, 0.00, 263.33);
	MoveDynamicObject(LineObj2[35], 1311.30, 316.35, 19.10, 20); //0.00, 0.00, 264.38);
	MoveDynamicObject(LineObj2[36], 1324.59, 310.78, 19.25, 20); //0.00, 0.00, 47.65);
	MoveDynamicObject(LineObj2[37], 1296.31, 246.40, 19.14, 20); //0.00, 0.00, 46.53);
	MoveDynamicObject(LineObj2[38], 1282.91, 252.33, 19.10, 20); //0.00, 0.00, 265.80);
	MoveDynamicObject(LineObj2[39], 1254.35, 188.20, 19.11, 20); //0.00, 0.00, 267.57);
	MoveDynamicObject(LineObj2[40], 1267.79, 182.88, 19.30, 20); //0.00, 0.00, 47.07);
	MoveDynamicObject(LineObj2[41], 1231.08, 105.40, 20.70, 20); //0.00, 0.00, 277.61);
	MoveDynamicObject(LineObj2[42], 1230.19, 75.26, 22.03, 20); //0.00, 0.00, 277.61);
	MoveDynamicObject(LineObj2[43], 1301.92, -85.60, 36.26, 20); //0.00, 0.00, 40.76);
	MoveDynamicObject(LineObj2[44], 1305.67, -77.85, 36.26, 20); //0.00, 0.00, 87.51);
	MoveDynamicObject(LineObj2[45], 1303.61, -69.08, 36.26, 20); //0.00, 0.00, 118.41);
	MoveDynamicObject(LineObj2[46], 1242.97, -134.60, 38.75, 20); //0.00, 0.00, 21.21);
	MoveDynamicObject(LineObj2[47], 1233.21, -122.87, 38.77, 20); //0.00, 0.00, 227.92);
	MoveDynamicObject(LineObj2[48], 1183.07, -172.08, 40.29, 20); //0.00, 0.00, 8.42);
	MoveDynamicObject(LineObj2[49], 530.89, -134.12, 37.55, 20); //0.00, 0.00, 184.21);
	MoveDynamicObject(LineObj2[50], 522.92, -137.82, 37.55, 20); //0.00, 0.00, 225.61);
	MoveDynamicObject(LineObj2[51], 518.88, -145.76, 37.55, 20); //0.00, 0.00, 260.07);
	MoveDynamicObject(LineObj2[52], 752.47, -156.06, 18.51, 20); //0.00, 0.00, 183.58);
	MoveDynamicObject(LineObj2[53], 737.81, -168.84, 19.43, 20); //0.00, 0.00, 344.08);
	return 1;
}

public LineOff2()
{
	MoveDynamicObject(LineObj2[0], 494.77, -307.58, 24.26, 20); //0.00, 0.00, 76.04);
	MoveDynamicObject(LineObj2[1], 495.09, -306.60, 31.72, 20); //0.00, 0.00, 347.94);
	MoveDynamicObject(LineObj2[2], 492.06, -305.94, 31.72, 20); //0.00, 0.00, 347.94);
	MoveDynamicObject(LineObj2[3], 498.06, -307.40, 31.72, 20); //0.00, 0.00, 347.94);
	MoveDynamicObject(LineObj2[4], 475.69, -410.62, 13.2, 20); //0.00, 0.00, 61.01);
	MoveDynamicObject(LineObj2[5], 461.76, -407.31, 13.07, 20); //0.00, 0.00, 267.86);
	MoveDynamicObject(LineObj2[6], 428.41, -588.99, 22.06, 20); //0.00, 0.00, 46.05);
	MoveDynamicObject(LineObj2[7], 420.88, -594.13, 21.6, 20); //0.00, 0.00, 21.49);
	MoveDynamicObject(LineObj2[8], 412.24, -594.03, 21.14, 20); //0.00, 0.00, 336.79);
	MoveDynamicObject(LineObj2[9], 34.37, -658.49, -11.79, 20); //0.00, 0.00, 332.07);
	MoveDynamicObject(LineObj2[10], 28.13, -652.15, -11.79, 20); //0.00, 0.00, 296.75);
	MoveDynamicObject(LineObj2[11], 27.32, -643.47, -11.79, 20); //0.00, 0.00, 253.78);
	MoveDynamicObject(LineObj2[12], -256.69, -271.16, -13.83, 20); //0.00, 0.00, 295.17);
	MoveDynamicObject(LineObj2[13], -299.64, -149.71, -14.14, 20); //0.00, 0.00, 124.75);
	MoveDynamicObject(LineObj2[14], -298.59, -71.51, -13.75, 20); //0.00, 0.00, 99.61);
	MoveDynamicObject(LineObj2[15], -236.61, 133.86, -13.17, 20); //0.00, 0.00, 85.63);
	MoveDynamicObject(LineObj2[16], -207.01, 206.24, -3.88, 20); //0.00, 0.00, 79.51);
	MoveDynamicObject(LineObj2[17], -225.80, 206.35, -4.27, 20); //0.00, 0.00, 230.96);
	MoveDynamicObject(LineObj2[18], -206.32, 245.29, -3.17, 20); //0.00, 0.00, 213.66);
	MoveDynamicObject(LineObj2[19], -212.95, 238.97, -3.17, 20); //0.00, 0.00, 233.07);
	MoveDynamicObject(LineObj2[20], -197.85, 247.03, -3.17, 20); //0.00, 0.00, 169.92);
	MoveDynamicObject(LineObj2[21], -26.40, 166.45, -12.77, 20); //0.00, 0.00, 349.28);
	MoveDynamicObject(LineObj2[22], 231.82, 41.21, -12.89, 20); //0.00, 0.00, 9.58);
	MoveDynamicObject(LineObj2[23], 325.15, 74.36, -11.87, 20); //0.00, 0.00, 40.56);
	MoveDynamicObject(LineObj2[24], 511.41, 224.17, -1.72, 20); //0.00, 0.00, 55.41);
	MoveDynamicObject(LineObj2[25], 620.00, 317.28, 4.5, 20); //0.00, 0.00, 170.85);
	MoveDynamicObject(LineObj2[26], 754.38, 331.24, 4.83, 20); //0.00, 0.00, 180.59);
	MoveDynamicObject(LineObj2[27], 754.13, 316.28, 4.91, 20); //0.00, 0.00, 25.14);
	MoveDynamicObject(LineObj2[28], 769.04, 319.09, 4.91, 20); //0.00, 0.00, 21.94);
	MoveDynamicObject(LineObj2[29], 1029.28, 473.46, 4.78, 20); //0.00, 0.00, 85.57);
	MoveDynamicObject(LineObj2[30], 1350.50, 466.03, 4.85, 20); //0.00, 0.00, 143.17);
	MoveDynamicObject(LineObj2[31], 1380.39, 436.61, 4.66, 20); //0.00, 0.00, 62.74);
	MoveDynamicObject(LineObj2[32], 1381.73, 445.35, 4.66, 20); //0.00, 0.00, 100.59);
	MoveDynamicObject(LineObj2[33], 1377.34, 453.02, 4.66, 20); //0.00, 0.00, 139.43);
	MoveDynamicObject(LineObj2[34], 1331.53, 361.91, 4.2, 20); //0.00, 0.00, 263.33);
	MoveDynamicObject(LineObj2[35], 1311.30, 316.35, 4.1, 20); //0.00, 0.00, 264.38);
	MoveDynamicObject(LineObj2[36], 1324.59, 310.78, 4.25, 20); //0.00, 0.00, 47.65);
	MoveDynamicObject(LineObj2[37], 1296.31, 246.40, 4.14, 20); //0.00, 0.00, 46.53);
	MoveDynamicObject(LineObj2[38], 1282.91, 252.33, 4.1, 20); //0.00, 0.00, 265.80);
	MoveDynamicObject(LineObj2[39], 1254.35, 188.20, 4.11, 20); //0.00, 0.00, 267.57);
	MoveDynamicObject(LineObj2[40], 1267.79, 182.88, 4.3, 20); //0.00, 0.00, 47.07);
	MoveDynamicObject(LineObj2[41], 1231.08, 105.40, 5.7, 20); //0.00, 0.00, 277.61);
	MoveDynamicObject(LineObj2[42], 1230.19, 75.26, 7.03, 20); //0.00, 0.00, 277.61);
	MoveDynamicObject(LineObj2[43], 1301.92, -85.60, 21.26, 20); //0.00, 0.00, 40.76);
	MoveDynamicObject(LineObj2[44], 1305.67, -77.85, 21.26, 20); //0.00, 0.00, 87.51);
	MoveDynamicObject(LineObj2[45], 1303.61, -69.08, 21.26, 20); //0.00, 0.00, 118.41);
	MoveDynamicObject(LineObj2[46], 1242.97, -134.60, 23.75, 20); //0.00, 0.00, 21.21);
	MoveDynamicObject(LineObj2[47], 1233.21, -122.87, 23.77, 20); //0.00, 0.00, 227.92);
	MoveDynamicObject(LineObj2[48], 1183.07, -172.08, 25.29, 20); //0.00, 0.00, 8.42);
	MoveDynamicObject(LineObj2[49], 530.89, -134.12, 22.55, 20); //0.00, 0.00, 184.21);
	MoveDynamicObject(LineObj2[50], 522.92, -137.82, 22.55, 20); //0.00, 0.00, 225.61);
	MoveDynamicObject(LineObj2[51], 518.88, -145.76, 22.55, 20); //0.00, 0.00, 260.07);
	MoveDynamicObject(LineObj2[52], 752.47, -156.06, 3.51, 20); //0.00, 0.00, 183.58);
	MoveDynamicObject(LineObj2[53], 737.81, -168.84, 4.43, 20); //0.00, 0.00, 344.08);
	return 1;
}

public LineOn3()
{
	MoveDynamicObject(LineObj3[0], -2421.08, -11.79, 34.67, 20); //0.00, 0.00, 271.14);
	MoveDynamicObject(LineObj3[1], -2421.01, -10.80, 42.15, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj3[2], -2417.99, -10.84, 42.15, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj3[3], -2424.07, -10.95, 42.15, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj3[4], -2414.12, -69.62, 35.05, 20); //0.00, 0.00, 68.19);
	MoveDynamicObject(LineObj3[5], -2428.36, -69.73, 34.98, 20); //0.00, 0.00, 291.96);
	MoveDynamicObject(LineObj3[6], -2501.12, -203.59, 25.16, 20); //0.00, 0.00, 198.43);
	MoveDynamicObject(LineObj3[7], -2603.68, -203.19, 3.90, 20); //0.00, 0.00, 199.44);
	MoveDynamicObject(LineObj3[8], -2655.14, -203.29, 3.95, 20); //0.00, 0.00, 200.73);
	MoveDynamicObject(LineObj3[9], -2655.00, -217.27, 3.93, 20); //0.00, 0.00, 341.23);
	MoveDynamicObject(LineObj3[10], -2706.01, -203.48, 3.88, 20); //0.00, 0.00, 196.91);
	MoveDynamicObject(LineObj3[11], -2758.22, -203.52, 6.73, 20); //0.00, 0.00, 196.13);
	MoveDynamicObject(LineObj3[12], -2803.06, -218.78, 6.83, 20); //0.00, 0.00, 350.77);
	MoveDynamicObject(LineObj3[13], -2811.27, -215.07, 6.83, 20); //0.00, 0.00, 320.25);
	MoveDynamicObject(LineObj3[14], -2814.64, -207.43, 6.83, 20); //0.00, 0.00, 267.24);
	MoveDynamicObject(LineObj3[15], -2801.83, -70.45, 6.73, 20); //0.00, 0.00, 112.02);
	MoveDynamicObject(LineObj3[16], -2801.80, -6.27, 6.83, 20); //0.00, 0.00, 117.34);
	MoveDynamicObject(LineObj3[17], -2801.64, 39.50, 6.74, 20); //0.00, 0.00, 115.95);
	MoveDynamicObject(LineObj3[18], -2801.82, 157.63, 6.74, 20); //0.00, 0.00, 114.09);
	MoveDynamicObject(LineObj3[19], -2815.48, 282.21, 6.88, 20); //0.00, 0.00, 253.22);
	MoveDynamicObject(LineObj3[20], -2810.66, 289.76, 6.88, 20); //0.00, 0.00, 221.78);
	MoveDynamicObject(LineObj3[21], -2802.54, 292.90, 6.88, 20); //0.00, 0.00, 180.33);
	MoveDynamicObject(LineObj3[22], -2706.42, 295.33, 3.83, 20); //0.00, 0.00, 162.98);
	MoveDynamicObject(LineObj3[23], -2706.97, 281.25, 4.03, 20); //0.00, 0.00, 20.49);
	MoveDynamicObject(LineObj3[24], -2666.05, 281.14, 3.95, 20); //0.00, 0.00, 22.87);
	MoveDynamicObject(LineObj3[25], -2646.58, 281.10, 3.95, 20); //0.00, 0.00, 23.12);
	MoveDynamicObject(LineObj3[26], -2599.48, 348.48, 3.87, 20); //0.00, 0.00, 114.72);
	MoveDynamicObject(LineObj3[27], -2613.86, 328.00, 3.88, 20); //0.00, 0.00, 242.26);
	MoveDynamicObject(LineObj3[28], -2599.32, 384.99, 8.47, 20); //0.00, -9.00, 118.00);
	MoveDynamicObject(LineObj3[29], -2613.90, 468.25, 14.17, 20); //0.00, 0.00, 251.45);
	MoveDynamicObject(LineObj3[30], -2599.51, 468.07, 14.15, 20); //0.00, 0.00, 111.96);
	MoveDynamicObject(LineObj3[31], -2599.28, 573.41, 14.21, 20); //0.00, 0.00, 180.68);
	MoveDynamicObject(LineObj3[32], -2607.77, 570.66, 14.21, 20); //0.00, 0.00, 215.28);
	MoveDynamicObject(LineObj3[33], -2613.33, 563.63, 14.21, 20); //0.00, 0.00, 247.83);
	MoveDynamicObject(LineObj3[34], -2566.64, 575.62, 14.15, 20); //0.00, 0.00, 158.51);
	MoveDynamicObject(LineObj3[35], -2526.90, 575.76, 14.15, 20); //0.00, 0.00, 156.16);
	MoveDynamicObject(LineObj3[36], -2526.76, 556.07, 14.15, 20); //0.00, 0.00, 24.08);
	MoveDynamicObject(LineObj3[37], -2386.91, 555.96, 24.43, 20); //0.00, 0.00, 24.03);
	MoveDynamicObject(LineObj3[38], -2387.21, 575.58, 24.43, 20); //0.00, 0.00, 161.28);
	MoveDynamicObject(LineObj3[39], -2269.61, 575.49, 34.71, 20); //0.00, 0.00, 158.34);
	MoveDynamicObject(LineObj3[40], -2265.55, 556.11, 34.80, 20); //0.00, 0.00, 26.96);
	MoveDynamicObject(LineObj3[41], -2261.06, 575.73, 34.71, 20); //0.00, 0.00, 158.34);
	MoveDynamicObject(LineObj3[42], -2251.69, 575.65, 34.71, 20); //0.00, 0.00, 158.34);
	MoveDynamicObject(LineObj3[43], -2256.73, 556.16, 34.80, 20); //0.00, 0.00, 26.96);
	MoveDynamicObject(LineObj3[44], -2221.18, 558.44, 34.71, 20); //0.00, 0.00, 84.73);
	MoveDynamicObject(LineObj3[45], -2222.69, 567.31, 34.71, 20); //0.00, 0.00, 114.54);
	MoveDynamicObject(LineObj3[46], -2228.89, 573.47, 34.71, 20); //0.00, 0.00, 155.92);
	MoveDynamicObject(LineObj3[47], -2219.01, 508.16, 34.61, 20); //0.00, 0.00, 63.08);
	MoveDynamicObject(LineObj3[48], -2234.06, 508.71, 34.63, 20); //0.00, 0.00, 291.71);
	MoveDynamicObject(LineObj3[49], -2287.81, 390.91, 34.43, 20); //0.00, 0.00, 319.05);
	MoveDynamicObject(LineObj3[50], -2279.60, 387.65, 34.43, 20); //0.00, 0.00, 357.63);
	MoveDynamicObject(LineObj3[51], -2270.90, 389.57, 34.43, 20); //0.00, 0.00, 27.50);
	MoveDynamicObject(LineObj3[52], -2318.85, 417.08, 34.82, 20); //0.00, 0.00, 225.36);
	MoveDynamicObject(LineObj3[53], -2310.97, 421.34, 34.82, 20); //0.00, 0.00, 191.94);
	MoveDynamicObject(LineObj3[54], -2302.17, 420.31, 34.82, 20); //0.00, 0.00, 154.99);
	MoveDynamicObject(LineObj3[55], -2362.75, 375.43, 34.69, 20); //0.00, 0.00, 247.64);
	MoveDynamicObject(LineObj3[56], -2387.65, 348.57, 34.69, 20); //0.00, 0.00, 257.66);
	MoveDynamicObject(LineObj3[57], -2416.36, 298.36, 34.69, 20); //0.00, 0.00, 271.08);
	MoveDynamicObject(LineObj3[58], -2425.84, 179.54, 34.71, 20); //0.00, 0.00, 286.19);
	MoveDynamicObject(LineObj3[59], -2428.32, 136.97, 34.71, 20); //0.00, 0.00, 292.34);
	MoveDynamicObject(LineObj3[60], -2428.27, 79.39, 34.71, 20); //0.00, 0.00, 293.47);
	MoveDynamicObject(LineObj3[61], -2428.32, 39.46, 34.71, 20); //0.00, 0.00, 293.51);
	return 1;
}

public LineOff3()
{
	MoveDynamicObject(LineObj3[0], -2421.08, -11.79, 19.67, 20); //0.00, 0.00, 271.14);
	MoveDynamicObject(LineObj3[1], -2421.01, -10.80, 27.15, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj3[2], -2417.99, -10.84, 27.15, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj3[3], -2424.07, -10.95, 27.15, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj3[4], -2414.12, -69.62, 20.05, 20); //0.00, 0.00, 68.19);
	MoveDynamicObject(LineObj3[5], -2428.36, -69.73, 19.98, 20); //0.00, 0.00, 291.96);
	MoveDynamicObject(LineObj3[6], -2501.12, -203.59, 10.16, 20); //0.00, 0.00, 198.43);
	MoveDynamicObject(LineObj3[7], -2603.68, -203.19, -11.1, 20); //0.00, 0.00, 199.44);
	MoveDynamicObject(LineObj3[8], -2655.14, -203.29, -11.05, 20); //0.00, 0.00, 200.73);
	MoveDynamicObject(LineObj3[9], -2655.00, -217.27, -11.07, 20); //0.00, 0.00, 341.23);
	MoveDynamicObject(LineObj3[10], -2706.01, -203.48, -11.12, 20); //0.00, 0.00, 196.91);
	MoveDynamicObject(LineObj3[11], -2758.22, -203.52, -8.27, 20); //0.00, 0.00, 196.13);
	MoveDynamicObject(LineObj3[12], -2803.06, -218.78, -8.17, 20); //0.00, 0.00, 350.77);
	MoveDynamicObject(LineObj3[13], -2811.27, -215.07, -8.17, 20); //0.00, 0.00, 320.25);
	MoveDynamicObject(LineObj3[14], -2814.64, -207.43, -8.17, 20); //0.00, 0.00, 267.24);
	MoveDynamicObject(LineObj3[15], -2801.83, -70.45, -8.27, 20); //0.00, 0.00, 112.02);
	MoveDynamicObject(LineObj3[16], -2801.80, -6.27, -8.17, 20); //0.00, 0.00, 117.34);
	MoveDynamicObject(LineObj3[17], -2801.64, 39.50, -8.26, 20); //0.00, 0.00, 115.95);
	MoveDynamicObject(LineObj3[18], -2801.82, 157.63, -8.26, 20); //0.00, 0.00, 114.09);
	MoveDynamicObject(LineObj3[19], -2815.48, 282.21, -8.12, 20); //0.00, 0.00, 253.22);
	MoveDynamicObject(LineObj3[20], -2810.66, 289.76, -8.12, 20); //0.00, 0.00, 221.78);
	MoveDynamicObject(LineObj3[21], -2802.54, 292.90, -8.12, 20); //0.00, 0.00, 180.33);
	MoveDynamicObject(LineObj3[22], -2706.42, 295.33, -11.17, 20); //0.00, 0.00, 162.98);
	MoveDynamicObject(LineObj3[23], -2706.97, 281.25, -10.97, 20); //0.00, 0.00, 20.49);
	MoveDynamicObject(LineObj3[24], -2666.05, 281.14, -11.05, 20); //0.00, 0.00, 22.87);
	MoveDynamicObject(LineObj3[25], -2646.58, 281.10, -11.05, 20); //0.00, 0.00, 23.12);
	MoveDynamicObject(LineObj3[26], -2599.48, 348.48, -11.13, 20); //0.00, 0.00, 114.72);
	MoveDynamicObject(LineObj3[27], -2613.86, 328.00, -11.12, 20); //0.00, 0.00, 242.26);
	MoveDynamicObject(LineObj3[28], -2599.32, 384.99, -6.53, 20); //0.00, -9.00, 118.00);
	MoveDynamicObject(LineObj3[29], -2613.90, 468.25, -0.83, 20); //0.00, 0.00, 251.45);
	MoveDynamicObject(LineObj3[30], -2599.51, 468.07, -0.85, 20); //0.00, 0.00, 111.96);
	MoveDynamicObject(LineObj3[31], -2599.28, 573.41, -0.79, 20); //0.00, 0.00, 180.68);
	MoveDynamicObject(LineObj3[32], -2607.77, 570.66, -0.79, 20); //0.00, 0.00, 215.28);
	MoveDynamicObject(LineObj3[33], -2613.33, 563.63, -0.79, 20); //0.00, 0.00, 247.83);
	MoveDynamicObject(LineObj3[34], -2566.64, 575.62, -0.85, 20); //0.00, 0.00, 158.51);
	MoveDynamicObject(LineObj3[35], -2526.90, 575.76, -0.85, 20); //0.00, 0.00, 156.16);
	MoveDynamicObject(LineObj3[36], -2526.76, 556.07, -0.85, 20); //0.00, 0.00, 24.08);
	MoveDynamicObject(LineObj3[37], -2386.91, 555.96, 9.43, 20); //0.00, 0.00, 24.03);
	MoveDynamicObject(LineObj3[38], -2387.21, 575.58, 9.43, 20); //0.00, 0.00, 161.28);
	MoveDynamicObject(LineObj3[39], -2269.61, 575.49, 19.71, 20); //0.00, 0.00, 158.34);
	MoveDynamicObject(LineObj3[40], -2265.55, 556.11, 19.8, 20); //0.00, 0.00, 26.96);
	MoveDynamicObject(LineObj3[41], -2261.06, 575.73, 19.71, 20); //0.00, 0.00, 158.34);
	MoveDynamicObject(LineObj3[42], -2251.69, 575.65, 19.71, 20); //0.00, 0.00, 158.34);
	MoveDynamicObject(LineObj3[43], -2256.73, 556.16, 19.8, 20); //0.00, 0.00, 26.96);
	MoveDynamicObject(LineObj3[44], -2221.18, 558.44, 19.71, 20); //0.00, 0.00, 84.73);
	MoveDynamicObject(LineObj3[45], -2222.69, 567.31, 19.71, 20); //0.00, 0.00, 114.54);
	MoveDynamicObject(LineObj3[46], -2228.89, 573.47, 19.71, 20); //0.00, 0.00, 155.92);
	MoveDynamicObject(LineObj3[47], -2219.01, 508.16, 19.61, 20); //0.00, 0.00, 63.08);
	MoveDynamicObject(LineObj3[48], -2234.06, 508.71, 19.63, 20); //0.00, 0.00, 291.71);
	MoveDynamicObject(LineObj3[49], -2287.81, 390.91, 19.43, 20); //0.00, 0.00, 319.05);
	MoveDynamicObject(LineObj3[50], -2279.60, 387.65, 19.43, 20); //0.00, 0.00, 357.63);
	MoveDynamicObject(LineObj3[51], -2270.90, 389.57, 19.43, 20); //0.00, 0.00, 27.50);
	MoveDynamicObject(LineObj3[52], -2318.85, 417.08, 19.82, 20); //0.00, 0.00, 225.36);
	MoveDynamicObject(LineObj3[53], -2310.97, 421.34, 19.82, 20); //0.00, 0.00, 191.94);
	MoveDynamicObject(LineObj3[54], -2302.17, 420.31, 19.82, 20); //0.00, 0.00, 154.99);
	MoveDynamicObject(LineObj3[55], -2362.75, 375.43, 19.69, 20); //0.00, 0.00, 247.64);
	MoveDynamicObject(LineObj3[56], -2387.65, 348.57, 19.69, 20); //0.00, 0.00, 257.66);
	MoveDynamicObject(LineObj3[57], -2416.36, 298.36, 19.69, 20); //0.00, 0.00, 271.08);
	MoveDynamicObject(LineObj3[58], -2425.84, 179.54, 19.71, 20); //0.00, 0.00, 286.19);
	MoveDynamicObject(LineObj3[59], -2428.32, 136.97, 19.71, 20); //0.00, 0.00, 292.34);
	MoveDynamicObject(LineObj3[60], -2428.27, 79.39, 19.71, 20); //0.00, 0.00, 293.47);
	MoveDynamicObject(LineObj3[61], -2428.32, 39.46, 19.71, 20); //0.00, 0.00, 293.51);
	return 1;
}

public LineOn4()
{
	MoveDynamicObject(LineObj4[0], -1403.67, 2290.17, 54.40, 20); //0.00, 0.00, 295.21);
	MoveDynamicObject(LineObj4[1], -1404.00, 2291.06, 61.84, 20); //0.00, 0.00, 24.84);
	MoveDynamicObject(LineObj4[2], -1401.29, 2292.32, 61.84, 20); //0.00, 0.00, 24.84);
	MoveDynamicObject(LineObj4[3], -1406.74, 2289.74, 61.84, 20); //0.00, 0.00, 24.84);
	MoveDynamicObject(LineObj4[4], -1360.53, 2172.21, 48.32, 20); //0.00, 0.00, 21.36);
	MoveDynamicObject(LineObj4[5], -1352.65, 2176.88, 48.62, 20); //0.00, 0.00, 39.59);
	MoveDynamicObject(LineObj4[6], -1348.24, 2184.43, 49.03, 20); //0.00, 0.00, 79.86);
	MoveDynamicObject(LineObj4[7], -1488.85, 2112.11, 45.48, 20); //0.00, 0.00, 291.38);
	MoveDynamicObject(LineObj4[8], -1482.76, 2106.31, 45.48, 20); //0.00, 0.00, 341.38);
	MoveDynamicObject(LineObj4[9], -1473.83, 2105.89, 45.60, 20); //0.00, 0.00, 13.09);
	MoveDynamicObject(LineObj4[10], -1530.23, 2367.74, 46.22, 20); //0.00, 0.00, 151.93);
	MoveDynamicObject(LineObj4[11], -1524.60, 2361.20, 46.72, 20); //0.00, 0.00, 110.82);
	MoveDynamicObject(LineObj4[12], -1538.64, 2368.86, 45.71, 20); //0.00, 0.00, 194.92);
	MoveDynamicObject(LineObj4[13], -1635.95, 2382.55, 48.92, 20); //0.00, 12.00, 223.78);
	MoveDynamicObject(LineObj4[14], -1628.77, 2388.09, 50.55, 20); //0.00, 9.00, 211.96);
	MoveDynamicObject(LineObj4[15], -1611.41, 2388.58, 51.98, 20); //0.00, 0.00, 154.59);
	MoveDynamicObject(LineObj4[16], -1620.20, 2390.50, 51.68, 20); //0.00, 3.00, 181.00);
	MoveDynamicObject(LineObj4[17], -1684.92, 2334.25, 31.71, 20); //0.00, 9.00, 255.04);
	MoveDynamicObject(LineObj4[18], -1816.25, 2128.67, 7.57, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj4[19], -1825.23, 2130.28, 7.57, 20); //0.00, 0.00, 340.36);
	MoveDynamicObject(LineObj4[20], -1831.45, 2136.07, 7.47, 20); //0.00, 0.00, 294.00);
	MoveDynamicObject(LineObj4[21], -2001.18, 2276.40, 18.10, 20); //0.00, 0.00, 247.40);
	MoveDynamicObject(LineObj4[22], -1816.57, 2685.47, 55.21, 20); //0.00, 4.00, 209.85);
	MoveDynamicObject(LineObj4[23], -1767.45, 2707.07, 59.09, 20); //0.00, 0.00, 53.80);
	MoveDynamicObject(LineObj4[24], -1634.58, 2715.81, 57.36, 20); //0.00, 0.00, 27.92);
	MoveDynamicObject(LineObj4[25], -1339.70, 2635.68, 50.55, 20); //0.00, 0.00, 78.47);
	MoveDynamicObject(LineObj4[26], -1341.16, 2653.71, 50.75, 20); //0.00, 0.00, 107.72);
	MoveDynamicObject(LineObj4[27], -1339.25, 2644.76, 50.24, 20); //0.00, 0.00, 96.43);
	MoveDynamicObject(LineObj4[28], -1344.32, 2628.22, 51.25, 20); //0.00, 4.00, 39.55);
	MoveDynamicObject(LineObj4[29], -1386.67, 2601.23, 54.99, 20); //0.00, -5.00, 258.81);
	MoveDynamicObject(LineObj4[30], -1442.20, 2367.98, 52.75, 20); //0.00, 0.00, 307.28);
	return 1;
}

public LineOff4()
{
	MoveDynamicObject(LineObj4[0], -1403.67, 2290.17, 39.4, 20); //0.00, 0.00, 295.21);
	MoveDynamicObject(LineObj4[1], -1404.00, 2291.06, 46.84, 20); //0.00, 0.00, 24.84);
	MoveDynamicObject(LineObj4[2], -1401.29, 2292.32, 46.84, 20); //0.00, 0.00, 24.84);
	MoveDynamicObject(LineObj4[3], -1406.74, 2289.74, 46.84, 20); //0.00, 0.00, 24.84);
	MoveDynamicObject(LineObj4[4], -1360.53, 2172.21, 33.32, 20); //0.00, 0.00, 21.36);
	MoveDynamicObject(LineObj4[5], -1352.65, 2176.88, 33.62, 20); //0.00, 0.00, 39.59);
	MoveDynamicObject(LineObj4[6], -1348.24, 2184.43, 34.03, 20); //0.00, 0.00, 79.86);
	MoveDynamicObject(LineObj4[7], -1488.85, 2112.11, 30.48, 20); //0.00, 0.00, 291.38);
	MoveDynamicObject(LineObj4[8], -1482.76, 2106.31, 30.48, 20); //0.00, 0.00, 341.38);
	MoveDynamicObject(LineObj4[9], -1473.83, 2105.89, 30.6, 20); //0.00, 0.00, 13.09);
	MoveDynamicObject(LineObj4[10], -1530.23, 2367.74, 31.22, 20); //0.00, 0.00, 151.93);
	MoveDynamicObject(LineObj4[11], -1524.60, 2361.20, 31.72, 20); //0.00, 0.00, 110.82);
	MoveDynamicObject(LineObj4[12], -1538.64, 2368.86, 30.71, 20); //0.00, 0.00, 194.92);
	MoveDynamicObject(LineObj4[13], -1635.95, 2382.55, 33.92, 20); //0.00, 12.00, 223.78);
	MoveDynamicObject(LineObj4[14], -1628.77, 2388.09, 35.55, 20); //0.00, 9.00, 211.96);
	MoveDynamicObject(LineObj4[15], -1611.41, 2388.58, 36.98, 20); //0.00, 0.00, 154.59);
	MoveDynamicObject(LineObj4[16], -1620.20, 2390.50, 36.68, 20); //0.00, 3.00, 181.00);
	MoveDynamicObject(LineObj4[17], -1684.92, 2334.25, 16.71, 20); //0.00, 9.00, 255.04);
	MoveDynamicObject(LineObj4[18], -1816.25, 2128.67, -7.43, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj4[19], -1825.23, 2130.28, -7.43, 20); //0.00, 0.00, 340.36);
	MoveDynamicObject(LineObj4[20], -1831.45, 2136.07, -7.53, 20); //0.00, 0.00, 294.00);
	MoveDynamicObject(LineObj4[21], -2001.18, 2276.40, 3.1, 20); //0.00, 0.00, 247.40);
	MoveDynamicObject(LineObj4[22], -1816.57, 2685.47, 40.21, 20); //0.00, 4.00, 209.85);
	MoveDynamicObject(LineObj4[23], -1767.45, 2707.07, 44.09, 20); //0.00, 0.00, 53.80);
	MoveDynamicObject(LineObj4[24], -1634.58, 2715.81, 42.36, 20); //0.00, 0.00, 27.92);
	MoveDynamicObject(LineObj4[25], -1339.70, 2635.68, 35.55, 20); //0.00, 0.00, 78.47);
	MoveDynamicObject(LineObj4[26], -1341.16, 2653.71, 35.75, 20); //0.00, 0.00, 107.72);
	MoveDynamicObject(LineObj4[27], -1339.25, 2644.76, 35.24, 20); //0.00, 0.00, 96.43);
	MoveDynamicObject(LineObj4[28], -1344.32, 2628.22, 36.25, 20); //0.00, 4.00, 39.55);
	MoveDynamicObject(LineObj4[29], -1386.67, 2601.23, 39.99, 20); //0.00, -5.00, 258.81);
	MoveDynamicObject(LineObj4[30], -1442.20, 2367.98, 37.75, 20); //0.00, 0.00, 307.28);
	return 1;
}

public LineOn5()
{
	MoveDynamicObject(LineObj5[0], 2708.59, 1773.22, 6.03, 20); //0.00, 0.00, 268.86);
	MoveDynamicObject(LineObj5[1], 2708.49, 1772.32, 13.52, 20); //0.00, 0.00, 179.83);
	MoveDynamicObject(LineObj5[2], 2705.55, 1772.35, 13.52, 20); //0.00, 0.00, 179.83);
	MoveDynamicObject(LineObj5[3], 2711.56, 1772.25, 13.52, 20); //0.00, 0.00, 179.83);
	MoveDynamicObject(LineObj5[4], 2717.29, 1894.15, 6.41, 20); //0.00, 0.00, 113.82);
	MoveDynamicObject(LineObj5[5], 2717.30, 1913.23, 6.41, 20); //0.00, 0.00, 113.82);
	MoveDynamicObject(LineObj5[6], 2698.83, 2007.06, 6.47, 20); //0.00, 0.00, 128.51);
	MoveDynamicObject(LineObj5[7], 2704.51, 1999.91, 6.47, 20); //0.00, 0.00, 128.51);
	MoveDynamicObject(LineObj5[8], 2710.29, 1992.66, 6.47, 20); //0.00, 0.00, 128.51);
	MoveDynamicObject(LineObj5[9], 2715.01, 1984.79, 6.47, 20); //0.00, 0.00, 113.44);
	MoveDynamicObject(LineObj5[10], 2642.83, 2116.34, 10.52, 20); //0.00, 0.00, 127.35);
	MoveDynamicObject(LineObj5[11], 2635.33, 2120.28, 10.52, 20); //0.00, 0.00, 177.58);
	MoveDynamicObject(LineObj5[12], 2626.09, 2120.55, 10.52, 20); //0.00, 0.00, 179.57);
	MoveDynamicObject(LineObj5[13], 2647.53, 2108.43, 10.52, 20); //0.00, 0.00, 114.06);
	MoveDynamicObject(LineObj5[14], 2651.10, 2099.93, 10.52, 20); //0.00, 0.00, 111.70);
	MoveDynamicObject(LineObj5[15], 2533.96, 2105.23, 10.53, 20); //0.00, 0.00, 348.27);
	MoveDynamicObject(LineObj5[16], 2525.82, 2109.10, 10.53, 20); //0.00, 0.00, 320.69);
	MoveDynamicObject(LineObj5[17], 2522.17, 2116.69, 10.53, 20); //0.00, 0.00, 269.90);
	MoveDynamicObject(LineObj5[18], 2520.40, 2137.04, 10.37, 20); //0.00, 0.00, 245.15);
	MoveDynamicObject(LineObj5[19], 2519.99, 2149.25, 10.37, 20); //0.00, 0.00, 245.15);
	MoveDynamicObject(LineObj5[20], 2520.41, 2232.62, 10.50, 20); //0.00, 0.00, 252.85);
	MoveDynamicObject(LineObj5[21], 2534.42, 2232.64, 10.53, 20); //0.00, 0.00, 108.32);
	MoveDynamicObject(LineObj5[22], 2530.54, 2415.70, 10.60, 20); //0.00, 0.00, 139.81);
	MoveDynamicObject(LineObj5[23], 2522.31, 2418.94, 10.60, 20); //0.00, 0.00, 177.83);
	MoveDynamicObject(LineObj5[24], 2535.36, 2408.27, 10.60, 20); //0.00, 0.00, 105.97);
	MoveDynamicObject(LineObj5[25], 2426.74, 2406.06, 10.46, 20); //0.00, 0.00, 339.36);
	MoveDynamicObject(LineObj5[26], 2367.13, 2420.44, 10.47, 20); //0.00, 0.00, 198.94);
	MoveDynamicObject(LineObj5[27], 2286.99, 2405.99, 10.37, 20); //0.00, 0.00, 340.20);
	MoveDynamicObject(LineObj5[28], 2225.56, 2416.82, 10.50, 20); //0.00, 0.00, 216.66);
	MoveDynamicObject(LineObj5[29], 2233.86, 2420.48, 10.50, 20); //0.00, 0.00, 190.92);
	MoveDynamicObject(LineObj5[30], 2221.73, 2409.37, 10.50, 20); //0.00, 0.00, 268.95);
	MoveDynamicObject(LineObj5[31], 2225.94, 2364.55, 10.47, 20); //0.00, 0.00, 44.57);
	MoveDynamicObject(LineObj5[32], 2194.23, 2344.01, 10.26, 20); //0.00, 0.00, 254.95);
	MoveDynamicObject(LineObj5[33], 2169.97, 2283.67, 10.27, 20); //0.00, 0.00, 44.13);
	MoveDynamicObject(LineObj5[34], 2150.48, 2280.06, 10.42, 20); //0.00, 0.00, 264.56);
	MoveDynamicObject(LineObj5[35], 2137.66, 2152.76, 10.37, 20); //0.00, 0.00, 291.14);
	MoveDynamicObject(LineObj5[36], 2159.62, 2149.39, 10.37, 20); //0.00, 0.00, 71.25);
	MoveDynamicObject(LineObj5[37], 2159.83, 2136.41, 10.37, 20); //0.00, 0.00, 71.25);
	MoveDynamicObject(LineObj5[38], 2137.55, 2136.72, 10.37, 20); //0.00, 0.00, 291.14);
	MoveDynamicObject(LineObj5[39], 2159.79, 2022.24, 10.37, 20); //0.00, 0.00, 71.58);
	MoveDynamicObject(LineObj5[40], 2160.01, 1893.45, 10.35, 20); //0.00, 0.00, 70.66);
	MoveDynamicObject(LineObj5[41], 2115.02, 1773.32, 10.37, 20); //0.00, 0.00, 45.78);
	MoveDynamicObject(LineObj5[42], 2088.98, 1721.15, 10.37, 20); //0.00, 0.00, 45.78);
	MoveDynamicObject(LineObj5[43], 2092.83, 1774.00, 10.28, 20); //0.00, 0.00, 267.29);
	MoveDynamicObject(LineObj5[44], 2062.88, 1714.34, 10.47, 20); //0.00, 0.00, 268.94);
	MoveDynamicObject(LineObj5[45], 2057.47, 1646.01, 10.36, 20); //0.00, 0.00, 290.90);
	MoveDynamicObject(LineObj5[46], 2080.56, 1644.63, 10.46, 20); //0.00, 0.00, 66.19);
	MoveDynamicObject(LineObj5[47], 2080.00, 1533.08, 10.26, 20); //0.00, 0.00, 69.17);
	MoveDynamicObject(LineObj5[48], 2057.57, 1534.09, 10.36, 20); //0.00, 0.00, 293.35);
	MoveDynamicObject(LineObj5[49], 2057.53, 1453.05, 10.28, 20); //0.00, 0.00, 293.64);
	MoveDynamicObject(LineObj5[50], 2079.80, 1433.05, 10.35, 20); //0.00, 0.00, 70.36);
	MoveDynamicObject(LineObj5[51], 2079.96, 1372.88, 10.35, 20); //0.00, 0.00, 68.85);
	MoveDynamicObject(LineObj5[52], 2057.31, 1373.59, 10.36, 20); //0.00, 0.00, 293.16);
	MoveDynamicObject(LineObj5[53], 2057.73, 1273.80, 10.26, 20); //0.00, 0.00, 292.23);
	MoveDynamicObject(LineObj5[54], 2057.73, 1193.69, 10.37, 20); //0.00, 0.00, 292.27);
	MoveDynamicObject(LineObj5[55], 2080.19, 1193.32, 10.38, 20); //0.00, 0.00, 67.55);
	MoveDynamicObject(LineObj5[56], 2079.86, 1033.23, 10.47, 20); //0.00, 0.00, 67.62);
	MoveDynamicObject(LineObj5[57], 2079.97, 973.52, 10.47, 20); //0.00, 0.00, 67.62);
	MoveDynamicObject(LineObj5[58], 2057.77, 972.90, 10.16, 20); //0.00, 0.00, 293.87);
	MoveDynamicObject(LineObj5[59], 2078.56, 844.39, 6.41, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj5[60], 2069.67, 846.35, 6.41, 20); //0.00, 0.00, 335.26);
	MoveDynamicObject(LineObj5[61], 2062.03, 851.44, 6.41, 20); //0.00, 0.00, 317.52);
	MoveDynamicObject(LineObj5[62], 2058.35, 859.22, 6.41, 20); //0.00, 0.00, 273.92);
	MoveDynamicObject(LineObj5[63], 2168.78, 842.90, 6.27, 20); //0.00, 0.00, 24.35);
	MoveDynamicObject(LineObj5[64], 2146.52, 861.99, 6.35, 20); //0.00, 0.00, 156.45);
	MoveDynamicObject(LineObj5[65], 2163.58, 861.99, 6.35, 20); //0.00, 0.00, 156.45);
	MoveDynamicObject(LineObj5[66], 2185.17, 842.96, 6.27, 20); //0.00, 0.00, 24.35);
	MoveDynamicObject(LineObj5[67], 2395.40, 862.21, 6.32, 20); //0.00, 0.00, 149.52);
	MoveDynamicObject(LineObj5[68], 2417.13, 862.01, 6.32, 20); //0.00, 0.00, 149.52);
	MoveDynamicObject(LineObj5[69], 2428.87, 842.76, 6.30, 20); //0.00, 0.00, 25.71);
	MoveDynamicObject(LineObj5[70], 2445.13, 842.83, 6.30, 20); //0.00, 0.00, 25.71);
	MoveDynamicObject(LineObj5[71], 2641.51, 931.30, 6.29, 20); //0.00, 0.00, 73.03);
	MoveDynamicObject(LineObj5[72], 2652.94, 944.03, 6.29, 20); //0.00, 0.00, 73.03);
	MoveDynamicObject(LineObj5[73], 2663.31, 957.11, 6.29, 20); //0.00, 0.00, 73.03);
	MoveDynamicObject(LineObj5[74], 2718.02, 1234.94, 6.30, 20); //0.00, 0.00, 115.15);
	MoveDynamicObject(LineObj5[75], 2718.31, 1335.31, 6.39, 20); //0.00, 0.00, 115.10);
	MoveDynamicObject(LineObj5[76], 2718.21, 1351.45, 6.39, 20); //0.00, 0.00, 115.10);
	MoveDynamicObject(LineObj5[77], 2717.79, 1250.57, 6.30, 20); //0.00, 0.00, 115.15);
	MoveDynamicObject(LineObj5[78], 2698.77, 1330.69, 6.33, 20); //0.00, 0.00, 249.82);
	MoveDynamicObject(LineObj5[79], 2698.67, 1351.64, 6.33, 20); //0.00, 0.00, 249.82);
	MoveDynamicObject(LineObj5[80], 2699.16, 1580.05, 6.44, 20); //0.00, 0.00, 245.47);
	MoveDynamicObject(LineObj5[81], 2699.57, 1603.06, 6.44, 20); //0.00, 0.00, 245.47);
	MoveDynamicObject(LineObj5[82], 2717.11, 1613.67, 6.39, 20); //0.00, 0.00, 115.79);
	MoveDynamicObject(LineObj5[83], 2717.38, 1630.53, 6.39, 20); //0.00, 0.00, 115.79);
	return 1;
}

public LineOff5()
{
	MoveDynamicObject(LineObj5[0], 2708.59, 1773.22, -8.97, 20); //0.00, 0.00, 268.86);
	MoveDynamicObject(LineObj5[1], 2708.49, 1772.32, -1.48, 20); //0.00, 0.00, 179.83);
	MoveDynamicObject(LineObj5[2], 2705.55, 1772.35, -1.48, 20); //0.00, 0.00, 179.83);
	MoveDynamicObject(LineObj5[3], 2711.56, 1772.25, -1.48, 20); //0.00, 0.00, 179.83);
	MoveDynamicObject(LineObj5[4], 2717.29, 1894.15, -8.59, 20); //0.00, 0.00, 113.82);
	MoveDynamicObject(LineObj5[5], 2717.30, 1913.23, -8.59, 20); //0.00, 0.00, 113.82);
	MoveDynamicObject(LineObj5[6], 2698.83, 2007.06, -8.53, 20); //0.00, 0.00, 128.51);
	MoveDynamicObject(LineObj5[7], 2704.51, 1999.91, -8.53, 20); //0.00, 0.00, 128.51);
	MoveDynamicObject(LineObj5[8], 2710.29, 1992.66, -8.53, 20); //0.00, 0.00, 128.51);
	MoveDynamicObject(LineObj5[9], 2715.01, 1984.79, -8.53, 20); //0.00, 0.00, 113.44);
	MoveDynamicObject(LineObj5[10], 2642.83, 2116.34, -4.48, 20); //0.00, 0.00, 127.35);
	MoveDynamicObject(LineObj5[11], 2635.33, 2120.28, -4.48, 20); //0.00, 0.00, 177.58);
	MoveDynamicObject(LineObj5[12], 2626.09, 2120.55, -4.48, 20); //0.00, 0.00, 179.57);
	MoveDynamicObject(LineObj5[13], 2647.53, 2108.43, -4.48, 20); //0.00, 0.00, 114.06);
	MoveDynamicObject(LineObj5[14], 2651.10, 2099.93, -4.48, 20); //0.00, 0.00, 111.70);
	MoveDynamicObject(LineObj5[15], 2533.96, 2105.23, -4.47, 20); //0.00, 0.00, 348.27);
	MoveDynamicObject(LineObj5[16], 2525.82, 2109.10, -4.47, 20); //0.00, 0.00, 320.69);
	MoveDynamicObject(LineObj5[17], 2522.17, 2116.69, -4.47, 20); //0.00, 0.00, 269.90);
	MoveDynamicObject(LineObj5[18], 2520.40, 2137.04, -4.63, 20); //0.00, 0.00, 245.15);
	MoveDynamicObject(LineObj5[19], 2519.99, 2149.25, -4.63, 20); //0.00, 0.00, 245.15);
	MoveDynamicObject(LineObj5[20], 2520.41, 2232.62, -4.5, 20); //0.00, 0.00, 252.85);
	MoveDynamicObject(LineObj5[21], 2534.42, 2232.64, -4.47, 20); //0.00, 0.00, 108.32);
	MoveDynamicObject(LineObj5[22], 2530.54, 2415.70, -4.4, 20); //0.00, 0.00, 139.81);
	MoveDynamicObject(LineObj5[23], 2522.31, 2418.94, -4.4, 20); //0.00, 0.00, 177.83);
	MoveDynamicObject(LineObj5[24], 2535.36, 2408.27, -4.4, 20); //0.00, 0.00, 105.97);
	MoveDynamicObject(LineObj5[25], 2426.74, 2406.06, -4.54, 20); //0.00, 0.00, 339.36);
	MoveDynamicObject(LineObj5[26], 2367.13, 2420.44, -4.53, 20); //0.00, 0.00, 198.94);
	MoveDynamicObject(LineObj5[27], 2286.99, 2405.99, -4.63, 20); //0.00, 0.00, 340.20);
	MoveDynamicObject(LineObj5[28], 2225.56, 2416.82, -4.5, 20); //0.00, 0.00, 216.66);
	MoveDynamicObject(LineObj5[29], 2233.86, 2420.48, -4.5, 20); //0.00, 0.00, 190.92);
	MoveDynamicObject(LineObj5[30], 2221.73, 2409.37, -4.5, 20); //0.00, 0.00, 268.95);
	MoveDynamicObject(LineObj5[31], 2225.94, 2364.55, -4.53, 20); //0.00, 0.00, 44.57);
	MoveDynamicObject(LineObj5[32], 2194.23, 2344.01, -4.74, 20); //0.00, 0.00, 254.95);
	MoveDynamicObject(LineObj5[33], 2169.97, 2283.67, -4.73, 20); //0.00, 0.00, 44.13);
	MoveDynamicObject(LineObj5[34], 2150.48, 2280.06, -4.58, 20); //0.00, 0.00, 264.56);
	MoveDynamicObject(LineObj5[35], 2137.66, 2152.76, -4.63, 20); //0.00, 0.00, 291.14);
	MoveDynamicObject(LineObj5[36], 2159.62, 2149.39, -4.63, 20); //0.00, 0.00, 71.25);
	MoveDynamicObject(LineObj5[37], 2159.83, 2136.41, -4.63, 20); //0.00, 0.00, 71.25);
	MoveDynamicObject(LineObj5[38], 2137.55, 2136.72, -4.63, 20); //0.00, 0.00, 291.14);
	MoveDynamicObject(LineObj5[39], 2159.79, 2022.24, -4.63, 20); //0.00, 0.00, 71.58);
	MoveDynamicObject(LineObj5[40], 2160.01, 1893.45, -4.65, 20); //0.00, 0.00, 70.66);
	MoveDynamicObject(LineObj5[41], 2115.02, 1773.32, -4.63, 20); //0.00, 0.00, 45.78);
	MoveDynamicObject(LineObj5[42], 2088.98, 1721.15, -4.63, 20); //0.00, 0.00, 45.78);
	MoveDynamicObject(LineObj5[43], 2092.83, 1774.00, -4.72, 20); //0.00, 0.00, 267.29);
	MoveDynamicObject(LineObj5[44], 2062.88, 1714.34, -4.53, 20); //0.00, 0.00, 268.94);
	MoveDynamicObject(LineObj5[45], 2057.47, 1646.01, -4.64, 20); //0.00, 0.00, 290.90);
	MoveDynamicObject(LineObj5[46], 2080.56, 1644.63, -4.54, 20); //0.00, 0.00, 66.19);
	MoveDynamicObject(LineObj5[47], 2080.00, 1533.08, -4.74, 20); //0.00, 0.00, 69.17);
	MoveDynamicObject(LineObj5[48], 2057.57, 1534.09, -4.64, 20); //0.00, 0.00, 293.35);
	MoveDynamicObject(LineObj5[49], 2057.53, 1453.05, -4.72, 20); //0.00, 0.00, 293.64);
	MoveDynamicObject(LineObj5[50], 2079.80, 1433.05, -4.65, 20); //0.00, 0.00, 70.36);
	MoveDynamicObject(LineObj5[51], 2079.96, 1372.88, -4.65, 20); //0.00, 0.00, 68.85);
	MoveDynamicObject(LineObj5[52], 2057.31, 1373.59, -4.64, 20); //0.00, 0.00, 293.16);
	MoveDynamicObject(LineObj5[53], 2057.73, 1273.80, -4.74, 20); //0.00, 0.00, 292.23);
	MoveDynamicObject(LineObj5[54], 2057.73, 1193.69, -4.63, 20); //0.00, 0.00, 292.27);
	MoveDynamicObject(LineObj5[55], 2080.19, 1193.32, -4.62, 20); //0.00, 0.00, 67.55);
	MoveDynamicObject(LineObj5[56], 2079.86, 1033.23, -4.53, 20); //0.00, 0.00, 67.62);
	MoveDynamicObject(LineObj5[57], 2079.97, 973.52, -4.53, 20); //0.00, 0.00, 67.62);
	MoveDynamicObject(LineObj5[58], 2057.77, 972.90, -4.84, 20); //0.00, 0.00, 293.87);
	MoveDynamicObject(LineObj5[59], 2078.56, 844.39, -8.59, 20); //0.00, 0.00, 0.00);
	MoveDynamicObject(LineObj5[60], 2069.67, 846.35, -8.59, 20); //0.00, 0.00, 335.26);
	MoveDynamicObject(LineObj5[61], 2062.03, 851.44, -8.59, 20); //0.00, 0.00, 317.52);
	MoveDynamicObject(LineObj5[62], 2058.35, 859.22, -8.59, 20); //0.00, 0.00, 273.92);
	MoveDynamicObject(LineObj5[63], 2168.78, 842.90, -8.73, 20); //0.00, 0.00, 24.35);
	MoveDynamicObject(LineObj5[64], 2146.52, 861.99, -8.65, 20); //0.00, 0.00, 156.45);
	MoveDynamicObject(LineObj5[65], 2163.58, 861.99, -8.65, 20); //0.00, 0.00, 156.45);
	MoveDynamicObject(LineObj5[66], 2185.17, 842.96, -8.73, 20); //0.00, 0.00, 24.35);
	MoveDynamicObject(LineObj5[67], 2395.40, 862.21, -8.68, 20); //0.00, 0.00, 149.52);
	MoveDynamicObject(LineObj5[68], 2417.13, 862.01, -8.68, 20); //0.00, 0.00, 149.52);
	MoveDynamicObject(LineObj5[69], 2428.87, 842.76, -8.7, 20); //0.00, 0.00, 25.71);
	MoveDynamicObject(LineObj5[70], 2445.13, 842.83, -8.7, 20); //0.00, 0.00, 25.71);
	MoveDynamicObject(LineObj5[71], 2641.51, 931.30, -8.71, 20); //0.00, 0.00, 73.03);
	MoveDynamicObject(LineObj5[72], 2652.94, 944.03, -8.71, 20); //0.00, 0.00, 73.03);
	MoveDynamicObject(LineObj5[73], 2663.31, 957.11, -8.71, 20); //0.00, 0.00, 73.03);
	MoveDynamicObject(LineObj5[74], 2718.02, 1234.94, -8.7, 20); //0.00, 0.00, 115.15);
	MoveDynamicObject(LineObj5[75], 2718.31, 1335.31, -8.61, 20); //0.00, 0.00, 115.10);
	MoveDynamicObject(LineObj5[76], 2718.21, 1351.45, -8.61, 20); //0.00, 0.00, 115.10);
	MoveDynamicObject(LineObj5[77], 2717.79, 1250.57, -8.7, 20); //0.00, 0.00, 115.15);
	MoveDynamicObject(LineObj5[78], 2698.77, 1330.69, -8.67, 20); //0.00, 0.00, 249.82);
	MoveDynamicObject(LineObj5[79], 2698.67, 1351.64, -8.67, 20); //0.00, 0.00, 249.82);
	MoveDynamicObject(LineObj5[80], 2699.16, 1580.05, -8.56, 20); //0.00, 0.00, 245.47);
	MoveDynamicObject(LineObj5[81], 2699.57, 1603.06, -8.56, 20); //0.00, 0.00, 245.47);
	MoveDynamicObject(LineObj5[82], 2717.11, 1613.67, -8.61, 20); //0.00, 0.00, 115.79);
	MoveDynamicObject(LineObj5[83], 2717.38, 1630.53, -8.61, 20); //0.00, 0.00, 115.79);
	return 1;
}

public ReadLine()
{
	new string[256];
	format(string,sizeof(string),"data/line.ini");
	new File: UserFile = fopen(string, io_read);//чтение файла
	new key[ 256 ] , val[ 256 ];
	new Data[ 256 ];
	while ( fread( UserFile , Data , sizeof( Data ) ) )
	{
		key = ini_GetKey( Data );
		if( strcmp( key , "Line1" , true ) == 0 ) { val = ini_GetValue( Data ); LineStat[1] = strval( val ); }
		if( strcmp( key , "Line2" , true ) == 0 ) { val = ini_GetValue( Data ); LineStat[2] = strval( val ); }
		if( strcmp( key , "Line3" , true ) == 0 ) { val = ini_GetValue( Data ); LineStat[3] = strval( val ); }
		if( strcmp( key , "Line4" , true ) == 0 ) { val = ini_GetValue( Data ); LineStat[4] = strval( val ); }
		if( strcmp( key , "Line5" , true ) == 0 ) { val = ini_GetValue( Data ); LineStat[5] = strval( val ); }
	}
	fclose(UserFile);
	return 1;
}

public SaveLine()
{
	new string[256];
	format(string,sizeof(string),"data/line.ini");
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[32];
		format(var, 32, "Line1=%d\n",LineStat[1]);fwrite(hFile, var);
		format(var, 32, "Line2=%d\n",LineStat[2]);fwrite(hFile, var);
		format(var, 32, "Line3=%d\n",LineStat[3]);fwrite(hFile, var);
		format(var, 32, "Line4=%d\n",LineStat[4]);fwrite(hFile, var);
		format(var, 32, "Line5=%d\n",LineStat[5]);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

public PlayDeport(playerid, target)
{
	new string[256], dopper, dopper44;
	dopper44 = GetPVarInt(target, "PlMon");//запоминаем деньги игрока
	dopper = PlayerInfo[target][pAdmin];
	PlayerInfo[target][pAdmin] = 0;//отбираем админку
	PlayerInfo[target][pAdmshad] = 0;//убираем скрытость
	if(dopper >= 2)
	{
		new twenlim, restlim;
		Fmadmins(0, RealName[target], 0, twenlim, restlim);
	}
	if(dopper >= 3)
	{
		PlayerInfo[target][pAdmlive] = 0;//выключаем бессмертие
		SendClientMessage(target, COLOR_RED, " Бессмертие выключено.");
	}
	PlayerInfo[target][pVIP] = 3;//устанавливаем статус депортации
	printf(" *** Админ %s начал депортацию игрока %s .", RealName[playerid], RealName[target]);
	printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[target], target, dopper44);
	format(string, sizeof(string), " *** Админ %s начал делопроизводство по депортации игрока %s .", RealName[playerid], RealName[target]);
	SendClientMessageToAll(COLOR_RED, string);
	format(string, sizeof(string), " *** Вы приглашаетесь в админ-чат ( /a [текст] ) , на слушание Вашего дела.");
	SendClientMessage(target, COLOR_RED, string);
	format(string, sizeof(string), " *** Так же, в админ-чат, Вы можете подать апелляционную жалобу.");
	SendClientMessage(target, COLOR_RED, string);
	return 1;
}

public ResServ(per)
{
	new string[256];//выгрузка с 0-го по 15-й слот FS
	for(new j=0; j<16; j++)
	{
		if(strlen(relfs[j]))//если строка НЕ пустая, то:
		{
			strdel(string,0,256);//очистка переменной string
			strcat(string, "unloadfs ");//сборка RCON-команды выгрузки фильтрскрипта
			strcat(string, relfs[j]);
			SendRconCommand(string);//RCON-команда выгрузки фильтрскрипта
		}
	}

 	for(new i = 0; i < MAX_PLAYERS; i++)
	{
    	if(mapiconid[i] != -600)//если ID мап иконки наблюдения НЕ пустой, то:
    	{
			DestroyDynamicMapIcon(mapiconid[i]);//удаление мап иконки наблюдения
		}
		mapiconid[i] = -600;//очистка ID мап иконки наблюдения
		if(IsPlayerConnected(i))
		{
//		    DisablePlayerCheckpoint(i);
			PlayKick(i);
//    		Kick(i);
		}
	}

	Delete3DTextLabel(fantxt);//удаляем 3D-текст с несущесвующим ИД

 	for(new i = 0; i < 8; i++)
	{
		DestroyVehicle(TrainID[i]);
	}
 	for(new i = 0; i < 88; i++)
	{
		DestroyDynamicObject(LineObj1[i]);
	}
 	for(new i = 0; i < 54; i++)
	{
		DestroyDynamicObject(LineObj2[i]);
	}
 	for(new i = 0; i < 62; i++)
	{
		DestroyDynamicObject(LineObj3[i]);
	}
 	for(new i = 0; i < 31; i++)
	{
		DestroyDynamicObject(LineObj4[i]);
	}
 	for(new i = 0; i < 84; i++)
	{
		DestroyDynamicObject(LineObj5[i]);
	}
#if (MOD11INS <= 3)
 	for(new i = 0; i < 32; i++)
	{
		DestroyObject(ObjGam[i]);
	}
#endif
#if (MOD11INS == 4)
 	for(new i = 0; i < 33; i++)
	{
		DestroyObject(ObjGam[i]);
	}
#endif

	for(new i=0; i<11; i++)//drift bonus
	{
		TextDrawDestroy(leveldr[i]);
	}
//	TextDrawDestroy(Textdraw0);
//	TextDrawDestroy(Textdraw1);
	new Max = GetMaxPlayers();
	for(new i=0; i<Max; i++)
	{
		Delete3DTextLabel(Level3D[i]);
	}

	for(new i = 0; i < MAX_PLAYERS; i++)//speedometer
	{
	    PlayerTextDrawHide(i, VehicleSpeed[i]);
	    TextDrawHideForPlayer(i, KMH);
		TextDrawHideForPlayer(i, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
		PlayerTextDrawHide(i, HMS44[i]);
		if(IsPlayerConnected(i))
		{
			PlayerTextDrawDestroy(i, VehicleSpeed[i]);
			PlayerTextDrawDestroy(i, HMS44[i]);//удаляем текстдравы максимальной горизонтальной скорости
		}
		conconTD[i] = 0;//снятие блокировки создания текст-дравов при подключении игрока
	}
	TextDrawDestroy(KMH);
	TextDrawDestroy(HMS22);//удаляем текстдрав максимальной горизонтальной скорости

//==============================================================================
//                              GarHouse
//==============================================================================
	new file[HOUSEFILE_LENGTH], tmp;
	Loop(i, MAX_PLAYERS)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	    {
	        tmp = GetPVarInt(i, "LastHouseCP");
			format(file, sizeof(file), FILEPATH, tmp);
		    if(!strcmp(GetHouseOwner(tmp), RealName[i], CASE_SENSETIVE) && GetPVarInt(i, "IsInHouse") == 1 && dini_Exists(file))
			{
			    dini_IntSet(file, "QuitInHouse", 1);
			    #if defined GH_HOUSECARS
			    	SaveHouseCar(tmp);
		        #endif
			}
		}
	}
    UnloadHouses(); // Выгрузка домов (также разгружает дом автомобили)
//==============================================================================
//                              End GarHouse
//==============================================================================

//----------------------------- Elevator - 1 -----------------------------------
	DestroyObject(Obj_Elevator);
	DestroyObject(Obj_ElevatorDoors[0]);
	DestroyObject(Obj_ElevatorDoors[1]);
	DestroyDynamic3DTextLabel(Label_Elevator);

	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
	    DestroyDynamicObject(Obj_FloorDoors[i][0]);
		DestroyDynamicObject(Obj_FloorDoors[i][1]);
		DestroyDynamic3DTextLabel(Label_Floors[i]);
		DestroyDynamic3DTextLabel(Label2_Floors[i]);
	}
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	DestroyObject(Obj_Elevator22);
	DestroyObject(Obj_ElevatorDoors22[0]);
	DestroyObject(Obj_ElevatorDoors22[1]);
	DestroyDynamic3DTextLabel(Label_Elevator22);

	for(new i; i < sizeof(Obj_FloorDoors22); i ++)
	{
	    DestroyDynamicObject(Obj_FloorDoors22[i][0]);
		DestroyDynamicObject(Obj_FloorDoors22[i][1]);
		DestroyDynamic3DTextLabel(Label_Floors22[i]);
		DestroyDynamic3DTextLabel(Label2_Floors22[i]);
	}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

	UnloadBusSystem();//выгрузка системы бизнесов//BusSystem

#if (MOD22INS == 1)
	fileClose(ServerLogFile);//античит-2
#endif

#if (MOD22INS == 1 && MOD55INS == 1)
	fileClose(inLog);//закрываем сервер-лог
	fileClose(outLog);//закрываем резервную копию сервер-лога
#endif

#if (MOD90INS == 0)
	SetTimerEx("ResServ222", 5000, 0, "i", per);
#endif
#if (MOD90INS == 1)
	SetTimerEx("ResServ444", 10000, 0, "i", per);
#endif
	return 1;
}

#if (MOD90INS == 1)
	forward ResServ444(per);
	public ResServ444(per)
	{
		db_close(playerdb);//отключаем базу данных аккаунтов игроков от сервера
		SetTimerEx("ResServ222", 1000, 0, "i", per);
		return 1;
	}
#endif

forward ResServ222(per);
public ResServ222(per)
{
// 	GameModeExit();
	SendRconCommand("gmx");
	return 1;
}

public SecSpa(playerid)
{
	LockSpawn[playerid] = 1;//блокировка заполнения слотов оружия и предметов
	SpawnPlayer(playerid);
	return 1;
}

forward SecSpaDop(playerid);
public SecSpaDop(playerid)
{
	SpawnPlayer(playerid);
	return 1;
}

public SecSpa22(playerid)//дополнительный спавн игрока (только координаты И -30 жизни)
{
	SetPlayerInterior(playerid, 0);//установка интерьера 0
	SetPlayerVirtualWorld(playerid, 0);//установка виртуального мира 0
	SetPlayerPos(playerid, playspax[tpspa], playspay[tpspa], playspaz[tpspa]);//случайные координаты спавна игрока
	SetPlayerFacingAngle(playerid, playspaa[tpspa]);//случайный угол спавна игрока
	SetCameraBehindPlayer(playerid);//расположить камеру за игроком
	SetTimerEx("SecSpa777", 500, 0, "i", playerid);
	return 1;
}

forward SecSpa777(playerid);
public SecSpa777(playerid)
{
	new Float:hp;
	GetPlayerHealth(playerid,hp);
	SetPlayerHealth(playerid,hp-30);
	return 1;
}

stock ConvIP(ipadr[])
{
	new ipout[128];
	strdel(ipout, 0, 128);
	new dln, ind;
	dln = strlen(ipadr);
	ind = 0;
	for(new i = 0; i < dln; i++)
	{
		if(ipadr[i] >= 48 && ipadr[i] <= 57)
		{
			ipout[ind] = ipadr[i];
			ind++;
		}
		if(ipadr[i] == '.')
		{
			ipout[ind] = '_';
			ind++;
		}
	}
	return ipout;
}

public PlayBanList(playerid, reason[], idbanf)
{
	new string[256], ip[126];
	GetPlayerIp(playerid, ip, sizeof(ip));
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты

#if (MOD90INS == 0)
	format(string,sizeof(string),"players/%s.ini",RealName[playerid]);
	if(!fexist(string))//если аккаунт игрока НЕ существует, то:
	{//создаём аккаунт игрока:
		new datak[256], datar[256];
		strdel(datak, 0, 256);
		strcat(datak, "111");
		format(datar, 256, "%02d:%02d - %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);
		new File: hFile44 = fopen(string, io_write);
		if (hFile44)
		{
			new var[32];
			format(var, 32, "Key=%s\n",datak);fwrite(hFile44, var);
			format(var, 32, "TDReg=%s\n",datar);fwrite(hFile44, var);
			format(var, 32, "IPAdr=%s\n",ip);fwrite(hFile44, var);
			format(var, 32, "MinLog=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "AdminLevel=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "AdminShadow=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "AdminLive=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Registered=%d\n",1);fwrite(hFile44, var);
			format(var, 32, "Prison=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Prisonsec=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Muted=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Mutedsec=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Money=%d\n",1000);fwrite(hFile44, var);
			format(var, 32, "Kills=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Deaths=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "VIP=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Lock=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Gang=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "GangLvl=%d\n",0);fwrite(hFile44, var);
//			format(var, 32, "PISTOL=%d\n",0);fwrite(hFile44, var);
//			format(var, 32, "PISTOL_SILENCED=%d\n",0);fwrite(hFile44, var);
//			format(var, 32, "DESERT_EAGLE=%d\n",0);fwrite(hFile44, var);
//			format(var, 32, "SHOTGUN=%d\n",0);fwrite(hFile44, var);
//			format(var, 32, "SAWNOFF_SHOTGUN=%d\n",0);fwrite(hFile44, var);
//			format(var, 32, "SPAS12_SHOTGUN=%d\n",0);fwrite(hFile44, var);
//			format(var, 32, "MICRO_UZI=%d\n",0);fwrite(hFile44, var);
//			format(var, 32, "MP5=%d\n",0);fwrite(hFile44, var);
//			format(var, 32, "AK47=%d\n",0);fwrite(hFile44, var);
//			format(var, 32, "M4=%d\n",0);fwrite(hFile44, var);
//			format(var, 32, "SNIPERRIFLE=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot0=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot1=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot2=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot3=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot4=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot5=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot6=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot7=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot8=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot9=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot10=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot11=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Weapon_slot12=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot0=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot1=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot2=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot3=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot4=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot5=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot6=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot7=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot8=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot9=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot10=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot11=%d\n",0);fwrite(hFile44, var);
			format(var, 32, "Ammo_slot12=%d\n",0);fwrite(hFile44, var);
			fclose(hFile44);
		}
	}
#endif
#if (MOD90INS == 1)
	new strdln[5000];
	new igkey[256],tdreg[256],adrip[256],data2[53];
	new mgrakk = 0;
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
	new gngakkrd = 0;
	new string999[256];
//---------------------------------- конец -------------------------------------
	format(string,sizeof(string),"players/%s.ini",RealName[playerid]);
	if(fexist(string))//если аккаунт зарегистрирован в fopen, то:
	{
		mgrakk = 1;
		new File: UserFile = fopen(string, io_read);//чтение аккаунта
		new key[ 256 ] , val[ 256 ];
		new Data[ 256 ];
		while ( fread( UserFile , Data , sizeof( Data ) ) )
		{
			key = ini_GetKey( Data );
			if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
			if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
			if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
			if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
			if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
			if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
			if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
			if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
			if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
			if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
			if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
			if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
			if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
			if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
			if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
			if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
			if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
			if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
			if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
			if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
			if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
			if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
			if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
			if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
			if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
			if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
			if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
			if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
			if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
			if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
			if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
			if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
			if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
			if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
			if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
			if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
			if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
			if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
			if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
			if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
			if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
			if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
		}
		fclose(UserFile);
		strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
		strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
		strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
		format(string999,sizeof(string999),"gangs/players/%s.ini",RealName[playerid]);
		if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
		{
			gngakkrd = 1;
			new string333[256];
			format(string333,sizeof(string333),"gangs/players/%s.ini",RealName[playerid]);
			new File: UserFile333 = fopen(string333, io_read);//чтение файла
			new key333[ 256 ] , val333[ 256 ];
			new Data333[ 256 ];
			while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
			{
				key333 = ini_GetKey( Data333 );
				if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
				if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
			}
			fclose(UserFile333);
		}
//---------------------------------- конец -------------------------------------
	}
	else//иначе: (если аккаунт зарегистрирован в SQLite)
	{
		format(string, sizeof(string), "SELECT * FROM Players WHERE (Name = '%s')", RealName[playerid]);//создаём запрос БД
		querydb[playerid] = db_query(playerdb, string);//отправляем запрос БД
		if(db_num_rows(querydb[playerid]) == 0)//переведём результат запроса в число найденных строк в БД
		{//если число строк = 0 (такого аккаунта в БД нет), то - создаём аккаунт игрока:
			db_free_result(querydb[playerid]);//очищаем результат запроса БД
			new datak[256], datar[256];
			strdel(datak, 0, 256);
			strcat(datak, "111");
			format(datar, 256, "%02d:%02d - %02d/%02d/%04d", timecor[0], timecor[1], timecor[4], timecor[3], timecor[2]);

			format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
			format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
			format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
			format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
			format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
			format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
			format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, RealName[playerid],datak,datar);
			format(strdln, sizeof(strdln), "%s0,0,0,'%s',", strdln, ip);
			format(strdln, sizeof(strdln), "%s0,0,0,", strdln);
			format(strdln, sizeof(strdln), "%s0,1,0,", strdln);
			format(strdln, sizeof(strdln), "%s0,0,0,", strdln);
			format(strdln, sizeof(strdln), "%s1000,0,0,", strdln);
			format(strdln, sizeof(strdln), "%s0,0,0,0,", strdln);
			format(strdln, sizeof(strdln), "%s0,0,0,0,", strdln);
			format(strdln, sizeof(strdln), "%s0,0,0,0,", strdln);
			format(strdln, sizeof(strdln), "%s0,0,0,0,", strdln);
			format(strdln, sizeof(strdln), "%s0,0,0,0,", strdln);
			format(strdln, sizeof(strdln), "%s0,0,0,0,", strdln);
			format(strdln, sizeof(strdln), "%s0,0,0,0,", strdln);
			format(strdln, sizeof(strdln), "%s0,0)", strdln);
			db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

		}
	}
	if(mgrakk == 1)//если аккаунт был зарегистрирован в fopen, то:
	{
		new ssss[128];
		format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", RealName[playerid]);//миграция аккаунта в БД, создаём запрос БД
		db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

		format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
		format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
		format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
		format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
		format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
		format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
		format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, RealName[playerid],igkey,tdreg);//IDCopy,Name,Key,TDReg
		format(strdln, sizeof(strdln), "%s0,0,0,'%s',", strdln, adrip);//DEndConD,DEndConM,DEndConY,IPAdr
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[0],data2[1],data2[2]);//MinLog,AdminLevel,AdminShadow
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[3],data2[4],data2[5]);//AdminLive,Registered,Prison
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[6],data2[7],data2[8]);//Prisonsec,Muted,Mutedsec
		format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[9],data2[10],data2[11]);//Money,Kills,Deaths
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[12],data2[13],data2[14],data2[15]);//VIP,Lock,Gang,GangLvl
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[27],data2[28],data2[29],data2[30]);//Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[31],data2[32],data2[33],data2[34]);//Weapon_slot4,Weapon_slot5,Weapon_slot6,Weapon_slot7
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[35],data2[36],data2[37],data2[38]);//Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[39],data2[40],data2[41],data2[42]);//Weapon_slot12,Ammo_slot0,Ammo_slot1,Ammo_slot2
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[43],data2[44],data2[45],data2[46]);//Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6
		format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[47],data2[48],data2[49],data2[50]);//Ammo_slot7,Ammo_slot8,Ammo_slot9,Ammo_slot10
		format(strdln, sizeof(strdln), "%s%d,%d)", strdln, data2[51],data2[52]);//Ammo_slot11,Ammo_slot12
		db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
		if(gngakkrd == 1)
		{
			fremove(string999);
		}
//---------------------------------- конец -------------------------------------
		if(fexist(string))
		{
			fremove(string);//удаляем аккаунт из fopen
		}
	}
#endif

	new stringdop[256];
	format(stringdop,256,"%s [%02d:%02d | %02d/%02d/%04d] - %s",ip,timecor[0],timecor[1],timecor[4],timecor[3],timecor[2],reason);
	format(string,sizeof(string),"banlist/players/%s.ini",RealName[playerid]);
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[256];
		format(var, 256, "Data=%s\n",stringdop);fwrite(hFile, var);
		format(var, 256, "IDFile=%d\n",idbanf);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

public IPBanList(ipadr[], reason[])
{
	new ip333[128];
	ip333 = ConvIP(ipadr);
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты
	new stringdop[256];
	format(stringdop,256,"[%02d:%02d | %02d/%02d/%04d] - %s",timecor[0],timecor[1],timecor[4],timecor[3],timecor[2],reason);
	new string[256];
	format(string,sizeof(string),"banlist/ipadr/%s.ini",ip333);
	new File: hFile = fopen(string, io_write);//запись файла
	if (hFile)
	{
		new var[256];
		format(var, 256, "Data=%s\n",stringdop);fwrite(hFile, var);
		fclose(hFile);
	}
	return 1;
}

public PlayKickTimer(admlvl, target)
{
	new string[256];
	if(!IsPlayerConnected(target) || strcmp(NameTarget[target],RealName[target],false) != 0)
	{
		format(string, sizeof(string), "* Кик игрока %s был отменён , по причине выхода последнего из игры.", NameTarget[target]);
		SendClientMessageToAll(COLOR_YELLOW, string);
		NameClick[target] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		return 1;
	}
	if(admlvl <= 3 && PlayerInfo[target][pAdmin] >= 1)
	{
		format(string,256," *** Админ %s попытался кикнуть админа %s",NameAdmin[target],NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_GREEN, string);
		NameClick[target] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		return 1;
	}
	format(string, 256, " *** Админ %s кикнул игрока %s , причина: %s", NameAdmin[target], NameTarget[target], ReasonTarget[target]);
	print(string);
	SendClientMessageToAll(COLOR_RED, string);
	NameClick[target] = 0;//очистка признака бана или кика по таймеру
	strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
	strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
	strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
	SetTimerEx("PlayKick", 300, 0, "i", target);
	return 1;
}

public PlayBanTimer(admlvl, target)
{
	new string[256];
	if(!IsPlayerConnected(target) || strcmp(NameTarget[target],RealName[target],false) != 0)
	{
		format(string, sizeof(string), "* Бан игрока %s был отменён , по причине выхода последнего из игры.", NameTarget[target]);
		SendClientMessageToAll(COLOR_YELLOW, string);
		NameClick[target] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		return 1;
	}
	if(admlvl <= 3 && PlayerInfo[target][pAdmin] >= 1)
	{
		format(string,256," *** Админ %s попытался забанить админа %s",NameAdmin[target],NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_GREEN, string);
		NameClick[target] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		return 1;
	}
	new ip[126];
	GetPlayerIp(target, ip, sizeof(ip));
	format(string, 256, " *** Админ %s забанил игрока %s , причина: %s", NameAdmin[target], NameTarget[target], ReasonTarget[target]);
	print(string);
	SendClientMessageToAll(COLOR_RED, string);
	format(string, 256 ," *** IP игрока %s : [%s]", NameTarget[target], ip);
	print(string);
	SendAdminMessage(COLOR_RED, string);
	if(gPlayerLogged[target] == 1)//если игрок успел залогиниться, то:
	{
		PlayerInfo[target][pLock] = 1;//блокируем аккаунт игрока
		format(string,sizeof(string),"* Бан до логирования: игрок [%s] успел залогиниться, блокировка аккаунта игрока !", NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_YELLOW, string);
	}
	else//если игрок ещё НЕ залогинился, то:
	{
		format(string,sizeof(string),"* Бан до логирования: аккаунт игрока [%s] НЕ был изменён !", NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_YELLOW, string);
	}
	new soob[256];//переменная для метки админа
	if(!strlen(ReasonTarget[target]))//делаем отметку, если причина не указана
	{
		format(ReasonTarget[target], 256, "* Причина не указана.");
	}
	format(soob, 256, " (бан до логирования) Админ: [ %s ]", NameAdmin[target]);//формируем метку админа
	strdel(fbanreason[target], 0, 256);//очистка причины бана
	strcat(fbanreason[target], ReasonTarget[target]);//добавляем в символьную переменную причину
	strcat(fbanreason[target], soob);//добавляем в символьную переменную метку админа
	NameClick[target] = 0;//очистка признака бана или кика по таймеру
	strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
	strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
	strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
	PlayBanList(target, fbanreason[target], 0);
	SetTimerEx("PlayBan", 300, 0, "i", target);
	return 1;
}

public TMPlayBanTimer(admlvl, target, dayban)
{
	new string[256];
	if(!IsPlayerConnected(target) || strcmp(NameTarget[target],RealName[target],false) != 0)
	{
		format(string, sizeof(string), "* Бан игрока %s был отменён , по причине выхода последнего из игры.", NameTarget[target]);
		SendClientMessageToAll(COLOR_YELLOW, string);
		NameClick[target] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		return 1;
	}
	if(admlvl <= 3 && PlayerInfo[target][pAdmin] >= 1)
	{
		format(string,256," *** Админ %s попытался забанить админа %s",NameAdmin[target],NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_GREEN, string);
		NameClick[target] = 0;//очистка признака бана или кика по таймеру
		strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
		strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
		strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
		return 1;
	}
	new ip[126];
	GetPlayerIp(target, ip, sizeof(ip));
	format(string, 256, " *** Админ %s забанил игрока %s на %d суток , причина: %s", NameAdmin[target], NameTarget[target], dayban, ReasonTarget[target]);
	print(string);
	SendClientMessageToAll(COLOR_RED, string);
	format(string, 256 ," *** IP игрока %s : [%s]", NameTarget[target], ip);
	print(string);
	SendAdminMessage(COLOR_RED, string);
	if(gPlayerLogged[target] == 1)//если игрок успел залогиниться, то:
	{
		PlayerInfo[target][pLock] = 1;//блокируем аккаунт игрока
		format(string,sizeof(string),"* Бан до логирования: игрок [%s] успел залогиниться, блокировка аккаунта игрока !", NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_YELLOW, string);
	}
	else//если игрок ещё НЕ залогинился, то:
	{
		format(string,sizeof(string),"* Бан до логирования: аккаунт игрока [%s] НЕ был изменён !", NameTarget[target]);
		print(string);
		SendAdminMessage(COLOR_YELLOW, string);
	}

	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты

	new csut22, string999[256];
	csut22 = ProcUnban(dayban);//вычисление дня разбана
	new doplll, doplll22, doplll33;//запись ид-файла временного бана
	doplll = 1;//переменная цикла
	doplll22 = 0;//маркерная переменная
	while(doplll < 1001)//создаём неполный цикл
	{
		format(string999,sizeof(string999),"bantime/%d.ini",doplll);
		if(!fexist(string999))//если файла с именем ид-переменной (doplll) нету, то:
		{//создаём такой файл
			doplll22 = 1;//устанавливаем маркерную переменную
			new File: hFile55 = fopen(string999, io_write);//запись файла
			if (hFile55)
			{
				new var[64];
				format(var, 64, "Login=%s\n",NameTarget[target]);fwrite(hFile55, var);
				format(var, 64, "IPAdr=%s\n",ip);fwrite(hFile55, var);
				format(var, 64, "Dataunban=%d\n",csut22);fwrite(hFile55, var);
				fclose(hFile55);
			}
			printf("[BanTime] Временному бану игрока [%s] был присвоен ид [%d] .", NameTarget[target], doplll);
			break;//завершаем неполный цикл
		}
		doplll++;//инкрементируем переменную цикла, и продолжаем цикл
	}
	doplll33 = doplll;//подготовка ид-файла к записи в бан-лист
	if(doplll22 == 0)//если после окончания цикла, маркерная переменная НЕ была установлена, то:
	{//передаём админам сообщение о переполнении таблицы временных банов
		doplll33 = 0;//ид-файла = 0 (файл НЕ создан)
		print("[BanTime] Превышен лимит файлов в таблице временных банов !!!");
		SendAdminMessage(COLOR_RED, " * Превышен лимит файлов в таблице временных банов !!!");
		print("[BanTime] Временный бан НЕ был сохранён !!!");
		SendAdminMessage(COLOR_RED, " * Временный бан НЕ был сохранён !!!");
	}

	new soob[256];//переменная для метки админа
	if(!strlen(ReasonTarget[target]))//делаем отметку, если причина не указана
	{
		format(ReasonTarget[target], 256, "* Причина не указана.");
	}
	format(soob, 256, " (на %d суток , бан до логирования) Админ: [ %s ]", dayban, NameAdmin[target]);//формируем метку админа
	strdel(fbanreason[target], 0, 256);//очистка причины бана
	strcat(fbanreason[target], ReasonTarget[target]);//добавляем в символьную переменную причину
	strcat(fbanreason[target], soob);//добавляем в символьную переменную метку админа
	NameClick[target] = 0;//очистка признака бана или кика по таймеру
	strdel(ReasonTarget[target], 0, 256);//очистка причины бана или кика по таймеру
	strdel(NameAdmin[target], 0, MAX_PLAYER_NAME);//очистка ника админа по таймеру
	strdel(NameTarget[target], 0, MAX_PLAYER_NAME);//очистка ника игрока по таймеру
	PlayBanList(target, fbanreason[target], doplll33);
	SetTimerEx("PlayBan", 300, 0, "i", target);
	return 1;
}

public ProcUnban(per11)
{
	new per22;
	per22 = per11 + timecor[4];
	if(per22 > 28 && timecor[7] == 0 && timecor[3] == 2)
	{
		per22 = per22 - 28;
	}
	if(per22 > 29 && timecor[7] == 1 && timecor[3] == 2)
	{
		per22 = per22 - 29;
	}
	if(per22 > 30 && (timecor[3] == 4 || timecor[3] == 6 || timecor[3] == 9 || timecor[3] == 11))
	{
		per22 = per22 - 30;
	}
	if(per22 > 31 && (timecor[3] == 1 || timecor[3] == 3 || timecor[3] == 5 || timecor[3] == 7 || timecor[3] == 8 || timecor[3] == 10 || timecor[3] == 12))
	{
		per22 = per22 - 31;
	}
	return per22;
}

public AutoUnban()
{
	print("+++ [BanTime] Начало авто-разбанов +++");
	new string999[256],akk[256],ip22[256],idfile;
	for(new i = 1; i < 1001; i++)
	{//чтение ид-файлов временных банов
		format(string999,sizeof(string999),"bantime/%d.ini",i);
		if(fexist(string999))//если файл с ид-именем существует, то:
		{//читаем этот файл
			new File: UserFile44 = fopen(string999, io_read);
			new key44[ 256 ] , val44[ 256 ];
			new Data44[ 256 ];
			while ( fread( UserFile44 , Data44 , sizeof( Data44 ) ) )
			{
				key44 = ini_GetKey( Data44 );
				if( strcmp( key44 , "Login" , true ) == 0 ) { akk = ini_GetValue( Data44 ); }
				if( strcmp( key44 , "IPAdr" , true ) == 0 ) { ip22 = ini_GetValue( Data44 ); }
				if( strcmp( key44 , "Dataunban" , true ) == 0 ) { val44 = ini_GetValue( Data44 ); idfile = strval( val44 ); }
			}
			fclose(UserFile44);
			strdel(akk, strlen(akk)-1, strlen(akk));//корректировка логина игрока
			strdel(ip22, strlen(ip22)-1, strlen(ip22));//корректировка IP-адреса
			if(idfile == timecor[4])//если число разбана = числу на сервере, то:
			{
   				new ssss[256],igkey[256],tdreg[256],adrip[256],data2[54],string[256],string222[256];
				data2[53] = 0;//переменная проверки блокировки аккаунта
#if (MOD90INS == 0)
				format(string,sizeof(string),"players/%s.ini",akk);
//        		format(string,sizeof(string),"%s.ini",akk);
				if(!fexist(string))
				{
					printf("+++ [BanTime] Аккаунт игрока [%s] не сущесвует !!! +++", akk);
					strdel(ssss, 0, 256);//сборка RCON-команды разбана
					strcat(ssss, "unbanip ");
					strcat(ssss, ip22);
					SendRconCommand(ssss);//RCON-команда разбана
					printf("+++ [BanTime] IP: [%s] был удалён из файла samp.ban +++", ip22);

					new ip333[128];
					ip333 = ConvIP(ip22);
					format(string222,sizeof(string222),"bantime/%d.ini",i);
					if(fexist(string222))
					{
						fremove(string222);//удаление ид-файла временного бана
						printf("+++ [BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) +++", akk, i);
					}
					format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
					if(fexist(string222))
					{
						fremove(string222);//удаляем аккаунт из бан-листа
						printf("+++ [BanTime] Аккаунт игрока [%s] был удалён из бан-листа +++", akk);
					}
					format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
					if(fexist(string222))
					{
						fremove(string222);//удаляем IP-адрес из бан-листа
						printf("+++ [BanTime] IP-адрес [%s] был удалён из бан-листа +++", ip22);
					}
				}
				else
				{
					new File: UserFile = fopen(string, io_read);//чтение аккаунта
			    	new key[ 256 ] , val[ 256 ];
			    	new Data[ 256 ];
					while ( fread( UserFile , Data , sizeof( Data ) ) )
					{
						key = ini_GetKey( Data );
						if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
						if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
						if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
						if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    		if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    		if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    		if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
			        	if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
			        	if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
			        	if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
			        	if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
			        	if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
			        	if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
			        	if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
			        	if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
			        	if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
			        	if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
			        	if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
			        	if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			        	if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			        	if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			        	if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			        	if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			        	if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			        	if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			        	if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			        	if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			        	if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			        	if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			        	if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
                	}
                	fclose(UserFile);
					strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
					strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
					strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					new gngakkrd = 0;
					new string888[256];
					format(string888,sizeof(string888),"gangs/players/%s.ini",akk);
					if(fexist(string888))//читаем аккаунт из системы кланов (если файл существует)
					{
						gngakkrd = 1;
    					new f[256];
    					format(f, 256, "gangs/players/%s.ini", akk);
						new file = ini_openFile(f);
						if(file >= 0)
						{
	    					ini_getInteger(file, "Gang", data2[14]);
	    					ini_getInteger(file, "GangLvl", data2[15]);
							ini_closeFile(file);
						}
					}
//---------------------------------- конец -------------------------------------
					if(data2[13] == 1 && data2[12] == 3)//если аккаунт заблокирован, и у игорока статус депортации, то:
					{
				    	data2[12] = 0;//убрать статус депортации
					}
					if(data2[13] == 0)//если аккаунт НЕ был заблокирован, то:
					{
				    	data2[53] = 1;//записываем в переменную проверки блокировки аккаунта 1
					}
					data2[13] = 0;//сброс блокировки аккаунта
					strdel(ssss, 0, 256);//сборка RCON-команды разбана
					strcat(ssss, "unbanip ");
					strcat(ssss, adrip);
					SendRconCommand(ssss);//RCON-команда разбана
					new File: hFile = fopen(string, io_write);//запись изменённого аккаунта
					if (hFile)
					{
						new var[32];
						format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
						format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
						format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
						format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
						format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
						format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
						format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
						format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
						format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
						format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
						format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
						format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
						format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
						format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
						format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
						format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
						format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
						format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
						format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//						format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//						format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//						format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//						format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//						format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//						format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//						format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//						format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//						format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//						format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//						format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
						fclose(hFile);
					}
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					if(gngakkrd == 1)
					{
						fremove(string888);//удаляем аккаунт из системы кланов
					}
//---------------------------------- конец -------------------------------------
					if(data2[53] == 1)//если переменная проверки блокировки аккаунта = 1, то:
					{
						printf("+++ [BanTime] Аккаунт игрока [%s] не был заблокирован +++", akk);
						printf("+++ [BanTime] IP: [%s] был удалён из файла samp.ban +++", adrip);
					}
					else//иначе:
					{
						printf("+++ [BanTime] Аккаунт игрока [%s] был разбанен ( IP: [%s] ) +++", akk, adrip);
					}

					new ip333[128];
					ip333 = ConvIP(adrip);
					format(string222,sizeof(string222),"bantime/%d.ini",i);
					if(fexist(string222))
					{
						fremove(string222);//удаление ид-файла временного бана
						printf("+++ [BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) +++", akk, i);
					}
					format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
					if(fexist(string222))
					{
						fremove(string222);//удаляем аккаунт из бан-листа
						printf("+++ [BanTime] Аккаунт игрока [%s] был удалён из бан-листа +++", akk);
					}
					format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
					if(fexist(string222))
					{
						fremove(string222);//удаляем IP-адрес из бан-листа
						printf("+++ [BanTime] IP-адрес [%s] был удалён из бан-листа +++", adrip);
					}
				}
#endif
#if (MOD90INS == 1)
				new strdln[5000];
				format(string,sizeof(string),"players/%s.ini",akk);
//        		format(string,sizeof(string),"%s.ini",akk);
				if(!fexist(string))//если аккаунт НЕ зарегистрирован в fopen, то:
				{//проверим регистрацию в SQLite
					new ip333[128];
					format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
					querydbau = db_query(playerdb, ssss);//отправляем запрос БД
					if(db_num_rows(querydbau) == 0)//переведём результат запроса в число найденных строк в БД
					{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
						db_free_result(querydbau);//очищаем результат запроса БД
						printf("+++ [BanTime] Аккаунт игрока [%s] не сущесвует !!! +++", akk);
						strdel(ssss, 0, 256);//сборка RCON-команды разбана
						strcat(ssss, "unbanip ");
						strcat(ssss, ip22);
						SendRconCommand(ssss);//RCON-команда разбана
						printf("+++ [BanTime] IP: [%s] был удалён из файла samp.ban +++", ip22);

						ip333 = ConvIP(ip22);
						format(string222,sizeof(string222),"bantime/%d.ini",i);
						if(fexist(string222))
						{
							fremove(string222);//удаление ид-файла временного бана
							printf("+++ [BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) +++", akk, i);
						}
					}
					else//иначе: (если аккаунт зарегистрирован в БД)
					{
						new buffer[32];//читаем данные из БД
						db_get_field(querydbau, 7, adrip, 256);//IPAdr
						db_get_field(querydbau, 20, buffer, 32); data2[12] = strval(buffer);//VIP
						db_get_field(querydbau, 21, buffer, 32); data2[13] = strval(buffer);//Lock
						db_free_result(querydbau);//очищаем результат запроса БД

						if(data2[13] == 1 && data2[12] == 3)//если аккаунт заблокирован, и у игорока статус депортации, то:
						{
				    		data2[12] = 0;//убрать статус депортации
						}
						if(data2[13] == 0)//если аккаунт НЕ был заблокирован, то:
						{
				    		data2[53] = 1;//записываем в переменную проверки блокировки аккаунта 1
						}
						data2[13] = 0;//сброс блокировки аккаунта
						strdel(ssss, 0, 256);//сборка RCON-команды разбана
						strcat(ssss, "unbanip ");
						strcat(ssss, adrip);
						SendRconCommand(ssss);//RCON-команда разбана

						format(strdln, sizeof(strdln), "UPDATE Players SET VIP = %d,Lock = %d ",data2[12],data2[13]);//создаём запрос БД
						format(strdln, sizeof(strdln), "%sWHERE (Name = '%s')", strdln, akk);
						db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД

						if(data2[53] == 1)//если переменная проверки блокировки аккаунта = 1, то:
						{
							printf("+++ [BanTime] Аккаунт игрока [%s] не был заблокирован +++", akk);
							printf("+++ [BanTime] IP: [%s] был удалён из файла samp.ban +++", adrip);
						}
						else//иначе:
						{
							printf("+++ [BanTime] Аккаунт игрока [%s] был разбанен ( IP: [%s] ) +++", akk, adrip);
						}

						ip333 = ConvIP(adrip);
						format(string222,sizeof(string222),"bantime/%d.ini",i);
						if(fexist(string222))
						{
							fremove(string222);//удаление ид-файла временного бана
							printf("+++ [BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) +++", akk, i);
						}
					}
					format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
					if(fexist(string222))
					{
						fremove(string222);//удаляем аккаунт из бан-листа
						printf("+++ [BanTime] Аккаунт игрока [%s] был удалён из бан-листа +++", akk);
					}
					format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
					if(fexist(string222))
					{
						fremove(string222);//удаляем IP-адрес из бан-листа
						printf("+++ [BanTime] IP-адрес [%s] был удалён из бан-листа +++", adrip);
					}
				}
				else//иначе: (если аккаунт зарегистрирован в fopen)
				{
					new File: UserFile = fopen(string, io_read);//чтение аккаунта
			    	new key[ 256 ] , val[ 256 ];
			    	new Data[ 256 ];
					while ( fread( UserFile , Data , sizeof( Data ) ) )
					{
						key = ini_GetKey( Data );
						if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
						if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
						if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
						if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
			    		if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
			    		if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
			    		if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
			        	if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
			        	if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
			        	if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
			        	if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
			        	if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
			        	if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
			        	if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
			        	if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
			        	if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
			        	if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
			        	if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
			        	if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//			        	if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//			        	if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//			        	if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//			        	if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//			        	if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//			        	if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//			        	if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//			        	if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//			        	if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//			        	if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//			        	if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
			        	if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
			        	if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
                	}
                	fclose(UserFile);
					strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
					strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
					strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					new gngakkrd = 0;
					new string888[256];
					format(string888,sizeof(string888),"gangs/players/%s.ini",akk);
					if(fexist(string888))//читаем аккаунт из системы кланов (если файл существует)
					{
						gngakkrd = 1;
    					new f[256];
    					format(f, 256, "gangs/players/%s.ini", akk);
						new file = ini_openFile(f);
						if(file >= 0)
						{
	    					ini_getInteger(file, "Gang", data2[14]);
	    					ini_getInteger(file, "GangLvl", data2[15]);
							ini_closeFile(file);
						}
					}
//---------------------------------- конец -------------------------------------
					format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", akk);//миграция аккаунта в БД, создаём запрос БД
					db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

					format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
					format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
					format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
					format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
					format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
					format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
					format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, akk,igkey,tdreg);//IDCopy,Name,Key,TDReg
					format(strdln, sizeof(strdln), "%s0,0,0,'%s',", strdln, adrip);//DEndConD,DEndConM,DEndConY,IPAdr
					format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[0],data2[1],data2[2]);//MinLog,AdminLevel,AdminShadow
					format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[3],data2[4],data2[5]);//AdminLive,Registered,Prison
					format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[6],data2[7],data2[8]);//Prisonsec,Muted,Mutedsec
					format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[9],data2[10],data2[11]);//Money,Kills,Deaths
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[12],data2[13],data2[14],data2[15]);//VIP,Lock,Gang,GangLvl
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[27],data2[28],data2[29],data2[30]);//Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[31],data2[32],data2[33],data2[34]);//Weapon_slot4,Weapon_slot5,Weapon_slot6,Weapon_slot7
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[35],data2[36],data2[37],data2[38]);//Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[39],data2[40],data2[41],data2[42]);//Weapon_slot12,Ammo_slot0,Ammo_slot1,Ammo_slot2
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[43],data2[44],data2[45],data2[46]);//Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6
					format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[47],data2[48],data2[49],data2[50]);//Ammo_slot7,Ammo_slot8,Ammo_slot9,Ammo_slot10
					format(strdln, sizeof(strdln), "%s%d,%d)", strdln, data2[51],data2[52]);//Ammo_slot11,Ammo_slot12
					db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД

					format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", akk);//создаём запрос БД
					querydbau = db_query(playerdb, ssss);//отправляем запрос БД
					if(db_num_rows(querydbau) == 0)//переведём результат запроса в число найденных строк в БД
					{//если число строк = 0 (такого аккаунта в БД нет), то - аккаунт НЕ зарегистрирован в БД
						db_free_result(querydbau);//очищаем результат запроса БД
						printf("+++ [BanTime] Ошибка миграции аккаунта игрока [%s] в БД !!! +++", akk);
					}
					else//иначе: (если аккаунт зарегистрирован в БД)
					{
						new buffer[32];//читаем данные из БД
						db_get_field(querydbau, 7, adrip, 256);//IPAdr
						db_get_field(querydbau, 20, buffer, 32); data2[12] = strval(buffer);//VIP
						db_get_field(querydbau, 21, buffer, 32); data2[13] = strval(buffer);//Lock
						db_free_result(querydbau);//очищаем результат запроса БД

						if(data2[13] == 1 && data2[12] == 3)//если аккаунт заблокирован, и у игорока статус депортации, то:
						{
				    		data2[12] = 0;//убрать статус депортации
						}
						if(data2[13] == 0)//если аккаунт НЕ был заблокирован, то:
						{
				    		data2[53] = 1;//записываем в переменную проверки блокировки аккаунта 1
						}
						data2[13] = 0;//сброс блокировки аккаунта
						strdel(ssss, 0, 256);//сборка RCON-команды разбана
						strcat(ssss, "unbanip ");
						strcat(ssss, adrip);
						SendRconCommand(ssss);//RCON-команда разбана

						format(strdln, sizeof(strdln), "UPDATE Players SET VIP = %d,Lock = %d ",data2[12],data2[13]);//создаём запрос БД
						format(strdln, sizeof(strdln), "%sWHERE (Name = '%s')", strdln, akk);
						db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД

//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
						if(gngakkrd == 1)
						{
							fremove(string888);//удаляем аккаунт из системы кланов
						}
//---------------------------------- конец -------------------------------------
						if(fexist(string))
						{
							fremove(string);//удаляем аккаунт из fopen
						}

						if(data2[53] == 1)//если переменная проверки блокировки аккаунта = 1, то:
						{
							printf("+++ [BanTime] Аккаунт игрока [%s] не был заблокирован +++", akk);
							printf("+++ [BanTime] IP: [%s] был удалён из файла samp.ban +++", adrip);
						}
						else//иначе:
						{
							printf("+++ [BanTime] Аккаунт игрока [%s] был разбанен ( IP: [%s] ) +++", akk, adrip);
						}

						new ip333[128];
						ip333 = ConvIP(adrip);
						format(string222,sizeof(string222),"bantime/%d.ini",i);
						if(fexist(string222))
						{
							fremove(string222);//удаление ид-файла временного бана
							printf("+++ [BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) +++", akk, i);
						}
						format(string222,sizeof(string222),"banlist/players/%s.ini",akk);
						if(fexist(string222))
						{
							fremove(string222);//удаляем аккаунт из бан-листа
							printf("+++ [BanTime] Аккаунт игрока [%s] был удалён из бан-листа +++", akk);
						}
						format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
						if(fexist(string222))
						{
							fremove(string222);//удаляем IP-адрес из бан-листа
							printf("+++ [BanTime] IP-адрес [%s] был удалён из бан-листа +++", adrip);
						}
					}
				}
#endif
			}
		}
	}
	print("+++ [BanTime] Авто-разбаны завершены +++");
	SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
	return 1;
}

public DopAdmtp(playerid, target)
{
	new Float:PosX, Float:PosY, Float:PosZ;
	EnterTick33[target] = 1;//обход антикрашера - 3
	tpdrift[target] = 1;
	SetPlayerInterior(target, GetPlayerInterior(playerid));
	SetPlayerVirtualWorld(target, GetPlayerVirtualWorld(playerid));
	GetPlayerPos(playerid, PosX, PosY, PosZ);
	SetPlayerPos(target, PosX, PosY+1, PosZ+1);
	return 1;
}

public PlayKick(playerid)
{
	Kick(playerid);
	return 1;
}

public PlayBan(playerid)
{
	BanEx(playerid, fbanreason[playerid]);
	return 1;
}

stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i]==delimiter || i==strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}

public PolSec()//вспомогательный таймер 450 мс
{
	new string[256];
	new Float:PosX, Float:PosY, Float:PosZ;
#if (MOD22INS == 1)
	new pos, str333[128], strarr[2][30];//античит-2
	fileSeek(ServerLogFile, -128, seek_End);
	while(fileRead(ServerLogFile, str333))
	{
		//читаем последнюю строку
	}
	pos = strfind(str333, "BAD RCON ATTEMPT BY: ", false, 10);
	if(pos == 11)
	{
		ParaAntCh2 = 0;
		ParaAntCh3 = 0;
		ParaAntCh4 = 0;
		if(ParaAntCh1 == 2)
		{
		    new str444[128];
			strcat(str444, str333[pos+21]);
			if(strcmp(AntCh1, str444, false) == 0)
			{
				ParaAntCh1 = 10;
				print("[AntiCheatSys] ---------- 3.3 ----------");
				new dopper = -600;
				for(new i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
				{
					if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
					{//определение ид игрока по его IP
						if(strcmp(AntCh1, PlayerInfo[i][pIPAdr], true) == 0)
						{
							dopper = i;//ид игрока найден
						}
					}
				}
				if(dopper == -600)//если ид игрока НЕ найден, то:
				{
					format(string,sizeof(string),"* IP [%s] был забанен за чит (3), мешающий работе сервера !",AntCh1);
					print(string);
					SendClientMessageToAll(COLOR_RED,string);
					new reason333[128];
					format(reason333,sizeof(reason333),"* Чит (3), мешающий работе сервера.");
					IPBanList(AntCh1, reason333);
				}
				else//если ид игрока был найден, то:
				{
					format(string,sizeof(string),"* IP игрока %s [%d] был забанен за чит (3), мешающий работе сервера !",RealName[dopper],dopper);
					print(string);
					SendClientMessageToAll(COLOR_RED,string);
					strdel(fbanreason[dopper], 0, 256);//очистка причины бана
					strcat(fbanreason[dopper], "* Чит (3), мешающий работе сервера.");
					PlayBanList(dopper, fbanreason[dopper], 0);
					SetTimerEx("PlayKick", 300, 0, "i", dopper);
				}
				new ispban[128];
				strcat(ispban, "banip ");//сборка RCON-команды бана
				strcat(ispban, AntCh1);
				SendRconCommand(ispban);//RCON-команда бана
				SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
			}
			else
			{
				ParaAntCh1 = 10;
			}
		}
		if(ParaAntCh1 == 1)
		{
		    new str444[128];
			strcat(str444, str333[pos+21]);
			if(strcmp(AntCh1, str444, false) == 0)
			{
				ParaAntCh1 = 2;
				print("[AntiCheatSys] ---------- 3.2 ----------");
			}
			else
			{
				ParaAntCh1 = 10;
			}
		}
		if(ParaAntCh1 == 0)
		{
			strdel(AntCh1, 0, 128);
			strcat(AntCh1, str333[pos+21]);
			ParaAntCh1 = 1;
			print("[AntiCheatSys] ---------- 3.1 ----------");
		}
		if(ParaAntCh1 == 10)
		{
			ParaAntCh1 = 0;
		}
	}
	else
	{
		ParaAntCh1 = 0;
	}
	pos = strfind(str333, "Invalid client connecting from ", false, 10);
	if(pos == 11)
	{
		ParaAntCh1 = 0;
		ParaAntCh3 = 0;
		ParaAntCh4 = 0;
		if(ParaAntCh2 == 2)
		{
		    new str444[128];
			strcat(str444, str333[pos+31]);
			if(strcmp(AntCh2, str444, false) == 0)
			{
				ParaAntCh2 = 10;
				print("[AntiCheatSys] ---------- 4.3 ----------");
				new dopper = -600;
				for(new i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
				{
					if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
					{//определение ид игрока по его IP
						if(strcmp(AntCh2, PlayerInfo[i][pIPAdr], true) == 0)
						{
							dopper = i;//ид игрока найден
						}
					}
				}
				if(dopper == -600)//если ид игрока НЕ найден, то:
				{
					format(string,sizeof(string),"* IP [%s] был забанен за чит (4), мешающий работе сервера !",AntCh2);
					print(string);
					SendClientMessageToAll(COLOR_RED,string);
					new reason333[128];
					format(reason333,sizeof(reason333),"* Чит (4), мешающий работе сервера.");
					IPBanList(AntCh2, reason333);
				}
				else//если ид игрока был найден, то:
				{
					format(string,sizeof(string),"* IP игрока %s [%d] был забанен за чит (4), мешающий работе сервера !",RealName[dopper],dopper);
					print(string);
					SendClientMessageToAll(COLOR_RED,string);
					strdel(fbanreason[dopper], 0, 256);//очистка причины бана
					strcat(fbanreason[dopper], "* Чит (4), мешающий работе сервера.");
					PlayBanList(dopper, fbanreason[dopper], 0);
					SetTimerEx("PlayKick", 300, 0, "i", dopper);
				}
				new ispban[128];
				strcat(ispban, "banip ");//сборка RCON-команды бана
				strcat(ispban, AntCh2);
				SendRconCommand(ispban);//RCON-команда бана
				SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
			}
			else
			{
				ParaAntCh2 = 10;
			}
		}
		if(ParaAntCh2 == 1)
		{
		    new str444[128];
			strcat(str444, str333[pos+31]);
			if(strcmp(AntCh2, str444, false) == 0)
			{
				ParaAntCh2 = 2;
				print("[AntiCheatSys] ---------- 4.2 ----------");
			}
			else
			{
				ParaAntCh2 = 10;
			}
		}
		if(ParaAntCh2 == 0)
		{
			strdel(AntCh2, 0, 128);
			strcat(AntCh2, str333[pos+31]);
			ParaAntCh2 = 1;
			print("[AntiCheatSys] ---------- 4.1 ----------");
		}
		if(ParaAntCh2 == 10)
		{
			ParaAntCh2 = 0;
		}
	}
	else
	{
		ParaAntCh2 = 0;
	}
	pos = strfind(str333, "Packet was modified, sent by id: ", false, 10);
	if(pos == 11)
	{
		ParaAntCh1 = 0;
		ParaAntCh2 = 0;
		ParaAntCh4 = 0;
		if(ParaAntCh3 == 2)
		{
			split(str333[pos+33], strarr, ',');
			new zn444 = strlen(strarr[0]);
			split(str333[pos+39+zn444], strarr, ':');
		    new str444[128];
			strcat(str444, strarr[0]);
			if(strcmp(AntCh3, str444, false) == 0)
			{
				ParaAntCh3 = 10;
				print("[AntiCheatSys] ---------- 5.3 ----------");
				new dopper = -600;
				for(new i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
				{
					if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
					{//определение ид игрока по его IP
						if(strcmp(AntCh3, PlayerInfo[i][pIPAdr], true) == 0)
						{
							dopper = i;//ид игрока найден
						}
					}
				}
				if(dopper == -600)//если ид игрока НЕ найден, то:
				{
					format(string,sizeof(string),"* IP [%s] был забанен за чит (5), мешающий работе сервера !",AntCh3);
					print(string);
					SendClientMessageToAll(COLOR_RED,string);
					new reason333[128];
					format(reason333,sizeof(reason333),"* Чит (5), мешающий работе сервера.");
					IPBanList(AntCh3, reason333);
				}
				else//если ид игрока был найден, то:
				{
					format(string,sizeof(string),"* IP игрока %s [%d] был забанен за чит (5), мешающий работе сервера !",RealName[dopper],dopper);
					print(string);
					SendClientMessageToAll(COLOR_RED,string);
					strdel(fbanreason[dopper], 0, 256);//очистка причины бана
					strcat(fbanreason[dopper], "* Чит (5), мешающий работе сервера.");
					PlayBanList(dopper, fbanreason[dopper], 0);
					SetTimerEx("PlayKick", 300, 0, "i", dopper);
				}
				new ispban[128];
				strcat(ispban, "banip ");//сборка RCON-команды бана
				strcat(ispban, AntCh3);
				SendRconCommand(ispban);//RCON-команда бана
				SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
			}
			else
			{
				ParaAntCh3 = 10;
			}
		}
		if(ParaAntCh3 == 1)
		{
			split(str333[pos+33], strarr, ',');
			new zn444 = strlen(strarr[0]);
			split(str333[pos+39+zn444], strarr, ':');
		    new str444[128];
			strcat(str444, strarr[0]);
			if(strcmp(AntCh3, str444, false) == 0)
			{
				ParaAntCh3 = 2;
				print("[AntiCheatSys] ---------- 5.2 ----------");
			}
			else
			{
				ParaAntCh3 = 10;
			}
		}
		if(ParaAntCh3 == 0)
		{
			split(str333[pos+33], strarr, ',');
			new zn444 = strlen(strarr[0]);
			split(str333[pos+39+zn444], strarr, ':');
			strdel(AntCh3, 0, 128);
			strcat(AntCh3, strarr[0]);
			ParaAntCh3 = 1;
			print("[AntiCheatSys] ---------- 5.1 ----------");
		}
		if(ParaAntCh3 == 10)
		{
			ParaAntCh3 = 0;
		}
	}
	else
	{
		ParaAntCh3 = 0;
	}
	pos = strfind(str333, "Warning: PlayerDialogResponse PlayerId: ", false, 10);
	if(pos == 11)
	{
		ParaAntCh1 = 0;
		ParaAntCh2 = 0;
		ParaAntCh3 = 0;
		if(ParaAntCh4 == 2)
		{
			new idx = 0;
			new zn444 = strval(strtok(str333[pos+39], idx));
			if(AntCh4 == zn444)
			{
				ParaAntCh4 = 10;
				print("[AntiCheatSys] ---------- 6.3 ----------");
				exitcheat[AntCh4] = 1;//игрок - чит
				gPlayerLogged[AntCh4] = 1;//разрешить запись аккаунта
				PlayerInfo[AntCh4][pMinlog] = 0;//заполняем переменные для бана
				PlayerInfo[AntCh4][pAdmin] = 0;
				PlayerInfo[AntCh4][pAdmshad] = 0;
				PlayerInfo[AntCh4][pAdmlive] = 0;
				PlayerInfo[AntCh4][pReg] = 1;
				PlayerInfo[AntCh4][pPrison] = 100;
				PlayerInfo[AntCh4][pPrisonsec] = 1000000;
				PlayerInfo[AntCh4][pMuted] = 100;
				PlayerInfo[AntCh4][pMutedsec] = 1000000;
				SetPVarInt(AntCh4, "PlMon", 1000);
				PlayerInfo[AntCh4][pKills] = 0;
				PlayerInfo[AntCh4][pDeaths] = 0;
				PlayerInfo[AntCh4][pVIP] = 3;
				PlayerInfo[AntCh4][pLock] = 0;

				ResetPlayerWeapons(AntCh4);//отбираем оружие и предметы
				for(new j = 0; j < 13; j++)
				{
					play2weap[AntCh4][j] = 0;
					play2ammo[AntCh4][j] = 0;
				}

				format(string,sizeof(string),"* IP игрока %s [%d] был забанен за чит (6), мешающий работе сервера !",RealName[AntCh4],AntCh4);
				print(string);
				SendClientMessageToAll(COLOR_RED,string);
				strdel(fbanreason[AntCh4], 0, 256);//очистка причины бана
				strcat(fbanreason[AntCh4], "* Чит (6), мешающий работе сервера.");
				PlayBanList(AntCh4, fbanreason[AntCh4], 0);
				SetTimerEx("PlayBan", 300, 0, "i", AntCh4);
			}
			else
			{
				ParaAntCh4 = 10;
			}
		}
		if(ParaAntCh4 == 1)
		{
			new idx = 0;
			new zn444 = strval(strtok(str333[pos+39], idx));
			if(AntCh4 == zn444)
			{
				ParaAntCh4 = 2;
				print("[AntiCheatSys] ---------- 6.2 ----------");
			}
			else
			{
				ParaAntCh4 = 10;
			}
		}
		if(ParaAntCh4 == 0)
		{
			new idx = 0;
			AntCh4 = strval(strtok(str333[pos+39], idx));
			ParaAntCh4 = 1;
			print("[AntiCheatSys] ---------- 6.1 ----------");
		}
		if(ParaAntCh4 == 10)
		{
			ParaAntCh4 = 0;
		}
	}
	else
	{
		ParaAntCh4 = 0;
	}
	pos = strfind(str333, "Warning: PlayerDialogResponse crash exploit from PlayerId: ", false, 10);
	if(pos == 11)
	{
		ParaAntCh1 = 0;
		ParaAntCh2 = 0;
		ParaAntCh3 = 0;
		ParaAntCh4 = 0;
		print("[AntiCheatSys] ---------- 7 ----------");
		new idx = 0;
		new zn444 = strval(strtok(str333[pos+59], idx));
		exitcheat[zn444] = 1;//игрок - чит
		gPlayerLogged[zn444] = 1;//разрешить запись аккаунта
		PlayerInfo[zn444][pMinlog] = 0;//заполняем переменные для бана
		PlayerInfo[zn444][pAdmin] = 0;
		PlayerInfo[zn444][pAdmshad] = 0;
		PlayerInfo[zn444][pAdmlive] = 0;
		PlayerInfo[zn444][pReg] = 1;
		PlayerInfo[zn444][pPrison] = 100;
		PlayerInfo[zn444][pPrisonsec] = 1000000;
		PlayerInfo[zn444][pMuted] = 100;
		PlayerInfo[zn444][pMutedsec] = 1000000;
		SetPVarInt(zn444, "PlMon", 1000);
		PlayerInfo[zn444][pKills] = 0;
		PlayerInfo[zn444][pDeaths] = 0;
		PlayerInfo[zn444][pVIP] = 3;
		PlayerInfo[zn444][pLock] = 0;

		ResetPlayerWeapons(zn444);//отбираем оружие и предметы
		for(new j = 0; j < 13; j++)
		{
			play2weap[zn444][j] = 0;
			play2ammo[zn444][j] = 0;
		}

		format(string,sizeof(string),"* IP игрока %s [%d] был забанен за чит (7), мешающий работе сервера !",RealName[zn444],zn444);
		print(string);
		SendClientMessageToAll(COLOR_RED,string);
		strdel(fbanreason[zn444], 0, 256);//очистка причины бана
		strcat(fbanreason[zn444], "* Чит (7), мешающий работе сервера.");
		PlayBanList(zn444, fbanreason[zn444], 0);
		SetTimerEx("PlayBan", 300, 0, "i", zn444);
	}
	pos = strfind(str333, "Warning: client exceeded 'messageholelimit' ", false, 10);
	if(pos == 11)
	{
		ParaAntCh1 = 0;
		ParaAntCh2 = 0;
		ParaAntCh3 = 0;
		ParaAntCh4 = 0;
		split(str333[pos+44], strarr, ')');
		new zn444 = strlen(strarr[0]);
		split(str333[pos+46+zn444], strarr, ':');
		new str444[128];
		strcat(str444, strarr[0]);
		print("[AntiCheatSys] ---------- 8 ----------");
		new dopper = -600;
		for(new i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
		{
			if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
			{//определение ид игрока по его IP
				if(strcmp(str444, PlayerInfo[i][pIPAdr], true) == 0)
				{
					dopper = i;//ид игрока найден
				}
			}
		}
		if(dopper == -600)//если ид игрока НЕ найден, то:
		{
			format(string,sizeof(string),"* IP [%s] был забанен за чит (8), мешающий работе сервера !",str444);
			print(string);
			SendClientMessageToAll(COLOR_RED,string);
			new reason333[128];
			format(reason333,sizeof(reason333),"* Чит (8), мешающий работе сервера.");
			IPBanList(str444, reason333);
		}
		else//если ид игрока был найден, то:
		{
			format(string,sizeof(string),"* IP игрока %s [%d] был забанен за чит (8), мешающий работе сервера !",RealName[dopper],dopper);
			print(string);
			SendClientMessageToAll(COLOR_RED,string);
			strdel(fbanreason[dopper], 0, 256);//очистка причины бана
			strcat(fbanreason[dopper], "* Чит (8), мешающий работе сервера.");
			PlayBanList(dopper, fbanreason[dopper], 0);
			SetTimerEx("PlayKick", 300, 0, "i", dopper);
		}
		new ispban[128];
		strcat(ispban, "banip ");//сборка RCON-команды бана
		strcat(ispban, str444);
		SendRconCommand(ispban);//RCON-команда бана
		SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа
	}
	pos = strfind(str333, "[warning] Invalid shot data for player", false, 10);
	if(pos == 11)
	{
		ParaAntCh1 = 0;
		ParaAntCh2 = 0;
		ParaAntCh3 = 0;
		ParaAntCh4 = 0;
		print("[AntiCheatSys] ---------- 9 ----------");
		split(str333[pos+38], strarr, '(');
		new zn999 = strlen(strarr[0]);
		split(str333[pos+39+zn999], strarr, ')');
		new zn444 = strval(strarr[0]);
		exitcheat[zn444] = 1;//игрок - чит
		gPlayerLogged[zn444] = 1;//разрешить запись аккаунта
		PlayerInfo[zn444][pMinlog] = 0;//заполняем переменные для бана
		PlayerInfo[zn444][pAdmin] = 0;
		PlayerInfo[zn444][pAdmshad] = 0;
		PlayerInfo[zn444][pAdmlive] = 0;
		PlayerInfo[zn444][pReg] = 1;
		PlayerInfo[zn444][pPrison] = 100;
		PlayerInfo[zn444][pPrisonsec] = 1000000;
		PlayerInfo[zn444][pMuted] = 100;
		PlayerInfo[zn444][pMutedsec] = 1000000;
		SetPVarInt(zn444, "PlMon", 1000);
		PlayerInfo[zn444][pKills] = 0;
		PlayerInfo[zn444][pDeaths] = 0;
		PlayerInfo[zn444][pVIP] = 3;
		PlayerInfo[zn444][pLock] = 0;

		ResetPlayerWeapons(zn444);//отбираем оружие и предметы
		for(new j = 0; j < 13; j++)
		{
			play2weap[zn444][j] = 0;
			play2ammo[zn444][j] = 0;
		}

		format(string,sizeof(string),"* IP игрока %s [%d] был забанен за чит (9), мешающий работе сервера !",RealName[zn444],zn444);
		print(string);
		SendClientMessageToAll(COLOR_RED,string);
		strdel(fbanreason[zn444], 0, 256);//очистка причины бана
		strcat(fbanreason[zn444], "* Чит (9), мешающий работе сервера.");
		PlayBanList(zn444, fbanreason[zn444], 0);
		SetTimerEx("PlayBan", 300, 0, "i", zn444);
	}
#endif

//----------------------------- Elevator - 1 -----------------------------------
	if(MovObj == 1)//разрешение мониторинга лифта
	{
		new dop;
		new Float:X, Float:Y, Float:Z;
		GetObjectPos(Obj_Elevator, X, Y, Z);
		if(11.77 < Z < 18.84){dop = 0;}//нахождение этажа, где находится кабина лифта
		if(18.84 < Z < 25.84){dop = 1;}
		if(25.84 < Z < 31.30){dop = 2;}
		if(31.30 < Z < 36.75){dop = 3;}
		if(36.75 < Z < 42.20){dop = 4;}
		if(42.20 < Z < 47.65){dop = 5;}
		if(47.65 < Z < 53.10){dop = 6;}
		if(53.10 < Z < 58.55){dop = 7;}
		if(58.55 < Z < 64.01){dop = 8;}
		if(64.01 < Z < 69.46){dop = 9;}
		if(69.46 < Z < 74.91){dop = 10;}
		if(74.91 < Z < 80.36){dop = 11;}
		if(80.36 < Z < 85.81){dop = 12;}
		if(85.81 < Z < 91.26){dop = 13;}
		if(91.26 < Z < 96.71){dop = 14;}
		if(96.71 < Z < 102.17){dop = 15;}
		if(102.17 < Z < 107.62){dop = 16;}
		if(107.62 < Z < 113.07){dop = 17;}
		if(113.07 < Z < 118.52){dop = 18;}
		if(118.52 < Z < 123.97){dop = 19;}
		if(123.97 < Z < 129.42){dop = 20;}

		for(new i; i < sizeof(Obj_FloorDoors); i ++)
		{
			format(string, sizeof(string), "[ %s ]", FloorNames[dop]);//создание 3D-текстов мониторинга (в зависимости от этажа)
			UpdateDynamic3DTextLabelText(Label2_Floors[i], 0x22AA22FF, string);
		}
	}
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	if(MovObj22 == 1)//разрешение мониторинга лифта
	{
		new dop;
		new Float:X, Float:Y, Float:Z;
		GetObjectPos(Obj_Elevator22, X, Y, Z);
		if(15.96 < Z < 25.40){dop = 0;}//нахождение этажа, где находится кабина лифта
		if(25.40 < Z < 39.97){dop = 1;}
		if(39.97 < Z < 49.25){dop = 2;}
		if(49.25 < Z < 53.75){dop = 3;}
		if(53.75 < Z < 58.25){dop = 4;}
		if(58.25 < Z < 62.75){dop = 5;}
		if(62.75 < Z < 67.26){dop = 6;}
		if(67.26 < Z < 71.76){dop = 7;}
		if(71.76 < Z < 76.26){dop = 8;}
		if(76.26 < Z < 80.76){dop = 9;}
		if(80.76 < Z < 85.26){dop = 10;}
		if(85.26 < Z < 89.76){dop = 11;}
		if(89.76 < Z < 94.26){dop = 12;}
		if(94.26 < Z < 98.76){dop = 13;}

		for(new i; i < sizeof(Obj_FloorDoors22); i ++)
		{
			format(string, sizeof(string), "[ %s ]", FloorNames22[dop]);//создание 3D-текстов мониторинга (в зависимости от этажа)
			UpdateDynamic3DTextLabelText(Label2_Floors22[i], 0x22AA22FF, string);
		}
	}
//--------------------------- End Elevator - 2 ---------------------------------
#endif

	for(new i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
	{
		if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
		{
			GetPlayerPos(i, PosX, PosY, PosZ);
			new nmod = GetVehicleModel(GetPlayerVehicleID(i));
			if((nmod == 538 || nmod == 537) &&  pertrain == 0 && PlayerInfo[i][pAdmin] == 0)
			{//если игрок в поезде И запрещено вождение поездов, И игрок не админ, то высадить игрока из поезда, и респавн игрока
				SendClientMessage(i, COLOR_RED, " В данный момент, администрация сервера ЗАПРЕТИЛА вождение поездов !");
				tpdrift[i] = 1;
				EnterTick33[i] = 1;//обход антикрашера - 3
				SetPlayerPos(i,PosX+3,PosY+3,PosZ+5);
				SetTimerEx("SecSpa22", 300, 0, "i", i);
			}

			if(PlayLock1[0][i] != 600 && playspa[i] == 1)//если игрок заблокирован, И заспавнен, то:
			{
 				SetPlayerInterior(i, PlayLock1[1][i]);//установка интерьера блокировки
				SetPlayerVirtualWorld(i, PlayLock1[2][i]);//установка виртуального мира блокировки
				SetPlayerPos(i, PlayLock2[0][i], PlayLock2[1][i], PlayLock2[2][i]);//установка координат блокировки
				SetPlayerFacingAngle(i, PlayLock2[3][i]);//установка угла блокировки
 				SetCameraBehindPlayer(i);//расположить камеру за игроком
			}

			if(IsPlayerInAnyVehicle(i) && scrmod[1][i] == 0)//speedometer
			{
				if(bool:R_Vehicle[i] == VehicleSpeed_2)
				{
//------------------------------------------------------------------------------
// Vehicle Speed
					format(string, sizeof(string), "%d", GetPlayerSpeed(i));
					PlayerTextDrawSetString(i, VehicleSpeed[i], string);
//------------------------------------------------------------------------------
				}
			}

			if(admper1[i] != 600 && admper5[i] == 1)//если игрок - админ ведущий наблюдение,
			{//И наблюдаем за транспортом, то:
				format(string, sizeof(string), "%d", GetPlayerSpeed(admper1[i]));
				PlayerTextDrawSetString(i, VehicleSpeed[i], string);
			}

			if((1034 < PosX < 1049 && -1035 < PosY < -1002 && 27 < PosZ < 37) ||//проверка игрока в гаражах//карта
			(-1946 < PosX < -1926 && 230 < PosY < 260 && 29 < PosZ < 39) ||
			(2378 < PosX < 2396 && 1034 < PosY < 1064 && 6 < PosZ < 16) ||
			(2636 < PosX < 2653 && -2054 < PosY < -2030 && 9 < PosZ < 19) ||
			(-2737 < PosX < -2708 && 209 < PosY < 226 && -1 < PosZ < 9) ||
			(608 < PosX < 628 && -12 < PosY < 8 && 991 < PosZ < 1011) ||//интерьеры
			(607 < PosX < 627 && -85 < PosY < -65 && 988 < PosZ < 1008) ||
			(605 < PosX < 625 && -134 < PosY < -114 && 988 < PosZ < 1008))
			{//если игрок на территории (или внутри) любого из 5-и гаражей, то:
				PlayCRTP[i] = 1;//блокировка контроля координат
				tpdrift[i] = 1;//блокировка счётчика дрифта игрока
				if(GetPlayerState(i) == 2)//если игрок на месте водителя, то:
				{
					new carid;
					carid = GetPlayerVehicleID(i);//получение ид авто игрока
					LinkVehicleToInterior(carid, GetPlayerInterior(i));//задаём транспорту интерьер игрока,
					SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(i));//и виртуальный мир игрока
					for(new j = 0; j < MAX_PLAYERS; j++)
					{
						if(IsPlayerConnected(j))
						{
							if(GetPlayerVehicleID(j) == carid && j != i)//поиск пассажира (пассажиров)
							{
	 							SetPlayerInterior(j, GetPlayerInterior(i));//задаём пассажиру (пассажирам) интерьер игрока,
								SetPlayerVirtualWorld(j, GetPlayerVirtualWorld(i));//и виртуальный мир игрока
							}
						}
					}
				}
			}
			if((1563 < PosX < 1578 && -1341 < PosY < -1326 && 9 < PosZ < 24) ||//проверка игрока на стандартных телепортах:
			(1541 < PosX < 1556 && -1372 < PosY < -1357 && 319 < PosZ < 334) ||//небоскрёб LS
			(-1756 < PosX < -1741 && 860 < PosY < 875 && 18 < PosZ < 33) ||//шпиль SF
			(-1760 < PosX < -1745 && 877 < PosY < 892 && 288 < PosZ < 303))
			{
				PlayCRTP[i] = 1;//блокировка контроля координат
			}
		}
	}
	return 1;
}

public OneSecOnd()
{
	gettime(timecor[0], timecor[1]);
	TimCor();//коррекция времени
	new PlayVeh, PlayVW2;
	new swper, playslot[13], dopper;//античит
	new play333weap[13], play333ammo[13], dopper333;//контроль запаса патров
	new Float:PosX, Float:PosY, Float:PosZ;//проверка игрока в X-зоне
	new playnam333[MAX_PLAYER_NAME];
	new string[256];
//----- антикрашер игроков - 8 (2018-2020, краш обнаружен на версии 0.3.7) -----
	new cr8d1, cr8d2;
//-------------------- антикрашер игроков - 8 (конец) --------------------------
	if(timecor[0] == servchas && timecor[1] == 0 && resauto == 0)
	{
		printf("* Рестарт сервера по таймеру !");
		SendClientMessageToAll(COLOR_RED,"* Рестарт сервера по таймеру !");
		SendClientMessageToAll(COLOR_RED," Внимание ! Через 2 минуты произойдёт рестарт сервера !");
		restart = SetTimer("RestartS", 120000, 1);
		resauto = 1;
	}
	if(nucexplos == 1)//если на сервере ядерный взрыв, то:
	{
		SetWeather(19);
		GlWeat = 19;
		SetWorldTime(0);
		GlTime = 0;
		nucexptime++;
		if(nucexptime == 1200)//если прошло 20 минут с момента ядерного взрыва, то:
		{
			nucexplos = 0;//активировать автоматическую отмену ядерного взрыва
			nucexptime = -100;
		}
		if(nucexplos == 0 && nucexptime == -100)//если активна автоматическая отмена ядерного взрыва, то:
		{
			SetWeather(1);
			GlWeat = 1;
			if(timecor[8] == 1)//если включено реальное время, то:
			{
				ReadCorTime();//чтение коррекции времени
				gettime(timecor[0], timecor[1]);
				TimCor();//коррекция времени
				SetWorldTime(timecor[0]);
				GlTime = timecor[0];
				TimePlay(timecor[0]);
			}
			else
			{
				SetWorldTime(12);
				GlTime = 12;
				TimePlay(12);
			}
		}
	}
	for(new i=0;i<MAX_PLAYERS;i++)//цикл для всех игроков
	{
		if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
		{
			if(admper1[i] != 600)//если игрок - админ ведущий наблюдение, то:
			{
				SetPVarInt(i, "PlCRct9", 1);//блокировка античита управления чужим транспортом
			}
			if(GetPVarInt(i, "PlCRct9") != 0 && ct9control[i] == 5)
			{//если есть блокировка античита управления чужим транспортом, И найден чит, то:
				ct9control[i] = 1;//сброс определения чита (включение контроля чита)
			}
			if(ct9delay == 0 && ct9control[i] == 5)//если задержка равна 0, И найден чит, то:
			{
				ct9delay++;//включение задержки
				ct9control[i] = 0;//выключение контроля чита
				format(string, sizeof(string), "* Игрок %s [%d] был кикнут - чит управления чужим транспортом !", RealName[i], i);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				SetTimerEx("PlayKick", 300, 0, "i", i);
			}
			if(ct9control[i] == 5)//если чит был найден, то:
			{
				ct9control[i] = 1;//сброс определения чита (включение контроля чита)
			}
			if(GetPVarInt(i, "PlCRct9") != 0) { SetPVarInt(i, "PlCRct9", GetPVarInt(i, "PlCRct9") + 1); }
			if(GetPVarInt(i, "PlCRct9") >= 4) { SetPVarInt(i, "PlCRct9", 0); }//снятие блокировки античита управления чужим транспортом
//----- антикрашер игроков - 7 (июль 2017, краш обнаружен на версии 0.3.7) -----
			if(crash7count[i] >= 10)
			{
				format(string, sizeof(string), "* Игрок %s [%d] был кикнут за краш игроков - 7 !", RealName[i], i);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				SetTimerEx("PlayKick", 300, 0, "i", i);
			}
			crash7count[i] = 0;
//-------------------- антикрашер игроков - 7 (конец) --------------------------
			PlayVW2 = GetPlayerVirtualWorld(i);
//-------------------------------- GarHouse ------------------------------------
			if(GetPVarInt(i, "IsInHouse") == 1 && (PlayVW2 < 1000 || PlayVW2 > MAX_VW_HOUSE))
			{
				SetPVarInt(i, "IsInHouse", 0);
			}
//------------------------------ End GarHouse ----------------------------------
			if(nucexplos == 1)//если на сервере ядерный взрыв, то:
			{
				LocTime[i] = 0;
				if(SnowONOFF[i] == 1)
				{
					new Float:hp;
					SetPlayerArmour(i,0);
					GetPlayerHealth(i,hp);
					SetPlayerHealth(i,hp-10);
					GetPlayerCameraPos(i,PosX,PosY,PosZ);
					MovePlayerObject(i,snowobj[i],PosX,PosY,PosZ-5,9999.0);
				}
			}
			if(nucexplos == 0 && nucexptime == -100)//если активна автоматическая отмена ядерного взрыва, то:
			{
				SnowONOFF[i] = 0;
				DestroyPlayerObject(i,snowobj[i]);
			}
			PlayVeh = GetPlayerVehicleID(admper1[i]);
			if(admper1[i] != 600)//если игрок - админ ведущий наблюдение, то:
			{
				if(PlayVeh != 0 && admper5[i] == 0)//если игрок в транспорте,
				{//И мы наблюдали за игроком, то:
					PlayerSpectateVehicle(i, PlayVeh, SPECTATE_MODE_NORMAL);

					PlayerTextDrawShow(i, VehicleSpeed[i]);//включаем текстдравы спидометра
					TextDrawShowForPlayer(i, KMH);
					TextDrawShowForPlayer(i, HMS22);//включаем текстдравы максимальной горизонтальной скорости
					PlayerTextDrawShow(i, HMS44[i]);

					format(string, sizeof(string), "%d", GetHMaxSpeed(PlayVeh));//показываем максимальную горизонтальную скорость
					PlayerTextDrawSetString(i, HMS44[i], string);
					admper5[i] = 1;//наблюдаем за транспортом
				}
				if(PlayVeh == 0 && admper5[i] == 1)//если игрок НЕ в транспорте,
				{//И мы наблюдали за транспортом, то:

					PlayerTextDrawHide(i, VehicleSpeed[i]);//отключаем текстдравы спидометра
					TextDrawHideForPlayer(i, KMH);
					TextDrawHideForPlayer(i, HMS22);//отключаем текстдравы максимальной горизонтальной скорости
					PlayerTextDrawHide(i, HMS44[i]);

					PlayerSpectatePlayer(i, admper1[i], SPECTATE_MODE_NORMAL);
					admper5[i] = 0;//наблюдаем за игроком
				}
				if(admper5[i] == 3)//если устанавлен второй цикл переключение наблюдения, то:
				{
					format(string, sizeof(string), "%d", GetHMaxSpeed(PlayVeh));//показываем максимальную горизонтальную скорость
					PlayerTextDrawSetString(i, HMS44[i], string);
					PlayerSpectateVehicle(i, PlayVeh, SPECTATE_MODE_NORMAL);
					admper5[i] = 1;//наблюдаем за транспортом
				}
				if(admper5[i] == 2)//если устанавленно переключение наблюдения, то:
				{
					PlayerSpectatePlayer(i, admper1[i], SPECTATE_MODE_NORMAL);//наблюдаем за игроком
					admper5[i] = 3;//устанавливаем второй цикл переключения наблюдения
				}
				if(admper6[i] == 2)//если переключение наблюдения состоялось, то:
				{
					admper6[i] = 0;//обнуляем отметку о переключении наблюдения
				}
				if(admper6[i] == 1)//если отметка о переключении наблюдения активна, то:
				{
					SetPlayerInterior(i, GetPlayerInterior(admper1[i]));//установить интерьер админу
					SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(admper1[i]));//установить мир админу
					if(PlayVeh != 0)//если игрок в транспорте, то:
					{
						format(string, sizeof(string), "%d", GetHMaxSpeed(PlayVeh));//показываем максимальную горизонтальную скорость
						PlayerTextDrawSetString(i, HMS44[i], string);
						PlayerSpectateVehicle(i, PlayVeh, SPECTATE_MODE_NORMAL);
						admper5[i] = 1;//наблюдаем за транспортом
					}
					else
					{
						PlayerSpectatePlayer(i, admper1[i], SPECTATE_MODE_NORMAL);//включить наблюдение
						admper5[i] = 0;//наблюдаем за игроком
					}
					admper6[i] = 2;//делаем отметку о переключении наблюдения
				}
				if(((GetPlayerInterior(i) != GetPlayerInterior(admper1[i])) || (PlayVW2 != GetPlayerVirtualWorld(admper1[i]))) && admper6[i] == 0)
				{//если у игрока (за кем наблюдает админ) изменился интерьер ИЛИ виртуальный мир, И отметка о переключении наблюдения НЕ активна, то:
					admper6[i] = 1;//активируем отметку о переключении наблюдения
				}
			}
			if(PlayerInfo[i][pMutedsec] > 0)//если игрок заткнут, то:
			{
				PlayerInfo[i][pMutedsec]--;
				if(PlayerInfo[i][pMutedsec] <= 0)
				{
					PlayerInfo[i][pMutedsec] = 0;
					format(string, sizeof(string), "* Игрок %s [%d] разоткнут.", RealName[i], i);
					print(string);
					SendClientMessageToAll(COLOR_GREEN, string);
				}
			}
			if(PlayerInfo[i][pPrisonsec] > 0)//если игрок в тюрьме, то:
			{
				PlayerInfo[i][pPrisonsec]--;
				if(PlayerInfo[i][pPrisonsec] <= 0)
				{
					PlayerInfo[i][pPrisonsec] = 0;
					format(string, sizeof(string), "* Игрок %s [%d] освобождён.", RealName[i], i);
					print(string);
					SendClientMessageToAll(COLOR_GREEN, string);
					weapstatplay[i] = 0;
					SpawnPlayer(i);
				}
			}
			if(StopHeal[i] > 0)//если переменная задержки команды /heal > 0, то:
			{
				StopHeal[i]--;//декрементируем переменную задержки
			}
			if(StopGMoney[i] > 0)//если переменная задержки команды /givemoney > 0, то:
			{
				StopGMoney[i]--;//декрементируем переменную задержки
			}
			if(StopHidrav[i] > 0)//если переменная задержки гидравлики > 0, то:
			{
				StopHidrav[i]--;//декрементируем переменную задержки
			}
			if(EnterTick33[i] < 0 || EnterTick33[i] >= 2)
			{//обнуление переменной обхода антикрашера - 3 в режиме наблюдения
				EnterTick33[i] = 0;
			}
			if(EnterTick33[i] == 1)
			{
				EnterTick33[i] = 2;
			}
			if(countdown[i]>0)//если игрок запустил обратный отсчёт, то:
			{
				countdown[i]-=1;
				new str[6];
				format(str,6,"...%d",countdown[i]);
				GameTextForPlayer(i,str,950,4);
				PlayerPlaySound(i,1056,0.0,0.0,0.0);
				if(countdown[i]<4)TogglePlayerControllable(i,0);
			}
			if(countdown[i]==0)
			{
				TogglePlayerControllable(i,1);
				GameTextForPlayer(i,"~b~GO GO GO !",700,4);
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				countdown[i]=-1;
			}
			swper = 0;//античит
			if(playspa[i] == 0)
			{//если игрок не заспавнился, то:
				oneminkick[i]++;
				if(oneminkick[i] >= 180)
				{
					swper = 1;//не заспавнился в течение трёх минут
					oneminkick[i] = 0;
				}
			}
			else//иначе
			{
				oneminkick[i] = 0;//обнуляем переменную
			}
			GetPlayerName(i, playnam333, sizeof(playnam333));
			new aa333[64];//доработка для использования Русских ников
			format(aa333, sizeof(aa333), "%s", playnam333);//доработка для использования Русских ников
			if(strcmp(aa333,RealName[i],false) != 0)//доработка для использования Русских ников
//			if(strcmp(playnam333,RealName[i],false) != 0)
			{
				swper = 2;//чит на смену ника
			}
			for(new j = 0; j < 13; j++)//читаем все слоты
			{
				GetPlayerWeaponData(i, j, playslot[j], dopper);
			}
			if(playslot[11] == 44 || playslot[11] == 45 || playslot[2] != 0 || playslot[3] != 0 ||
		  	playslot[4] != 0 || playslot[5] != 0 || playslot[6] != 0 || playslot[7] != 0 ||
	   		playslot[8] != 0 || playslot[12] != 0)
			{
				swper = 3;//чит на запрещённые предметы или оружие
				if(PlayerInfo[i][pPrisonsec] > 0 || DerbyID[i] == 2)//если игрок в тюрьме, или в зоне дерби, то:
				{//корректируем слоты во вспомогательных переменных
					ResetPlayerWeapons(i);//отбираем оружие и предметы
					for(new j = 0; j < 13; j++)//обнуляем и заполняем слоты оружия и предметов
					{
						play2weap[i][j] = 0;
						play2ammo[i][j] = 0;
						GivePlayerWeapon(i, play2weap[i][j], play2ammo[i][j]);
					}
				}
				else//если игрок НЕ в тюрьме, и НЕ в зоне дерби, то:
				{//сохраняем в файле его текущие слоты оружия
					for(new j = 0; j < 13; j++)//сохранение слотов оружия и предметов
					{
						GetPlayerWeaponData(i, j, play2weap[i][j], play2ammo[i][j]);
					}
					ResetPlayerWeapons(i);//отбираем оружие и предметы
					for(new j = 0; j < 13; j++)//обнуляем и заполняем слоты оружия и предметов
					{
						play2weap[i][j] = 0;
						play2ammo[i][j] = 0;
						GivePlayerWeapon(i, play2weap[i][j], play2ammo[i][j]);
					}
				}
				swper = 3;//чит на запрещённые предметы или оружие
				for(new j = 0; j < 13; j++)//обнуление слотов оружия и предметов
				{
					play2weap[i][j] = 0;
					play2ammo[i][j] = 0;
				}
				ResetPlayerWeapons(i);//отбираем оружие и предметы
			}
			if(GetPlayerState(i) == 2)//если игрок на месте водителя, то:
			{
				new idcar, model333;
				idcar = GetPlayerVehicleID(i);//чтение ID транспорта игрока
				model333 = GetVehicleModel(idcar);//чтение модели транспорта игрока
				if(model333 == 432 || model333 == 425 || model333 == 476 || model333 == 447 ||
				model333 == 520 || model333 == 430 || model333 == 464)//если игрок в запрещённой модели, то:
				{
					swper = 4;//чит на запрещённую модель транспорта
					DestroyVehicle(idcar);//удаление запрещённой модели
				}
			}
			GetPlayerPos(i, PosX, PosY, PosZ);
			if(playspa[i] == 1 && PlayerInfo[i][pPrisonsec] > 0)
			{//проверка игрока в тюрьме
				if(prisoncount[i] == 3)
				{
					if(PosX < 190 || PosX > 197 || PosY < 170 || PosY > 178 || PosZ < 1001 || PosZ > 1008)
					{//если игрок САМ вышел из тюрьмы, то:
						swper = 5;//побег из тюрьмы
					}
				}
				else
				{
					prisoncount[i]++;
				}
			}
			if(PlayerInfo[i][pPrisonsec] == 0 && prisoncount[i] != 0)
			{//обнуление задержки контроля игрока в тюрьме, если она НЕ равна нулю
				prisoncount[i] = 0;
			}
#if (MOD4CINS == 0)
			if(0 <= chatcon[i] <= 1 && 0 <= GetPVarInt(i, "CComAc0") <= 1 && 0 <= GetPVarInt(i, "CComAc1") <= 1 &&
			0 <= GetPVarInt(i, "CComAc2") <= 1 && 0 <= GetPVarInt(i, "CComAc3") <= 1 && 0 <= GetPVarInt(i, "CComAc4") <= 1 &&
			0 <= GetPVarInt(i, "CComAc5") <= 1 && 0 <= GetPVarInt(i, "CComAc6") <= 1 && 0 <= GetPVarInt(i, "CComAc7") <= 1 &&
			0 <= GetPVarInt(i, "CComAc8") <= 1 && 0 <= GetPVarInt(i, "CComAc9") <= 1 && 0 <= GetPVarInt(i, "CComAc10") <= 1 &&
			0 <= GetPVarInt(i, "CComAc11") <= 1 && 0 <= GetPVarInt(i, "CComAc12") <= 1 && 0 <= GetPVarInt(i, "CComAc13") <= 1 &&
			0 <= GetPVarInt(i, "CComAc14") <= 1 && 0 <= GetPVarInt(i, "CComAc15") <= 1)
			{//если в контрольной переменной чата записаны числа 0 или 1, то:
				chatcon[i] = 0;//обнуляем контрольную переменную чата
				SetPVarInt(i, "CComAc0", 0);
				SetPVarInt(i, "CComAc1", 0);
				SetPVarInt(i, "CComAc2", 0);
				SetPVarInt(i, "CComAc3", 0);
				SetPVarInt(i, "CComAc4", 0);
				SetPVarInt(i, "CComAc5", 0);
				SetPVarInt(i, "CComAc6", 0);
				SetPVarInt(i, "CComAc7", 0);
				SetPVarInt(i, "CComAc8", 0);
				SetPVarInt(i, "CComAc9", 0);
				SetPVarInt(i, "CComAc10", 0);
				SetPVarInt(i, "CComAc11", 0);
				SetPVarInt(i, "CComAc12", 0);
				SetPVarInt(i, "CComAc13", 0);
				SetPVarInt(i, "CComAc14", 0);
				SetPVarInt(i, "CComAc15", 0);
			}
			if(chatcon[i] > 1 || GetPVarInt(i, "CComAc0") > 1 || GetPVarInt(i, "CComAc1") > 1 ||
			GetPVarInt(i, "CComAc2") > 1 || GetPVarInt(i, "CComAc3") > 1 || GetPVarInt(i, "CComAc4") > 1 ||
			GetPVarInt(i, "CComAc5") > 1 || GetPVarInt(i, "CComAc6") > 1 || GetPVarInt(i, "CComAc7") > 1 ||
			GetPVarInt(i, "CComAc8") > 1 || GetPVarInt(i, "CComAc9") > 1 || GetPVarInt(i, "CComAc10") > 1 ||
			GetPVarInt(i, "CComAc11") > 1 || GetPVarInt(i, "CComAc12") > 1 || GetPVarInt(i, "CComAc13") > 1 ||
			GetPVarInt(i, "CComAc14") > 1 || GetPVarInt(i, "CComAc15") > 1)
			{//если игрок написал более 1-й строки за 1 секунду, то:
				if(PlayerInfo[i][pAdmin] == 0)//если игрок НЕ админ, то:
				{
					chatcon[i] = -5;//устанавливаем счётчик 4-х секунд
					SetPVarInt(i, "CComAc0", -5);
					SetPVarInt(i, "CComAc1", -5);
					SetPVarInt(i, "CComAc2", -5);
					SetPVarInt(i, "CComAc3", -5);
					SetPVarInt(i, "CComAc4", -5);
					SetPVarInt(i, "CComAc5", -5);
					SetPVarInt(i, "CComAc6", -5);
					SetPVarInt(i, "CComAc7", -5);
					SetPVarInt(i, "CComAc8", -5);
					SetPVarInt(i, "CComAc9", -5);
					SetPVarInt(i, "CComAc10", -5);
					SetPVarInt(i, "CComAc11", -5);
					SetPVarInt(i, "CComAc12", -5);
					SetPVarInt(i, "CComAc13", -5);
					SetPVarInt(i, "CComAc14", -5);
					SetPVarInt(i, "CComAc15", -5);
				}
				else//иначе (если игрок - админ):
				{
					chatcon[i] = 0;//обнуляем контрольную переменную чата
					SetPVarInt(i, "CComAc0", 0);
					SetPVarInt(i, "CComAc1", 0);
					SetPVarInt(i, "CComAc2", 0);
					SetPVarInt(i, "CComAc3", 0);
					SetPVarInt(i, "CComAc4", 0);
					SetPVarInt(i, "CComAc5", 0);
					SetPVarInt(i, "CComAc6", 0);
					SetPVarInt(i, "CComAc7", 0);
					SetPVarInt(i, "CComAc8", 0);
					SetPVarInt(i, "CComAc9", 0);
					SetPVarInt(i, "CComAc10", 0);
					SetPVarInt(i, "CComAc11", 0);
					SetPVarInt(i, "CComAc12", 0);
					SetPVarInt(i, "CComAc13", 0);
					SetPVarInt(i, "CComAc14", 0);
					SetPVarInt(i, "CComAc15", 0);
				}
			}
			if(chatcon[i] < 0 || GetPVarInt(i, "CComAc0") < 0 || GetPVarInt(i, "CComAc1") < 0 ||
			GetPVarInt(i, "CComAc2") < 0 || GetPVarInt(i, "CComAc3") < 0 || GetPVarInt(i, "CComAc4") < 0 ||
			GetPVarInt(i, "CComAc5") < 0 || GetPVarInt(i, "CComAc6") < 0 || GetPVarInt(i, "CComAc7") < 0 ||
			GetPVarInt(i, "CComAc8") < 0 || GetPVarInt(i, "CComAc9") < 0 || GetPVarInt(i, "CComAc10") < 0 ||
			GetPVarInt(i, "CComAc11") < 0 || GetPVarInt(i, "CComAc12") < 0 || GetPVarInt(i, "CComAc13") < 0 ||
			GetPVarInt(i, "CComAc14") < 0 || GetPVarInt(i, "CComAc15") < 0)
			{//если в контрольной переменной чата - счётчик секунд, то:
				chatcon[i]++;//уменьшаем счётчик секунд
				SetPVarInt(i, "CComAc0", GetPVarInt(i, "CComAc0") + 1);
				SetPVarInt(i, "CComAc1", GetPVarInt(i, "CComAc1") + 1);
				SetPVarInt(i, "CComAc2", GetPVarInt(i, "CComAc2") + 1);
				SetPVarInt(i, "CComAc3", GetPVarInt(i, "CComAc3") + 1);
				SetPVarInt(i, "CComAc4", GetPVarInt(i, "CComAc4") + 1);
				SetPVarInt(i, "CComAc5", GetPVarInt(i, "CComAc5") + 1);
				SetPVarInt(i, "CComAc6", GetPVarInt(i, "CComAc6") + 1);
				SetPVarInt(i, "CComAc7", GetPVarInt(i, "CComAc7") + 1);
				SetPVarInt(i, "CComAc8", GetPVarInt(i, "CComAc8") + 1);
				SetPVarInt(i, "CComAc9", GetPVarInt(i, "CComAc9") + 1);
				SetPVarInt(i, "CComAc10", GetPVarInt(i, "CComAc10") + 1);
				SetPVarInt(i, "CComAc11", GetPVarInt(i, "CComAc11") + 1);
				SetPVarInt(i, "CComAc12", GetPVarInt(i, "CComAc12") + 1);
				SetPVarInt(i, "CComAc13", GetPVarInt(i, "CComAc13") + 1);
				SetPVarInt(i, "CComAc14", GetPVarInt(i, "CComAc14") + 1);
				SetPVarInt(i, "CComAc15", GetPVarInt(i, "CComAc15") + 1);
			}
			if(functioncon[i] > 0)//если в контрольной переменной функций - счётчик вызовов функций, то:
			{
				functioncon[i] = 0;//обнуляем контрольную переменную функций
			}
			if(functioncon[i] < 0)//если в контрольной переменной функций - счётчик секунд, то:
			{
				functioncon[i]++;//уменьшаем счётчик секунд
			}
#endif
#if (MOD4CINS == 1)
			if((chatcon[i] > 1 || GetPVarInt(i, "CComAc0") > 1 || GetPVarInt(i, "CComAc1") > 1 ||
			GetPVarInt(i, "CComAc2") > 1 || GetPVarInt(i, "CComAc3") > 1 || GetPVarInt(i, "CComAc4") > 1 ||
			GetPVarInt(i, "CComAc5") > 1 || GetPVarInt(i, "CComAc6") > 1 || GetPVarInt(i, "CComAc7") > 1 ||
			GetPVarInt(i, "CComAc8") > 1 || GetPVarInt(i, "CComAc9") > 1 || GetPVarInt(i, "CComAc10") > 1 ||
			GetPVarInt(i, "CComAc11") > 1 || GetPVarInt(i, "CComAc12") > 1 || GetPVarInt(i, "CComAc13") > 1 ||
			GetPVarInt(i, "CComAc14") > 1 || GetPVarInt(i, "CComAc15") > 1) &&
			PlayerInfo[i][pAdmin] == 0)//если игрок написал более 1-й строки за 1 секунду,
			{//и если игрок НЕ админ, то:
				swper = 6;//спам в чате (или в командах)
			}
			chatcon[i] = 0;//обнуляем контрольную переменную чата
			SetPVarInt(i, "CComAc0", 0);
			SetPVarInt(i, "CComAc1", 0);
			SetPVarInt(i, "CComAc2", 0);
			SetPVarInt(i, "CComAc3", 0);
			SetPVarInt(i, "CComAc4", 0);
			SetPVarInt(i, "CComAc5", 0);
			SetPVarInt(i, "CComAc6", 0);
			SetPVarInt(i, "CComAc7", 0);
			SetPVarInt(i, "CComAc8", 0);
			SetPVarInt(i, "CComAc9", 0);
			SetPVarInt(i, "CComAc10", 0);
			SetPVarInt(i, "CComAc11", 0);
			SetPVarInt(i, "CComAc12", 0);
			SetPVarInt(i, "CComAc13", 0);
			SetPVarInt(i, "CComAc14", 0);
			SetPVarInt(i, "CComAc15", 0);
			if(functioncon[i] > 5)//если игрок вызвал функции более 5-и раз за 1 секунду, то:
			{
				swper = 7;//чит вызова функций
				functioncon[i] = 0;//обнуляем контрольную переменную функций
			}
			else//иначе
			{
				functioncon[i] = 0;//обнуляем контрольную переменную функций
			}
#endif
#if (MOD4AINS == 1)
			if(GetPlayerSpeed(i) > CoefGrav && PlayerInfo[i][pAdmin] == 0)//если скорость игрока больше допустимой,
			{//и игрок НЕ админ, то:
				swper = 10;//FLY-чит (или спидхак)
			}
#endif
#if (MOD66INS > 1)
			if(GetPlayerState(i) == 1 && gPlayerLogged[i] == 1 && playspa[i] == 0)
			{//если игрок заспавнился, И залогинился, И НЕ прошёл реальный спавн сервера, то:
				if(PosX < 2494 || PosX > 2500 || PosY < -1670 || PosY > -1664 || PosZ < 10 || PosZ > 16 ||
				GetPlayerInterior(i) != 0 || PlayVW2 != i + 5000)
				{//если игрок САМ изменил координаты, ИЛИ интерьер, ИЛИ виртуальный мир своего виртуального спавна, то:
					if(playspacount[i] == 1)
					{
						swper = 11;//ошибка координат спавна
					}
					if(playspacount[i] != 1)
					{
						playspacount[i] = 1;
					}
				}
			}
#endif
			if(GetPlayerState(i) == 1 && gPlayerLogged[i] == 0)
			{//если игрок заспавнился, И НЕ залогинился, то:
				if((PosX < 2494 || PosX > 2500 || PosY < -1670 || PosY > -1664 || PosZ < 10 || PosZ > 16) &&
				(PosX != 0.0 && PosY != 0.0 && PosZ != 0.0))
				{//если игрок САМ изменил координаты, то:
					if(playlogcount[i] == 1)
					{
						swper = 12;//спавн без логирования
					}
					if(playlogcount[i] != 1)
					{
						playlogcount[i] = 1;
					}
				}
			}
			dopper333 = 0;//контроль запаса предметов, удаление оружия и чит-слотов
			for(new j = 0; j < 13; j++)//читаем все слоты
			{
				GetPlayerWeaponData(i, j, play333weap[j], play333ammo[j]);
			}
			if(play333weap[0] == 1){play333weap[0] = 0; play333ammo[0] = 0; dopper333 = 1;}//выравнивание запаса предметов
			if(play333weap[1] != 0){play333weap[1] = 0; play333ammo[1] = 0; dopper333 = 1;}
			if(play333weap[9] == 41 || play333weap[9] == 42){play333weap[9] = 0; play333ammo[9] = 0; dopper333 = 1;}
			if(play333weap[9] == 43 && play333ammo[9] > 2000){play333ammo[9] = 2000; dopper333 = 1;}
			if(play333weap[10] >= 10 && play333weap[10] <= 13){play333weap[10] = 0; play333ammo[10] = 0; dopper333 = 1;}//удаление ВООБЩЕ ЗАПРЕЩЁННЫХ предметов
			if(play333weap[10] == 15){play333weap[10] = 0; play333ammo[10] = 0; dopper333 = 1;}
			if(play333weap[10] == 14 && play333ammo[10] > 1){play333ammo[10] = 1; dopper333 = 1;}
			if(play333weap[11] == 44 || play333weap[11] == 45){play333weap[11] = 0; play333ammo[11] = 0; dopper333 = 1;}
			if(play333weap[11] == 46 && play333ammo[11] > 1){play333ammo[11] = 1; dopper333 = 1;}
			if(play333weap[2] != 0){play333weap[2] = 0; play333ammo[2] = 0; dopper333 = 1;}//удаление оружия
			if(play333weap[3] != 0){play333weap[3] = 0; play333ammo[3] = 0; dopper333 = 1;}
			if(play333weap[4] != 0){play333weap[4] = 0; play333ammo[4] = 0; dopper333 = 1;}
			if(play333weap[5] != 0){play333weap[5] = 0; play333ammo[5] = 0; dopper333 = 1;}
			if(play333weap[6] != 0){play333weap[6] = 0; play333ammo[6] = 0; dopper333 = 1;}
			if(play333weap[7] != 0){play333weap[7] = 0; play333ammo[7] = 0; dopper333 = 1;}
			if(play333weap[8] != 0){play333weap[8] = 0; play333ammo[8] = 0; dopper333 = 1;}
			if(play333weap[12] != 0){play333weap[12] = 0; play333ammo[12] = 0; dopper333 = 1;}
			if(dopper333 == 1)
			{
				ResetPlayerWeapons(i);//отбираем оружие и предметы
				for(new j = 0; j < 13; j++)//сохраняем все слоты
				{
					GivePlayerWeapon(i, play333weap[j], play333ammo[j]);
				}
			}
			if(swper != 0)//если указатель НЕ равен 0, то:
			{
				switch(swper)
				{
					case 1: format(string, sizeof(string), "* Игрок %s [%d] был кикнут - не заспавнился в течение трёх минут !", aa333, i);
					case 2: format(string, sizeof(string), "* Игрок %s [%d] был кикнут за смену ника ( f. %s ) !", aa333, i, RealName[i]);
					case 3: format(string, sizeof(string), "* Игрок %s [%d] был кикнут за ношение запрещённого предмета (или оружия) !", aa333, i);
					case 4: format(string, sizeof(string), "* Игрок %s [%d] был кикнут за использование запрещённой модели транспорта !", aa333, i);
					case 5: format(string, sizeof(string), "* Игрок %s [%d] был кикнут за побег из тюрьмы (или из-под стражи) !", aa333, i);
#if (MOD4CINS == 1)
					case 6: format(string, sizeof(string), "* Игрок %s [%d] был кикнут за спам в чате (или в командах) !", aa333, i);
					case 7: format(string, sizeof(string), "* Игрок %s [%d] был кикнут за чит (2), мешающий работе сервера !", aa333, i);
#endif
#if (MOD4AINS == 1)
					case 10: format(string, sizeof(string), "* Игрок %s [%d] был кикнут за FLY-чит (или спидхак) !", aa333, i);
#endif
#if (MOD66INS > 1)
					case 11: format(string, sizeof(string), "* Игрок %s [%d] был кикнут - ошибка координат спавна !", aa333, i);
#endif
					case 12: format(string, sizeof(string), "* Игрок %s [%d] был кикнут - спавн без логирования !", aa333, i);
				}
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				SetTimerEx("PlayKick", 300, 0, "i", i);
//    			Kick(i);//кик игрока
			}
//----- антикрашер игроков - 8 (2018-2020, краш обнаружен на версии 0.3.7) -----
			cr8d1 = GetPlayerState(i);
			cr8d2 = GetPlayerVehicleSeat(i);
			if((cr8d1 == 1 && cr8d2 != -1) || (cr8d1 == 2 && cr8d2 != 0) || (cr8d1 == 3 && cr8d2 < 1))
			{
				crash8count[i] = 10;
			}
			if(crash8count[i] == 10)
			{
				format(string, sizeof(string), "* Игрок %s [%d] был кикнут за краш игроков - 8 !", RealName[i], i);
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				SetTimerEx("PlayKick", 300, 0, "i", i);
				crash8count[i] = 0;
			}
//-------------------- антикрашер игроков - 8 (конец) --------------------------
			if((-1602 < PosX < -1193 && 840 < PosY < 1158 && 973 < PosZ < 1101) ||
			(-1547 < PosX < -1247 && 1506 < PosY < 1705 && 1002 < PosZ < 1123))//сравниваем координаты
			{//игрок в зоне дерби
				if(DerbyID[i] == 0) { DerbyID[i] = 1; }//игрок только попал в зону дерби
			}
			else//игрок НЕ в зоне дерби
			{
				if(DerbyID[i] == 2) { DerbyID[i] = 3; }//игрок только покинул зону дерби
			}
			if(DerbyID[i] == 1)//игрок только попал в зону дерби
			{
				SendClientMessage(i, COLOR_RED, "* Вы в зоне дерби.");
			}
			if(DerbyID[i] == 3)//игрок только покинул зону дерби
			{
				SendClientMessage(i, COLOR_GREEN, "* Вы покинули зону дерби.");
				if(PlayerInfo[i][pPrisonsec] == 0)//если игрока НЕ посадили в тюрьму, то:
				{
					for(new j = 0; j < 13; j++)//заполняем слоты оружия и предметов
					{
						GivePlayerWeapon(i, play2weap[i][j], play2ammo[i][j]);
					}
				}
			}
			if(DerbyID[i] == 3) { DerbyID[i] = 0; }//делаем отметку, что игрок НЕ в зоне дерби
			if(DerbyID[i] == 1)//если игрок только попал в зону дерби, то:
			{
				for(new j = 0; j < 13; j++)//сохранение слотов оружия и предметов
				{
					GetPlayerWeaponData(i, j, play2weap[i][j], play2ammo[i][j]);
				}
				ResetPlayerWeapons(i);//отбираем оружие и предметы
				if(DerbyID[i] == 1) { DerbyID[i] = 2; }//устанавливаем маркер, что игрок уже находится в зоне дерби
			}
			if(i >= Wind1SA && i < Wind2SA)//если ИД игрока "попадает" в "окно" автосохранения аккаунтов, то:
			{//делаем автосохранение этого аккаунта
				for(new j = 0; j < 13; j++)
				{
					if(PlayerInfo[i][pPrisonsec] > 0 || DerbyID[i] == 2)//если игрок в тюрьме, или в зоне дерби, то:
					{//сохраняем в файле слоты оружия из вспомогательных переменных
						playweap[i][j] = play2weap[i][j];
						playammo[i][j] = play2ammo[i][j];
					}
					else
					{
						GetPlayerWeaponData(i, j, playweap[i][j], playammo[i][j]);//если игрок НЕ в тюрьме, и НЕ в зоне дерби, то:
					}//то сохраняем в файле его текущие слоты оружия
				}
				OnPlayerSaveA(i);
				if(idgangsave[i] > 0)
				{
					GangSave(idgangsave[i]);//запись ID клана в файл
				}
			}
		}
	}
	if(ct9delay != 0) { ct9delay++; }
	if(ct9delay >= 5) { ct9delay = 0; }
	if(nucexplos == 0 && nucexptime == -100)//если активна автоматическая отмена ядерного взрыва, то:
	{
		format(string, sizeof(string), "* Последствия ядерного взрыва были автоматически ликвидированы.");
		print(string);
		SendClientMessageToAll(COLOR_GREEN, string);
		nucexplos = 0;
		nucexptime = 0;
	}
	if(Wind2SA < (MAX_PLAYERS - 1))//если конец "окна" автосохранения аккаунтов меньше числа слотов сервера, то:
	{//сдвигаем "окно" в сторону увеличения ИД игроков
		Wind1SA = Wind1SA + WWindSA;
		Wind2SA = Wind2SA + WWindSA;
	}
	else//иначе:
	{
		Wind1SA = 0;//обнуляем начало "окна" автосохранения аккаунтов
		Wind2SA = WWindSA;//задаём конец "окна" автосохранения аккаунтов
	}
	return 1;
}

public FiveSecTimer()
{
#if (MOD90INS == 1)
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты
	EndConD = timecor[4];
	EndConM = timecor[3];
	EndConY = timecor[2];
#endif
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(SnowONOFF[i] == 1)//если на сервере ядерный взрыв, то:
			{
				SendClientMessage(i, COLOR_RED, " Внимание !!! На сервере был произведён ядерный взрыв !!!");
				SendClientMessage(i, COLOR_RED, " Радиационный фон превышен в тысячи раз !!! Спасайтесь, кто как может.....");
			}
		}
	}
	return 1;
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new locstr[13][64], locstr44[64];
		for(new j = 0; j < 13; j++)//считать слоты оружия и слоты запаса патронов
		{
			GetPlayerWeaponData(targetid, j, playweap[targetid][j], playammo[targetid][j]);
			format(locstr44 ,sizeof(locstr44), "0");
			switch(playweap[targetid][j])
			{
				case 1: format(locstr44 ,sizeof(locstr44), "Кастет - %d", playammo[targetid][j]);
				case 2: format(locstr44 ,sizeof(locstr44), "Клюшка для гольфа - %d", playammo[targetid][j]);
				case 3: format(locstr44 ,sizeof(locstr44), "Резиновая дубинка - %d", playammo[targetid][j]);
				case 4: format(locstr44 ,sizeof(locstr44), "Нож - %d", playammo[targetid][j]);
				case 5: format(locstr44 ,sizeof(locstr44), "Бейсбольная бита - %d", playammo[targetid][j]);
				case 6: format(locstr44 ,sizeof(locstr44), "Лопата - %d", playammo[targetid][j]);
				case 7: format(locstr44 ,sizeof(locstr44), "Кий - %d", playammo[targetid][j]);
				case 8: format(locstr44 ,sizeof(locstr44), "Катана - %d", playammo[targetid][j]);
				case 9: format(locstr44 ,sizeof(locstr44), "Бензопила - %d", playammo[targetid][j]);
				case 14: format(locstr44 ,sizeof(locstr44), "Букет цветов - %d", playammo[targetid][j]);
				case 15: format(locstr44 ,sizeof(locstr44), "Трость - %d", playammo[targetid][j]);
				case 41: format(locstr44 ,sizeof(locstr44), "Баллончик с краской - %d", playammo[targetid][j]);
				case 42: format(locstr44 ,sizeof(locstr44), "Огнетушитель - %d", playammo[targetid][j]);
				case 43: format(locstr44 ,sizeof(locstr44), "Фотоаппарат - %d", playammo[targetid][j]);
				case 44: format(locstr44 ,sizeof(locstr44), "Очки ночного видения - %d", playammo[targetid][j]);
				case 45: format(locstr44 ,sizeof(locstr44), "Инфракрасные очки - %d", playammo[targetid][j]);
				case 46: format(locstr44 ,sizeof(locstr44), "Парашют - %d", playammo[targetid][j]);
			}
			strdel(locstr[j], 0, 64);
			strcat(locstr[j], locstr44);
		}
		new cash = GetPVarInt(targetid, "PlMon");
		new deaths = PlayerInfo[targetid][pDeaths];
		new minlog = PlayerInfo[targetid][pMinlog];
		new kills = PlayerInfo[targetid][pKills];
		new admin = PlayerInfo[targetid][pAdmin];
		new VIP = PlayerInfo[targetid][pVIP];
		new per1 = 0, per2 = 0;
		if(VIP == 3){per1 = 1;}
		if(VIP == 4 || admin == 0 || PlayerInfo[targetid][pAdmshad] == 1){per2 = 1;}
		new per3 = 0, per4 = 0;
		if(PGang[targetid] == 0 || PGang[targetid] == -600){per3 = 0;}
		if(PGang[targetid] > 0){per3 = PGang[targetid];}
		if(PGang[targetid] == 0){per4 = 1;}
		new locper[16];
		if(GetPVarInt(targetid, "MnMode") == 1)
		{
			strcat(locper, "Y");
		}
		else
		{
			strcat(locper, "Alt & 2");
		}
//		new pistol = PlayerInfo[targetid][pPISTOL];
//		new PISTOL_SILENCED = PlayerInfo[targetid][pPISTOL_SILENCED];
//		new DESERT_EAGLE = PlayerInfo[targetid][pDESERT_EAGLE];
//		new SHOTGUN = PlayerInfo[targetid][pSHOTGUN];
//		new SAWNOFF_SHOTGUN = PlayerInfo[targetid][pSAWNOFF_SHOTGUN];
//		new SPAS12_SHOTGUN = PlayerInfo[targetid][pSPAS12_SHOTGUN];
//		new MICRO_UZI = PlayerInfo[targetid][pMICRO_UZI];
//		new MP5 = PlayerInfo[targetid][pMP5];
//		new AK47 = PlayerInfo[targetid][pAK47];
//		new M4 = PlayerInfo[targetid][pM4];
//		new SNIPERRIFLE = PlayerInfo[targetid][pSNIPERRIFLE];
		new coordsstring[512];
		SendClientMessage(playerid, COLOR_GREEN," _______________________________________");
		format(coordsstring, sizeof(coordsstring)," *** Статистика игрока [%s] ***   Время и дата регистрации: [%s] {B4B5B7}Установленное время: [%d]",RealName[targetid],PlayerInfo[targetid][pTDReg],LocTime[targetid]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring)," Минут на сервере: [%d] Денег: [%d $] Убийств: [%d] Смертей: [%d] Админ LVL: [%d] Скрытость админа: [%d]",
		minlog,cash,kills,deaths,admin,PlayerInfo[targetid][pAdmshad]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring)," VIP LVL: [%d] Бессмертие [%d] Число затыков: [%d] Секунд затыка: [%d] Посадок в тюрьму: [%d] Секунд тюрьмы: [%d]",
		VIP,PlayerInfo[targetid][pAdmlive],PlayerInfo[targetid][pMuted],PlayerInfo[targetid][pMutedsec],PlayerInfo[targetid][pPrison],PlayerInfo[targetid][pPrisonsec]);
//		format(coordsstring, sizeof(coordsstring)," Умения: Пистолет[%d/999] Пистолеты[%d/999] Дигл[%d/999] Дробовик[%d/999] Савны[%d/999]",pistol,PISTOL_SILENCED,DESERT_EAGLE,SHOTGUN,SAWNOFF_SHOTGUN);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring)," Депортация: [%d] Приём PM от игроков: [%d] Меню: [%s]",
		per1,per2,locper);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		if(admin >= 2)
		{
			new twenlim, restlim;
			Fmadmins(2, RealName[targetid], 0, twenlim, restlim);
			format(coordsstring,sizeof(coordsstring)," Суточный денежный лимит: [%d] Остаток денежного лимита: [%d]", twenlim,restlim);
			SendClientMessage(playerid, COLOR_GRAD1, coordsstring);
		}
		format(coordsstring, sizeof(coordsstring)," Предметы: Слот-0: [%s] Слот-1: [%s] Слот-9: [%s]",
		locstr[0],locstr[1],locstr[9]);
//		format(coordsstring, sizeof(coordsstring)," Умения: Дробовик Спас[%d/999] Узи[%d/999] MP5[%d/999] AK-47[%d/999] M4[%d/999] Снайперская винтовка[%d/999]",SPAS12_SHOTGUN,MICRO_UZI,MP5,AK47,M4,SNIPERRIFLE);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring)," Предметы: Слот-10: [%s] Слот-11: [%s]",
		locstr[10],locstr[11]);
//		format(coordsstring, sizeof(coordsstring)," Умения: Дробовик Спас[%d/999] Узи[%d/999] MP5[%d/999] AK-47[%d/999] M4[%d/999] Снайперская винтовка[%d/999]",SPAS12_SHOTGUN,MICRO_UZI,MP5,AK47,M4,SNIPERRIFLE);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
//		format(coordsstring, sizeof(coordsstring)," Оружие: Слот-2: [%s] Слот-3: [%s] Слот-4: [%s]",
//		locstr[2],locstr[3],locstr[4]);
//		format(coordsstring, sizeof(coordsstring)," Клан: %s ",dcmlub);
//		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
//		format(coordsstring, sizeof(coordsstring)," Оружие: Слот-5: [%s] Слот-6: [%s] Слот-7: [%s]",
//		locstr[5],locstr[6],locstr[7]);
//		format(coordsstring, sizeof(coordsstring)," Клан: %s ",dcmlub);
//		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
//		format(coordsstring, sizeof(coordsstring)," Оружие: Слот-8: [%s] Слот-12: [%s]",
//		locstr[8],locstr[12]);
//		format(coordsstring, sizeof(coordsstring)," Клан: %s ",dcmlub);
//		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);

		format(coordsstring, sizeof(coordsstring)," Клан:  Название: [%s{B4B5B7}] Регистрация: [ %s ]",//Clans system
		GName[per3],GTDReg[per3]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring)," Клан:  Глава: [%s] Уровень: [%d] Число игроков: [%d] ID: [%d] Разрешение приглашения: [%d] Разрешение управления: [%d]",
		GHead[per3],GangLvl[targetid],GPlayers[per3],per3,per4,razresh[targetid]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);

		SendClientMessage(playerid, COLOR_GREEN," _______________________________________");
	}
	return 1;
}

public MinServ()//таймер минут на сервере
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
			PlayerInfo[i][pMinlog]++;
		}
	}
	ReadCorTime();//чтение коррекции времени
	gettime(timecor[0], timecor[1]);
	TimCor();//коррекция времени
	if(oldhour != timecor[0])
	{
		oldhour = timecor[0];
		SetWeather(1);//устанавливаем ID погоды на 1
		GlWeat = 1;
		SetGravity(0.008000);//устанавливаем гравитацию на 0.008
		GlGrav = 0.008000;
		if(timecor[8] == 1)//если включено реальное время, то:
		{
			SetWorldTime(timecor[0]);
			GlTime = timecor[0];
			TimePlay(timecor[0]);
		}
		else
		{
			SetWorldTime(12);
			GlTime = 12;
			TimePlay(12);
		}
	}

//------------------------------ BusSystem -------------------------------------
	new para1;
	for(new i; i < BUS_MAX; i++)//цикл для всех бизнесов
	{
		if(buscount[i] == 1 && busidplay[i] != -600)//если бизнес существует,
		{//и его владелец он-лайн, то:
			if(IsPlayerConnected(busidplay[i]) && playspabs[busidplay[i]] == 1 &&
			strcmp(RealName[busidplay[i]], busplayname[i], false) == 0)//дополнительная проверка на коннект игрока,
			{//спавн игрока, и его ник (в случае некорректного отключения от скрипта, или если игрок не заспавнился)
				busmoney[i]++;//прибавляем счётчик минут бизнеса
				if(busmoney[i] >= busminute[i])//если счётчик минут больше или равен минуте дохода от бизнеса, то:
				{
					busmoney[i] = 0;//обнуляем счётчик минут бизнеса
					para1 = GetPVarInt(busidplay[i], "PlMon");
					SetPVarInt(busidplay[i], "PlMon", GetPVarInt(busidplay[i], "PlMon") + busincome[i]);//прибавление дохода к счёту игрока
					new string[256];
					printf("[BusSystem] Игрок %s [%d] получил доход %d $ от своего бизнеса %s [ID: %d] .", RealName[busidplay[i]], busidplay[i], busincome[i], busname[i], i);
					format(string, sizeof(string), " Игрок %s [%d] получил доход %d $ от своего бизнеса %s .", RealName[busidplay[i]], busidplay[i], busincome[i], busname[i]);
					SendClientMessageToAll(0x00FFFFFF, string);
					printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[busidplay[i]], busidplay[i], para1);
				}
			}
		}
	}
//---------------------------- End BusSystem -----------------------------------

	return 1;
}

stock TimePlay(settime)
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
			LocTime[i] = settime;
		}
	}
	return 1;
}

//----- антикрашер игроков - 1 (сентябрь 2014, работает на 0.3z и выше !!!) ----
#if (MOD11INS >= 3)
stock BadFloat(Float:x)
{
	if(x >= 10.0 || x <= -10.0) return true;
	return false;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	new string[256];
	if(hittype == BULLET_HIT_TYPE_PLAYER && (BadFloat(fX) || BadFloat(fY) || BadFloat(fZ)))
	{
		format(string, sizeof(string), "* Игрок %s [%d] был кикнут за краш игроков - 1 !", RealName[playerid], playerid);
		print(string);
		SendClientMessageToAll(COLOR_RED, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
		return 0;
	}
//----- антикрашер игроков - 4 (июль 2015, краш обнаружен на версии 0.3.7) -----
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(weaponid < 22 || weaponid > 38)
	{
		format(string, sizeof(string), "* Игрок %s [%d] был кикнут за краш игроков - 4 !", RealName[playerid], playerid);
		print(string);
		SendClientMessageToAll(COLOR_RED, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
		return 0;
	}
	if(!(-20000.0 <= z <= 20000.0))
	{
		format(string, sizeof(string), "* Игрок %s [%d] был кикнут за краш игроков - 4 !", RealName[playerid], playerid);
		print(string);
		SendClientMessageToAll(COLOR_RED, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
		return 0;
	}
//-------------------- антикрашер игроков - 4 (конец) --------------------------
//--- антикрашер игроков - 5 (сентябрь 2017, краш обнаружен на версии 0.3.7) ---
	if(crash5count[playerid] > 0) { crash5count[playerid]++; }
//-------------------- антикрашер игроков - 5 (конец) --------------------------
    return 1;
}
//-------------------- антикрашер игроков - 1 (конец) --------------------------
//--- антикрашер игроков - 5 (сентябрь 2017, краш обнаружен на версии 0.3.7) ---
//----- антикрашер игроков - 7 (июль 2017, краш обнаружен на версии 0.3.7) -----
//функция OnUnoccupiedVehicleUpdate работает корректно только на версии 0.3z-R4 и выше !!!
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
//----- антикрашер игроков - 8 (2018-2020, краш обнаружен на версии 0.3.7) -----
	if(passenger_seat > 0 && GetPlayerState(playerid) != 3)
	{
		crash8count[playerid] = 10;
    	return 1;
	}
//------------------------------------------------------------------------------
	format(crash8str, 64, "%f", new_x);
	crash8dn[0] = floatstr(crash8str);
	if(crash8str[0] != 45 && (crash8str[0] < 48 || crash8str[0] > 57)) { crash8count[playerid] = 3; }
	format(crash8str, 64, "%f", new_y);
	crash8dn[1] = floatstr(crash8str);
	if(crash8str[0] != 45 && (crash8str[0] < 48 || crash8str[0] > 57)) { crash8count[playerid] = 3; }
	format(crash8str, 64, "%f", new_z);
	crash8dn[2] = floatstr(crash8str);
	if(crash8str[0] != 45 && (crash8str[0] < 48 || crash8str[0] > 57)) { crash8count[playerid] = 3; }
	format(crash8str, 64, "%f", vel_x);
	crash8dn[3] = floatstr(crash8str);
	if(crash8str[0] != 45 && (crash8str[0] < 48 || crash8str[0] > 57)) { crash8count[playerid] = 3; }
	format(crash8str, 64, "%f", vel_y);
	crash8dn[4] = floatstr(crash8str);
	if(crash8str[0] != 45 && (crash8str[0] < 48 || crash8str[0] > 57)) { crash8count[playerid] = 3; }
	format(crash8str, 64, "%f", vel_z);
	crash8dn[5] = floatstr(crash8str);
	if(crash8str[0] != 45 && (crash8str[0] < 48 || crash8str[0] > 57)) { crash8count[playerid] = 3; }
	if(crash8count[playerid] == 3)
	{
		crash8count[playerid] = 10;
    	return 1;
	}
//------------------------------------------------------------------------------
	if(crash8dn[0] < -25000.0 || crash8dn[0] > 25000.0) { crash8count[playerid] = 4; }
	if(crash8dn[1] < -25000.0 || crash8dn[1] > 25000.0) { crash8count[playerid] = 4; }
	if(crash8dn[2] < -25000.0 || crash8dn[2] > 25000.0) { crash8count[playerid] = 4; }
	if(crash8dn[3] < -1000.0 || crash8dn[3] > 1000.0) { crash8count[playerid] = 4; }
	if(crash8dn[4] < -1000.0 || crash8dn[4] > 1000.0) { crash8count[playerid] = 4; }
	if(crash8dn[5] < -1000.0 || crash8dn[5] > 1000.0) { crash8count[playerid] = 4; }
	if(crash8count[playerid] == 4)
	{
		crash8count[playerid] = 10;
    	return 1;
	}
//------------------------------------------------------------------------------
	if(crash8dn[0] == 0.000 && crash8dn[1] == 0.000 && crash8dn[2] == 0.000 &&
	crash8dn[3] == 0.000 && crash8dn[4] == 0.000 && crash8dn[5] == 0.000)
	{
		crash8count[playerid] = 10;
    	return 1;
	}
//------------------------------------------------------------------------------
	if(crash8dn[3] == 0.000 && crash8dn[4] == 0.000 && crash8dn[5] == 1.000)
	{
		crash8count[playerid] = 10;
    	return 1;
	}
//-------------------- антикрашер игроков - 8 (конец) --------------------------
	if(vel_x != crash7vx[playerid] || vel_y != crash7vy[playerid] || vel_z != crash7vz[playerid])
	{
		crash5count[playerid] = 0;
		crash7count[playerid] = 0;
		crash7vx[playerid] = vel_x;
		crash7vy[playerid] = vel_y;
		crash7vz[playerid] = vel_z;
	}
	else
	{
		if(crash5count[playerid] > 0) { crash5count[playerid]++; }
		if(crash5count[playerid] == 0)
		{
			crash5count[playerid]++;
			SetTimerEx("PlayCrash5count", 1000, 0, "i", playerid);
		}
		crash7count[playerid]++;
	}
	return 1;
}
//-------------------- антикрашер игроков - 7 (конец) --------------------------
//-------------------- антикрашер игроков - 5 (конец) --------------------------
//--- антикрашер игроков - 5 (сентябрь 2017, краш обнаружен на версии 0.3.7) ---
forward PlayCrash5count(playerid);
public PlayCrash5count(playerid)
{
	if(crash5count[playerid] >= 4)
	{
		new string[256];
		format(string, sizeof(string), "* Игрок %s [%d] был кикнут за краш игроков - 5 !", RealName[playerid], playerid);
		print(string);
		SendClientMessageToAll(COLOR_RED, string);
		SetTimerEx("PlayKick", 300, 0, "i", playerid);
	}
	crash5count[playerid] = 0;
	return 1;
}
#endif
//-------------------- антикрашер игроков - 5 (конец) --------------------------

//------------------------------ BusSystem -------------------------------------
forward reloadbus1(playerid);
public reloadbus1(playerid)
{
	UnloadBusSystem();//выгрузка системы бизнесов
	SetTimerEx("reloadbus2", 1000, 0, "i", playerid);
    return 1;
}

forward reloadbus2(playerid);
public reloadbus2(playerid)
{
	LoadBusSystem();//загрузка системы бизнесов
	SetTimerEx("reloadbus3", 1000, 0, "i", playerid);
    return 1;
}

forward reloadbus3(playerid);
public reloadbus3(playerid)
{
	new string[256];
	printf("[BusSystem] Админ %s [%d] перезагрузил систему бизнесов.", RealName[playerid], playerid);
	format(string, sizeof(string), " Админ %s [%d] перезагрузил систему бизнесов.", RealName[playerid], playerid);
	SendClientMessageToAll(0xFF0000FF, string);
    return 1;
}

public LoadBusSystem()//загрузка системы бизнесов
{
	new count = 0;
    new file, f[256];//чтение всех бизнесов
	for(new i; i < BUS_MAX; i++)
	{
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
		busvw[i] = 0;
		busint[i] = 0;
//---------------------------------- конец -------------------------------------
		PickupID[i] = -600;//задаём несуществующий ID-номер пикапа для бизнеса
	    format(f, 256, "bussystem/%i.ini", i);
		file = ini_openFile(f);
		if(file >= 0)
		{
			count++;
			buscount[i] = 1;//бизнес создан (сущесвует)
		    ini_getString(file, "BusName", busname[i]);
		    ini_getString(file, "PlayName", busplayname[i]);
		    ini_getInteger(file, "Cost", buscost[i]);
		    ini_getInteger(file, "Minute", busminute[i]);
		    ini_getInteger(file, "Income", busincome[i]);
		    ini_getInteger(file, "Day", busday[i]);
		    ini_getInteger(file, "BusVW", busvw[i]);
		    ini_getInteger(file, "BusInt", busint[i]);
		    ini_getFloat(file, "CordX", buscordx[i]);
		    ini_getFloat(file, "CordY", buscordy[i]);
		    ini_getFloat(file, "CordZ", buscordz[i]);
			ini_closeFile(file);
			CallRemoteFunction("GPSrfun", "iiisifff", 2, 1, i, busplayname[i],
			busvw[i], buscordx[i], buscordy[i], buscordz[i]);
		}
		else
		{
			buscount[i] = 0;//бизнес не создан (не сущесвует)
			strdel(busplayname[i], 0, MAX_PLAYER_NAME);//удаляем имя владельца бизнеса
			strcat(busplayname[i], "*** INV_PL_ID");
			busday[i] = 0;//даём бизнесу право на его перекупку (покупку)
			CallRemoteFunction("GPSrfun", "iiisifff", 2, 0, i, busplayname[i],
			0, 0.0, 0.0, 0.0);
		}
	}
	print(" ");
	printf(" %d бизнесов загружено.", count);

	ReadCorTime();//чтение коррекции времени
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты
	new string[256];
	for(new i; i < BUS_MAX; i++)
	{
		busidplay[i] = -600;//владелец бизнеса офф-лайн
		busmoney[i] = 0;//обнуляем счётчик минут бизнеса
		if(busday[i] == timecor[4])//если реальная дата равна дате окончания срока без права перекупки, то:
		{
			busday[i] = 0;//даём бизнесу право на его перекупку,
			format(f, 256, "bussystem/%i.ini", i);//и записываем изменения в файл
			file = ini_openFile(f);
			if(file >= 0)
			{
				ini_setInteger(file, "Day", busday[i]);
				ini_closeFile(file);
			}
		}
		if(buscount[i] == 1)//если бизнес создан, то:
		{
			PickupID[i] = CreateDynamicPickup(1274, 1, buscordx[i], buscordy[i], buscordz[i], busvw[i], busint[i], -1, 100.0);//создаём пикап бизнеса
			if(busday[i] == 0)//если у бизнеса есть право на его перекупку, то:
			{
				MapIconID[i] = CreateDynamicMapIcon(buscordx[i], buscordy[i], buscordz[i], 52, -1, busvw[i], busint[i], -1, 200.0);//создаём мап-иконку бизнеса
			}
			format(string, sizeof(string), "Бизнес: %s\nID: %d", busname[i], i);
			Nbus[i] = CreateDynamic3DTextLabel(string, 0x00FF00FF, buscordx[i], buscordy[i], buscordz[i]+0.70, 50,
			INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, busvw[i], busint[i], -1);//создаём 3D-текст бизнеса
		}
	}

	for(new i; i < MAX_PLAYERS; i++)
	{
		playspabs[i] = 0;//игрок не заспавнился
		playIDbus[i] = -600;//не существующий ИД бизнеса для игрока
		if(IsPlayerConnected(i))//если игрок в коннекте, то:
		{
			if(GetPlayerState(i) != 0)//если игрок уже заспавнился, то:
			{
				playspabs[i] = 1;//игрок заспавнился
				for(new j; j < BUS_MAX; j++)//цикл для всех бизнесов
				{
					if(buscount[j] == 1 && strcmp(RealName[i], busplayname[j], false) == 0)//если бизнес существует,
					{//и это бизнес игрока, то:
						busidplay[j] = i;//даём бизнесу ИД он-лайн игрока - владельца бизнеса
						busmoney[j] = 0;//обнуляем счётчик минут бизнеса
					}
				}
			}
		}
	}
	print(" ");
	print("--------------------------------------");
	print("     BusSystem успешно загружена! ");
	print("--------------------------------------\n");
	return 1;
}

public UnloadBusSystem()//выгрузка системы бизнесов
{
	for(new i; i < BUS_MAX; i++)
	{
		if(buscount[i] == 1)//если бизнес существует, то:
		{
			DestroyDynamicPickup(PickupID[i]);//удаляем пикап бизнеса
			if(busday[i] == 0)//если есть мап-иконка бизнеса, то:
			{
				DestroyDynamicMapIcon(MapIconID[i]);//удаляем мап-иконку бизнеса
			}
			DestroyDynamic3DTextLabel(Nbus[i]);//удаляем 3D-текст бизнеса
		}
		buscount[i] = 0;//бизнес не создан (не сущесвует)
		strdel(busplayname[i], 0, MAX_PLAYER_NAME);//удаляем имя владельца бизнеса
		strcat(busplayname[i], "*** INV_PL_ID");
		busidplay[i] = -600;//владелец бизнеса офф-лайн
		busmoney[i] = 0;//обнуляем счётчик минут бизнеса
		PickupID[i] = -600;//задаём несуществующий ID-номер пикапа для бизнеса
		CallRemoteFunction("GPSrfun", "iiisifff", 2, 0, i, busplayname[i],
		0, 0.0, 0.0, 0.0);
	}
	return 1;
}
//---------------------------- End BusSystem -----------------------------------

public RepairCar()
{
#if (MOD22INS == 1 && MOD55INS == 1)
	SLCopy(0);//делаем резервную копию сервер-лога
#endif

	new swper;//контроль сети и AFK
#if (MOD11INS >= 3)
	new conrec, subrec, consen, subsen;
#endif
	new Float:PosX, Float:PosY, Float:PosZ;
	new PlInt, PlVw;
	new Float:subX, Float:subY, Float:subZ;
    for(new i=0;i<MAX_PLAYERS;i++)
	{
 		if(IsPlayerConnected(i))
 		{
			if(autorepair[i] == 1 && GetPlayerState(i) == 2 && DerbyID[i] == 0 && GetPVarInt(i, "PlConRep") == 0 &&
			GetPVarInt(i, "PlConRepDS") == 0)//если авторемонт включен,
			{//И игрок на месте водителя, И игрок не в зоне дерби, И нет удалённого отключения, то:
 				new car = GetPlayerVehicleID(i);
 				RepairVehicle(car);
 				SetVehicleHealth(car,1000);
 			}
			swper = 0;//контроль сети и AFK
#if (MOD11INS >= 3)
			conrec = NetStats_BytesReceived(i);//общее число переданных байт на сервер
			subrec = conrec - NETrecPl[i];//число переданных "дельта-байт" за единицу времени
			consen = NetStats_BytesSent(i);//общее число считанных байт с сервера
			subsen = consen - NETsenPl[i];//число считанных "дельта-байт" за единицу времени
			if(subrec > NETrecCon)//если переданных байт больше допустимого лимита, то:
			{
				swper = 1;//кик по превышению лимита переданных данных
			}
			else//иначе:
			{
				NETrecPl[i] = conrec;//сохраняем общее число переданных байт на сервер
			}
			if(subsen > NETsenCon)//если считанных байт больше допустимого лимита, то:
			{
				swper = 2;//кик по превышению лимита считанных данных
			}
			else//иначе:
			{
				NETsenPl[i] = consen;//сохраняем общее число считанных байт с сервера
			}
#endif
			if(NETafkPl[i][0] > 5) {NETafkPl[i][0] = 5;}//выравнивание контрольной переменной AFK
			if(NETafkPl[i][0] < 5 && NETafkPl[i][3] == 5)//если игрок ТОЛЬКО вышел из AFK, то:
			{
				NETafkPl[i][4] = 1;//делаем отметку выхода из AFK
			}
			else//иначе:
			{
				NETafkPl[i][4] = 0;//НЕ делаем отметку выхода из AFK
			}
			NETafkPl[i][3] = NETafkPl[i][0];//запоминаем статус AFK
			if(NETafkPl[i][0] == 5)//если игрок в AFK, то:
			{
				NETafkPl[i][5] = 1;//запоминаем статус AFK для команды /pm
				if(PlayerInfo[i][pAdmin] == 0)//если игрок НЕ админ, то:
				{
					NETafkPl[i][1]++;//считаем время AFK
				}
				NETafkPl[i][2] = 0;
				if(NETafkPl[i][1] >= 450)//если время AFK >= 15 минут, то:
				{//кикаем игрока
					NETafkPl[i][1] = 0;//обнуляем счётчик AFK
					PlayerInfo[i][pMinlog] = PlayerInfo[i][pMinlog] - 14;//отнимаем у игрока 14 минут AFK
					swper = 3;//кик по AFK
				}
			}
			if(NETafkPl[i][0] < 5)//если игрок НЕ в AFK, то:
			{
				NETafkPl[i][5] = 0;//запоминаем статус AFK для команды /pm
				if(NETafkPl[i][2] <= 3 && NETafkPl[i][1] > 0)
				{
					NETafkPl[i][2]++;//задержка выхода из AFK
					if(PlayerInfo[i][pAdmin] == 0)//если игрок НЕ админ, то:
					{
						NETafkPl[i][1]++;//считаем время AFK
					}
				}
				else
				{
					NETafkPl[i][1] = 0;//выход из AFK
					NETafkPl[i][2] = 0;
				}
			}
			GetPlayerPos(i, PosX, PosY, PosZ);//античит (FLY-чит (или чит-телепорт))
			PlInt = GetPlayerInterior(i);
			PlVw = GetPlayerVirtualWorld(i);
			if(PlayCRTP[i] == 2)//если отметка о переключении активна, то:
			{
				PlayCINT[i] = PlInt;//обновляем координаты игрока
				PlayCVW[i] = PlVw;
				PlayCX[i] = PosX;
				PlayCY[i] = PosY;
				PlayCZ[i] = PosZ;
				PlayCRTP[i] = 0;//обнуляем блокировку координат
				SetPVarInt(i, "PlCRTp", 0);
			}
			if(PlayCRTP[i] == 1 || GetPVarInt(i, "PlCRTp") == 1)//если у игрока активна блокировка координат, то:
			{
				PlayCRTP[i] = 2;//делаем отметку о переключении
			}
			if(PlayCRTP[i] == 11)//если отметка об определении чита активна, то:
			{
				PlayCRTP[i] = 0;//возвращаем контроль чит-телепорта
				SetPVarInt(i, "PlCRTp", 0);
			}
			if(PlayCRTP[i] == 10)//если было гипер-изменение координат, то:
			{
#if (MOD4BINS == 1)
				if(PlayCINT[i] == PlInt && PlayCVW[i] == PlVw)
				{//если НЕ было изменений интерьера И виртуального мира, то:
					swper = 4;//чит-телепорт
				}
#endif
				PlayCINT[i] = PlInt;//обновляем координаты игрока
				PlayCVW[i] = PlVw;
				PlayCX[i] = PosX;
				PlayCY[i] = PosY;
				PlayCZ[i] = PosZ;
				PlayCRTP[i] = 11;//делаем отметку об определении чита
			}
			if(PlayCRTP[i] == 0)//если у игрока НЕ активна блокировка координат, то:
			{
				subX = floatabs(PlayCX[i] - PosX);
				subY = floatabs(PlayCY[i] - PosY);
				subZ = floatabs(PlayCZ[i] - PosZ);
				if((subX > CoefGrav22 || subY > CoefGrav22 || subZ > CoefGrav22) && NETafkPl[i][4] == 0 && PlayerInfo[i][pAdmin] == 0)
				{//если было гипер-изменение координат, И НЕ было отметки выхода из AFK, И игрок НЕ админ, то:
					PlayCX[i] = PosX;//обновляем координаты игрока
					PlayCY[i] = PosY;
					PlayCZ[i] = PosZ;
					TogglePlayerControllable(i,0);//заморозить игрока на 2 секунды
					SetTimerEx("FUnfroz", 2000, 0, "i", i);//(для запрета повторной смены интерьера или виртуального мира)
					if(PlayCRTP[i] == 1 || GetPVarInt(i, "PlCRTp") == 1)//если у игрока активна блокировка координат, то:
					{
						PlayCRTP[i] = 2;//делаем отметку о переключении
					}
					else//иначе:
					{
						PlayCRTP[i] = 10;//делаем отметку об определении возможного чита
					}
				}
				if((PlayCINT[i] != PlInt || PlayCVW[i] != PlVw) && PlayerInfo[i][pAdmin] == 0)
				{//если были изменения интерьера ИЛИ виртуального мира, И игрок НЕ админ, то:
					PlayCINT[i] = PlInt;//обновляем интерьер и виртуальный мир игрока
					PlayCVW[i] = PlVw;
					TogglePlayerControllable(i,0);//заморозить игрока на 2 секунды
					SetTimerEx("FUnfroz", 2000, 0, "i", i);//(для запрета повторной смены интерьера или виртуального мира)
					PlayCRTP[i] = 2;//делаем отметку о переключении
				}
				if((subX <= CoefGrav22 && subY <= CoefGrav22 && subZ <= CoefGrav22 && PlayCINT[i] == PlInt && PlayCVW[i] == PlVw) ||//если НЕ было гипер-изменения координат, и НЕ было изменений интерьера И виртуального мира, ИЛИ...
				((subX > CoefGrav22 || subY > CoefGrav22 || subZ > CoefGrav22) && NETafkPl[i][4] == 1 && PlayerInfo[i][pAdmin] == 0) ||//если было гипер-изменение координат, И была отметка выхода из AFK, И игрок НЕ админ, ИЛИ...
				PlayerInfo[i][pAdmin] >= 1)//если игрок - админ, то:
				{
					PlayCINT[i] = PlInt;//обновляем координаты игрока
					PlayCVW[i] = PlVw;
					PlayCX[i] = PosX;
					PlayCY[i] = PosY;
					PlayCZ[i] = PosZ;
				}
			}
			if(swper != 0)//если указатель НЕ равен 0, то:
			{
				new string[256];
				switch(swper)
				{
					case 1: format(string, sizeof(string), "* Игрок %s [%d] был кикнут - превышен лимит переданных данных на сервер !", RealName[i], i);
					case 2: format(string, sizeof(string), "* Игрок %s [%d] был кикнут - превышен лимит считанных данных с сервера !", RealName[i], i);
					case 3: format(string, sizeof(string), "* Игрок %s [%d] был кикнут - 15 минут был в AFK !", RealName[i], i);
#if (MOD4BINS == 1)
					case 4: format(string, sizeof(string), "* Игрок %s [%d] был кикнут за FLY-чит (или чит-телепорт) !", RealName[i], i);
#endif
				}
				print(string);
				SendClientMessageToAll(COLOR_RED, string);
				SetTimerEx("PlayKick", 300, 0, "i", i);
			}
		}
	}
	new ssss[256], impf[256];
	new impdd = 0;
	new impdd2 = -600;
	while(impdd < 10)//поиск файла для импорта
	{
		format(impf, 256, "players/aimport/%i.txt", impdd);
		if(fexist(impf))
		{
			impdd2 = impdd;
			break;
		}
		impdd++;
	}
	if(impdd2 != -600)//если файл для импорта был найден, то:
	{
		new impcon[14], impdata[14], impdatas[4][128];//чтение файла для импорта
		format(impf, 256, "players/aimport/%i.txt", impdd2);
		new impfile = ini_openFile(impf);
		if(impfile >= 0)
		{
			impcon[0] = ini_getString(impfile, "Name", impdatas[0]);
			impcon[1] = ini_getString(impfile, "Key", impdatas[1]);
			impcon[2] = ini_getInteger(impfile, "AdminLevel", impdata[2]);
			impcon[3] = ini_getInteger(impfile, "AdminShadow", impdata[3]);
			impcon[4] = ini_getInteger(impfile, "AdminLive", impdata[4]);
			impcon[5] = ini_getInteger(impfile, "Prisonsec", impdata[5]);
			impcon[6] = ini_getInteger(impfile, "Mutedsec", impdata[6]);
			impcon[7] = ini_getInteger(impfile, "Money", impdata[7]);
			impcon[8] = ini_getInteger(impfile, "VIP", impdata[8]);
			impcon[9] = ini_getInteger(impfile, "Lock", impdata[9]);
			impcon[10] = ini_getInteger(impfile, "Gang", impdata[10]);
			impcon[11] = ini_getInteger(impfile, "GangLvl", impdata[11]);
			ini_closeFile(impfile);
		}
		impcon[12] = 1;//проверка файла для импорта на корректность заменяемых данных
		if(impcon[0] == 0 && (strlen(impdatas[0]) < 1 || strlen(impdatas[0]) > 25))
		{//если неверное имя аккаунта, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Name");
		}
		if(impcon[1] == 0 && (strlen(impdatas[1]) < 3 || strlen(impdatas[1]) > 20 || PassControl(impdatas[1]) == 0))
		{//если неверный пароль, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Key");
		}
		if(impcon[2] == 0 && (impdata[2] < 0 || impdata[2] > 4))
		{//если неверный лвл админа, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка AdminLevel");
		}
		if(impcon[3] == 0 && (impdata[3] < 0 || impdata[3] > 1))
		{//если неверная скрытость админа, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка AdminShadow");
		}
		if(impcon[4] == 0 && (impdata[4] < 0 || impdata[4] > 1))
		{//если неверное бессмертие админа, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка AdminLive");
		}
		if(impcon[5] == 0 && (impdata[5] < 0 || impdata[5] > 2147483640))
		{//если неверное время тюрьмы, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Prisonsec");
		}
		if(impcon[6] == 0 && (impdata[6] < 0 || impdata[6] > 2147483640))
		{//если неверное время затыка, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Mutedsec");
		}
		if(impcon[7] == 0 && (impdata[7] < -2147483640 || impdata[7] > 2147483640))
		{//если неверная сумма денег, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Money");
		}
		if(impcon[8] == 0 && (impdata[8] < 0 || impdata[8] > 4))
		{//если неверный VIP лвл, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка VIP");
		}
		if(impcon[9] == 0 && (impdata[9] < 0 || impdata[9] > 1))
		{//если неверная блокировка аккаунта, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Lock");
		}
		if(impcon[10] == 0 && (impdata[10] < -600 || -600 < impdata[10] < 0 || impdata[10] > (MAX_GANGS - 1)))
		{//если неверный ид клана, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка Gang");
		}
		if(impcon[11] == 0 && (impdata[11] < 0 || impdata[11] > 6))
		{//если неверный лвл в клане, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ошибка GangLvl");
		}
		new imploc = 0;
		for(new i = 1; i < 12; i++)
		{
			if(impcon[i] == -9) { imploc++; }
		}
		if(imploc >= 11)
		{//если нет заменяемых данных, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "нет заменяемых данных");
		}
		if(impcon[0] == -9)
		{//если нет данных аккаунта, то:
			impcon[12] = 0;
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "нет Name");
		}
		if(impcon[12] == 1)
		{
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "ок");
		}
		impcon[13] = 1;
		if(impcon[12] == 1)//если файл для импорта не содержит ошибок, то:
		{
			imploc = 0;//проверка игрока на он-лайн
			new imploc2 = -600;
			while(imploc < MAX_PLAYERS)
			{
				if(IsPlayerConnected(imploc) && gPlayerLogged[imploc] == 1)
				{//если игрок он-лайн, И игрок уже залогинился, то:
					if(strcmp(RealName[imploc], impdatas[0], false) == 0)
					{//если игрок был найден, то:
						imploc2 = imploc;
						break;
					}
				}
				imploc++;
			}
			if(imploc2 != -600)//если игрок он-лайн, то:
			{
				if(impcon[1] == 0)//замена пароля
				{
					if(strcmp(PlayerInfo[imploc2][pKey], impdatas[1], false) != 0)
					{
						strdel(impdatas[2], 0, 128);
						strcat(impdatas[2], PlayerInfo[imploc2][pKey]);
						strmid(PlayerInfo[imploc2][pKey], impdatas[1], 0, strlen(impdatas[1]), 255);
						format(ssss, sizeof(ssss), " **** Замена пароля игрока [%s] на (%s) FP: (%s) .", RealName[imploc2], PlayerInfo[imploc2][pKey], impdatas[2]);
						print(ssss);
						format(ssss, sizeof(ssss), " **** Замена пароля игрока [%s] .", RealName[imploc2]);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " **** Ваш пароль был заменён на (%s) .", PlayerInfo[imploc2][pKey]);
						SendClientMessage(imploc2, COLOR_YELLOW, ssss);
					}
				}
				if(impcon[2] == 0)//замена лвл админа
				{
					if(PlayerInfo[imploc2][pAdmin] != impdata[2])
					{
						if((impcon[8] == 0 && impdata[8] != 3) ||
						(impcon[8] == -9 && PlayerInfo[imploc2][pVIP] != 3))//если нет депортации, то:
						{
							impdata[12] = PlayerInfo[imploc2][pAdmin];
							PlayerInfo[imploc2][pAdmin] = impdata[2];
							AdmUpdate(RealName[imploc2], PlayerInfo[imploc2][pAdmin], 4);
							if(PlayerInfo[imploc2][pAdmin] == 0)//если лвл админа = 0, то:
							{
								if(impcon[3] == 0)
								{
									impdata[3] = 0;//выключение скрытости админа
									PlayerInfo[imploc2][pAdmshad] = 0;
								}
								if(impcon[3] == -9) { PlayerInfo[imploc2][pAdmshad] = 0; }
							}
							if(PlayerInfo[imploc2][pAdmin] >= 1)//если лвл админа >= 1, то:
							{
								if(impcon[8] == 0 && (impdata[8] == 1 || impdata[8] == 2))
								{//если есть VIP-1 или VIP-2, то:
									impdata[8] = 0;//обнуление VIP лвл
								}
								if(impcon[8] == -9) { PlayerInfo[imploc2][pVIP] = 0; }
							}
							if(PlayerInfo[imploc2][pAdmin] <= 1 && impdata[12] >= 2)
							{
								new twenlim, restlim;
								Fmadmins(0, RealName[imploc2], 0, twenlim, restlim);
							}
							if(PlayerInfo[imploc2][pAdmin] >= 2 && impdata[12] <= 1)
							{
								new twenlim = 0;
								new restlim = 0;
								Fmadmins(1, RealName[imploc2], 0, twenlim, restlim);
							}
							if(PlayerInfo[imploc2][pAdmin] >= 3 && impdata[12] <= 2)
							{
								if(impcon[4] == 0 && impdata[4] == 1)
								{
									PlayerInfo[imploc2][pAdmlive] = 1;
									SendClientMessage(imploc2, COLOR_GREEN, " Бессмертие включено.");
								}
								if(impcon[4] == -9)
								{
									PlayerInfo[imploc2][pAdmlive] = 1;
									SendClientMessage(imploc2, COLOR_GREEN, " Бессмертие включено.");
								}
							}
							if(PlayerInfo[imploc2][pAdmin] <= 2 && impdata[12] >= 3)
							{
								if(impcon[4] == 0) { impcon[4] = -9; }
								PlayerInfo[imploc2][pAdmlive] = 0;
								SendClientMessage(imploc2, COLOR_RED, " Бессмертие выключено.");
							}
							if(PlayerInfo[imploc2][pAdmin] >= 1 && impdata[12] == 0)
							{
								SendClientMessage(imploc2, COLOR_RED, "* Рекомендация: В целях безопасности и защиты своего (АДМИНИСТРАТИВНОГО)");
								SendClientMessage(imploc2, COLOR_RED, "* аккаунта - измените свой пароль !!! И НЕ используйте пароль от своего");
								SendClientMessage(imploc2, COLOR_RED, "* административного аккаунта на других серверах !!!");
							}
							format(ssss, sizeof(ssss), " **** Замена лвл админа [%s] на %d .", RealName[imploc2], PlayerInfo[imploc2][pAdmin]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваш лвл админа был заменён на %d .", PlayerInfo[imploc2][pAdmin]);
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						}
					}
				}
				if(impcon[3] == 0)//замена скрытости админа
				{
					if(PlayerInfo[imploc2][pAdmshad] != impdata[3])
					{
						if(PlayerInfo[imploc2][pAdmin] >= 1)
						{
							PlayerInfo[imploc2][pAdmshad] = impdata[3];
							if(PlayerInfo[imploc2][pAdmshad] == 1)
							{
								if(impcon[8] == 0 && impdata[8] != 3 && PlayerInfo[imploc2][pVIP] != 3)
								{//если нет замены на депортацию, И ранее НЕ была депортация, то:
									impdata[8] = 0;//обнуление VIP лвл
									PlayerInfo[imploc2][pVIP] = 0;
								}
								if(impcon[8] == -9 && PlayerInfo[imploc2][pVIP] != 3) { PlayerInfo[imploc2][pVIP] = 0; }
								format(ssss, sizeof(ssss), " **** Замена скрытости админа [%s] на ''включено'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваша скрытость админа была заменена на ''включено'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
							else
							{
								format(ssss, sizeof(ssss), " **** Замена скрытости админа [%s] на ''выключено'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваша скрытость админа была заменена на ''выключено'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
						}
					}
				}
				if(impcon[4] == 0)//замена бессмертия админа
				{
					if(PlayerInfo[imploc2][pAdmlive] != impdata[4])
					{
						if(PlayerInfo[imploc2][pAdmin] >= 3)
						{
							PlayerInfo[imploc2][pAdmlive] = impdata[4];
							if(PlayerInfo[imploc2][pAdmlive] == 1)
							{
								format(ssss, sizeof(ssss), " **** Замена бессмертия админа [%s] на ''включено'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваше бессмертие админа было заменено на ''включено'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
							else
							{
								format(ssss, sizeof(ssss), " **** Замена бессмертия админа [%s] на ''выключено'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваше бессмертие админа было заменено на ''выключено'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
						}
					}
				}
				if(impcon[5] == 0)//замена времени тюрьмы
				{
					if(impdata[5] <= 3) { impdata[5] = 0; }
					if(impdata[5] == 4) { impdata[5] = 5; }
					if(PlayerInfo[imploc2][pPrisonsec] != impdata[5])
					{
						if(impdata[5] > 3)//если посадка в тюрьму, то:
						{
							if(PlayerInfo[imploc2][pPrisonsec] == 0)//если не в тюрьме, то сохранение слотов оружия игрока
							{
								if(DerbyID[imploc2] == 0)//если игрок НЕ в зоне дерби,
								{//то сохранение всех слотов
									for(new n=0;n<13;n++)//если игрок НЕ в X-зоне, то сохранение всех слотов
									{
										GetPlayerWeaponData(imploc2, n, play2weap[imploc2][n], play2ammo[imploc2][n]);
									}
								}
								PlayerInfo[imploc2][pPrison]++;
								PlayerInfo[imploc2][pPrisonsec] = impdata[5];
								if(PlayLock1[0][imploc2] != 600)
								{//если игрок заблокирован, то разблокировать игрока
									PlayLock1[0][imploc2] = 600;//отключение блокировки
								}
								SecSpa(imploc2);//респавн игрока (с блокировкой заполнения слотов оружия и предметов)
							}
							else//если игрок уже в тюрьме, то изменяем секунды тюрьмы
							{
								PlayerInfo[imploc2][pPrisonsec] = impdata[5];
							}
						}
						else//иначе (если освобождение из тюрьмы), то:
						{
							if(PlayerInfo[imploc2][pPrisonsec] > 0)//если игрок в тюрьме, то:
							{
								PlayerInfo[imploc2][pPrison]--;
								PlayerInfo[imploc2][pPrisonsec] = impdata[5];
								weapstatplay[imploc2] = 0;
								SpawnPlayer(imploc2);//респавн игрока
							}
						}
						format(ssss, sizeof(ssss), " **** Замена времени тюрьмы игрока [%s] на %d сек.", RealName[imploc2], PlayerInfo[imploc2][pPrisonsec]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " **** Ваше время тюрьмы было заменено на %d сек.", PlayerInfo[imploc2][pPrisonsec]);
						SendClientMessage(imploc2, COLOR_YELLOW, ssss);
					}
				}
				if(impcon[6] == 0)//замена времени затыка
				{
					if(impdata[6] <= 3) { impdata[6] = 0; }
					if(impdata[6] == 4) { impdata[6] = 5; }
					if(PlayerInfo[imploc2][pMutedsec] != impdata[6])
					{
						if(impdata[6] > 3)//если затык игрока, то:
						{
							if(PlayerInfo[imploc2][pMutedsec] == 0)//если игрок НЕ заткнут, то:
							{
								PlayerInfo[imploc2][pMuted]++;
							}
							PlayerInfo[imploc2][pMutedsec] = impdata[6];
						}
						else//иначе (если разоткнуть игрока), то:
						{
							if(PlayerInfo[imploc2][pMutedsec] > 0)//если игрок заткнут, то:
							{
			  					PlayerInfo[imploc2][pMuted]--;
								PlayerInfo[imploc2][pMutedsec] = impdata[6];
							}
						}
						format(ssss, sizeof(ssss), " **** Замена времени затыка игрока [%s] на %d сек.", RealName[imploc2], PlayerInfo[imploc2][pMutedsec]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " **** Ваше время затыка было заменено на %d сек.", PlayerInfo[imploc2][pMutedsec]);
						SendClientMessage(imploc2, COLOR_YELLOW, ssss);
					}
				}
				if(impcon[8] == 0)//замена VIP лвл
				{
					if(PlayerInfo[imploc2][pVIP] != impdata[8])
					{
						if(PlayerInfo[imploc2][pAdmin] == 0 && impdata[8] == 4)
						{//если игрок - не админ, И VIP лвл = 4, то:
							impdata[8] = 0;//обнуление VIP лвл
						}
						if(impdata[8] != 3 && PlayerInfo[imploc2][pAdmin] >= 1 && PlayerInfo[imploc2][pAdmshad] == 1)
						{//если нет замены на депортацию, И у админа скрытость, то:
							impdata[8] = 0;//обнуление VIP лвл
						}
						if(PlayerInfo[imploc2][pAdmin] >= 1 && (impdata[8] == 1 || impdata[8] == 2))
						{//если игрок - админ, И VIP лвл = 1 ИЛИ = 2, то:
							impdata[8] = 0;//обнуление VIP лвл
						}
						new mnloc;
						if(impdata[8] == 3 && PlayerInfo[imploc2][pVIP] != 3)
						{//если замена на депортацию, И ранее НЕ была депортация, то:
							mnloc = GetPVarInt(imploc2, "PlMon");//запомнить денежную сумму
						}
						impdata[12] = PlayerInfo[imploc2][pVIP];
						PlayerInfo[imploc2][pVIP] = impdata[8];
						if(PlayerInfo[imploc2][pAdmin] == 0 && PlayerInfo[imploc2][pVIP] == 0 && (impdata[12] == 1 || impdata[12] == 2))
						{
							format(ssss, sizeof(ssss), " **** Замена VIP лвл игрока [%s] на %d .", RealName[imploc2], PlayerInfo[imploc2][pVIP]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваш VIP лвл был заменён на %d .", PlayerInfo[imploc2][pVIP]);
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						}
						if(PlayerInfo[imploc2][pAdmin] == 0 && (PlayerInfo[imploc2][pVIP] == 1 || PlayerInfo[imploc2][pVIP] == 2))
						{
							format(ssss, sizeof(ssss), " **** Замена VIP лвл игрока [%s] на %d .", RealName[imploc2], PlayerInfo[imploc2][pVIP]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваш VIP лвл был заменён на %d .", PlayerInfo[imploc2][pVIP]);
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						}
						if(PlayerInfo[imploc2][pAdmshad] == 0)
						{
							if(PlayerInfo[imploc2][pAdmin] >= 1 && PlayerInfo[imploc2][pVIP] == 0 && impdata[12] != 0)
							{
								format(ssss, sizeof(ssss), " **** Замена приёма PM от игроков для админа [%s] на ''выключено'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваш приём PM от игроков был заменён на ''выключено'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
							if(PlayerInfo[imploc2][pAdmin] >= 1 && PlayerInfo[imploc2][pVIP] == 4 && impdata[12] != 4)
							{
								format(ssss, sizeof(ssss), " **** Замена приёма PM от игроков для админа [%s] на ''включено'' .", RealName[imploc2]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								format(ssss, sizeof(ssss), " **** Ваш приём PM от игроков был заменён на ''включено'' .");
								SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							}
						}
						if(PlayerInfo[imploc2][pVIP] != 3 && impdata[12] == 3)
						{
							format(ssss, sizeof(ssss), " **** Замена депортации игрока [%s] на ''отменено'' .", RealName[imploc2]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваша депортация была заменена на ''отменено'' .");
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						}
						if(PlayerInfo[imploc2][pVIP] == 3 && impdata[12] != 3)
						{
							PlayerInfo[imploc2][pAdmin] = 0;
							PlayerInfo[imploc2][pAdmshad] = 0;
							PlayerInfo[imploc2][pAdmlive] = 0;
							SetPVarInt(imploc2, "PlMon", 1000);
							format(ssss, sizeof(ssss), " **** Замена стандартного режима игры игрока [%s] на депортацию.", RealName[imploc2]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[imploc2], imploc2, mnloc);
							format(ssss, sizeof(ssss), " **** Ваш стандартный режим игры был заменён на депортацию.");
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							format(ssss, sizeof(ssss), " *** Сервер начал делопроизводство по депортации игрока %s .", RealName[imploc2]);
							SendClientMessageToAll(COLOR_RED, ssss);
							format(ssss, sizeof(ssss), " *** Вы приглашаетесь в админ-чат ( /a [текст] ) , на слушание Вашего дела.");
							SendClientMessage(imploc2, COLOR_RED, ssss);
							format(ssss, sizeof(ssss), " *** Так же, в админ-чат, Вы можете подать апелляционную жалобу.");
							SendClientMessage(imploc2, COLOR_RED, ssss);
						}
					}
				}
				if(impcon[7] == 0)//замена суммы денег
				{
					if(PlayerInfo[imploc2][pVIP] != 3)//если нет депортации, то:
					{
						if(GetPVarInt(imploc2, "PlMon") != impdata[7])
						{
							new mnloc;
							mnloc = GetPVarInt(imploc2, "PlMon");
							SetPVarInt(imploc2, "PlMon", impdata[7]);
							format(ssss, sizeof(ssss), " **** Замена суммы денег игрока [%s] на %d $ .", RealName[imploc2], GetPVarInt(imploc2, "PlMon"));
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							printf("[moneysys] Предыдущая сумма игрока %s [%d] : %d $", RealName[imploc2], imploc2, mnloc);
							format(ssss, sizeof(ssss), " **** Ваша сумма денег была заменена на %d $ .", GetPVarInt(imploc2, "PlMon"));
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
						}
					}
				}
				if(impcon[9] == 0)//замена блокировки аккаунта
				{
					if(PlayerInfo[imploc2][pLock] != impdata[9])
					{
						if(PlayerInfo[imploc2][pLock] == 0 && impdata[9] == 1)
						{
							PlayerInfo[imploc2][pLock] = impdata[9];
							format(ssss, sizeof(ssss), " **** Замена стандартного режима игры игрока [%s] на блокировку аккаунта.", RealName[imploc2]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							format(ssss, sizeof(ssss), " **** Ваш стандартный режим игры был заменён на блокировку аккаунта.");
							SendClientMessage(imploc2, COLOR_YELLOW, ssss);
							strdel(fbanreason[imploc2], 0, 256);//очистка причины бана
							strcat(fbanreason[imploc2], " --- Замена данных: блокировка аккаунта");//добавляем в символьную переменную метку бана
							PlayBanList(imploc2, fbanreason[imploc2], 0);
							SetTimerEx("PlayBan", 300, 0, "i", imploc2);
						}
					}
				}
				if(impcon[10] == 0)//замена ид клана
				{
					if(PGang[imploc2] != impdata[10])
					{
						PGang[imploc2] = impdata[10];
						if(PGang[imploc2] <= 0) { GangLvl[imploc2] = 0; }
						if(PGang[imploc2] >= 1) { GangLvl[imploc2] = 1; }
						format(ssss, sizeof(ssss), " **** Замена ид клана игрока [%s] на %d .", RealName[imploc2], PGang[imploc2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " **** Ваш ид клана был заменён на %d .", PGang[imploc2]);
						SendClientMessage(imploc2, COLOR_YELLOW, ssss);
					}
				}
				if(impcon[11] == 0)//замена лвл в клане
				{
					if(PGang[imploc2] <= 0) { impdata[11] = 0; }
					if(GangLvl[imploc2] != impdata[11])
					{
						GangLvl[imploc2] = impdata[11];
						format(ssss, sizeof(ssss), " **** Замена лвл в клане игрока [%s] на %d .", RealName[imploc2], GangLvl[imploc2]);
						print(ssss);
						SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						format(ssss, sizeof(ssss), " **** Ваш лвл в клане был заменён на %d .", GangLvl[imploc2]);
						SendClientMessage(imploc2, COLOR_YELLOW, ssss);
					}
				}
			}
			else//если игрок офф-лайн, то:
			{
				new igkey[256], tdreg[256], adrip[256], data2[54];
				new conakk = 0;
#if (MOD90INS == 0)
				format(impf, 256, "players/%s.ini", impdatas[0]);
				if(fexist(impf))//если аккаунт существует, то:
				{
					conakk = 1;//делаем отметку существования аккаунта
					new File: UserFile = fopen(impf, io_read);//чтение аккаунта
					new key[ 256 ] , val[ 256 ];
					new Data[ 256 ];
					while ( fread( UserFile , Data , sizeof( Data ) ) )
					{
						key = ini_GetKey( Data );
						if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
						if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
						if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
						if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
					    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
					    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
					    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
						if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
						if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
						if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
						if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
						if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
						if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
						if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
						if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
						if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
						if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
						if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
						if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//						if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//						if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//						if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//						if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//						if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//						if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//						if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//						if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//						if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//						if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//						if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
						if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
						if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
						if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
						if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
						if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
						if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
						if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
						if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
						if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
						if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
						if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
						if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
						if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
						if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
						if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
						if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
						if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
						if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
						if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
						if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
						if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
						if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
						if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
						if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
						if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
						if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
					}
					fclose(UserFile);
					strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
					strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
					strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					new string999[256];
					format(string999,sizeof(string999),"gangs/players/%s.ini", impdatas[0]);
					if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
					{
						new File: UserFile333 = fopen(string999, io_read);//чтение файла
						new key333[ 256 ] , val333[ 256 ];
						new Data333[ 256 ];
						while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
						{
							key333 = ini_GetKey( Data333 );
							if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
							if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
						}
						fclose(UserFile333);
					}
					if(fexist(string999))//удаляем аккаунт из системы кланов (если файл существует)
					{
						fremove(string999);
					}
//---------------------------------- конец -------------------------------------
				}
#endif
#if (MOD90INS == 1)
				new dddata2[3], strdln[5000];
				format(impf, 256, "players/%s.ini", impdatas[0]);//проверка существования аккаунта
				if(fexist(impf))//если аккаунт зарегистрирован в fopen, то:
				{
					conakk = 1;//делаем отметку существования аккаунта в fopen
					new File: UserFile = fopen(impf, io_read);//чтение аккаунта
					new key[ 256 ] , val[ 256 ];
					new Data[ 256 ];
					while ( fread( UserFile , Data , sizeof( Data ) ) )
					{
						key = ini_GetKey( Data );
						if( strcmp( key , "Key" , true ) == 0 ) { igkey = ini_GetValue( Data ); }
						if( strcmp( key , "TDReg" , true ) == 0 ) { tdreg = ini_GetValue( Data ); }
						if( strcmp( key , "IPAdr" , true ) == 0 ) { adrip = ini_GetValue( Data ); }
						if( strcmp( key , "MinLog" , true ) == 0 ) { val = ini_GetValue( Data ); data2[0] = strval( val ); }
					    if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); data2[1] = strval( val ); }
					    if( strcmp( key , "AdminShadow" , true ) == 0 ) { val = ini_GetValue( Data ); data2[2] = strval( val ); }
					    if( strcmp( key , "AdminLive" , true ) == 0 ) { val = ini_GetValue( Data ); data2[3] = strval( val ); }
						if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); data2[4] = strval( val ); }
						if( strcmp( key , "Prison" , true ) == 0 ) { val = ini_GetValue( Data ); data2[5] = strval( val ); }
						if( strcmp( key , "Prisonsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[6] = strval( val ); }
						if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); data2[7] = strval( val ); }
						if( strcmp( key , "Mutedsec" , true ) == 0 ) { val = ini_GetValue( Data ); data2[8] = strval( val ); }
						if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); data2[9] = strval( val ); }
						if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); data2[10] = strval( val ); }
						if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); data2[11] = strval( val ); }
						if( strcmp( key , "VIP" , true ) == 0 ) { val = ini_GetValue( Data ); data2[12] = strval( val ); }
						if( strcmp( key , "Lock" , true ) == 0 ) { val = ini_GetValue( Data ); data2[13] = strval( val ); }
						if( strcmp( key , "Gang" , true ) == 0 ) { val = ini_GetValue( Data ); data2[14] = strval( val ); }
						if( strcmp( key , "GangLvl" , true ) == 0 ) { val = ini_GetValue( Data ); data2[15] = strval( val ); }
//						if( strcmp( key , "PISTOL" , true ) == 0 ) { val = ini_GetValue( Data ); data2[16] = strval( val ); }
//						if( strcmp( key , "PISTOL_SILENCED" , true ) == 0 ) { val = ini_GetValue( Data ); data2[17] = strval( val ); }
//						if( strcmp( key , "DESERT_EAGLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[18] = strval( val ); }
//						if( strcmp( key , "SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[19] = strval( val ); }
//						if( strcmp( key , "SAWNOFF_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[20] = strval( val ); }
//						if( strcmp( key , "SPAS12_SHOTGUN" , true ) == 0 ) { val = ini_GetValue( Data ); data2[21] = strval( val ); }
//						if( strcmp( key , "MICRO_UZI" , true ) == 0 ) { val = ini_GetValue( Data ); data2[22] = strval( val ); }
//						if( strcmp( key , "MP5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[23] = strval( val ); }
//						if( strcmp( key , "AK47" , true ) == 0 ) { val = ini_GetValue( Data ); data2[24] = strval( val ); }
//						if( strcmp( key , "M4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[25] = strval( val ); }
//						if( strcmp( key , "SNIPERRIFLE" , true ) == 0 ) { val = ini_GetValue( Data ); data2[26] = strval( val ); }
						if( strcmp( key , "Weapon_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[27] = strval( val ); }
						if( strcmp( key , "Weapon_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[28] = strval( val ); }
						if( strcmp( key , "Weapon_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[29] = strval( val ); }
						if( strcmp( key , "Weapon_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[30] = strval( val ); }
						if( strcmp( key , "Weapon_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[31] = strval( val ); }
						if( strcmp( key , "Weapon_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[32] = strval( val ); }
						if( strcmp( key , "Weapon_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[33] = strval( val ); }
						if( strcmp( key , "Weapon_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[34] = strval( val ); }
						if( strcmp( key , "Weapon_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[35] = strval( val ); }
						if( strcmp( key , "Weapon_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[36] = strval( val ); }
						if( strcmp( key , "Weapon_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[37] = strval( val ); }
						if( strcmp( key , "Weapon_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[38] = strval( val ); }
						if( strcmp( key , "Weapon_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[39] = strval( val ); }
						if( strcmp( key , "Ammo_slot0" , true ) == 0 ) { val = ini_GetValue( Data ); data2[40] = strval( val ); }
						if( strcmp( key , "Ammo_slot1" , true ) == 0 ) { val = ini_GetValue( Data ); data2[41] = strval( val ); }
						if( strcmp( key , "Ammo_slot2" , true ) == 0 ) { val = ini_GetValue( Data ); data2[42] = strval( val ); }
						if( strcmp( key , "Ammo_slot3" , true ) == 0 ) { val = ini_GetValue( Data ); data2[43] = strval( val ); }
						if( strcmp( key , "Ammo_slot4" , true ) == 0 ) { val = ini_GetValue( Data ); data2[44] = strval( val ); }
						if( strcmp( key , "Ammo_slot5" , true ) == 0 ) { val = ini_GetValue( Data ); data2[45] = strval( val ); }
						if( strcmp( key , "Ammo_slot6" , true ) == 0 ) { val = ini_GetValue( Data ); data2[46] = strval( val ); }
						if( strcmp( key , "Ammo_slot7" , true ) == 0 ) { val = ini_GetValue( Data ); data2[47] = strval( val ); }
						if( strcmp( key , "Ammo_slot8" , true ) == 0 ) { val = ini_GetValue( Data ); data2[48] = strval( val ); }
						if( strcmp( key , "Ammo_slot9" , true ) == 0 ) { val = ini_GetValue( Data ); data2[49] = strval( val ); }
						if( strcmp( key , "Ammo_slot10" , true ) == 0 ) { val = ini_GetValue( Data ); data2[50] = strval( val ); }
						if( strcmp( key , "Ammo_slot11" , true ) == 0 ) { val = ini_GetValue( Data ); data2[51] = strval( val ); }
						if( strcmp( key , "Ammo_slot12" , true ) == 0 ) { val = ini_GetValue( Data ); data2[52] = strval( val ); }
					}
					fclose(UserFile);
					strdel(igkey, strlen(igkey)-1, strlen(igkey));//корректировка пароля
					strdel(tdreg, strlen(tdreg)-1, strlen(tdreg));//корректировка времени и дата регистрации
					strdel(adrip, strlen(adrip)-1, strlen(adrip));//корректировка IP-адреса
//эти строки оставлены для совместимости с ранней версией мода !!!
//--------------------------------- начало -------------------------------------
					new string999[256];
					format(string999,sizeof(string999),"gangs/players/%s.ini", impdatas[0]);
					if(fexist(string999))//читаем аккаунт из системы кланов (если файл существует)
					{
						new File: UserFile333 = fopen(string999, io_read);//чтение файла
						new key333[ 256 ] , val333[ 256 ];
						new Data333[ 256 ];
						while ( fread( UserFile333 , Data333 , sizeof( Data333 ) ) )
						{
							key333 = ini_GetKey( Data333 );
							if( strcmp( key333 , "Gang " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[14] = strval( val333 ); }
							if( strcmp( key333 , "GangLvl " , true ) == 0 ) { val333 = ini_GetValue( Data333 ); data2[15] = strval( val333 ); }
						}
						fclose(UserFile333);
					}
					if(fexist(string999))//удаляем аккаунт из системы кланов (если файл существует)
					{
						fremove(string999);
					}
//---------------------------------- конец -------------------------------------
					if(fexist(impf))
					{
						fremove(impf);//удаляем аккаунт из fopen
					}
				}
				else//иначе: (если аккаунт зарегистрирован в SQLite)
				{
					format(ssss, sizeof(ssss), "SELECT * FROM Players WHERE (Name = '%s')", impdatas[0]);//создаём запрос БД
					querydbau = db_query(playerdb, ssss);//отправляем запрос БД
					if(db_num_rows(querydbau) != 0)//переведём результат запроса в число найденных строк в БД
					{//если число строк не равно 0 (такой аккаунт в БД есть), то - аккаунт зарегистрирован в БД
						conakk = 2;//делаем отметку существования аккаунта в SQLite
						new buffer[32];//читаем данные из БД
						db_get_field(querydbau, 2, igkey, 256);//Key
						db_get_field(querydbau, 3, tdreg, 256);//TDReg
						db_get_field(querydbau, 4, buffer, 32); dddata2[0] = strval(buffer);//DEndConD
						db_get_field(querydbau, 5, buffer, 32); dddata2[1] = strval(buffer);//DEndConM
						db_get_field(querydbau, 6, buffer, 32); dddata2[2] = strval(buffer);//DEndConY
						db_get_field(querydbau, 7, adrip, 256);//IPAdr
						db_get_field(querydbau, 8, buffer, 32); data2[0] = strval(buffer);//MinLog
						db_get_field(querydbau, 9, buffer, 32); data2[1] = strval(buffer);//AdminLevel
						db_get_field(querydbau, 10, buffer, 32); data2[2] = strval(buffer);//AdminShadow
						db_get_field(querydbau, 11, buffer, 32); data2[3] = strval(buffer);//AdminLive
						db_get_field(querydbau, 13, buffer, 32); data2[5] = strval(buffer);//Prison
						db_get_field(querydbau, 14, buffer, 32); data2[6] = strval(buffer);//Prisonsec
						db_get_field(querydbau, 15, buffer, 32); data2[7] = strval(buffer);//Muted
						db_get_field(querydbau, 16, buffer, 32); data2[8] = strval(buffer);//Mutedsec
						db_get_field(querydbau, 17, buffer, 32); data2[9] = strval(buffer);//Money
						db_get_field(querydbau, 18, buffer, 32); data2[10] = strval(buffer);//Kills
						db_get_field(querydbau, 19, buffer, 32); data2[11] = strval(buffer);//Deaths
						db_get_field(querydbau, 20, buffer, 32); data2[12] = strval(buffer);//VIP
						db_get_field(querydbau, 21, buffer, 32); data2[13] = strval(buffer);//Lock
						db_get_field(querydbau, 22, buffer, 32); data2[14] = strval(buffer);//Gang
						db_get_field(querydbau, 23, buffer, 32); data2[15] = strval(buffer);//GangLvl
						db_free_result(querydbau);//очищаем результат запроса БД
					}
				}
#endif
				if(conakk == 1 || conakk == 2)//если аккаунт существует, то:
				{
//==============================================================================
					new ddainv = 0;
					if(data2[1] < 0)//если лвл админа отрицательный, то:
					{
						data2[1] = data2[1] * -1;//делаем лвл админа положительным
						ddainv = 1;//делаем отметку инверсии знака лвл админа
					}
					if(impcon[1] == 0)//замена пароля
					{
						if(strcmp(igkey, impdatas[1], false) != 0)
						{
							strdel(impdatas[2], 0, 128);
							strcat(impdatas[2], igkey);
							strmid(igkey, impdatas[1], 0, strlen(impdatas[1]), 255);
							format(ssss, sizeof(ssss), " **** Замена пароля аккаунта игрока [%s] на (%s) FP: (%s) .", impdatas[0], igkey, impdatas[2]);
							print(ssss);
							format(ssss, sizeof(ssss), " **** Замена пароля аккаунта игрока [%s] .", impdatas[0]);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						}
					}
					if(impcon[2] == 0)//замена лвл админа
					{
						if(data2[1] != impdata[2])
						{
							if((impcon[8] == 0 && impdata[8] != 3) ||
							(impcon[8] == -9 && data2[12] != 3))//если нет депортации, то:
							{
								impdata[12] = data2[1];
								data2[1] = impdata[2];
								AdmUpdate(impdatas[0], data2[1], 4);
								if(data2[1] == 0)//если лвл админа = 0, то:
								{
									if(impcon[3] == 0)
									{
										impdata[3] = 0;//выключение скрытости админа
										data2[2] = 0;
									}
									if(impcon[3] == -9) { data2[2] = 0; }
								}
								if(data2[1] >= 1)//если лвл админа >= 1, то:
								{
									if(impcon[8] == 0 && (impdata[8] == 1 || impdata[8] == 2))
									{//если есть VIP-1 или VIP-2, то:
										impdata[8] = 0;//обнуление VIP лвл
									}
									if(impcon[8] == -9) { data2[12] = 0; }
								}
								if(data2[1] <= 1 && impdata[12] >= 2)
								{
									new twenlim, restlim;
									Fmadmins(0, impdatas[0], 0, twenlim, restlim);
								}
								if(data2[1] >= 2 && impdata[12] <= 1)
								{
									new twenlim = 0;
									new restlim = 0;
									Fmadmins(1, impdatas[0], 0, twenlim, restlim);
								}
								if(data2[1] >= 3 && impdata[12] <= 2)
								{
									if(impcon[4] == 0 && impdata[4] == 1)
									{
										data2[3] = 1;
									}
									if(impcon[4] == -9)
									{
										data2[3] = 1;
									}
								}
								if(data2[1] <= 2 && impdata[12] >= 3)
								{
									if(impcon[4] == 0) { impcon[4] = -9; }
									data2[3] = 0;
								}
								if(data2[1] >= 1 && impdata[12] == 0)
								{//если лвл админа был установлен после нулевого лвл админа, то:
									ddainv = 1;//делаем отметку инверсии знака лвл админа
								}
								format(ssss, sizeof(ssss), " **** Замена лвл аккаунта админа [%s] на %d .", impdatas[0], data2[1]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
						}
					}
					if(impcon[3] == 0)//замена скрытости админа
					{
						if(data2[2] != impdata[3])
						{
							if(data2[1] >= 1)
							{
								data2[2] = impdata[3];
								if(data2[2] == 1)
								{
									if(impcon[8] == 0 && impdata[8] != 3 && data2[12] != 3)
									{//если нет замены на депортацию, И ранее НЕ была депортация, то:
										impdata[8] = 0;//обнуление VIP лвл
										data2[12] = 0;
									}
									if(impcon[8] == -9 && data2[12] != 3) { data2[12] = 0; }
									format(ssss, sizeof(ssss), " **** Замена скрытости аккаунта админа [%s] на ''включено'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
								else
								{
									format(ssss, sizeof(ssss), " **** Замена скрытости аккаунта админа [%s] на ''выключено'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
							}
						}
					}
					if(impcon[4] == 0)//замена бессмертия админа
					{
						if(data2[3] != impdata[4])
						{
							if(data2[1] >= 3)
							{
								data2[3] = impdata[4];
								if(data2[3] == 1)
								{
									format(ssss, sizeof(ssss), " **** Замена бессмертия аккаунта админа [%s] на ''включено'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
								else
								{
									format(ssss, sizeof(ssss), " **** Замена бессмертия аккаунта админа [%s] на ''выключено'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
							}
						}
					}
					if(impcon[5] == 0)//замена времени тюрьмы
					{
						if(impdata[5] <= 3) { impdata[5] = 0; }
						if(impdata[5] == 4) { impdata[5] = 5; }
						if(data2[6] != impdata[5])
						{
							data2[6] = impdata[5];
							format(ssss, sizeof(ssss), " **** Замена времени тюрьмы аккаунта игрока [%s] на %d сек.", impdatas[0], data2[6]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						}
					}
					if(impcon[6] == 0)//замена времени затыка
					{
						if(impdata[6] <= 3) { impdata[6] = 0; }
						if(impdata[6] == 4) { impdata[6] = 5; }
						if(data2[8] != impdata[6])
						{
							data2[8] = impdata[6];
							format(ssss, sizeof(ssss), " **** Замена времени затыка аккаунта игрока [%s] на %d сек.", impdatas[0], data2[8]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						}
					}
					if(impcon[8] == 0)//замена VIP лвл
					{
						if(data2[12] != impdata[8])
						{
							if(data2[1] == 0 && impdata[8] == 4)
							{//если игрок - не админ, И VIP лвл = 4, то:
								impdata[8] = 0;//обнуление VIP лвл
							}
							if(impdata[8] != 3 && data2[1] >= 1 && data2[2] == 1)
							{//если нет замены на депортацию, И у админа скрытость, то:
								impdata[8] = 0;//обнуление VIP лвл
							}
							if(data2[1] >= 1 && (impdata[8] == 1 || impdata[8] == 2))
							{//если игрок - админ, И VIP лвл = 1 ИЛИ = 2, то:
								impdata[8] = 0;//обнуление VIP лвл
							}
							new mnloc;
							if(impdata[8] == 3 && data2[12] != 3)
							{//если замена на депортацию, И ранее НЕ была депортация, то:
								mnloc = data2[9];//запомнить денежную сумму
							}
							impdata[12] = data2[12];
							data2[12] = impdata[8];
							if(data2[1] == 0 && data2[12] == 0 && (impdata[12] == 1 || impdata[12] == 2))
							{
								format(ssss, sizeof(ssss), " **** Замена VIP лвл аккаунта игрока [%s] на %d .", impdatas[0], data2[12]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
							if(data2[1] == 0 && (data2[12] == 1 || data2[12] == 2))
							{
								format(ssss, sizeof(ssss), " **** Замена VIP лвл аккаунта игрока [%s] на %d .", impdatas[0], data2[12]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
							if(data2[2] == 0)
							{
								if(data2[1] >= 1 && data2[12] == 0 && impdata[12] != 0)
								{
									format(ssss, sizeof(ssss), " **** Замена приёма PM от игроков для аккаунта админа [%s] на ''выключено'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
								if(data2[1] >= 1 && data2[12] == 4 && impdata[12] != 4)
								{
									format(ssss, sizeof(ssss), " **** Замена приёма PM от игроков для аккаунта админа [%s] на ''включено'' .", impdatas[0]);
									print(ssss);
									SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								}
							}
							if(data2[12] != 3 && impdata[12] == 3)
							{
								format(ssss, sizeof(ssss), " **** Замена депортации аккаунта игрока [%s] на ''отменено'' .", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
							if(data2[12] == 3 && impdata[12] != 3)
							{
								data2[1] = 0;
								data2[2] = 0;
								data2[3] = 0;
								data2[9] = 1000;
								format(ssss, sizeof(ssss), " **** Замена стандартного режима игры аккаунта игрока [%s] на депортацию.", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								printf("[moneysys] Предыдущая сумма аккаунта игрока %s : %d $", impdatas[0], mnloc);
							}
						}
					}
					if(impcon[7] == 0)//замена суммы денег
					{
						if(data2[12] != 3)//если нет депортации, то:
						{
							if(data2[9] != impdata[7])
							{
								new mnloc;
								mnloc = data2[9];
								data2[9] = impdata[7];
								format(ssss, sizeof(ssss), " **** Замена суммы денег аккаунта игрока [%s] на %d $ .", impdatas[0], data2[9]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
								printf("[moneysys] Предыдущая сумма аккаунта игрока %s : %d $", impdatas[0], mnloc);
							}
						}
					}
					if(impcon[9] == 0)//замена блокировки аккаунта
					{
						if(data2[13] != impdata[9])
						{
							if(impdata[9] == 1)//блокировка аккаунта
							{
								data2[13] = impdata[9];//блокировка аккаунта
								strdel(ssss, 0, 256);//сборка RCON-команды бана
								strcat(ssss, "banip ");
								strcat(ssss, adrip);
								SendRconCommand(ssss);//RCON-команда бана
								SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа

								gettime(timecor[0], timecor[1]);
								getdate(timecor[2], timecor[3], timecor[4]);
								TimCor();//коррекция времени
								DatCor();//коррекция даты

								new string999[256], stringdop[256];
								format(stringdop,256,"%s [%02d:%02d | %02d/%02d/%04d] - Замена данных: блокировка аккаунта",adrip,timecor[0],timecor[1],timecor[4],timecor[3],timecor[2]);
								format(string999,sizeof(string999),"banlist/players/%s.ini",impdatas[0]);
								new File: hFile44 = fopen(string999, io_write);//запись файла бан-листа
								if (hFile44)
								{
									new var[256];
									format(var, 256, "Data=%s\n",stringdop);fwrite(hFile44, var);
									format(var, 256, "IDFile=%d\n",0);fwrite(hFile44, var);
									fclose(hFile44);
								}

								format(ssss, sizeof(ssss), " **** Замена стандартного режима игры аккаунта игрока [%s] на блокировку аккаунта.", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
							if(impdata[9] == 0)//аккаунт разблокирован
							{
								data2[12] = 0;//отмена депортации
								data2[13] = impdata[9];//сброс блокировки аккаунта
								strdel(ssss, 0, 256);//сборка RCON-команды разбана
								strcat(ssss, "unbanip ");
								strcat(ssss, adrip);
								SendRconCommand(ssss);//RCON-команда разбана
								SendRconCommand("reloadbans");//RCON-команда перезагрузки бан-листа

								new string222[256], string333[256], idfile;
								idfile = 0;
								new ip333[128];
								ip333 = ConvIP(adrip);
								format(string222,sizeof(string222),"banlist/players/%s.ini",impdatas[0]);
								if(fexist(string222))//читаем аккаунт из бан-листа (если файл существует)
								{
									new File: UserFile44 = fopen(string222, io_read);//чтение аккаунта из бан-листа
									new key44[ 256 ] , val44[ 256 ];
									new Data44[ 256 ];
									while ( fread( UserFile44 , Data44 , sizeof( Data44 ) ) )
									{
										key44 = ini_GetKey( Data44 );
										if( strcmp( key44 , "Data" , true ) == 0 ) { string333 = ini_GetValue( Data44 ); }
										if( strcmp( key44 , "IDFile" , true ) == 0 ) { val44 = ini_GetValue( Data44 ); idfile = strval( val44 ); }
									}
									fclose(UserFile44);
									strdel(string333, strlen(string333)-1, strlen(string333));//корректировка причины бана
								}
								format(string222,sizeof(string222),"bantime/%d.ini",idfile);
								if(fexist(string222))//если файл временного бана существует, то:
								{
									fremove(string222);//удаление ид-файла временного бана
									printf("[BanTime] Файл временного бана игрока [%s] был удалён ( ид [%d] ) .", impdatas[0], idfile);
								}
								format(string222,sizeof(string222),"banlist/players/%s.ini",impdatas[0]);
								if(fexist(string222))
								{
									fremove(string222);//удаляем аккаунт из бан-листа
									format(ssss,sizeof(ssss)," ( Аккаунт игрока [%s] был удалён из бан-листа ) !", impdatas[0]);
									print(ssss);
								}
								format(string222,sizeof(string222),"banlist/ipadr/%s.ini",ip333);
								if(fexist(string222))
								{
									fremove(string222);//удаляем IP-адрес из бан-листа
									format(ssss,sizeof(ssss)," ( IP-адрес [%s] был удалён из бан-листа ) !", adrip);
									print(ssss);
								}

								format(ssss, sizeof(ssss), " **** Замена блокировки аккаунта игрока [%s] на аккаунт разблокирован.", impdatas[0]);
								print(ssss);
								SendAdminMessage(COLOR_LIGHTBLUE, ssss);
							}
						}
					}
					if(impcon[10] == 0)//замена ид клана
					{
						if(data2[14] != impdata[10])
						{
							data2[14] = impdata[10];
							if(data2[14] <= 0) { data2[15] = 0; }
							if(data2[14] >= 1) { data2[15] = 1; }
							format(ssss, sizeof(ssss), " **** Замена ид клана аккаунта игрока [%s] на %d .", impdatas[0], data2[14]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						}
					}
					if(impcon[11] == 0)//замена лвл в клане
					{
						if(data2[14] <= 0) { impdata[11] = 0; }
						if(data2[15] != impdata[11])
						{
							data2[15] = impdata[11];
							format(ssss, sizeof(ssss), " **** Замена лвл в клане аккаунта игрока [%s] на %d .", impdatas[0], data2[15]);
							print(ssss);
							SendAdminMessage(COLOR_LIGHTBLUE, ssss);
						}
					}
					if(ddainv == 1)//если есть отметка инверсии знака лвл админа, то:
					{
						data2[1] = data2[1] * -1;//делаем лвл админа отрицательным
					}
//==============================================================================
#if (MOD90INS == 0)
					new File: hFile = fopen(impf, io_write);//запись изменённого аккаунта
					if (hFile)
					{
						new var[32];
						format(var, 32, "Key=%s\n",igkey);fwrite(hFile, var);
						format(var, 32, "TDReg=%s\n",tdreg);fwrite(hFile, var);
						format(var, 32, "IPAdr=%s\n",adrip);fwrite(hFile, var);
						format(var, 32, "MinLog=%d\n",data2[0]);fwrite(hFile, var);
						format(var, 32, "AdminLevel=%d\n",data2[1]);fwrite(hFile, var);
						format(var, 32, "AdminShadow=%d\n",data2[2]);fwrite(hFile, var);
						format(var, 32, "AdminLive=%d\n",data2[3]);fwrite(hFile, var);
						format(var, 32, "Registered=%d\n",data2[4]);fwrite(hFile, var);
						format(var, 32, "Prison=%d\n",data2[5]);fwrite(hFile, var);
						format(var, 32, "Prisonsec=%d\n",data2[6]);fwrite(hFile, var);
						format(var, 32, "Muted=%d\n",data2[7]);fwrite(hFile, var);
						format(var, 32, "Mutedsec=%d\n",data2[8]);fwrite(hFile, var);
						format(var, 32, "Money=%d\n",data2[9]);fwrite(hFile, var);
						format(var, 32, "Kills=%d\n",data2[10]);fwrite(hFile, var);
						format(var, 32, "Deaths=%d\n",data2[11]);fwrite(hFile, var);
						format(var, 32, "VIP=%d\n",data2[12]);fwrite(hFile, var);
						format(var, 32, "Lock=%d\n",data2[13]);fwrite(hFile, var);
						format(var, 32, "Gang=%d\n",data2[14]);fwrite(hFile, var);
						format(var, 32, "GangLvl=%d\n",data2[15]);fwrite(hFile, var);
//						format(var, 32, "PISTOL=%d\n",data2[16]);fwrite(hFile, var);
//						format(var, 32, "PISTOL_SILENCED=%d\n",data2[17]);fwrite(hFile, var);
//						format(var, 32, "DESERT_EAGLE=%d\n",data2[18]);fwrite(hFile, var);
//						format(var, 32, "SHOTGUN=%d\n",data2[19]);fwrite(hFile, var);
//						format(var, 32, "SAWNOFF_SHOTGUN=%d\n",data2[20]);fwrite(hFile, var);
//						format(var, 32, "SPAS12_SHOTGUN=%d\n",data2[21]);fwrite(hFile, var);
//						format(var, 32, "MICRO_UZI=%d\n",data2[22]);fwrite(hFile, var);
//						format(var, 32, "MP5=%d\n",data2[23]);fwrite(hFile, var);
//						format(var, 32, "AK47=%d\n",data2[24]);fwrite(hFile, var);
//						format(var, 32, "M4=%d\n",data2[25]);fwrite(hFile, var);
//						format(var, 32, "SNIPERRIFLE=%d\n",data2[26]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot0=%d\n",data2[27]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot1=%d\n",data2[28]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot2=%d\n",data2[29]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot3=%d\n",data2[30]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot4=%d\n",data2[31]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot5=%d\n",data2[32]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot6=%d\n",data2[33]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot7=%d\n",data2[34]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot8=%d\n",data2[35]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot9=%d\n",data2[36]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot10=%d\n",data2[37]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot11=%d\n",data2[38]);fwrite(hFile, var);
						format(var, 32, "Weapon_slot12=%d\n",data2[39]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot0=%d\n",data2[40]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot1=%d\n",data2[41]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot2=%d\n",data2[42]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot3=%d\n",data2[43]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot4=%d\n",data2[44]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot5=%d\n",data2[45]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot6=%d\n",data2[46]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot7=%d\n",data2[47]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot8=%d\n",data2[48]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot9=%d\n",data2[49]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot10=%d\n",data2[50]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot11=%d\n",data2[51]);fwrite(hFile, var);
						format(var, 32, "Ammo_slot12=%d\n",data2[52]);fwrite(hFile, var);
						fclose(hFile);
					}
#endif
#if (MOD90INS == 1)
					if(conakk == 1)//если аккаунт был зарегистрирован в fopen, то:
					{
						format(ssss, sizeof(ssss), "DELETE FROM Players WHERE (Name = '%s')", impdatas[0]);//миграция аккаунта в БД, создаём запрос БД
						db_query(playerdb, ssss);//отправляем запрос на удаление аккаунта (аккаунтов) из БД (если такой аккаунт (такие аккаунты) УЖЕ есть в БД)

						format(strdln, sizeof(strdln), "INSERT INTO Players (IDCopy,Name,Key,TDReg,DEndConD,DEndConM,DEndConY,IPAdr,MinLog,AdminLevel,");//создаём запрос БД
						format(strdln, sizeof(strdln), "%sAdminShadow,AdminLive,Registered,Prison,Prisonsec,Muted,Mutedsec,Money,Kills,Deaths,VIP,Lock,Gang,", strdln);
						format(strdln, sizeof(strdln), "%sGangLvl,Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3,Weapon_slot4,Weapon_slot5,Weapon_slot6,", strdln);
						format(strdln, sizeof(strdln), "%sWeapon_slot7,Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11,Weapon_slot12,Ammo_slot0,", strdln);
						format(strdln, sizeof(strdln), "%sAmmo_slot1,Ammo_slot2,Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6,Ammo_slot7,Ammo_slot8,Ammo_slot9,", strdln);
						format(strdln, sizeof(strdln), "%sAmmo_slot10,Ammo_slot11,Ammo_slot12) ", strdln);
						format(strdln, sizeof(strdln), "%sVALUES (1,'%s','%s','%s',", strdln, impdatas[0],igkey,tdreg);//IDCopy,Name,Key,TDReg
						format(strdln, sizeof(strdln), "%s0,0,0,'%s',", strdln, adrip);//DEndConD,DEndConM,DEndConY,IPAdr
						format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[0],data2[1],data2[2]);//MinLog,AdminLevel,AdminShadow
						format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[3],data2[4],data2[5]);//AdminLive,Registered,Prison
						format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[6],data2[7],data2[8]);//Prisonsec,Muted,Mutedsec
						format(strdln, sizeof(strdln), "%s%d,%d,%d,", strdln, data2[9],data2[10],data2[11]);//Money,Kills,Deaths
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[12],data2[13],data2[14],data2[15]);//VIP,Lock,Gang,GangLvl
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[27],data2[28],data2[29],data2[30]);//Weapon_slot0,Weapon_slot1,Weapon_slot2,Weapon_slot3
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[31],data2[32],data2[33],data2[34]);//Weapon_slot4,Weapon_slot5,Weapon_slot6,Weapon_slot7
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[35],data2[36],data2[37],data2[38]);//Weapon_slot8,Weapon_slot9,Weapon_slot10,Weapon_slot11
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[39],data2[40],data2[41],data2[42]);//Weapon_slot12,Ammo_slot0,Ammo_slot1,Ammo_slot2
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[43],data2[44],data2[45],data2[46]);//Ammo_slot3,Ammo_slot4,Ammo_slot5,Ammo_slot6
						format(strdln, sizeof(strdln), "%s%d,%d,%d,%d,", strdln, data2[47],data2[48],data2[49],data2[50]);//Ammo_slot7,Ammo_slot8,Ammo_slot9,Ammo_slot10
						format(strdln, sizeof(strdln), "%s%d,%d)", strdln, data2[51],data2[52]);//Ammo_slot11,Ammo_slot12
						db_query(playerdb, strdln);//отправляем запрос на добавление нового аккаунта в БД
					}
					if(conakk == 2)//если аккаунт был зарегистрирован в БД, то:
					{
						format(strdln, sizeof(strdln), "UPDATE Players SET Key = '%s',TDReg = '%s',",igkey,tdreg);//создаём запрос БД
						format(strdln, sizeof(strdln), "%sDEndConD = %d,DEndConM = %d,DEndConY = %d,", strdln, dddata2[0],dddata2[1],dddata2[2]);
						format(strdln, sizeof(strdln), "%sIPAdr = '%s',MinLog = %d,", strdln, adrip,data2[0]);
						format(strdln, sizeof(strdln), "%sAdminLevel = %d,AdminShadow = %d,", strdln, data2[1],data2[2]);
						format(strdln, sizeof(strdln), "%sAdminLive = %d,", strdln, data2[3]);
						format(strdln, sizeof(strdln), "%sPrison = %d,Prisonsec = %d,", strdln, data2[5],data2[6]);
						format(strdln, sizeof(strdln), "%sMuted = %d,Mutedsec = %d,", strdln, data2[7],data2[8]);
						format(strdln, sizeof(strdln), "%sMoney = %d,Kills = %d,", strdln, data2[9],data2[10]);
						format(strdln, sizeof(strdln), "%sDeaths = %d,VIP = %d,", strdln, data2[11],data2[12]);
						format(strdln, sizeof(strdln), "%sLock = %d,Gang = %d,GangLvl = %d ", strdln, data2[13],data2[14],data2[15]);
						format(strdln, sizeof(strdln), "%sWHERE (Name = '%s')", strdln, impdatas[0]);
						db_query(playerdb, strdln);//отправляем запрос на обновление (перезапись) аккаунта в БД
					}
#endif
				}
				else//если аккаунта НЕ существует, то:
				{
					impcon[13] = 0;
				}
			}
		}
		if(impcon[13] == 0)//если аккаунта не существует, то:
		{
			strdel(impdatas[3], 0, 128);
			strcat(impdatas[3], "аккаунта Name не существует");
		}
		format(impf, 256, "players/aimport/%i-ret.txt", impdd2);//создание файла-ответа
		if(fexist(impf))//если файл-ответа уже есть, то:
		{
			fremove(impf);//удаляем файл-ответа
		}
		format(impf, 256, "players/aimport/%i-ret.txt", impdd2);//создаём файла-ответа
		impfile = ini_createFile(impf);
		if(impfile >= 0)
		{
			ini_setString(impfile, "ret", impdatas[3]);
			ini_closeFile(impfile);
		}
		format(impf, 256, "players/aimport/%i.txt", impdd2);//удаление файла для импорта
		if(fexist(impf))
		{
			fremove(impf);
		}
	}
	return 1;
}

#if (MOD22INS == 1 && MOD55INS == 1)
	forward SLCopy(per);
	public SLCopy(per)//резервное копирование сервер-лога
	{
		if(per == 1)//режим копии конца старого сервер-лога
		{
			position = fileLength(inLog);//узнаём и запоминаем последний размер сервер-лога

			new str333[256];
			format(str333, sizeof(str333), "\n------------------------------------------------------\n");
			fileWrite(outLog, str333);
			format(str333, sizeof(str333), "\n[server_log copy] конец старого сервер-лога (начало) !\n");
			fileWrite(outLog, str333);//делаем отметку в копии сервер-лога о начале копирования
			format(str333, sizeof(str333), "\n------------------------------------------------------\n");
			fileWrite(outLog, str333);
			fileSeek(inLog, -20000, seek_End);//устанавливаем маркер чтения с конца старого сервер-лога до минус 20000 байт
			while(fileRead(inLog, str333))//(что бы прочитать ТОЛЬКО последние 20000 байт старого сервер-лога)
			{//читаем строку за строкой (пока не достигнут конец старого сервер-лога)
				fileWrite(outLog, str333);//записываем копию старого сервер-лога строку за строкой
			}//выходим из процесса копирования, если достигнут конец сервер-лога
			format(str333, sizeof(str333), "\n-----------------------------------------------------\n");
			fileWrite(outLog, str333);
			format(str333, sizeof(str333), "\n[server_log copy] конец старого сервер-лога (конец) !\n");
			fileWrite(outLog, str333);//делаем отметку в копии сервер-лога о конце копирования
			format(str333, sizeof(str333), "\n-----------------------------------------------------\n");
			fileWrite(outLog, str333);
		}
		else//иначе: режим копии сервер-лога
		{
			new para1, para2;
			para1 = fileLength(inLog);//узнаём последний размер сервер-лога
			para2 = para1 - position;//узнаём разницу между предыдущим и последним размером сервер-лога
			position = para1;//запоминаем последний размер сервер-лога

			if(para2 > 0)//если разница между предыдущим и последним размером сервер-лога не равна нулю,
			{//(за последние 2 секунды в сервер-лог была добавлена хотя бы одна строка), то:
				new str333[256], para3;
				para3 = 0;
				fileSeek(inLog, para2 * -1, seek_End);//устанавливаем маркер чтения с конца сервер-лога до минус разницы
				while(fileRead(inLog, str333))//(что бы прочитать ТОЛЬКО байты разницы до конца сервер-лога)
				{//читаем строку за строкой (пока не достигнут конец сервер-лога)
					para3 = para3 + fileWrite(outLog, str333);//записываем копию сервер-лога строку за строкой,
					if(para3 > 10000)//И считаем число записанных байт разницы сервер-лога
					{//если за последние 2 секунды на сервере было больше 10000 байт (примерно 200 строк), то:
						format(str333, sizeof(str333), "\n----------------------------------------------------\n");
						fileWrite(outLog, str333);
						format(str333, sizeof(str333), "\n[server_log copy] превышен лимит копируемых байт !!!\n");
						fileWrite(outLog, str333);//делаем отметку в копии сервер-лога, И выходим из процесса копирования
						format(str333, sizeof(str333), "\n----------------------------------------------------\n");
						fileWrite(outLog, str333);
						break;//разницы сервер-лога
					}
				}//выходим из процесса копирования, если достигнут конец сервер-лога
			}
		}
		return 1;
	}
#endif

forward FUnfroz(playerid);
public FUnfroz(playerid)
{
	if(perfrost[playerid] == 600)//если игрок НЕ был заморожен админом, то:
	{
		TogglePlayerControllable(playerid,1);//разморозить игрока
	}
	return 1;
}

forward ContFS();
public ContFS()//перезагрузка с 0-го по 15-й слот FS
{
	new string[256];
	for(new j=0; j<16; j++)
	{
		if(strlen(relfs[j]))//если строка НЕ пустая, то:
		{
			strdel(string,0,256);//очистка переменной string
			strcat(string, "reloadfs ");//сборка RCON-команды перезагрузки фильтрскрипта
			strcat(string, relfs[j]);
			SendRconCommand(string);//RCON-команда перезагрузки фильтрскрипта
		}
	}
	return 1;
}

forward PassControl(string[]);
public PassControl(string[])//контроль пароля на посторонние символы
{
	new dln, dopper;
	dln = strlen(string);
	dopper = 1;
	for(new i = 0; i < dln; i++)
	{
		if(string[i] < 48 || (string[i] > 57 && string[i] < 65) ||
		(string[i] > 90 && string[i] < 97) || string[i] > 122) { dopper = 0; }
	}
	return dopper;
}

forward InpTxtControl(string[]);
public InpTxtControl(string[])//контроль вводимого текста на посторонние символы
{
	new dln, dopper;
	dln = strlen(string);
	dopper = 1;
	for(new i = 0; i < dln; i++)
	{
		if(string[i] < 32 || string[i] == 37 || string[i] == 126 ||
		string[i] == 127 || string[i] == 152 || string[i] == 160) { dopper = 0; }
	}
	return dopper;
}

forward ContSobj();
public ContSobj()//загрузка потоковых объектов, 3D-текстов, и текст-дравов сервера
{
/*
	Textdraw0 = TextDrawCreate(506.000000,96.000000,"~w~All ~g~Drifting~w~ score");//drift bonus
	TextDrawAlignment(Textdraw0,0);
	TextDrawBackgroundColor(Textdraw0,0x000000ff);
	TextDrawFont(Textdraw0,3);
	TextDrawLetterSize(Textdraw0,0.299999,1.000000);
	TextDrawColor(Textdraw0,0x00ff00ff);
	TextDrawSetOutline(Textdraw0,1);
	TextDrawSetProportional(Textdraw0,1);
	TextDrawSetShadow(Textdraw0,1);

	Textdraw1 = TextDrawCreate(498.000000,77.000000,"~g~0");
	TextDrawAlignment(Textdraw1,0);
	TextDrawBackgroundColor(Textdraw1,0x000000ff);
	TextDrawFont(Textdraw1,3);
	TextDrawLetterSize(Textdraw1,0.599999,2.200000);
	TextDrawColor(Textdraw1,0xffffffff);
	TextDrawSetOutline(Textdraw1,1);
	TextDrawSetProportional(Textdraw1,1);
	TextDrawSetShadow(Textdraw1,1);
*/
	print("Levels Downloading");
	// ==================================================================== //
	leveldr[0] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~1");
	TextDrawAlignment(leveldr[0],0);
	TextDrawBackgroundColor(leveldr[0],0x000000ff);
	TextDrawFont(leveldr[0],3);
	TextDrawLetterSize(leveldr[0],0.299999,1.000000);
	TextDrawColor(leveldr[0],0xffffffff);
	TextDrawSetOutline(leveldr[0],1);
	TextDrawSetProportional(leveldr[0],1);
	TextDrawSetShadow(leveldr[0],1);

	leveldr[1] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~2");
	TextDrawAlignment(leveldr[1],0);
	TextDrawBackgroundColor(leveldr[1],0x000000ff);
	TextDrawFont(leveldr[1],3);
	TextDrawLetterSize(leveldr[1],0.299999,1.000000);
	TextDrawColor(leveldr[1],0xffffffff);
	TextDrawSetOutline(leveldr[1],1);
	TextDrawSetProportional(leveldr[1],1);
	TextDrawSetShadow(leveldr[1],1);

	leveldr[2] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~3");
	TextDrawAlignment(leveldr[2],0);
	TextDrawBackgroundColor(leveldr[2],0x000000ff);
	TextDrawFont(leveldr[2],3);
	TextDrawLetterSize(leveldr[2],0.299999,1.000000);
	TextDrawColor(leveldr[2],0xffffffff);
	TextDrawSetOutline(leveldr[2],1);
	TextDrawSetProportional(leveldr[2],1);
	TextDrawSetShadow(leveldr[2],1);

	leveldr[3] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~4");
	TextDrawAlignment(leveldr[3],0);
	TextDrawBackgroundColor(leveldr[3],0x000000ff);
	TextDrawFont(leveldr[3],3);
	TextDrawLetterSize(leveldr[3],0.299999,1.000000);
	TextDrawColor(leveldr[3],0xffffffff);
	TextDrawSetOutline(leveldr[3],1);
	TextDrawSetProportional(leveldr[3],1);
	TextDrawSetShadow(leveldr[3],1);

	leveldr[4] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~5");
	TextDrawAlignment(leveldr[4],0);
	TextDrawBackgroundColor(leveldr[4],0x000000ff);
	TextDrawFont(leveldr[4],3);
	TextDrawLetterSize(leveldr[4],0.299999,1.000000);
	TextDrawColor(leveldr[4],0xffffffff);
	TextDrawSetOutline(leveldr[4],1);
	TextDrawSetProportional(leveldr[4],1);
	TextDrawSetShadow(leveldr[4],1);

	leveldr[5] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~6");
	TextDrawAlignment(leveldr[5],0);
	TextDrawBackgroundColor(leveldr[5],0x000000ff);
	TextDrawFont(leveldr[5],3);
	TextDrawLetterSize(leveldr[5],0.299999,1.000000);
	TextDrawColor(leveldr[5],0xffffffff);
	TextDrawSetOutline(leveldr[5],1);
	TextDrawSetProportional(leveldr[5],1);
	TextDrawSetShadow(leveldr[5],1);

	leveldr[6] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~7");
	TextDrawAlignment(leveldr[6],0);
	TextDrawBackgroundColor(leveldr[6],0x000000ff);
	TextDrawFont(leveldr[6],3);
	TextDrawLetterSize(leveldr[6],0.299999,1.000000);
	TextDrawColor(leveldr[6],0xffffffff);
	TextDrawSetOutline(leveldr[6],1);
	TextDrawSetProportional(leveldr[6],1);
	TextDrawSetShadow(leveldr[6],1);

	leveldr[7] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~8");
	TextDrawAlignment(leveldr[7],0);
	TextDrawBackgroundColor(leveldr[7],0x000000ff);
	TextDrawFont(leveldr[7],3);
	TextDrawLetterSize(leveldr[7],0.299999,1.000000);
	TextDrawColor(leveldr[7],0xffffffff);
	TextDrawSetOutline(leveldr[7],1);
	TextDrawSetProportional(leveldr[7],1);
	TextDrawSetShadow(leveldr[7],1);

	leveldr[8] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~9");
	TextDrawAlignment(leveldr[8],0);
	TextDrawBackgroundColor(leveldr[8],0x000000ff);
	TextDrawFont(leveldr[8],3);
	TextDrawLetterSize(leveldr[8],0.299999,1.000000);
	TextDrawColor(leveldr[8],0xffffffff);
	TextDrawSetOutline(leveldr[8],1);
	TextDrawSetProportional(leveldr[8],1);
	TextDrawSetShadow(leveldr[8],1);

	leveldr[9] = TextDrawCreate(515.000000,99.000000,"Drift level:~g~10");
	TextDrawAlignment(leveldr[9],0);
	TextDrawBackgroundColor(leveldr[9],0x000000ff);
	TextDrawFont(leveldr[9],3);
	TextDrawLetterSize(leveldr[9],0.299999,1.000000);
	TextDrawColor(leveldr[9],0xffffffff);
	TextDrawSetOutline(leveldr[9],1);
	TextDrawSetProportional(leveldr[9],1);
	TextDrawSetShadow(leveldr[9],1);

	leveldr[10] = TextDrawCreate(515.000000,99.000000,"Drift level:~y~VIP");
	TextDrawAlignment(leveldr[10],0);
	TextDrawBackgroundColor(leveldr[10],0x000000ff);
	TextDrawFont(leveldr[10],3);
	TextDrawLetterSize(leveldr[10],0.299999,1.000000);
	TextDrawColor(leveldr[10],0xffffffff);
	TextDrawSetOutline(leveldr[10],1);
	TextDrawSetProportional(leveldr[10],1);
	TextDrawSetShadow(leveldr[10],1);
	// ===================================================================== //
	new Max = GetMaxPlayers();
	for(new i=0; i<Max; i++)
	{
		Level3D[i] = Create3DTextLabel(" ",0xFFFFFFAA,0.000,0.000,-4.000,18.0,0,1);
	}

//==============================================================================
//                              GarHouse
//==============================================================================
	for(new i = 0; i < MAX_PLAYERS; i++)//обнуление массива блокировок диалога ввода пароля
	{
		lockpas[i] = 0;
	}

    LoadHouses(); // Загрузка фс дома
    Loop(i, MAX_PLAYERS)
    {
        if(IsPlayerConnected(i) && !IsPlayerNPC(i))
        {
            SetPVarInt(i, "HousePrevTime", 0);
        }
    }
//==============================================================================
//                              End GarHouse
//==============================================================================

//----------------------------- Elevator - 1 -----------------------------------
	new string[256];
	MovObj = 0;

	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    ElevatorQueue[i] = -1;
	    FloorRequestedBy[i] = 10000;
	}
//объекты и 3D-тексты лифта
	Obj_Elevator = CreateObject(18755, 1786.678100, -1303.459472, GROUND_Z_COORD + ELEVATOR_OFFSET, 0.000000, 0.000000, 270.000000);
	Obj_ElevatorDoors[0] = CreateObject(18757, X_DOOR_CLOSED, -1303.459472, GROUND_Z_COORD, 0.000000, 0.000000, 270.000000);
	Obj_ElevatorDoors[1] = CreateObject(18756, X_DOOR_CLOSED, -1303.459472, GROUND_Z_COORD, 0.000000, 0.000000, 270.000000);
	Label_Elevator = CreateDynamic3DTextLabel("Нажмите {AA3333}''N'' {33AA33}для\nуправления лифтом",
	0x33AA33FF, 1784.9822, -1302.0426, 13.6491, 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);

	new Float:z;//объекты дверей на этажах
	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
	    Obj_FloorDoors[i][0] = CreateDynamicObject(18757, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
		Obj_FloorDoors[i][1] = CreateDynamicObject(18756, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
		format(string, sizeof(string), "[ %s ]\n{33AA33}Нажмите {AA2222}''N'' {33AA33}для\nвызова лифта", FloorNames[i]);
		if(i == 0)//3D-тексты на этажах
		{
		    z = 13.4713;
		}
		else
		{
		    z = 13.4713 + 8.7396 + ((i-1) * 5.45155);
		}
		Label_Floors[i] = CreateDynamic3DTextLabel(string, 0xF0F0F0FF, 1783.9799, -1300.7660, z, 10.5,
		INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
		format(string, sizeof(string), "[ %s ]", FloorNames[0]);
		Label2_Floors[i] = CreateDynamic3DTextLabel(string, 0x33AA33FF, 1786.6799, -1300.7660, z + 2.3, 10.5,
		INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1);
	}
	Floor_OpenDoors(0);
	Elevator_OpenDoors();
//--------------------------- End Elevator - 1 ---------------------------------

#if (MOD11INS == 4)
//----------------------------- Elevator - 2 -----------------------------------
	MovObj22 = 0;

	for(new i; i < sizeof(ElevatorQueue22); i ++)
	{
	    ElevatorQueue22[i] = -1;
	    FloorRequestedBy22[i] = 10000;
	}
//объекты и 3D-тексты лифта
	Obj_Elevator22 = CreateObject(18755, 287.9500, -1609.3200, GROUND_Z_COORD22 + ELEVATOR_OFFSET22, 0.000000, 0.000000, 80.000000);
	Obj_ElevatorDoors22[0] = CreateObject(18757, X_DOOR_CLOSED22, -1609.3200, GROUND_Z_COORD22, 0.000000, 0.000000, 80.000000);
	Obj_ElevatorDoors22[1] = CreateObject(18756, X_DOOR_CLOSED22, -1609.3200, GROUND_Z_COORD22, 0.000000, 0.000000, 80.000000);
	Label_Elevator22 = CreateDynamic3DTextLabel("Нажмите {AA3333}''N'' {33AA33}для\nуправления лифтом",
	0x33AA33FF, 289.23, -1610.63, 17.96, 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);

	new Float:z22;//объекты дверей на этажах
	for(new i; i < sizeof(Obj_FloorDoors22); i ++)
	{
	    Obj_FloorDoors22[i][0] = CreateDynamicObject(18757, X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(i), 0.000000, 0.000000, 80.000000, -1, -1, -1, 500);
		Obj_FloorDoors22[i][1] = CreateDynamicObject(18756, X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(i), 0.000000, 0.000000, 80.000000, -1, -1, -1, 500);
		format(string, sizeof(string), "[ %s ]\n{33AA33}Нажмите {AA2222}''N'' {33AA33}для\nвызова лифта", FloorNames22[i]);
		if(i == 0)//3D-тексты на этажах
		{
		    z22 = 17.86;
		}
		if(i == 1)
		{
		    z22 = 17.86 + 15.0782;
		}
		if(i == 2)
		{
		    z22 = 17.86 + 15.0782 + 14.0639;
		}
		if(i > 2)
		{
		    z22 = 17.86 + 15.0782 + 14.0639 + ((i-2) * 4.50115);
		}
		Label_Floors22[i] = CreateDynamic3DTextLabel(string, 0xF0F0F0FF, 290.10, -1612.84, z22, 10.5,
		INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
		format(string, sizeof(string), "[ %s ]", FloorNames22[0]);
		Label2_Floors22[i] = CreateDynamic3DTextLabel(string, 0x33AA33FF, 287.63, -1611.43, z22 + 2.3, 10.5,
		INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1);
	}
	Floor_OpenDoors22(0);
	Elevator_OpenDoors22();
//--------------------------- End Elevator - 2 ---------------------------------
#endif

	LoadBusSystem();//загрузка системы бизнесов//BusSystem

	return 1;
}

#if (MOD90INS == 1 && MOD91INS == 1)
forward CreateDB();
public CreateDB()
{
	playerdb = db_open("players/players.db");//подключаем базу данных аккаунтов игроков к серверу
	new strdln[2500];
	format(strdln, sizeof(strdln), "CREATE TABLE Players(IDCopy INTEGER,Name VARCHAR(32),Key VARCHAR(32),TDReg VARCHAR(32),DEndConD INTEGER,");//создаём запрос БД
	format(strdln, sizeof(strdln), "%sDEndConM INTEGER,DEndConY INTEGER,IPAdr VARCHAR(32),MinLog INTEGER,AdminLevel INTEGER,AdminShadow INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sAdminLive INTEGER,Registered INTEGER,Prison INTEGER,Prisonsec INTEGER,Muted INTEGER,Mutedsec INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sMoney INTEGER,Kills INTEGER,Deaths INTEGER,VIP INTEGER,Lock INTEGER,Gang INTEGER,GangLvl INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sWeapon_slot0 INTEGER,Weapon_slot1 INTEGER,Weapon_slot2 INTEGER,Weapon_slot3 INTEGER,Weapon_slot4 INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sWeapon_slot5 INTEGER,Weapon_slot6 INTEGER,Weapon_slot7 INTEGER,Weapon_slot8 INTEGER,Weapon_slot9 INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sWeapon_slot10 INTEGER,Weapon_slot11 INTEGER,Weapon_slot12 INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sAmmo_slot0 INTEGER,Ammo_slot1 INTEGER,Ammo_slot2 INTEGER,Ammo_slot3 INTEGER,Ammo_slot4 INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sAmmo_slot5 INTEGER,Ammo_slot6 INTEGER,Ammo_slot7 INTEGER,Ammo_slot8 INTEGER,Ammo_slot9 INTEGER,", strdln);
	format(strdln, sizeof(strdln), "%sAmmo_slot10 INTEGER,Ammo_slot11 INTEGER,Ammo_slot12 INTEGER)", strdln);
	db_query(playerdb, strdln);//отправляем запрос на создание новой (пустой) БД
	print(" ");
	print(" * Новая (пустая) база данных аккаунтов игроков успешно создана !");
	print(" * Теперь сервер можно выключить (закрыть), и перевести его в");
	print(" * нормальный режим работы (MOD91INS 0) !");
	print(" ");
	db_close(playerdb);//отключаем базу данных аккаунтов игроков от сервера
	return 1;
}
#endif

forward FCislit(cislo);
public FCislit(cislo)
{
	new para, para22, string[256], string22[4], string33[4];
	strdel(string22, 0, 4);
	strdel(string33, 0, 4);
	format(string, sizeof(string), "%d", cislo);
	para22 = strlen(string);
	if(para22 == 1)
	{
		strmid(string22, string, para22-1, para22, sizeof(string22));
	}
	else
	{
    	strmid(string22, string, para22-1, para22, sizeof(string22));
    	strmid(string33, string, para22-2, para22-1, sizeof(string33));
	}
	para22 = strval(string33);
	if(para22 > 1) { para22 = 0; }
	para22 = para22 * 10 + strval(string22);
	switch(para22)
	{
		case 0,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19: para = 0;
		case 1: para = 1;
		case 2,3,4: para = 2;
	}
	return para;
}

forward Fmadmins(rej, plname[], plmoney, &twenlim, &restlim);
public Fmadmins(rej, plname[], plmoney, &twenlim, &restlim)
{
	new file, f1[256];
	format(f1, sizeof(f1), "madmins/%s.ini", plname);
	if(rej == 0)
	{
		if(fexist(f1))
		{
			fremove(f1);
		}
		return 1;
	}
	gettime(timecor[0], timecor[1]);
	getdate(timecor[2], timecor[3], timecor[4]);
	TimCor();//коррекция времени
	DatCor();//коррекция даты
	new para1;
	para1 = ((timecor[2] - 2000) * 366) + (timecor[3] * 31) + timecor[4];
	if(!fexist(f1))
	{
		file = ini_createFile(f1);
		if(file >= 0)
		{
			ini_setInteger(file, "DataDay", para1);
			ini_setInteger(file, "TwenLim", 0);
			ini_setInteger(file, "RestLim", 0);
			ini_closeFile(file);
		}
	}
	if(rej == 1)
	{
		file = ini_openFile(f1);
		if(file >= 0)
		{
			restlim = twenlim;
			ini_setInteger(file, "DataDay", para1);
			ini_setInteger(file, "TwenLim", twenlim);
			ini_setInteger(file, "RestLim", restlim);
			ini_closeFile(file);
		}
		return 1;
	}
	new data1, data2;
	file = ini_openFile(f1);
	if(file >= 0)
	{
		ini_getInteger(file, "DataDay", data1);
		ini_getInteger(file, "TwenLim", twenlim);
		ini_getInteger(file, "RestLim", restlim);
		if(data1 != para1)
		{
			data1 = para1;
			restlim = twenlim;
			ini_setInteger(file, "DataDay", data1);
			ini_setInteger(file, "RestLim", restlim);
		}
		if(twenlim == 0)
		{
			data2 = 1;
		}
		else
		{
			data1 = restlim - plmoney;
			if(data1 < 0)
			{
				data2 = 0;
			}
			else
			{
				data2 = 1;
				restlim = data1;
				ini_setInteger(file, "RestLim", restlim);
			}
		}
		ini_closeFile(file);
	}
	return data2;
}

public object()
{
//Start закраваем оружейные магазины
ObjGam[0] = CreateObject(5259, 296.54, -37.53, 999.62,   0.00, 0.00, 0.00);
ObjGam[1] = CreateObject(5259, 296.50, -37.52, 997.31,   -180.00, 0.00, 0.00);
ObjGam[2] = CreateObject(5259, 291.23, -110.02, 999.58,   0.00, 0.00, 0.00);
ObjGam[3] = CreateObject(5259, 291.21, -110.02, 997.36,   -180.00, 0.00, 0.00);
ObjGam[4] = CreateObject(5259, 296.18, -80.91, 1000.19,   0.00, 0.00, 0.00);
ObjGam[5] = CreateObject(5259, 296.18, -80.88, 997.85,   -180.00, 0.00, 0.00);
ObjGam[6] = CreateObject(5259, 311.46, -167.55, 998.23,   0.00, 0.00, 0.00);
ObjGam[7] = CreateObject(5259, 311.44, -167.55, 996.01,   -180.00, 0.00, 0.00);
ObjGam[8] = CreateObject(5259, 308.49, -141.54, 997.33,   0.00, 0.00, 0.00);
ObjGam[9] = CreateObject(5259, 308.47, -141.55, 995.15,   -180.00, 0.00, 0.00);
ObjGam[10] = CreateObject(5259, 315.58, -132.53, 997.33,   0.00, 0.00, 0.00);
ObjGam[11] = CreateObject(5259, 315.57, -132.51, 995.04,   -180.00, 0.00, 0.00);
ObjGam[12] = CreateObject(5259, 315.24, -139.16, 1008.29,   -180.00, 0.00, 0.00);
ObjGam[13] = CreateObject(5259, 315.21, -139.23, 1010.54,   0.00, 0.00, 0.00);
//End закраваем оружейные магазины
//Start трасса 1
LineObj1[0] = CreateDynamicObject(16092, 2835.44, -1657.23, 9.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
LineObj1[1] = CreateDynamicObject(1262, 2836.30, -1660.23, 17.15,   0.00, 0.00, 269.36, -1, -1, -1, 500);
LineObj1[2] = CreateDynamicObject(1262, 2836.31, -1657.30, 17.15,   0.00, 0.00, 269.36, -1, -1, -1, 500);
LineObj1[3] = CreateDynamicObject(1262, 2836.29, -1654.31, 17.15,   0.00, 0.00, 269.36, -1, -1, -1, 500);
LineObj1[4] = CreateDynamicObject(979, 2823.33, -1650.61, 10.46,   0.00, 0.00, 196.58, -1, -1, -1, 500);
LineObj1[5] = CreateDynamicObject(979, 2740.17, -1648.85, 12.79,   0.00, 0.00, 187.50, -1, -1, -1, 500);
LineObj1[6] = CreateDynamicObject(979, 2730.98, -1650.00, 12.79,   0.00, 0.00, 186.61, -1, -1, -1, 500);
LineObj1[7] = CreateDynamicObject(979, 2721.73, -1651.11, 12.79,   0.00, 0.00, 186.74, -1, -1, -1, 500);
LineObj1[8] = CreateDynamicObject(979, 2635.18, -1661.60, 10.59,   0.00, 0.00, 254.96, -1, -1, -1, 500);
LineObj1[9] = CreateDynamicObject(979, 2648.33, -1650.41, 10.53,   0.00, 0.00, 191.68, -1, -1, -1, 500);
LineObj1[10] = CreateDynamicObject(979, 2640.04, -1654.23, 10.53,   0.00, 0.00, 217.69, -1, -1, -1, 500);
LineObj1[11] = CreateDynamicObject(978, 2648.32, -1737.32, 10.60,   0.00, 0.00, 31.55, -1, -1, -1, 500);
LineObj1[12] = CreateDynamicObject(978, 2639.80, -1740.47, 10.60,   0.00, 0.00, 9.52, -1, -1, -1, 500);
LineObj1[13] = CreateDynamicObject(978, 2527.49, -1739.47, 13.08,   0.00, 0.00, 341.45, -1, -1, -1, 500);
LineObj1[14] = CreateDynamicObject(979, 2431.01, -1724.72, 13.41,   0.00, 0.00, 197.71, -1, -1, -1, 500);
LineObj1[15] = CreateDynamicObject(978, 2413.74, -1739.72, 13.07,   0.00, 0.00, 341.46, -1, -1, -1, 500);
LineObj1[16] = CreateDynamicObject(979, 2342.74, -1725.10, 13.41,   0.00, 0.00, 200.35, -1, -1, -1, 500);
LineObj1[17] = CreateDynamicObject(978, 2313.70, -1740.14, 13.09,   0.00, 0.00, 343.65, -1, -1, -1, 500);
LineObj1[18] = CreateDynamicObject(979, 2217.92, -1724.51, 13.19,   0.00, 0.00, 210.19, -1, -1, -1, 500);
LineObj1[19] = CreateDynamicObject(979, 2212.31, -1731.37, 13.19,   0.00, 0.00, 250.60, -1, -1, -1, 500);
LineObj1[20] = CreateDynamicObject(979, 2210.78, -1740.52, 13.19,   0.00, 0.00, 269.91, -1, -1, -1, 500);
LineObj1[21] = CreateDynamicObject(979, 2211.37, -1894.33, 13.19,   0.00, 0.00, 292.25, -1, -1, -1, 500);
LineObj1[22] = CreateDynamicObject(978, 2225.35, -1894.73, 13.18,   0.00, 0.00, 71.52, -1, -1, -1, 500);
LineObj1[23] = CreateDynamicObject(978, 2221.17, -1972.03, 13.12,   0.00, 0.00, 67.79, -1, -1, -1, 500);
LineObj1[24] = CreateDynamicObject(978, 2289.06, -2073.82, 13.15,   0.00, 0.00, 129.90, -1, -1, -1, 500);
LineObj1[25] = CreateDynamicObject(978, 2291.81, -2081.95, 13.15,   0.00, 0.00, 87.13, -1, -1, -1, 500);
LineObj1[26] = CreateDynamicObject(978, 2288.21, -2089.73, 13.15,   0.00, 0.00, 43.88, -1, -1, -1, 500);
LineObj1[27] = CreateDynamicObject(978, 2267.33, -2108.72, 13.32,   0.00, 0.00, 32.75, -1, -1, -1, 500);
LineObj1[28] = CreateDynamicObject(979, 2255.69, -2097.16, 13.33,   0.00, 0.00, 244.26, -1, -1, -1, 500);
LineObj1[29] = CreateDynamicObject(978, 2204.08, -2169.74, 13.21,   0.00, 0.00, 29.10, -1, -1, -1, 500);
LineObj1[30] = CreateDynamicObject(979, 2194.43, -2160.27, 13.12,   0.00, 0.00, 242.30, -1, -1, -1, 500);
LineObj1[31] = CreateDynamicObject(978, 2140.19, -2227.21, 13.25,   0.00, 0.00, 0.00, -1, -1, -1, 500);
LineObj1[32] = CreateDynamicObject(978, 2148.92, -2224.95, 13.25,   0.00, 0.00, 29.03, -1, -1, -1, 500);
LineObj1[33] = CreateDynamicObject(978, 2132.67, -2223.65, 13.25,   0.00, 0.00, 309.95, -1, -1, -1, 500);
LineObj1[34] = CreateDynamicObject(978, 1963.46, -2173.74, 13.08,   0.00, 0.00, 341.65, -1, -1, -1, 500);
LineObj1[35] = CreateDynamicObject(978, 1956.02, -2168.75, 13.08,   0.00, 0.00, 310.37, -1, -1, -1, 500);
LineObj1[36] = CreateDynamicObject(978, 1953.24, -2160.52, 13.08,   0.00, 0.00, 267.15, -1, -1, -1, 500);
LineObj1[37] = CreateDynamicObject(979, 1968.51, -2110.19, 13.08,   0.00, 0.00, 107.99, -1, -1, -1, 500);
LineObj1[38] = CreateDynamicObject(979, 1968.82, -2060.70, 13.08,   0.00, 0.00, 106.98, -1, -1, -1, 500);
LineObj1[39] = CreateDynamicObject(978, 1954.40, -2052.61, 13.12,   0.00, 0.00, 253.21, -1, -1, -1, 500);
LineObj1[40] = CreateDynamicObject(979, 1969.29, -1956.69, 13.28,   0.00, 0.00, 105.84, -1, -1, -1, 500);
LineObj1[41] = CreateDynamicObject(978, 1954.02, -1955.91, 13.26,   0.00, 0.00, 257.96, -1, -1, -1, 500);
LineObj1[42] = CreateDynamicObject(978, 1954.03, -1933.10, 13.18,   0.00, 0.00, 257.02, -1, -1, -1, 500);
LineObj1[43] = CreateDynamicObject(979, 1968.88, -1932.71, 12.98,   0.00, 0.00, 103.62, -1, -1, -1, 500);
LineObj1[44] = CreateDynamicObject(978, 1953.89, -1787.06, 12.96,   0.00, 0.00, 245.72, -1, -1, -1, 500);
LineObj1[45] = CreateDynamicObject(979, 1969.83, -1812.39, 13.05,   0.00, 0.00, 108.81, -1, -1, -1, 500);
LineObj1[46] = CreateDynamicObject(979, 1967.76, -1751.78, 13.08,   0.00, 0.00, 125.37, -1, -1, -1, 500);
LineObj1[47] = CreateDynamicObject(979, 1960.78, -1746.48, 13.08,   0.00, 0.00, 160.23, -1, -1, -1, 500);
LineObj1[48] = CreateDynamicObject(978, 1943.51, -1759.92, 13.18,   0.00, 0.00, 348.05, -1, -1, -1, 500);
LineObj1[49] = CreateDynamicObject(978, 1936.50, -1755.00, 13.18,   0.00, 0.00, 301.72, -1, -1, -1, 500);
LineObj1[50] = CreateDynamicObject(978, 1934.32, -1746.40, 13.18,   0.00, 0.00, 266.33, -1, -1, -1, 500);
LineObj1[51] = CreateDynamicObject(979, 1937.54, -1605.19, 13.27,   0.00, 0.00, 169.55, -1, -1, -1, 500);
LineObj1[52] = CreateDynamicObject(978, 1824.84, -1619.86, 13.08,   0.00, 0.00, 353.04, -1, -1, -1, 500);
LineObj1[53] = CreateDynamicObject(978, 1817.04, -1615.92, 13.08,   0.00, 0.00, 313.52, -1, -1, -1, 500);
LineObj1[54] = CreateDynamicObject(978, 1813.98, -1607.80, 13.08,   0.00, 0.00, 268.40, -1, -1, -1, 500);
LineObj1[55] = CreateDynamicObject(979, 1832.10, -1577.99, 13.27,   0.00, 0.00, 89.41, -1, -1, -1, 500);
LineObj1[56] = CreateDynamicObject(979, 1832.46, -1568.84, 13.27,   0.00, 0.00, 86.07, -1, -1, -1, 500);
LineObj1[57] = CreateDynamicObject(979, 1833.59, -1559.74, 13.27,   0.00, 0.00, 79.88, -1, -1, -1, 500);
LineObj1[58] = CreateDynamicObject(978, 1839.82, -1461.70, 13.07,   0.00, 0.00, 258.29, -1, -1, -1, 500);
LineObj1[59] = CreateDynamicObject(979, 1858.54, -1464.20, 13.18,   0.00, 0.00, 106.62, -1, -1, -1, 500);
LineObj1[60] = CreateDynamicObject(979, 1858.94, -1341.01, 13.07,   0.00, 0.00, 109.23, -1, -1, -1, 500);
LineObj1[61] = CreateDynamicObject(979, 1858.78, -1260.86, 13.06,   0.00, 0.00, 105.20, -1, -1, -1, 500);
LineObj1[62] = CreateDynamicObject(978, 1839.73, -1261.31, 13.21,   0.00, 0.00, 255.05, -1, -1, -1, 500);
LineObj1[63] = CreateDynamicObject(978, 1840.29, -1186.67, 23.34,   0.00, 0.00, 261.59, -1, -1, -1, 500);
LineObj1[64] = CreateDynamicObject(978, 1843.84, -1178.44, 23.34,   0.00, 0.00, 231.75, -1, -1, -1, 500);
LineObj1[65] = CreateDynamicObject(978, 1851.33, -1173.89, 23.34,   0.00, 0.00, 190.71, -1, -1, -1, 500);
LineObj1[66] = CreateDynamicObject(979, 1874.13, -1135.96, 23.43,   0.00, 0.00, 108.95, -1, -1, -1, 500);
LineObj1[67] = CreateDynamicObject(978, 1983.85, -1045.88, 24.13,   0.00, 0.00, 139.77, -1, -1, -1, 500);
LineObj1[68] = CreateDynamicObject(979, 1979.98, -1060.34, 24.06,   0.00, 0.00, 4.27, -1, -1, -1, 500);
LineObj1[69] = CreateDynamicObject(979, 2068.95, -1097.47, 24.61,   0.00, 0.00, 352.51, -1, -1, -1, 500);
LineObj1[70] = CreateDynamicObject(979, 2175.65, -1126.70, 24.83,   0.00, 0.00, 11.84, -1, -1, -1, 500);
LineObj1[71] = CreateDynamicObject(978, 2192.39, -1116.30, 24.49,   0.00, 0.00, 157.89, -1, -1, -1, 500);
LineObj1[72] = CreateDynamicObject(978, 2200.96, -1119.81, 25.01,   0.00, 0.00, 157.89, -1, -1, -1, 500);
LineObj1[73] = CreateDynamicObject(978, 2209.56, -1123.31, 25.21,   0.00, 0.00, 157.89, -1, -1, -1, 500);
LineObj1[74] = CreateDynamicObject(979, 2218.60, -1140.44, 25.44,   0.00, 0.00, 1.96, -1, -1, -1, 500);
LineObj1[75] = CreateDynamicObject(978, 2218.00, -1126.76, 25.31,   0.00, 0.00, 157.89, -1, -1, -1, 500);
LineObj1[76] = CreateDynamicObject(979, 2270.95, -1154.09, 26.55,   0.00, 0.00, 3.14, -1, -1, -1, 500);
LineObj1[77] = CreateDynamicObject(979, 2303.51, -1158.66, 26.40,   0.00, 0.00, 6.97, -1, -1, -1, 500);
LineObj1[78] = CreateDynamicObject(978, 2323.76, -1146.46, 26.58,   0.00, 0.00, 156.02, -1, -1, -1, 500);
LineObj1[79] = CreateDynamicObject(979, 2369.98, -1160.04, 27.22,   0.00, 0.00, 8.05, -1, -1, -1, 500);
LineObj1[80] = CreateDynamicObject(979, 2361.12, -1162.24, 27.22,   0.00, 0.00, 19.68, -1, -1, -1, 500);
LineObj1[81] = CreateDynamicObject(978, 2862.98, -1128.34, 10.59,   0.00, 0.00, 171.76, -1, -1, -1, 500);
LineObj1[82] = CreateDynamicObject(978, 2871.13, -1132.05, 10.59,   0.00, 0.00, 139.42, -1, -1, -1, 500);
LineObj1[83] = CreateDynamicObject(978, 2878.08, -1138.02, 10.59,   0.00, 0.00, 139.42, -1, -1, -1, 500);
LineObj1[84] = CreateDynamicObject(978, 2879.43, -1662.23, 10.59,   0.00, 0.00, 40.25, -1, -1, -1, 500);
LineObj1[85] = CreateDynamicObject(978, 2871.59, -1667.10, 10.59,   0.00, 0.00, 23.66, -1, -1, -1, 500);
LineObj1[86] = CreateDynamicObject(978, 2862.66, -1669.59, 10.59,   0.00, 0.00, 7.50, -1, -1, -1, 500);
LineObj1[87] = CreateDynamicObject(978, 2853.43, -1669.38, 10.59,   0.00, 0.00, 349.68, -1, -1, -1, 500);
//End трасса 1
//Start трасса 2
LineObj2[0] = CreateDynamicObject(16092, 494.77, -307.58, 39.26,   0.00, 0.00, 76.04, -1, -1, -1, 500);
LineObj2[1] = CreateDynamicObject(1262, 495.09, -306.60, 46.72,   0.00, 0.00, 347.94, -1, -1, -1, 500);
LineObj2[2] = CreateDynamicObject(1262, 492.06, -305.94, 46.72,   0.00, 0.00, 347.94, -1, -1, -1, 500);
LineObj2[3] = CreateDynamicObject(1262, 498.06, -307.40, 46.72,   0.00, 0.00, 347.94, -1, -1, -1, 500);
LineObj2[4] = CreateDynamicObject(978, 475.69, -410.62, 28.20,   0.00, 0.00, 61.01, -1, -1, -1, 500);
LineObj2[5] = CreateDynamicObject(979, 461.76, -407.31, 28.07,   0.00, 0.00, 267.86, -1, -1, -1, 500);
LineObj2[6] = CreateDynamicObject(978, 428.41, -588.99, 37.06,   0.00, 0.00, 46.05, -1, -1, -1, 500);
LineObj2[7] = CreateDynamicObject(978, 420.88, -594.13, 36.60,   0.00, 0.00, 21.49, -1, -1, -1, 500);
LineObj2[8] = CreateDynamicObject(978, 412.24, -594.03, 36.14,   0.00, 0.00, 336.79, -1, -1, -1, 500);
LineObj2[9] = CreateDynamicObject(978, 34.37, -658.49, 3.21,   0.00, 0.00, 332.07, -1, -1, -1, 500);
LineObj2[10] = CreateDynamicObject(978, 28.13, -652.15, 3.21,   0.00, 0.00, 296.75, -1, -1, -1, 500);
LineObj2[11] = CreateDynamicObject(978, 27.32, -643.47, 3.21,   0.00, 0.00, 253.78, -1, -1, -1, 500);
LineObj2[12] = CreateDynamicObject(978, -256.69, -271.16, 1.17,   0.00, 0.00, 295.17, -1, -1, -1, 500);
LineObj2[13] = CreateDynamicObject(979, -299.64, -149.71, 0.86,   0.00, 0.00, 124.75, -1, -1, -1, 500);
LineObj2[14] = CreateDynamicObject(979, -298.59, -71.51, 1.25,   0.00, 0.00, 99.61, -1, -1, -1, 500);
LineObj2[15] = CreateDynamicObject(979, -236.61, 133.86, 1.83,   0.00, 0.00, 85.63, -1, -1, -1, 500);
LineObj2[16] = CreateDynamicObject(979, -207.01, 206.24, 11.12,   0.00, 0.00, 79.51, -1, -1, -1, 500);
LineObj2[17] = CreateDynamicObject(978, -225.80, 206.35, 10.73,   0.00, 0.00, 230.96, -1, -1, -1, 500);
LineObj2[18] = CreateDynamicObject(978, -206.32, 245.29, 11.83,   0.00, 0.00, 213.66, -1, -1, -1, 500);
LineObj2[19] = CreateDynamicObject(978, -212.95, 238.97, 11.83,   0.00, 0.00, 233.07, -1, -1, -1, 500);
LineObj2[20] = CreateDynamicObject(978, -197.85, 247.03, 11.83,   0.00, 0.00, 169.92, -1, -1, -1, 500);
LineObj2[21] = CreateDynamicObject(979, -26.40, 166.45, 2.23,   0.00, 0.00, 349.28, -1, -1, -1, 500);
LineObj2[22] = CreateDynamicObject(979, 231.82, 41.21, 2.11,   0.00, 0.00, 9.58, -1, -1, -1, 500);
LineObj2[23] = CreateDynamicObject(979, 325.15, 74.36, 3.13,   0.00, 0.00, 40.56, -1, -1, -1, 500);
LineObj2[24] = CreateDynamicObject(979, 511.41, 224.17, 13.28,   0.00, 0.00, 55.41, -1, -1, -1, 500);
LineObj2[25] = CreateDynamicObject(978, 620.00, 317.28, 19.50,   0.00, 0.00, 170.85, -1, -1, -1, 500);
LineObj2[26] = CreateDynamicObject(978, 754.38, 331.24, 19.83,   0.00, 0.00, 180.59, -1, -1, -1, 500);
LineObj2[27] = CreateDynamicObject(979, 754.13, 316.28, 19.91,   0.00, 0.00, 25.14, -1, -1, -1, 500);
LineObj2[28] = CreateDynamicObject(979, 769.04, 319.09, 19.91,   0.00, 0.00, 21.94, -1, -1, -1, 500);
LineObj2[29] = CreateDynamicObject(979, 1029.28, 473.46, 19.78,   0.00, 0.00, 85.57, -1, -1, -1, 500);
LineObj2[30] = CreateDynamicObject(978, 1350.50, 466.03, 19.85,   0.00, 0.00, 143.17, -1, -1, -1, 500);
LineObj2[31] = CreateDynamicObject(978, 1380.39, 436.61, 19.66,   0.00, 0.00, 62.74, -1, -1, -1, 500);
LineObj2[32] = CreateDynamicObject(978, 1381.73, 445.35, 19.66,   0.00, 0.00, 100.59, -1, -1, -1, 500);
LineObj2[33] = CreateDynamicObject(978, 1377.34, 453.02, 19.66,   0.00, 0.00, 139.43, -1, -1, -1, 500);
LineObj2[34] = CreateDynamicObject(979, 1331.53, 361.91, 19.20,   0.00, 0.00, 263.33, -1, -1, -1, 500);
LineObj2[35] = CreateDynamicObject(979, 1311.30, 316.35, 19.10,   0.00, 0.00, 264.38, -1, -1, -1, 500);
LineObj2[36] = CreateDynamicObject(978, 1324.59, 310.78, 19.25,   0.00, 0.00, 47.65, -1, -1, -1, 500);
LineObj2[37] = CreateDynamicObject(978, 1296.31, 246.40, 19.14,   0.00, 0.00, 46.53, -1, -1, -1, 500);
LineObj2[38] = CreateDynamicObject(979, 1282.91, 252.33, 19.10,   0.00, 0.00, 265.80, -1, -1, -1, 500);
LineObj2[39] = CreateDynamicObject(979, 1254.35, 188.20, 19.11,   0.00, 0.00, 267.57, -1, -1, -1, 500);
LineObj2[40] = CreateDynamicObject(978, 1267.79, 182.88, 19.30,   0.00, 0.00, 47.07, -1, -1, -1, 500);
LineObj2[41] = CreateDynamicObject(979, 1231.08, 105.40, 20.70,   0.00, 0.00, 277.61, -1, -1, -1, 500);
LineObj2[42] = CreateDynamicObject(979, 1230.19, 75.26, 22.03,   0.00, 0.00, 277.61, -1, -1, -1, 500);
LineObj2[43] = CreateDynamicObject(978, 1301.92, -85.60, 36.26,   0.00, 0.00, 40.76, -1, -1, -1, 500);
LineObj2[44] = CreateDynamicObject(978, 1305.67, -77.85, 36.26,   0.00, 0.00, 87.51, -1, -1, -1, 500);
LineObj2[45] = CreateDynamicObject(978, 1303.61, -69.08, 36.26,   0.00, 0.00, 118.41, -1, -1, -1, 500);
LineObj2[46] = CreateDynamicObject(978, 1242.97, -134.60, 38.75,   0.00, 0.00, 21.21, -1, -1, -1, 500);
LineObj2[47] = CreateDynamicObject(979, 1233.21, -122.87, 38.77,   0.00, 0.00, 227.92, -1, -1, -1, 500);
LineObj2[48] = CreateDynamicObject(978, 1183.07, -172.08, 40.29,   0.00, 0.00, 8.42, -1, -1, -1, 500);
LineObj2[49] = CreateDynamicObject(979, 530.89, -134.12, 37.55,   0.00, 0.00, 184.21, -1, -1, -1, 500);
LineObj2[50] = CreateDynamicObject(979, 522.92, -137.82, 37.55,   0.00, 0.00, 225.61, -1, -1, -1, 500);
LineObj2[51] = CreateDynamicObject(979, 518.88, -145.76, 37.55,   0.00, 0.00, 260.07, -1, -1, -1, 500);
LineObj2[52] = CreateDynamicObject(979, 752.47, -156.06, 18.51,   0.00, 0.00, 183.58, -1, -1, -1, 500);
LineObj2[53] = CreateDynamicObject(978, 737.81, -168.84, 19.43,   0.00, 0.00, 344.08, -1, -1, -1, 500);
//End трасса 2
//Start трасса 3
LineObj3[0] = CreateDynamicObject(16092, -2421.08, -11.79, 34.67,   0.00, 0.00, 271.14, -1, -1, -1, 500);
LineObj3[1] = CreateDynamicObject(1262, -2421.01, -10.80, 42.15,   0.00, 0.00, 0.00, -1, -1, -1, 500);
LineObj3[2] = CreateDynamicObject(1262, -2417.99, -10.84, 42.15,   0.00, 0.00, 0.00, -1, -1, -1, 500);
LineObj3[3] = CreateDynamicObject(1262, -2424.07, -10.95, 42.15,   0.00, 0.00, 0.00, -1, -1, -1, 500);
LineObj3[4] = CreateDynamicObject(978, -2414.12, -69.62, 35.05,   0.00, 0.00, 68.19, -1, -1, -1, 500);
LineObj3[5] = CreateDynamicObject(979, -2428.36, -69.73, 34.98,   0.00, 0.00, 291.96, -1, -1, -1, 500);
LineObj3[6] = CreateDynamicObject(979, -2501.12, -203.59, 25.16,   0.00, 0.00, 198.43, -1, -1, -1, 500);
LineObj3[7] = CreateDynamicObject(979, -2603.68, -203.19, 3.90,   0.00, 0.00, 199.44, -1, -1, -1, 500);
LineObj3[8] = CreateDynamicObject(979, -2655.14, -203.29, 3.95,   0.00, 0.00, 200.73, -1, -1, -1, 500);
LineObj3[9] = CreateDynamicObject(978, -2655.00, -217.27, 3.93,   0.00, 0.00, 341.23, -1, -1, -1, 500);
LineObj3[10] = CreateDynamicObject(979, -2706.01, -203.48, 3.88,   0.00, 0.00, 196.91, -1, -1, -1, 500);
LineObj3[11] = CreateDynamicObject(979, -2758.22, -203.52, 6.73,   0.00, 0.00, 196.13, -1, -1, -1, 500);
LineObj3[12] = CreateDynamicObject(978, -2803.06, -218.78, 6.83,   0.00, 0.00, 350.77, -1, -1, -1, 500);
LineObj3[13] = CreateDynamicObject(978, -2811.27, -215.07, 6.83,   0.00, 0.00, 320.25, -1, -1, -1, 500);
LineObj3[14] = CreateDynamicObject(978, -2814.64, -207.43, 6.83,   0.00, 0.00, 267.24, -1, -1, -1, 500);
LineObj3[15] = CreateDynamicObject(979, -2801.83, -70.45, 6.73,   0.00, 0.00, 112.02, -1, -1, -1, 500);
LineObj3[16] = CreateDynamicObject(979, -2801.80, -6.27, 6.83,   0.00, 0.00, 117.34, -1, -1, -1, 500);
LineObj3[17] = CreateDynamicObject(979, -2801.64, 39.50, 6.74,   0.00, 0.00, 115.95, -1, -1, -1, 500);
LineObj3[18] = CreateDynamicObject(979, -2801.82, 157.63, 6.74,   0.00, 0.00, 114.09, -1, -1, -1, 500);
LineObj3[19] = CreateDynamicObject(978, -2815.48, 282.21, 6.88,   0.00, 0.00, 253.22, -1, -1, -1, 500);
LineObj3[20] = CreateDynamicObject(978, -2810.66, 289.76, 6.88,   0.00, 0.00, 221.78, -1, -1, -1, 500);
LineObj3[21] = CreateDynamicObject(978, -2802.54, 292.90, 6.88,   0.00, 0.00, 180.33, -1, -1, -1, 500);
LineObj3[22] = CreateDynamicObject(978, -2706.42, 295.33, 3.83,   0.00, 0.00, 162.98, -1, -1, -1, 500);
LineObj3[23] = CreateDynamicObject(979, -2706.97, 281.25, 4.03,   0.00, 0.00, 20.49, -1, -1, -1, 500);
LineObj3[24] = CreateDynamicObject(979, -2666.05, 281.14, 3.95,   0.00, 0.00, 22.87, -1, -1, -1, 500);
LineObj3[25] = CreateDynamicObject(979, -2646.58, 281.10, 3.95,   0.00, 0.00, 23.12, -1, -1, -1, 500);
LineObj3[26] = CreateDynamicObject(979, -2599.48, 348.48, 3.87,   0.00, 0.00, 114.72, -1, -1, -1, 500);
LineObj3[27] = CreateDynamicObject(978, -2613.86, 328.00, 3.88,   0.00, 0.00, 242.26, -1, -1, -1, 500);
LineObj3[28] = CreateDynamicObject(979, -2599.32, 384.99, 8.47,   0.00, -9.00, 118.00, -1, -1, -1, 500);
LineObj3[29] = CreateDynamicObject(978, -2613.90, 468.25, 14.17,   0.00, 0.00, 251.45, -1, -1, -1, 500);
LineObj3[30] = CreateDynamicObject(979, -2599.51, 468.07, 14.15,   0.00, 0.00, 111.96, -1, -1, -1, 500);
LineObj3[31] = CreateDynamicObject(978, -2599.28, 573.41, 14.21,   0.00, 0.00, 180.68, -1, -1, -1, 500);
LineObj3[32] = CreateDynamicObject(978, -2607.77, 570.66, 14.21,   0.00, 0.00, 215.28, -1, -1, -1, 500);
LineObj3[33] = CreateDynamicObject(978, -2613.33, 563.63, 14.21,   0.00, 0.00, 247.83, -1, -1, -1, 500);
LineObj3[34] = CreateDynamicObject(978, -2566.64, 575.62, 14.15,   0.00, 0.00, 158.51, -1, -1, -1, 500);
LineObj3[35] = CreateDynamicObject(978, -2526.90, 575.76, 14.15,   0.00, 0.00, 156.16, -1, -1, -1, 500);
LineObj3[36] = CreateDynamicObject(979, -2526.76, 556.07, 14.15,   0.00, 0.00, 24.08, -1, -1, -1, 500);
LineObj3[37] = CreateDynamicObject(979, -2386.91, 555.96, 24.43,   0.00, 0.00, 24.03, -1, -1, -1, 500);
LineObj3[38] = CreateDynamicObject(978, -2387.21, 575.58, 24.43,   0.00, 0.00, 161.28, -1, -1, -1, 500);
LineObj3[39] = CreateDynamicObject(978, -2269.61, 575.49, 34.71,   0.00, 0.00, 158.34, -1, -1, -1, 500);
LineObj3[40] = CreateDynamicObject(979, -2265.55, 556.11, 34.80,   0.00, 0.00, 26.96, -1, -1, -1, 500);
LineObj3[41] = CreateDynamicObject(978, -2261.06, 575.73, 34.71,   0.00, 0.00, 158.34, -1, -1, -1, 500);
LineObj3[42] = CreateDynamicObject(978, -2251.69, 575.65, 34.71,   0.00, 0.00, 158.34, -1, -1, -1, 500);
LineObj3[43] = CreateDynamicObject(979, -2256.73, 556.16, 34.80,   0.00, 0.00, 26.96, -1, -1, -1, 500);
LineObj3[44] = CreateDynamicObject(978, -2221.18, 558.44, 34.71,   0.00, 0.00, 84.73, -1, -1, -1, 500);
LineObj3[45] = CreateDynamicObject(978, -2222.69, 567.31, 34.71,   0.00, 0.00, 114.54, -1, -1, -1, 500);
LineObj3[46] = CreateDynamicObject(978, -2228.89, 573.47, 34.71,   0.00, 0.00, 155.92, -1, -1, -1, 500);
LineObj3[47] = CreateDynamicObject(978, -2219.01, 508.16, 34.61,   0.00, 0.00, 63.08, -1, -1, -1, 500);
LineObj3[48] = CreateDynamicObject(979, -2234.06, 508.71, 34.63,   0.00, 0.00, 291.71, -1, -1, -1, 500);
LineObj3[49] = CreateDynamicObject(978, -2287.81, 390.91, 34.43,   0.00, 0.00, 319.05, -1, -1, -1, 500);
LineObj3[50] = CreateDynamicObject(978, -2279.60, 387.65, 34.43,   0.00, 0.00, 357.63, -1, -1, -1, 500);
LineObj3[51] = CreateDynamicObject(978, -2270.90, 389.57, 34.43,   0.00, 0.00, 27.50, -1, -1, -1, 500);
LineObj3[52] = CreateDynamicObject(979, -2318.85, 417.08, 34.82,   0.00, 0.00, 225.36, -1, -1, -1, 500);
LineObj3[53] = CreateDynamicObject(979, -2310.97, 421.34, 34.82,   0.00, 0.00, 191.94, -1, -1, -1, 500);
LineObj3[54] = CreateDynamicObject(979, -2302.17, 420.31, 34.82,   0.00, 0.00, 154.99, -1, -1, -1, 500);
LineObj3[55] = CreateDynamicObject(979, -2362.75, 375.43, 34.69,   0.00, 0.00, 247.64, -1, -1, -1, 500);
LineObj3[56] = CreateDynamicObject(979, -2387.65, 348.57, 34.69,   0.00, 0.00, 257.66, -1, -1, -1, 500);
LineObj3[57] = CreateDynamicObject(979, -2416.36, 298.36, 34.69,   0.00, 0.00, 271.08, -1, -1, -1, 500);
LineObj3[58] = CreateDynamicObject(979, -2425.84, 179.54, 34.71,   0.00, 0.00, 286.19, -1, -1, -1, 500);
LineObj3[59] = CreateDynamicObject(979, -2428.32, 136.97, 34.71,   0.00, 0.00, 292.34, -1, -1, -1, 500);
LineObj3[60] = CreateDynamicObject(979, -2428.27, 79.39, 34.71,   0.00, 0.00, 293.47, -1, -1, -1, 500);
LineObj3[61] = CreateDynamicObject(979, -2428.32, 39.46, 34.71,   0.00, 0.00, 293.51, -1, -1, -1, 500);
//End трасса 3
//Start трасса 4
LineObj4[0] = CreateDynamicObject(16092, -1403.67, 2290.17, 54.40,   0.00, 0.00, 295.21, -1, -1, -1, 500);
LineObj4[1] = CreateDynamicObject(1262, -1404.00, 2291.06, 61.84,   0.00, 0.00, 24.84, -1, -1, -1, 500);
LineObj4[2] = CreateDynamicObject(1262, -1401.29, 2292.32, 61.84,   0.00, 0.00, 24.84, -1, -1, -1, 500);
LineObj4[3] = CreateDynamicObject(1262, -1406.74, 2289.74, 61.84,   0.00, 0.00, 24.84, -1, -1, -1, 500);
LineObj4[4] = CreateDynamicObject(978, -1360.53, 2172.21, 48.32,   0.00, 0.00, 21.36, -1, -1, -1, 500);
LineObj4[5] = CreateDynamicObject(978, -1352.65, 2176.88, 48.62,   0.00, 0.00, 39.59, -1, -1, -1, 500);
LineObj4[6] = CreateDynamicObject(978, -1348.24, 2184.43, 49.03,   0.00, 0.00, 79.86, -1, -1, -1, 500);
LineObj4[7] = CreateDynamicObject(978, -1488.85, 2112.11, 45.48,   0.00, 0.00, 291.38, -1, -1, -1, 500);
LineObj4[8] = CreateDynamicObject(978, -1482.76, 2106.31, 45.48,   0.00, 0.00, 341.38, -1, -1, -1, 500);
LineObj4[9] = CreateDynamicObject(978, -1473.83, 2105.89, 45.60,   0.00, 0.00, 13.09, -1, -1, -1, 500);
LineObj4[10] = CreateDynamicObject(979, -1530.23, 2367.74, 46.22,   0.00, 0.00, 151.93, -1, -1, -1, 500);
LineObj4[11] = CreateDynamicObject(979, -1524.60, 2361.20, 46.72,   0.00, 0.00, 110.82, -1, -1, -1, 500);
LineObj4[12] = CreateDynamicObject(979, -1538.64, 2368.86, 45.71,   0.00, 0.00, 194.92, -1, -1, -1, 500);
LineObj4[13] = CreateDynamicObject(979, -1635.95, 2382.55, 48.92,   0.00, 12.00, 223.78, -1, -1, -1, 500);
LineObj4[14] = CreateDynamicObject(979, -1628.77, 2388.09, 50.55,   0.00, 9.00, 211.96, -1, -1, -1, 500);
LineObj4[15] = CreateDynamicObject(979, -1611.41, 2388.58, 51.98,   0.00, 0.00, 154.59, -1, -1, -1, 500);
LineObj4[16] = CreateDynamicObject(979, -1620.20, 2390.50, 51.68,   0.00, 3.00, 181.00, -1, -1, -1, 500);
LineObj4[17] = CreateDynamicObject(979, -1684.92, 2334.25, 31.71,   0.00, 9.00, 255.04, -1, -1, -1, 500);
LineObj4[18] = CreateDynamicObject(978, -1816.25, 2128.67, 7.57,   0.00, 0.00, 0.00, -1, -1, -1, 500);
LineObj4[19] = CreateDynamicObject(978, -1825.23, 2130.28, 7.57,   0.00, 0.00, 340.36, -1, -1, -1, 500);
LineObj4[20] = CreateDynamicObject(978, -1831.45, 2136.07, 7.47,   0.00, 0.00, 294.00, -1, -1, -1, 500);
LineObj4[21] = CreateDynamicObject(978, -2001.18, 2276.40, 18.10,   0.00, 0.00, 247.40, -1, -1, -1, 500);
LineObj4[22] = CreateDynamicObject(978, -1816.57, 2685.47, 55.21,   0.00, 4.00, 209.85, -1, -1, -1, 500);
LineObj4[23] = CreateDynamicObject(979, -1767.45, 2707.07, 59.09,   0.00, 0.00, 53.80, -1, -1, -1, 500);
LineObj4[24] = CreateDynamicObject(979, -1634.58, 2715.81, 57.36,   0.00, 0.00, 27.92, -1, -1, -1, 500);
LineObj4[25] = CreateDynamicObject(978, -1339.70, 2635.68, 50.55,   0.00, 0.00, 78.47, -1, -1, -1, 500);
LineObj4[26] = CreateDynamicObject(978, -1341.16, 2653.71, 50.75,   0.00, 0.00, 107.72, -1, -1, -1, 500);
LineObj4[27] = CreateDynamicObject(978, -1339.25, 2644.76, 50.24,   0.00, 0.00, 96.43, -1, -1, -1, 500);
LineObj4[28] = CreateDynamicObject(978, -1344.32, 2628.22, 51.25,   0.00, 4.00, 39.55, -1, -1, -1, 500);
LineObj4[29] = CreateDynamicObject(979, -1386.67, 2601.23, 54.99,   0.00, -5.00, 258.81, -1, -1, -1, 500);
LineObj4[30] = CreateDynamicObject(979, -1442.20, 2367.98, 52.75,   0.00, 0.00, 307.28, -1, -1, -1, 500);
//End трасса 4
//Start трасса 5
LineObj5[0] = CreateDynamicObject(16092, 2708.59, 1773.22, 6.03,   0.00, 0.00, 268.86, -1, -1, -1, 500);
LineObj5[1] = CreateDynamicObject(1262, 2708.49, 1772.32, 13.52,   0.00, 0.00, 179.83, -1, -1, -1, 500);
LineObj5[2] = CreateDynamicObject(1262, 2705.55, 1772.35, 13.52,   0.00, 0.00, 179.83, -1, -1, -1, 500);
LineObj5[3] = CreateDynamicObject(1262, 2711.56, 1772.25, 13.52,   0.00, 0.00, 179.83, -1, -1, -1, 500);
LineObj5[4] = CreateDynamicObject(979, 2717.29, 1894.15, 6.41,   0.00, 0.00, 113.82, -1, -1, -1, 500);
LineObj5[5] = CreateDynamicObject(979, 2717.30, 1913.23, 6.41,   0.00, 0.00, 113.82, -1, -1, -1, 500);
LineObj5[6] = CreateDynamicObject(979, 2698.83, 2007.06, 6.47,   0.00, 0.00, 128.51, -1, -1, -1, 500);
LineObj5[7] = CreateDynamicObject(979, 2704.51, 1999.91, 6.47,   0.00, 0.00, 128.51, -1, -1, -1, 500);
LineObj5[8] = CreateDynamicObject(979, 2710.29, 1992.66, 6.47,   0.00, 0.00, 128.51, -1, -1, -1, 500);
LineObj5[9] = CreateDynamicObject(979, 2715.01, 1984.79, 6.47,   0.00, 0.00, 113.44, -1, -1, -1, 500);
LineObj5[10] = CreateDynamicObject(979, 2642.83, 2116.34, 10.52,   0.00, 0.00, 127.35, -1, -1, -1, 500);
LineObj5[11] = CreateDynamicObject(979, 2635.33, 2120.28, 10.52,   0.00, 0.00, 177.58, -1, -1, -1, 500);
LineObj5[12] = CreateDynamicObject(979, 2626.09, 2120.55, 10.52,   0.00, 0.00, 179.57, -1, -1, -1, 500);
LineObj5[13] = CreateDynamicObject(979, 2647.53, 2108.43, 10.52,   0.00, 0.00, 114.06, -1, -1, -1, 500);
LineObj5[14] = CreateDynamicObject(979, 2651.10, 2099.93, 10.52,   0.00, 0.00, 111.70, -1, -1, -1, 500);
LineObj5[15] = CreateDynamicObject(978, 2533.96, 2105.23, 10.53,   0.00, 0.00, 348.27, -1, -1, -1, 500);
LineObj5[16] = CreateDynamicObject(978, 2525.82, 2109.10, 10.53,   0.00, 0.00, 320.69, -1, -1, -1, 500);
LineObj5[17] = CreateDynamicObject(978, 2522.17, 2116.69, 10.53,   0.00, 0.00, 269.90, -1, -1, -1, 500);
LineObj5[18] = CreateDynamicObject(978, 2520.40, 2137.04, 10.37,   0.00, 0.00, 245.15, -1, -1, -1, 500);
LineObj5[19] = CreateDynamicObject(978, 2519.99, 2149.25, 10.37,   0.00, 0.00, 245.15, -1, -1, -1, 500);
LineObj5[20] = CreateDynamicObject(978, 2520.41, 2232.62, 10.50,   0.00, 0.00, 252.85, -1, -1, -1, 500);
LineObj5[21] = CreateDynamicObject(979, 2534.42, 2232.64, 10.53,   0.00, 0.00, 108.32, -1, -1, -1, 500);
LineObj5[22] = CreateDynamicObject(979, 2530.54, 2415.70, 10.60,   0.00, 0.00, 139.81, -1, -1, -1, 500);
LineObj5[23] = CreateDynamicObject(979, 2522.31, 2418.94, 10.60,   0.00, 0.00, 177.83, -1, -1, -1, 500);
LineObj5[24] = CreateDynamicObject(979, 2535.36, 2408.27, 10.60,   0.00, 0.00, 105.97, -1, -1, -1, 500);
LineObj5[25] = CreateDynamicObject(978, 2426.74, 2406.06, 10.46,   0.00, 0.00, 339.36, -1, -1, -1, 500);
LineObj5[26] = CreateDynamicObject(979, 2367.13, 2420.44, 10.47,   0.00, 0.00, 198.94, -1, -1, -1, 500);
LineObj5[27] = CreateDynamicObject(978, 2286.99, 2405.99, 10.37,   0.00, 0.00, 340.20, -1, -1, -1, 500);
LineObj5[28] = CreateDynamicObject(979, 2225.56, 2416.82, 10.50,   0.00, 0.00, 216.66, -1, -1, -1, 500);
LineObj5[29] = CreateDynamicObject(979, 2233.86, 2420.48, 10.50,   0.00, 0.00, 190.92, -1, -1, -1, 500);
LineObj5[30] = CreateDynamicObject(979, 2221.73, 2409.37, 10.50,   0.00, 0.00, 268.95, -1, -1, -1, 500);
LineObj5[31] = CreateDynamicObject(978, 2225.94, 2364.55, 10.47,   0.00, 0.00, 44.57, -1, -1, -1, 500);
LineObj5[32] = CreateDynamicObject(979, 2194.23, 2344.01, 10.26,   0.00, 0.00, 254.95, -1, -1, -1, 500);
LineObj5[33] = CreateDynamicObject(978, 2169.97, 2283.67, 10.27,   0.00, 0.00, 44.13, -1, -1, -1, 500);
LineObj5[34] = CreateDynamicObject(979, 2150.48, 2280.06, 10.42,   0.00, 0.00, 264.56, -1, -1, -1, 500);
LineObj5[35] = CreateDynamicObject(979, 2137.66, 2152.76, 10.37,   0.00, 0.00, 291.14, -1, -1, -1, 500);
LineObj5[36] = CreateDynamicObject(978, 2159.62, 2149.39, 10.37,   0.00, 0.00, 71.25, -1, -1, -1, 500);
LineObj5[37] = CreateDynamicObject(978, 2159.83, 2136.41, 10.37,   0.00, 0.00, 71.25, -1, -1, -1, 500);
LineObj5[38] = CreateDynamicObject(979, 2137.55, 2136.72, 10.37,   0.00, 0.00, 291.14, -1, -1, -1, 500);
LineObj5[39] = CreateDynamicObject(978, 2159.79, 2022.24, 10.37,   0.00, 0.00, 71.58, -1, -1, -1, 500);
LineObj5[40] = CreateDynamicObject(978, 2160.01, 1893.45, 10.35,   0.00, 0.00, 70.66, -1, -1, -1, 500);
LineObj5[41] = CreateDynamicObject(978, 2115.02, 1773.32, 10.37,   0.00, 0.00, 45.78, -1, -1, -1, 500);
LineObj5[42] = CreateDynamicObject(978, 2088.98, 1721.15, 10.37,   0.00, 0.00, 45.78, -1, -1, -1, 500);
LineObj5[43] = CreateDynamicObject(979, 2092.83, 1774.00, 10.28,   0.00, 0.00, 267.29, -1, -1, -1, 500);
LineObj5[44] = CreateDynamicObject(979, 2062.88, 1714.34, 10.47,   0.00, 0.00, 268.94, -1, -1, -1, 500);
LineObj5[45] = CreateDynamicObject(979, 2057.47, 1646.01, 10.36,   0.00, 0.00, 290.90, -1, -1, -1, 500);
LineObj5[46] = CreateDynamicObject(978, 2080.56, 1644.63, 10.46,   0.00, 0.00, 66.19, -1, -1, -1, 500);
LineObj5[47] = CreateDynamicObject(978, 2080.00, 1533.08, 10.26,   0.00, 0.00, 69.17, -1, -1, -1, 500);
LineObj5[48] = CreateDynamicObject(979, 2057.57, 1534.09, 10.36,   0.00, 0.00, 293.35, -1, -1, -1, 500);
LineObj5[49] = CreateDynamicObject(979, 2057.53, 1453.05, 10.28,   0.00, 0.00, 293.64, -1, -1, -1, 500);
LineObj5[50] = CreateDynamicObject(978, 2079.80, 1433.05, 10.35,   0.00, 0.00, 70.36, -1, -1, -1, 500);
LineObj5[51] = CreateDynamicObject(978, 2079.96, 1372.88, 10.35,   0.00, 0.00, 68.85, -1, -1, -1, 500);
LineObj5[52] = CreateDynamicObject(979, 2057.31, 1373.59, 10.36,   0.00, 0.00, 293.16, -1, -1, -1, 500);
LineObj5[53] = CreateDynamicObject(979, 2057.73, 1273.80, 10.26,   0.00, 0.00, 292.23, -1, -1, -1, 500);
LineObj5[54] = CreateDynamicObject(979, 2057.73, 1193.69, 10.37,   0.00, 0.00, 292.27, -1, -1, -1, 500);
LineObj5[55] = CreateDynamicObject(978, 2080.19, 1193.32, 10.38,   0.00, 0.00, 67.55, -1, -1, -1, 500);
LineObj5[56] = CreateDynamicObject(978, 2079.86, 1033.23, 10.47,   0.00, 0.00, 67.62, -1, -1, -1, 500);
LineObj5[57] = CreateDynamicObject(978, 2079.97, 973.52, 10.47,   0.00, 0.00, 67.62, -1, -1, -1, 500);
LineObj5[58] = CreateDynamicObject(979, 2057.77, 972.90, 10.16,   0.00, 0.00, 293.87, -1, -1, -1, 500);
LineObj5[59] = CreateDynamicObject(979, 2078.56, 844.39, 6.41,   0.00, 0.00, 0.00, -1, -1, -1, 500);
LineObj5[60] = CreateDynamicObject(979, 2069.67, 846.35, 6.41,   0.00, 0.00, 335.26, -1, -1, -1, 500);
LineObj5[61] = CreateDynamicObject(979, 2062.03, 851.44, 6.41,   0.00, 0.00, 317.52, -1, -1, -1, 500);
LineObj5[62] = CreateDynamicObject(979, 2058.35, 859.22, 6.41,   0.00, 0.00, 273.92, -1, -1, -1, 500);
LineObj5[63] = CreateDynamicObject(979, 2168.78, 842.90, 6.27,   0.00, 0.00, 24.35, -1, -1, -1, 500);
LineObj5[64] = CreateDynamicObject(978, 2146.52, 861.99, 6.35,   0.00, 0.00, 156.45, -1, -1, -1, 500);
LineObj5[65] = CreateDynamicObject(978, 2163.58, 861.99, 6.35,   0.00, 0.00, 156.45, -1, -1, -1, 500);
LineObj5[66] = CreateDynamicObject(979, 2185.17, 842.96, 6.27,   0.00, 0.00, 24.35, -1, -1, -1, 500);
LineObj5[67] = CreateDynamicObject(978, 2395.40, 862.21, 6.32,   0.00, 0.00, 149.52, -1, -1, -1, 500);
LineObj5[68] = CreateDynamicObject(978, 2417.13, 862.01, 6.32,   0.00, 0.00, 149.52, -1, -1, -1, 500);
LineObj5[69] = CreateDynamicObject(979, 2428.87, 842.76, 6.30,   0.00, 0.00, 25.71, -1, -1, -1, 500);
LineObj5[70] = CreateDynamicObject(979, 2445.13, 842.83, 6.30,   0.00, 0.00, 25.71, -1, -1, -1, 500);
LineObj5[71] = CreateDynamicObject(979, 2641.51, 931.30, 6.29,   0.00, 0.00, 73.03, -1, -1, -1, 500);
LineObj5[72] = CreateDynamicObject(979, 2652.94, 944.03, 6.29,   0.00, 0.00, 73.03, -1, -1, -1, 500);
LineObj5[73] = CreateDynamicObject(979, 2663.31, 957.11, 6.29,   0.00, 0.00, 73.03, -1, -1, -1, 500);
LineObj5[74] = CreateDynamicObject(979, 2718.02, 1234.94, 6.30,   0.00, 0.00, 115.15, -1, -1, -1, 500);
LineObj5[75] = CreateDynamicObject(979, 2718.31, 1335.31, 6.39,   0.00, 0.00, 115.10, -1, -1, -1, 500);
LineObj5[76] = CreateDynamicObject(979, 2718.21, 1351.45, 6.39,   0.00, 0.00, 115.10, -1, -1, -1, 500);
LineObj5[77] = CreateDynamicObject(979, 2717.79, 1250.57, 6.30,   0.00, 0.00, 115.15, -1, -1, -1, 500);
LineObj5[78] = CreateDynamicObject(978, 2698.77, 1330.69, 6.33,   0.00, 0.00, 249.82, -1, -1, -1, 500);
LineObj5[79] = CreateDynamicObject(978, 2698.67, 1351.64, 6.33,   0.00, 0.00, 249.82, -1, -1, -1, 500);
LineObj5[80] = CreateDynamicObject(978, 2699.16, 1580.05, 6.44,   0.00, 0.00, 245.47, -1, -1, -1, 500);
LineObj5[81] = CreateDynamicObject(978, 2699.57, 1603.06, 6.44,   0.00, 0.00, 245.47, -1, -1, -1, 500);
LineObj5[82] = CreateDynamicObject(979, 2717.11, 1613.67, 6.39,   0.00, 0.00, 115.79, -1, -1, -1, 500);
LineObj5[83] = CreateDynamicObject(979, 2717.38, 1630.53, 6.39,   0.00, 0.00, 115.79, -1, -1, -1, 500);
//End трасса 5
//Start остров 1
	ObjGam[15] = CreateObject(4847, -2948.35, 5829.23, 0.81,   0.00, -0.06, 0.00);

	CreateDynamicObject(3992, -2768.91, 5978.46, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4158, -2914.94, 6028.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4160, -2837.84, 5954.35, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3993, -2804.54, 6098.43, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4207, -2920.65, 5897.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4012, -2747.07, 5978.47, 10.16,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3983, -2801.98, 5985.39, 12.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4027, -2741.40, 6058.42, 11.90,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3987, -2802.41, 6058.41, 10.35,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4033, -2802.59, 6117.64, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3984, -2741.40, 6113.40, 20.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3989, -2878.47, 6098.03, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3975, -2946.01, 6084.27, 10.60,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4029, -2894.91, 6004.69, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4122, -2895.01, 5948.50, 11.06,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4209, -2954.52, 5958.48, 9.86,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3997, -3045.04, 5958.50, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4165, -3054.93, 5888.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4163, -3055.15, 6028.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4150, -2992.42, 6098.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4148, -3097.44, 6098.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4186, -3044.92, 6067.59, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3985, -3044.89, 6129.24, 9.46,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4030, -2988.19, 6017.07, 4.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3981, -3064.24, 6034.77, 6.76,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(967, -2979.80, 6136.82, 9.90,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, -2940.34, 6116.02, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2883.46, 6050.17, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2883.46, 6043.06, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2892.32, 6043.03, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2892.31, 6050.14, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2728.76, 6043.65, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2728.75, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2735.89, 6052.47, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2735.89, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2743.03, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2743.00, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2750.19, 6052.42, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2750.20, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2757.33, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2757.33, 6052.43, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2764.47, 6052.44, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2788.47, 6091.19, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(969, -2825.42, 6078.81, 14.59,   0.00, 0.00, 90.52, -1, -1, -1, 500);
	CreateDynamicObject(969, -2825.51, 6087.62, 14.59,   0.00, 0.00, 90.18, -1, -1, -1, 500);
	CreateDynamicObject(969, -2825.53, 6096.41, 14.59,   0.00, 0.00, 90.04, -1, -1, -1, 500);
	CreateDynamicObject(982, -2805.76, 6122.93, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8059, -2808.06, 6102.30, 13.35,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -2789.75, 6122.92, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2764.47, 6043.66, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2788.46, 6099.98, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2788.48, 6108.79, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2788.49, 6117.58, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, -2788.50, 6126.38, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8069, -2972.37, 6070.93, 6.67,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8069, -2972.36, 6119.69, 6.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2845.79, 5994.18, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, -2845.79, 5982.29, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, -2845.67, 5982.70, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, -2845.67, 5994.68, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, -3114.07, 6045.43, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 500);
	CreateDynamicObject(987, -3115.27, 6033.86, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 500);
//	CreateDynamicObject(4847, -2948.35, 5829.23, 0.81,   0.00, -0.06, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2772.51, 5824.06, 2.31,   0.00, 11.80, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2772.34, 5835.81, 4.56,   0.00, 11.80, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2772.22, 5847.52, 6.84,   0.00, 11.80, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2772.03, 5859.02, 9.98,   0.00, 11.80, -90.78, -1, -1, -1, 500);
	CreateDynamicObject(987, -2771.95, 5869.72, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 500);
	CreateDynamicObject(987, -2771.88, 5878.82, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 500);
	CreateDynamicObject(987, -2783.82, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2795.71, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2807.64, 5878.87, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2819.53, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2831.47, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2843.41, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2855.35, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2867.29, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2849.70, 5881.67, 9.95,   0.00, 0.00, 193.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2839.86, 5888.48, 9.95,   0.00, 0.00, 214.46, -1, -1, -1, 500);
	CreateDynamicObject(987, -2832.02, 5897.49, 9.95,   0.00, 0.00, 229.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2827.00, 5908.34, 9.95,   0.00, 0.00, 245.24, -1, -1, -1, 500);
	CreateDynamicObject(987, -2824.96, 5920.11, 9.95,   0.00, 0.00, 260.08, -1, -1, -1, 500);
	CreateDynamicObject(987, -2824.89, 5932.06, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 500);
	CreateDynamicObject(987, -2824.84, 5939.12, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 500);
	CreateDynamicObject(987, -2812.96, 5939.01, 9.95,   0.00, 0.00, 179.60, -1, -1, -1, 500);
	CreateDynamicObject(16192, -2621.64, 5963.40, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -2621.68, 6007.07, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -2621.94, 6050.62, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -2622.39, 6099.31, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -2623.14, 6141.03, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(987, -2801.10, 5938.09, 9.95,   0.00, 0.00, 175.30, -1, -1, -1, 500);
	CreateDynamicObject(987, -2789.63, 5934.80, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2778.18, 5931.52, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2766.71, 5928.23, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2755.25, 5924.95, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2743.78, 5921.67, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2732.20, 5918.91, 9.95,   0.00, 0.00, 166.46, -1, -1, -1, 500);
	CreateDynamicObject(987, -2720.25, 5918.79, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 500);
	CreateDynamicObject(987, -2708.32, 5918.67, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 500);
	CreateDynamicObject(987, -2716.53, 6137.52, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2728.46, 6137.95, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2740.19, 6140.07, 9.95,   0.00, 0.00, -10.20, -1, -1, -1, 500);
	CreateDynamicObject(987, -2751.81, 6142.76, 10.58,   0.00, 0.00, -13.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2763.28, 6146.02, 10.58,   0.00, 0.00, -16.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2774.76, 6148.68, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2786.22, 6151.57, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2797.73, 6154.41, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2809.51, 6156.24, 9.95,   0.00, 0.00, -9.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2821.37, 6157.70, 9.95,   0.00, 0.00, -7.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2833.05, 6157.90, 9.95,   0.00, 0.00, -1.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2845.02, 6157.90, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2856.96, 6157.89, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -2868.86, 6157.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -2911.29, 6248.71, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -2954.52, 6248.33, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3005.05, 6249.26, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3048.50, 6253.08, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3091.84, 6253.39, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(987, -3086.71, 6158.11, 9.95,   0.00, 0.00, 40.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3104.61, 6158.16, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3104.68, 6146.23, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3104.66, 6134.28, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3104.65, 6122.33, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3104.66, 6110.40, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3104.64, 6098.48, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3104.63, 6086.54, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3104.63, 6074.61, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3104.63, 6062.68, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3104.61, 6050.73, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3104.59, 6044.74, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3104.60, 6037.71, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3116.50, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3124.96, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3124.99, 6025.78, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3124.97, 6013.85, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3214.36, 5968.53, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3214.42, 5927.13, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3215.48, 5881.79, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3214.28, 5839.99, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3216.11, 5785.98, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3312.75, 5719.04, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3314.83, 5793.01, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3312.52, 5876.32, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3165.25, 6364.00, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -3062.38, 6357.34, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -2974.50, 6349.79, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -2504.12, 6204.87, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -2509.12, 6111.73, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -2502.05, 6026.13, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.46, 5838.30, 3.72,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.31, 5838.30, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.15, 5838.28, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.56, 5838.17, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.40, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.24, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.06, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.64, 5838.03, 3.68,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.48, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.31, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.15, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2797.99, 5838.01, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.57, 5837.88, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.41, 5837.89, 3.62,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.25, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.09, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.50, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.33, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, -2798.16, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -3098.65, 6158.14, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2734.64, 6111.18, 11.24,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2728.83, 6050.88, 10.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2728.46, 6008.37, 10.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2800.01, 6056.96, 10.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2867.50, 6123.46, 10.50,   0.00, 0.00, 91.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2866.83, 6076.44, 10.50,   0.00, 0.00, 91.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2945.53, 6080.04, 10.50,   0.00, 0.00, 91.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2944.73, 6108.30, 10.50,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2746.36, 5977.95, 10.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2774.73, 5997.62, 10.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2803.61, 5996.00, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2872.36, 5935.82, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2915.66, 5936.17, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2883.69, 5939.30, 10.43,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2918.46, 5947.73, 10.43,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2985.04, 5988.53, 10.43,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -3027.56, 5988.70, 10.43,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -3069.77, 5989.10, 10.43,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -3098.22, 5990.27, 10.43,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -3101.19, 5953.82, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -3058.30, 5953.95, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -3017.27, 5951.81, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -2985.83, 5950.35, 10.43,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -3049.19, 6096.77, 11.04,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(3915, -3052.45, 6071.68, 11.04,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2816.86, 5967.91, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2816.35, 5972.72, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2816.45, 5978.15, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2816.38, 5983.20, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2816.70, 5988.12, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2791.48, 6056.64, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2814.45, 6052.74, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2791.23, 6061.39, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2814.09, 6057.24, 13.09,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -3050.16, 6095.17, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -3045.07, 6120.44, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -3023.44, 6139.56, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -3066.34, 6140.03, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -3027.99, 6071.95, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -3027.62, 6055.82, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -3064.69, 6055.56, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -3064.56, 6073.09, 13.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2746.67, 6083.99, 14.17,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2762.49, 6109.15, 13.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2716.47, 6135.08, 12.33,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2872.16, 5904.69, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2883.00, 5904.22, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2899.16, 5905.02, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2923.26, 5905.56, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2926.48, 5905.19, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2968.99, 5903.24, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2979.66, 5903.28, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2992.35, 5903.34, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -3005.31, 5903.39, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -3017.32, 5903.53, 12.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2948.46, 6059.70, 12.67,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2941.14, 6091.96, 12.67,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2945.43, 6092.21, 12.67,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(818, -2949.87, 6092.12, 12.67,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -3079.29, 5917.76, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2994.46, 5917.15, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2992.87, 5960.30, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -3079.03, 5965.79, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -3050.51, 6051.04, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -3063.77, 6118.50, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2955.70, 6059.69, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2954.51, 6109.31, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2869.29, 6060.62, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2867.75, 6108.16, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2802.85, 6052.74, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2740.09, 6052.85, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2742.54, 6109.39, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2932.70, 5914.61, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2865.06, 5910.98, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2898.13, 5962.53, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2739.26, 5992.35, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2778.86, 5990.66, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2813.16, 5994.40, 15.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, -2798.32, 5867.21, 12.17,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, -2818.32, 5867.21, 12.15,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, -2838.32, 5867.21, 12.13,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, -3044.46, 6145.34, 12.37,   0.00, 0.00, 0.00, -1, -1, -1, 500);
//End остров 1
//Start остров 2, 3
	ObjGam[16] = CreateObject(4847, 9051.65, 5829.23, 0.81,   0.00, -0.06, 0.00);
	ObjGam[17] = CreateObject(4847, 51.65, 5829.23, 0.81,   0.00, -0.06, 0.00);
	ObjGam[18] = CreateObject(5004, 429.20, 6110.18, 9.73,   0.00, 0.04, 0.00);

	CreateDynamicObject(3992, 9231.09, 5978.46, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4158, 9085.06, 6028.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4160, 9162.16, 5954.35, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3993, 9195.46, 6098.43, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4207, 9079.35, 5897.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4012, 9252.93, 5978.47, 10.16,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3983, 9198.02, 5985.39, 12.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4027, 9258.60, 6058.42, 11.90,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3987, 9197.59, 6058.41, 10.35,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4033, 9197.41, 6117.64, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3984, 9258.60, 6113.40, 20.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3989, 9121.53, 6098.03, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3975, 9053.99, 6084.27, 10.60,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4029, 9105.09, 6004.69, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4122, 9104.99, 5948.50, 11.06,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4209, 9045.48, 5958.48, 9.86,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3997, 8954.88, 5958.47, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4165, 8945.07, 5888.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4163, 8944.85, 6028.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4150, 9007.58, 6098.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4148, 8902.56, 6098.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4186, 8955.08, 6067.59, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3985, 8955.11, 6129.24, 9.46,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4030, 9011.81, 6017.07, 4.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3981, 8935.76, 6034.77, 6.76,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(967, 9020.20, 6136.82, 9.90,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 9059.59, 6116.02, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9116.54, 6050.17, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9116.54, 6043.06, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9107.68, 6043.03, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9107.69, 6050.14, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9271.24, 6043.65, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9271.25, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9264.11, 6052.47, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9264.11, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9256.97, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9257.00, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9249.81, 6052.42, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9249.80, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9242.67, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9242.67, 6052.43, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9235.53, 6052.44, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9211.53, 6091.19, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(969, 9174.58, 6078.81, 14.59,   0.00, 0.00, 90.52, -1, -1, -1, 500);
	CreateDynamicObject(969, 9174.49, 6087.62, 14.59,   0.00, 0.00, 90.18, -1, -1, -1, 500);
	CreateDynamicObject(969, 9174.47, 6096.41, 14.59,   0.00, 0.00, 90.04, -1, -1, -1, 500);
	CreateDynamicObject(982, 9194.24, 6122.93, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8059, 9191.94, 6102.30, 13.35,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 9210.25, 6122.92, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9235.53, 6043.66, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9211.54, 6099.98, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9211.52, 6108.79, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9211.51, 6117.58, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 9211.50, 6126.38, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8069, 9027.63, 6070.93, 6.67,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8069, 9027.64, 6119.69, 6.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9154.21, 5994.18, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, 9154.21, 5982.29, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, 9154.33, 5982.70, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, 9154.33, 5994.68, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, 8885.93, 6045.43, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 500);
	CreateDynamicObject(987, 8884.73, 6033.86, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 500);
//	CreateDynamicObject(4847, 9051.65, 5829.23, 0.81,   0.00, -0.06, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9227.49, 5824.06, 2.31,   0.00, 11.80, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9227.66, 5835.81, 4.56,   0.00, 11.80, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9227.78, 5847.52, 6.84,   0.00, 11.80, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9227.97, 5859.02, 9.98,   0.00, 11.80, -90.78, -1, -1, -1, 500);
	CreateDynamicObject(987, 9228.05, 5869.72, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 500);
	CreateDynamicObject(987, 9228.12, 5878.82, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 500);
	CreateDynamicObject(987, 9216.18, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9204.29, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9192.36, 5878.87, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9180.47, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9168.53, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9156.59, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9144.65, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9132.71, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9150.30, 5881.67, 9.95,   0.00, 0.00, 193.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9160.14, 5888.48, 9.95,   0.00, 0.00, 214.46, -1, -1, -1, 500);
	CreateDynamicObject(987, 9167.98, 5897.49, 9.95,   0.00, 0.00, 229.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9173.00, 5908.34, 9.95,   0.00, 0.00, 245.24, -1, -1, -1, 500);
	CreateDynamicObject(987, 9175.04, 5920.11, 9.95,   0.00, 0.00, 260.08, -1, -1, -1, 500);
	CreateDynamicObject(987, 9175.11, 5932.06, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 500);
	CreateDynamicObject(987, 9175.16, 5939.12, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 500);
	CreateDynamicObject(987, 9187.04, 5939.01, 9.95,   0.00, 0.00, 179.60, -1, -1, -1, 500);
	CreateDynamicObject(16192, 9378.36, 5963.40, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 9378.32, 6007.07, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 9378.06, 6050.62, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 9377.61, 6099.31, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 9376.86, 6141.03, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(987, 9198.90, 5938.09, 9.95,   0.00, 0.00, 175.30, -1, -1, -1, 500);
	CreateDynamicObject(987, 9210.37, 5934.80, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9221.82, 5931.52, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9233.29, 5928.23, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9244.75, 5924.95, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9256.22, 5921.67, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9267.80, 5918.91, 9.95,   0.00, 0.00, 166.46, -1, -1, -1, 500);
	CreateDynamicObject(987, 9279.75, 5918.79, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 500);
	CreateDynamicObject(987, 9291.68, 5918.67, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 500);
	CreateDynamicObject(987, 9283.47, 6137.52, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9271.54, 6137.95, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9259.81, 6140.07, 9.95,   0.00, 0.00, -10.20, -1, -1, -1, 500);
	CreateDynamicObject(987, 9248.19, 6142.76, 10.58,   0.00, 0.00, -13.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9236.72, 6146.02, 10.58,   0.00, 0.00, -16.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9225.24, 6148.68, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9213.78, 6151.57, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9202.27, 6154.41, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9190.49, 6156.24, 9.95,   0.00, 0.00, -9.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9178.63, 6157.70, 9.95,   0.00, 0.00, -7.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9166.95, 6157.90, 9.95,   0.00, 0.00, -1.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9154.98, 6157.90, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9143.04, 6157.89, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 9131.14, 6157.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 9088.71, 6248.71, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 9045.48, 6248.33, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8994.95, 6249.26, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8951.50, 6253.08, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8908.14, 6253.40, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(987, 8882.16, 6165.24, 9.95,   0.00, 0.00, -40.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8903.23, 6157.57, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8915.12, 6157.53, 9.95,   0.00, 0.00, 40.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8859.68, 6057.73, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8871.59, 6057.72, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8883.54, 6057.74, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8895.48, 6057.73, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8895.41, 6045.81, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8895.41, 6044.74, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8895.40, 6037.71, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8883.50, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8875.04, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8875.01, 6025.78, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8875.03, 6013.85, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8785.64, 5968.53, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8785.58, 5927.13, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8784.52, 5881.79, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8785.72, 5839.99, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8783.89, 5785.98, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8687.25, 5719.04, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8685.17, 5793.01, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8687.48, 5876.32, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8834.75, 6364.00, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8937.62, 6357.34, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 9025.50, 6349.79, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 9495.88, 6204.87, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 9490.88, 6111.73, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 9497.95, 6026.13, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.54, 5838.30, 3.72,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.69, 5838.30, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.85, 5838.28, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.44, 5838.17, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.60, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.76, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.94, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.36, 5838.03, 3.68,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.52, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.69, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.85, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9202.01, 5838.01, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.43, 5837.88, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.59, 5837.89, 3.62,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.75, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.91, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.50, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.67, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 9201.84, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, 9201.68, 5867.21, 12.17,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, 9181.68, 5867.21, 12.15,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, 9161.68, 5867.21, 12.13,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(18450, 8615.86, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 8457.70, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 8255.87, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 8095.88, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 7897.72, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 7695.90, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 7535.90, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 7337.73, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 7135.91, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 6975.91, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 6777.75, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 6575.93, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 6415.93, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 6217.76, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 6015.94, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 5855.95, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 5657.78, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 5455.96, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 5295.96, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 5097.80, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 4895.97, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 4735.98, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 4537.81, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 4335.99, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 4175.99, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 3977.83, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 3776.01, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 3616.01, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 3417.84, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 3216.02, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 3056.02, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 2857.86, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 2656.04, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 2496.04, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 2297.88, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 2096.06, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 1936.06, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 1737.90, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 1536.08, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 1376.08, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 1177.92, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16430, 976.10, 6112.18, 9.58,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16357, 816.10, 6112.18, 9.58,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16358, 617.94, 6112.47, 9.51,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3992, 231.09, 5978.46, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4158, 85.06, 6028.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4160, 162.16, 5954.35, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3993, 195.46, 6098.43, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4207, 79.35, 5897.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4012, 252.93, 5978.47, 10.16,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3983, 198.02, 5985.39, 12.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4027, 258.60, 6058.42, 11.90,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3987, 197.59, 6058.41, 10.35,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4033, 197.41, 6117.64, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3984, 258.60, 6113.40, 20.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3989, 121.53, 6098.03, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3975, 53.99, 6084.27, 10.60,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4029, 105.09, 6004.69, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4122, 104.99, 5948.50, 11.06,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4209, 45.48, 5958.48, 9.86,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3997, -45.04, 5958.50, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4165, -54.93, 5888.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4163, -55.15, 6028.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4150, 7.58, 6098.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4148, -97.44, 6098.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4186, -44.92, 6067.59, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3985, -44.89, 6129.24, 9.46,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4030, 11.81, 6017.07, 4.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3981, -64.24, 6034.77, 6.76,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(967, 20.20, 6136.82, 9.90,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 59.66, 6116.02, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 116.54, 6050.17, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 116.54, 6043.06, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 107.68, 6043.03, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 107.69, 6050.14, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 271.24, 6043.65, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 271.25, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 264.11, 6052.47, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 264.11, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 256.97, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 257.00, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 249.81, 6052.42, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 249.80, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 242.67, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 242.67, 6052.43, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 235.53, 6052.44, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 211.53, 6091.19, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(969, 174.58, 6078.81, 14.59,   0.00, 0.00, 90.52, -1, -1, -1, 500);
	CreateDynamicObject(969, 174.49, 6087.62, 14.59,   0.00, 0.00, 90.18, -1, -1, -1, 500);
	CreateDynamicObject(969, 174.47, 6096.41, 14.59,   0.00, 0.00, 90.04, -1, -1, -1, 500);
	CreateDynamicObject(982, 194.24, 6122.93, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8059, 191.94, 6102.30, 13.35,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 210.25, 6122.92, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 235.53, 6043.66, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 211.54, 6099.98, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 211.52, 6108.79, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 211.51, 6117.58, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 211.50, 6126.38, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8069, 27.63, 6070.93, 6.67,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8069, 27.64, 6119.69, 6.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 154.21, 5994.18, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, 154.21, 5982.29, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, 154.33, 5982.70, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, 154.33, 5994.68, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, -114.07, 6045.43, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 500);
	CreateDynamicObject(987, -115.27, 6033.86, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 500);
//	CreateDynamicObject(4847, 51.65, 5829.23, 0.81,   0.00, -0.06, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 227.49, 5824.06, 2.31,   0.00, 11.80, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 227.66, 5835.81, 4.56,   0.00, 11.80, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 227.78, 5847.52, 6.84,   0.00, 11.80, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 227.97, 5859.02, 9.98,   0.00, 11.80, -90.78, -1, -1, -1, 500);
	CreateDynamicObject(987, 228.05, 5869.72, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 500);
	CreateDynamicObject(987, 228.12, 5878.82, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 500);
	CreateDynamicObject(987, 216.18, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 204.29, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 192.36, 5878.87, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 180.47, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 168.53, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 156.59, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 144.65, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 132.71, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 150.30, 5881.67, 9.95,   0.00, 0.00, 193.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 160.14, 5888.48, 9.95,   0.00, 0.00, 214.46, -1, -1, -1, 500);
	CreateDynamicObject(987, 167.98, 5897.49, 9.95,   0.00, 0.00, 229.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 173.00, 5908.34, 9.95,   0.00, 0.00, 245.24, -1, -1, -1, 500);
	CreateDynamicObject(987, 175.04, 5920.11, 9.95,   0.00, 0.00, 260.08, -1, -1, -1, 500);
	CreateDynamicObject(987, 175.11, 5932.06, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 500);
	CreateDynamicObject(987, 175.16, 5939.12, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 500);
	CreateDynamicObject(987, 187.04, 5939.01, 9.95,   0.00, 0.00, 179.60, -1, -1, -1, 500);
	CreateDynamicObject(987, 198.90, 5938.09, 9.95,   0.00, 0.00, 175.30, -1, -1, -1, 500);
	CreateDynamicObject(987, 210.37, 5934.80, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 221.82, 5931.52, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 233.29, 5928.23, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 244.75, 5924.95, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 256.22, 5921.67, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 267.80, 5918.91, 9.95,   0.00, 0.00, 166.46, -1, -1, -1, 500);
	CreateDynamicObject(987, 279.75, 5918.79, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 500);
	CreateDynamicObject(987, 291.68, 5918.67, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 500);
	CreateDynamicObject(987, 274.71, 6137.86, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 271.54, 6137.95, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 259.81, 6140.07, 9.95,   0.00, 0.00, -10.20, -1, -1, -1, 500);
	CreateDynamicObject(987, 248.19, 6142.76, 10.58,   0.00, 0.00, -13.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 236.72, 6146.02, 10.58,   0.00, 0.00, -16.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 225.24, 6148.68, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 213.78, 6151.57, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 202.27, 6154.41, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 190.49, 6156.24, 9.95,   0.00, 0.00, -9.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 178.63, 6157.70, 9.95,   0.00, 0.00, -7.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 166.95, 6157.90, 9.95,   0.00, 0.00, -1.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 154.98, 6157.90, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 143.04, 6157.89, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 131.14, 6157.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 88.71, 6248.71, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 45.48, 6248.33, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -5.05, 6249.26, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -48.50, 6253.08, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -91.84, 6253.39, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(987, -92.69, 6158.13, 9.95,   0.00, 0.00, 40.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -104.61, 6158.16, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -104.68, 6146.23, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -104.66, 6134.28, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -104.65, 6122.33, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -104.66, 6110.40, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -104.64, 6098.48, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -104.63, 6086.54, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -104.63, 6074.61, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -104.63, 6062.68, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -104.61, 6050.73, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -104.59, 6044.74, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -104.60, 6037.71, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -116.50, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -124.96, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -124.99, 6025.78, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -124.97, 6013.85, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -214.36, 5968.53, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -214.42, 5927.13, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -215.48, 5881.79, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -214.28, 5839.99, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -216.11, 5785.98, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, -312.75, 5719.04, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -314.83, 5793.01, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -312.52, 5876.32, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -165.25, 6364.00, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, -62.38, 6357.34, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 25.50, 6349.79, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
//	CreateDynamicObject(5004, 429.20, 6110.18, 9.73,   0.00, 0.04, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 374.73, 5949.74, 20.68,   0.00, 0.00, -18.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 325.23, 5830.75, 20.68,   0.00, 0.00, 156.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 529.25, 6248.16, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 495.99, 6253.09, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 458.51, 6256.55, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 414.82, 6255.29, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 369.68, 6254.49, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 302.65, 6362.57, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 408.36, 6364.24, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 468.70, 6355.94, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 283.59, 6038.43, 9.95,   0.00, 0.00, -76.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 298.82, 6052.81, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 310.75, 6052.82, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 322.68, 6052.83, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 396.77, 6052.69, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 408.71, 6052.70, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 420.65, 6052.71, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 432.60, 6052.71, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 444.54, 6052.73, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 456.46, 6052.76, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 468.24, 6052.82, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 480.04, 6050.95, 9.95,   0.00, 0.00, 171.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 491.99, 6050.96, 9.95,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 503.92, 6051.37, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 515.85, 6051.78, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 527.78, 6052.19, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 539.71, 6052.57, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 547.68, 6052.84, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 547.67, 6064.87, 9.95,   0.00, 0.00, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 548.30, 6076.79, 9.95,   0.00, 0.00, 267.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 548.91, 6088.72, 9.95,   0.00, 0.00, 267.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 549.52, 6100.63, 9.95,   0.00, 0.00, 267.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 549.71, 6104.30, 9.95,   0.00, 0.00, 267.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 558.94, 6131.22, 9.95,   0.00, 0.00, 251.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 563.79, 6142.13, 9.95,   0.00, 0.00, 246.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 568.65, 6153.01, 9.95,   0.00, 0.00, 246.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 571.09, 6158.44, 9.95,   0.00, 0.00, 246.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 286.65, 6137.38, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 286.62, 6149.31, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 286.62, 6153.15, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 286.63, 6165.16, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 298.58, 6165.16, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 310.51, 6165.14, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 322.45, 6165.13, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 334.38, 6165.12, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 346.31, 6165.11, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 358.26, 6165.12, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 370.21, 6165.11, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.54, 5838.30, 3.72,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.69, 5838.30, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.85, 5838.28, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.44, 5838.17, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.60, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.76, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.94, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.36, 5838.03, 3.68,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.52, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.69, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.85, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 202.01, 5838.01, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.43, 5837.88, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.59, 5837.89, 3.62,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.75, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.91, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.50, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.67, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 201.84, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(5004, 8752.08, 6112.13, 9.68,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8876.82, 6251.93, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8838.89, 6259.65, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8798.12, 6259.23, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8758.45, 6259.93, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8753.29, 6363.30, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 8701.97, 6366.68, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8891.29, 6157.57, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8635.61, 6053.20, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8623.64, 6052.79, 9.95,   0.00, 0.00, 140.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8647.54, 6053.62, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8659.48, 6054.03, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8671.41, 6054.22, 9.95,   0.00, 0.00, 181.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8683.35, 6054.41, 9.95,   0.00, 0.00, 181.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8695.27, 6054.82, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8707.18, 6055.22, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8719.10, 6055.65, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8731.01, 6056.03, 9.95,   0.00, 0.00, 182.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8618.71, 6056.91, 9.95,   0.00, 0.00, 140.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8609.52, 6064.64, 9.95,   0.00, 0.00, 64.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8614.72, 6075.36, 9.95,   0.00, 0.00, 66.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8617.70, 6082.06, 9.95,   0.00, 0.00, 66.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8622.55, 6092.95, 9.95,   0.00, 0.00, 75.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8630.35, 6119.98, 9.95,   0.00, 0.00, 85.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8631.38, 6131.86, 9.95,   0.00, 0.00, 85.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8632.41, 6143.74, 9.95,   0.00, 0.00, 87.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8633.02, 6155.65, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8633.01, 6157.12, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8633.04, 6169.15, 9.95,   0.00, 0.00, 2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8644.98, 6169.58, 9.95,   0.00, 0.00, 2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8656.88, 6170.02, 9.95,   0.00, 0.00, 2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8668.81, 6170.44, 9.95,   0.00, 0.00, 2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8680.72, 6170.87, 9.95,   0.00, 0.00, 2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8692.65, 6171.30, 9.95,   0.00, 0.00, -4.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8704.55, 6170.48, 9.95,   0.00, 0.00, -8.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8716.35, 6168.82, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8728.29, 6168.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8740.21, 6168.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8752.14, 6168.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 8764.06, 6168.87, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(5767, -245.69, 5937.75, 109.76,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(5767, -248.54, 5856.42, 109.76,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(5767, -250.36, 5775.47, 109.76,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8392, -153.33, 5971.25, 43.66,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8392, -151.40, 5848.80, 38.37,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8391, -18.37, 5966.36, 30.54,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8391, -67.68, 5965.53, 30.54,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(5767, -43.34, 6084.49, 57.64,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8421, 93.66, 5923.03, 35.01,   0.00, 0.00, 25.00, -1, -1, -1, 500);
	CreateDynamicObject(5767, 220.63, 5990.25, 57.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8392, 57.88, 6098.65, 37.91,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8392, 131.81, 6099.39, 37.91,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(7584, 10.65, 6272.91, 110.85,   0.00, 0.00, 25.00, -1, -1, -1, 500);
	CreateDynamicObject(7584, -83.37, 6295.74, 110.85,   0.00, 0.00, 84.00, -1, -1, -1, 500);
	CreateDynamicObject(8390, 363.73, 6108.50, 29.32,   0.04, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8397, 192.90, 6101.55, 26.66,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3516, 219.51, 6038.96, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(3516, 159.71, 6039.26, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(3516, 171.02, 6017.25, 13.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3516, 50.38, 6019.70, 13.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3516, 78.64, 6039.37, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(3516, -0.30, 6040.71, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(3516, 39.64, 5902.40, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(3516, 166.99, 5936.16, 13.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3516, 159.60, 5963.96, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 270.14, 6130.76, 13.54,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 252.54, 6135.91, 13.54,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 235.77, 6140.04, 13.54,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 278.63, 6081.86, 13.54,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 263.08, 6081.87, 13.54,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 244.42, 6082.21, 13.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 208.08, 6059.63, 13.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 186.20, 6056.54, 13.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 267.65, 6018.12, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 237.57, 6038.94, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 201.46, 6018.25, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 137.27, 6038.73, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 104.13, 6017.96, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 56.12, 6038.66, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 13.27, 6018.27, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -33.04, 6039.47, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -81.69, 6022.92, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3516, -100.36, 6037.26, 13.04,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 142.62, 5900.41, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 106.32, 5878.87, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 56.98, 5899.05, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 19.53, 5878.89, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -30.41, 5898.62, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, -82.78, 5878.74, 15.50,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 244.29, 6062.54, 12.66,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 259.60, 6062.78, 12.66,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 275.98, 6062.79, 12.66,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 457.50, 6060.05, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 476.42, 6059.95, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 497.48, 6059.44, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 520.31, 6059.71, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 541.13, 6060.55, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 457.87, 6159.07, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 478.38, 6158.05, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 503.82, 6155.40, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 528.90, 6152.21, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1231, 558.10, 6149.59, 12.31,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 439.58, 6095.78, 15.34,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 438.87, 6123.30, 15.34,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(16092, 552.35, 6112.14, 10.52,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 551.43, 6112.27, 18.00,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 551.41, 6109.29, 18.00,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 551.39, 6115.27, 18.00,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3887, 8916.37, 5968.67, 18.01,   0.00, 0.00, 55.00, -1, -1, -1, 500);
	CreateDynamicObject(3866, 9001.87, 5975.59, 17.33,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3887, 8958.63, 5977.18, 18.01,   0.00, 0.00, -4.00, -1, -1, -1, 500);
	CreateDynamicObject(3866, 9017.15, 5953.28, 17.33,   0.00, 0.00, -47.00, -1, -1, -1, 500);
	CreateDynamicObject(11441, 8983.54, 5953.74, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11441, 8988.72, 5947.93, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11441, 8995.52, 5947.65, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11441, 9002.94, 5947.18, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11441, 8999.68, 5940.49, 9.98,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(11441, 8992.63, 5940.48, 9.98,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(11447, 8974.47, 5945.66, 9.74,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11440, 8977.36, 5983.60, 9.42,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11445, 8977.90, 5970.59, 10.19,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11445, 8971.43, 5957.79, 10.19,   0.00, 0.00, 142.00, -1, -1, -1, 500);
	CreateDynamicObject(11442, 8994.67, 5957.22, 10.06,   0.00, 0.00, 91.00, -1, -1, -1, 500);
	CreateDynamicObject(11442, 9026.99, 5980.87, 10.06,   0.00, 0.00, 91.00, -1, -1, -1, 500);
	CreateDynamicObject(11442, 9000.15, 5996.64, 10.06,   0.00, 0.00, 18.00, -1, -1, -1, 500);
	CreateDynamicObject(11442, 9016.43, 5994.72, 10.06,   0.00, 0.00, 18.00, -1, -1, -1, 500);
	CreateDynamicObject(11442, 8954.58, 6050.85, 10.08,   0.00, 0.00, 18.00, -1, -1, -1, 500);
	CreateDynamicObject(11442, 8955.64, 6069.64, 10.08,   0.00, 0.00, 18.00, -1, -1, -1, 500);
	CreateDynamicObject(11443, 8935.79, 6087.48, 10.31,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11443, 8937.61, 6109.86, 10.31,   0.00, 0.00, -33.00, -1, -1, -1, 500);
	CreateDynamicObject(11459, 8979.27, 6120.80, 10.09,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11459, 8974.06, 6114.04, 10.09,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11459, 8967.62, 6106.04, 10.09,   0.00, 0.00, -84.00, -1, -1, -1, 500);
	CreateDynamicObject(3866, 9033.28, 6058.26, 17.33,   0.00, 0.00, -47.00, -1, -1, -1, 500);
	CreateDynamicObject(3887, 9058.01, 6088.37, 18.01,   0.00, 0.00, -4.00, -1, -1, -1, 500);
	CreateDynamicObject(11442, 9069.14, 6099.99, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11442, 9073.26, 6085.56, 9.95,   0.00, 0.00, 76.00, -1, -1, -1, 500);
	CreateDynamicObject(11442, 9073.80, 6067.75, 9.95,   0.00, 0.00, 76.00, -1, -1, -1, 500);
	CreateDynamicObject(3887, 9129.93, 6130.91, 18.02,   0.00, 0.00, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(3887, 9129.15, 6109.42, 18.02,   0.00, 0.00, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(3887, 9130.44, 6083.47, 18.02,   0.00, 0.00, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(3887, 9128.88, 6065.44, 18.02,   0.00, 0.00, 105.00, -1, -1, -1, 500);
	CreateDynamicObject(11457, 8898.37, 5959.80, 9.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11458, 8906.63, 5943.96, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11446, 9078.37, 5955.12, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11441, 9097.63, 5946.93, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11440, 9110.10, 5951.43, 9.30,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11447, 9129.00, 5949.92, 9.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11446, 9080.70, 5937.37, 9.99,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11442, 9103.19, 5926.31, 9.93,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11443, 9118.03, 5933.35, 9.94,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11459, 9130.68, 5931.47, 9.94,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11458, 9084.83, 5920.94, 9.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11457, 9118.68, 5913.27, 9.34,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3887, 9267.18, 5990.23, 17.44,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3866, 9203.29, 6002.68, 17.45,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3866, 9221.96, 5986.51, 17.45,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3866, 9237.50, 5966.17, 17.45,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11440, 9234.18, 6006.80, 10.05,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3887, 9245.01, 6108.50, 18.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3887, 9263.69, 6097.18, 18.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11442, 9190.06, 6114.13, 16.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11446, 9199.19, 6104.82, 16.62,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11446, 9194.74, 6102.79, 16.62,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11446, 9199.53, 6096.83, 16.62,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11446, 9195.56, 6094.74, 16.62,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11446, 9199.91, 6088.63, 16.62,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(11446, 9183.25, 6097.00, 16.62,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 9075.19, 5951.47, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 9141.05, 5950.46, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 9106.54, 5907.88, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 9028.84, 5967.09, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 8959.02, 5945.91, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 9188.55, 5970.32, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 9197.40, 6054.48, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 8906.20, 6000.81, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 9251.10, 5951.45, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1290, 9245.20, 6009.75, 15.43,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, 201.68, 5867.21, 12.17,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, 181.68, 5867.21, 12.15,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, 161.68, 5867.21, 12.13,   0.00, 0.00, 0.00, -1, -1, -1, 500);
//End остров 2, 3
//Start остров 4
	ObjGam[19] = CreateObject(4847, 12051.65, 5829.23, 0.81,   0.00, -0.06, 0.00);

	CreateDynamicObject(3992, 12231.09, 5978.46, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4158, 12085.06, 6028.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4160, 12162.16, 5954.35, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3993, 12195.46, 6098.43, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4207, 12079.35, 5897.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4012, 12252.71, 5978.48, 10.16,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3983, 12198.02, 5985.39, 12.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4027, 12258.6, 6058.42, 11.90,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3987, 12197.59, 6058.41, 10.35,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4033, 12197.41, 6117.64, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3984, 12258.59, 6113.41, 20.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3989, 12121.53, 6098.03, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3975, 12053.99, 6084.27, 10.60,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4029, 12105.09, 6004.69, 5.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4122, 12104.99, 5948.5, 11.06,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4209, 12045.48, 5958.48, 9.86,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3997, 11954.89, 5958.48, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4165, 11945.07, 5888.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4163, 11944.85, 6028.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4150, 12007.58, 6098.42, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4148, 11902.56, 6098.45, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4186, 11955.08, 6067.59, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3985, 11955.11, 6129.24, 9.46,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(4030, 12011.81, 6017.07, 4.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3981, 11935.76, 6034.77, 6.76,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(967, 12020.2, 6136.82, 9.90,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 12059.66, 6116.02, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12116.54, 6050.17, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12116.54, 6043.06, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12107.68, 6043.03, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12107.69, 6050.14, 9.97,   90.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12271.24, 6043.65, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12271.25, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12264.11, 6052.47, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12264.11, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12256.97, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12257, 6052.45, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12249.81, 6052.42, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12249.8, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12242.67, 6043.64, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12242.67, 6052.43, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12235.53, 6052.44, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12211.53, 6091.19, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(969, 12174.58, 6078.81, 14.59,   0.00, 0.00, 90.52, -1, -1, -1, 500);
	CreateDynamicObject(969, 12174.49, 6087.62, 14.59,   0.00, 0.00, 90.18, -1, -1, -1, 500);
	CreateDynamicObject(969, 12174.47, 6096.41, 14.59,   0.00, 0.00, 90.04, -1, -1, -1, 500);
	CreateDynamicObject(982, 12194.24, 6122.93, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8059, 12191.95, 6102.38, 13.36,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 12210.25, 6122.92, 16.72,   0.00, 90.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12235.53, 6043.66, 10.02,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12211.54, 6099.98, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12211.52, 6108.79, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12211.51, 6117.58, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(971, 12211.5, 6126.38, 16.70,   90.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8069, 12027.63, 6070.93, 6.67,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8069, 12027.64, 6119.69, 6.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12154.21, 5994.18, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, 12154.21, 5982.29, 0.49,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, 12154.33, 5982.7, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, 12154.33, 5994.68, 4.42,   0.00, 0.00, -90.22, -1, -1, -1, 500);
	CreateDynamicObject(987, 11885.93, 6045.43, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 500);
	CreateDynamicObject(987, 11884.73, 6033.86, 3.31,   0.00, 0.00, 84.04, -1, -1, -1, 500);
//	CreateDynamicObject(4847, 12051.65, 5829.23, 0.81,   0.00, -0.06, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12227.49, 5824.06, 2.31,   0.00, 11.80, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12227.66, 5835.81, 4.56,   0.00, 11.80, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12227.78, 5847.52, 6.84,   0.00, 11.80, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12227.97, 5859.02, 9.98,   0.00, 11.80, -90.78, -1, -1, -1, 500);
	CreateDynamicObject(987, 12228.05, 5869.72, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 500);
	CreateDynamicObject(987, 12228.12, 5878.82, 9.98,   0.00, 0.00, -90.78, -1, -1, -1, 500);
	CreateDynamicObject(987, 12216.18, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12204.29, 5878.88, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12192.36, 5878.87, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12180.47, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12168.53, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12156.59, 5878.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12144.65, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12132.71, 5878.84, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12150.3, 5881.67, 9.95,   0.00, 0.00, 193.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12160.14, 5888.48, 9.95,   0.00, 0.00, 214.46, -1, -1, -1, 500);
	CreateDynamicObject(987, 12167.98, 5897.49, 9.95,   0.00, 0.00, 229.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12173, 5908.34, 9.95,   0.00, 0.00, 245.24, -1, -1, -1, 500);
	CreateDynamicObject(987, 12175.04, 5920.11, 9.95,   0.00, 0.00, 260.08, -1, -1, -1, 500);
	CreateDynamicObject(987, 12175.11, 5932.06, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 500);
	CreateDynamicObject(987, 12175.16, 5939.12, 9.95,   0.00, 0.00, 269.58, -1, -1, -1, 500);
	CreateDynamicObject(987, 12187.04, 5939.01, 9.95,   0.00, 0.00, 179.60, -1, -1, -1, 500);
	CreateDynamicObject(16192, 12378.36, 5963.4, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 12378.32, 6007.07, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 12378.06, 6050.62, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 12377.61, 6099.31, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 12376.86, 6141.03, 20.68,   0.00, 0.00, 119.98, -1, -1, -1, 500);
	CreateDynamicObject(987, 12198.9, 5938.09, 9.95,   0.00, 0.00, 175.30, -1, -1, -1, 500);
	CreateDynamicObject(987, 12210.37, 5934.8, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12221.82, 5931.52, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12233.29, 5928.23, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12244.75, 5924.95, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12256.22, 5921.67, 9.95,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12267.8, 5918.91, 9.95,   0.00, 0.00, 166.46, -1, -1, -1, 500);
	CreateDynamicObject(987, 12279.75, 5918.79, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 500);
	CreateDynamicObject(987, 12291.68, 5918.67, 9.95,   0.00, 0.00, 179.38, -1, -1, -1, 500);
	CreateDynamicObject(987, 12283.47, 6137.52, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12271.54, 6137.95, 9.95,   0.00, 0.00, -2.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12259.81, 6140.07, 9.95,   0.00, 0.00, -10.20, -1, -1, -1, 500);
	CreateDynamicObject(987, 12248.19, 6142.76, 10.58,   0.00, 0.00, -13.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12236.72, 6146.02, 10.58,   0.00, 0.00, -16.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12225.24, 6148.68, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12213.78, 6151.57, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12202.27, 6154.41, 9.95,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12190.49, 6156.24, 9.95,   0.00, 0.00, -9.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12178.63, 6157.7, 9.95,   0.00, 0.00, -7.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12166.95, 6157.9, 9.95,   0.00, 0.00, -1.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12154.98, 6157.9, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12143.04, 6157.89, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 12131.14, 6157.85, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 12088.71, 6248.71, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 12045.48, 6248.33, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11994.95, 6249.26, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11951.5, 6253.08, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11908.16, 6253.39, 20.68,   0.00, 0.00, 209.98, -1, -1, -1, 500);
	CreateDynamicObject(987, 11913.29, 6158.11, 9.95,   0.00, 0.00, 40.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11895.39, 6158.16, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11895.32, 6146.23, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11895.34, 6134.28, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11895.35, 6122.33, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11895.34, 6110.4, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11895.36, 6098.48, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11895.37, 6086.54, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11895.37, 6074.61, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11895.37, 6062.68, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11895.39, 6050.73, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11895.41, 6044.74, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11895.4, 6037.71, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11883.5, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11875.04, 6037.83, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11875.01, 6025.78, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11875.03, 6013.85, 9.95,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11785.64, 5968.53, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11785.58, 5927.13, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11784.52, 5881.79, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11785.72, 5839.99, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11783.89, 5785.98, 20.68,   0.00, 0.00, 299.98, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11687.25, 5719.04, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11685.17, 5793.01, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11687.48, 5876.32, 20.68,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11834.75, 6364, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 11937.62, 6357.34, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 12025.5, 6349.79, 20.68,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 12495.88, 6204.87, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 12490.88, 6111.73, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(16192, 12497.95, 6026.13, 20.68,   0.00, 0.00, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.54, 5838.3, 3.72,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.69, 5838.3, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.85, 5838.28, 3.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.44, 5838.17, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.6, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.76, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.94, 5838.16, 3.69,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.36, 5838.03, 3.68,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.52, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.69, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.85, 5838.02, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12202.01, 5838.01, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.43, 5837.88, 3.65,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.59, 5837.89, 3.62,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.75, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.91, 5837.87, 3.63,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.5, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.67, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3461, 12201.84, 5837.74, 3.61,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, 11901.35, 6158.14, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(703, 12025.13, 6152.4, 9.44,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(703, 12038.44, 6150.19, 9.44,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(703, 12053.75, 6147.84, 9.44,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(703, 12072.64, 6147.96, 9.44,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(705, 12110.89, 6144.45, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(705, 12143.09, 6146.13, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(705, 12144.95, 6118.43, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(705, 12116.22, 6116.15, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(705, 12131.46, 6090.13, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(705, 12131.88, 6058.69, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(705, 12059.03, 6107.35, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(705, 12059.47, 6081.5, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(705, 12059.35, 6056.35, 9.47,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(706, 11936.41, 6061.59, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(706, 11933.31, 6139.78, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(706, 11977.74, 6140.69, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(706, 11955.74, 6095.57, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(706, 11973.36, 6063.77, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(706, 12030.15, 6065.58, 9.35,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(706, 12031.78, 6112.71, 9.35,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(706, 12187.28, 6055.53, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(706, 12209.71, 6060.23, 10.17,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(706, 12187.82, 6131, 16.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(706, 12208.41, 6131.12, 16.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(707, 12250.5, 6124.25, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(707, 12274.78, 6092.07, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(707, 12250.78, 6064.52, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(707, 12281.65, 6064.12, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(707, 12270.3, 6000.62, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(707, 12269.45, 5960.08, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(707, 12237.15, 5999.12, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(707, 12237.65, 5964.11, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(707, 12200.55, 6001.55, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(707, 12199.34, 5970, 9.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(709, 12135.27, 5952.64, 8.97,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(709, 12080.29, 5961.63, 8.97,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(709, 12132.93, 5916.36, 8.97,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(709, 12081.93, 5918.06, 8.97,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(708, 12029.98, 6001.59, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(708, 11995.25, 6014.15, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(708, 11920.16, 6013.88, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(708, 11880.64, 6001.56, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(708, 11881.71, 5945.24, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(708, 11894.25, 5929.61, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(708, 11931.26, 5929.25, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(708, 11978.87, 5929.68, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(708, 12020.11, 5929.16, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(708, 12029.53, 5944.62, 9.98,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 12012.35, 5943.98, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 11989.28, 5944.51, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 11965.95, 5944.71, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 11944.78, 5944.85, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 11919.37, 5944.2, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 11894.31, 5943.07, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 12014.32, 5998.32, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 11988.25, 5997.77, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 11924.61, 5997.08, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 11893.05, 5997.61, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 11884.43, 5877.35, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 11923.63, 5876.62, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 11960.42, 5876.3, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 11996.99, 5876.48, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 12028.68, 5876.17, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 12063.91, 5876.22, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 12105.52, 5877.11, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(621, 12146.61, 5876.33, 8.81,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(619, 11885.24, 5866.35, 9.23,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(619, 11885.33, 5850.32, 6.32,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(619, 11881.57, 5834.21, 1.94,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(619, 11894.6, 5859.06, 8.71,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(619, 11891.22, 5843.83, 3.65,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(619, 11888.68, 5827.69, 0.71,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(619, 12217.25, 5864.45, 8.95,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(619, 12219.31, 5846.12, 5.18,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(619, 12218.18, 5829.12, 1.61,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(7916, 12172.89, 6116.28, 11.19,   0.00, 0.00, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(7916, 12174.7, 6110.66, 11.19,   0.00, 0.00, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(7916, 12218.63, 6098.76, 11.33,   0.00, 0.00, 84.00, -1, -1, -1, 500);
	CreateDynamicObject(7916, 12121.88, 5999.81, 3.19,   0.00, 0.00, -25.00, -1, -1, -1, 500);
	CreateDynamicObject(7916, 12056.86, 6011.86, 2.50,   0.00, 0.00, -11.00, -1, -1, -1, 500);
	CreateDynamicObject(7916, 12137.31, 5979.23, 3.27,   0.00, 0.00, 164.00, -1, -1, -1, 500);
	CreateDynamicObject(7916, 12091.58, 5990.37, 3.27,   0.00, 0.00, 156.00, -1, -1, -1, 500);
	CreateDynamicObject(9833, 12258.14, 6105.03, 12.86,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(9833, 12260.52, 6065.8, 12.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(9833, 12250.93, 5982.11, 12.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(9833, 12214.9, 5984.72, 12.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(9833, 12197.39, 6056.41, 12.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(9833, 12132.64, 6073.65, 12.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(9833, 12130.18, 6131.08, 12.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(9833, 12103.57, 5935.94, 12.41,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(9833, 12028.89, 5988.71, 12.41,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(9833, 12028.93, 5952.11, 12.41,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12237.36, 6109.15, 11.47,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12268.34, 6119.75, 11.47,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12253.18, 6084.4, 11.47,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12282.95, 6135.09, 10.45,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12268.77, 6047.59, 10.01,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12256.51, 6047.79, 10.01,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12242.81, 6047.82, 10.01,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12191.44, 6102.19, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12181.16, 6102.24, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12181.04, 6090.59, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12191.38, 6090.35, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12202.25, 6090.15, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12202.25, 6102.08, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12196.55, 6114.82, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12184.92, 6114.34, 16.74,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12194.94, 5988.49, 10.10,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12216.75, 5966.57, 10.10,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12216.55, 5999.75, 10.10,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12135.62, 5934.37, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12108.97, 5917.27, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12079.76, 5938.9, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12110.03, 5957.04, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12142.29, 6101.74, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12131.24, 6101.96, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12121.09, 6102.03, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12059.69, 6069.42, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12059.54, 6095.36, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12063.89, 6136.81, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12053.19, 6136.8, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12075.35, 6136.62, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12021.62, 6103.05, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12030.03, 6133.12, 10.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11951.35, 6126.88, 10.41,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11962.19, 6120.84, 10.41,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11951.23, 6115.28, 10.41,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11954.39, 6047.42, 10.41,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11954.57, 6062.5, 10.41,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11954.62, 6079.05, 10.41,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11900.15, 5960.11, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11900.45, 5981.25, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11916.7, 5970.84, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11928.31, 5960.62, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11929.74, 5981.9, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11942.77, 5971.6, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11955.28, 5981.92, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11955.27, 5961.21, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11967.71, 5971.8, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11978.3, 5961.15, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11978.81, 5982.01, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 11991.07, 5972.03, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12002.58, 5960.99, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12002.86, 5982.2, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3515, 12014.06, 5972.05, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19124, 12258.5, 6105.08, 11.31,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19124, 12260.91, 6065.79, 10.31,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19124, 12251.51, 5981.98, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19124, 12215.31, 5984.8, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19124, 12197.79, 6056.39, 10.24,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19124, 12130.7, 6131.01, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19124, 12029.27, 5988.78, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19124, 12029.47, 5952.05, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19124, 12104.04, 5935.98, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19124, 12133.17, 6073.63, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12278.71, 6038.55, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12278.4, 6018.31, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12264.88, 6038.61, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12265.46, 6018.32, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12250.52, 6038.55, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12251.02, 6018.34, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12236.19, 6018.23, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12219.25, 6018.37, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12235.37, 6038.77, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12198.22, 6018.26, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12175.29, 6018.19, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12215.76, 6038.92, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12198.26, 6038.64, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12175.42, 6038.62, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12154.89, 6038.65, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12139.85, 6038.62, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12123.87, 6038.61, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12101.19, 6038.52, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12078.1, 6038.57, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12061.13, 6038.74, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12040.84, 6038.66, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12015.48, 6038.65, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11993.8, 6039.6, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11975.96, 6039.68, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11962.93, 6039.64, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11947.5, 6039.61, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11934.15, 6039.59, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11916.37, 6039.61, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11895.2, 6037.29, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11875.59, 6037.15, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12154.9, 6018.29, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12136.41, 6018.31, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12119.83, 6018.3, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12104.03, 6018.31, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12085.7, 6015.32, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12054.83, 6019.29, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12034.9, 6018.29, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12018.32, 6018.33, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12003.11, 6018.28, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11986.42, 6018.29, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11970.5, 6018.3, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11951.23, 6018.25, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11926.52, 6018.27, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11904.52, 6018.28, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11876.32, 6018.3, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12130.64, 5898.65, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12108.24, 5898.74, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12129.21, 5878.73, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12104.43, 5878.64, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12079.87, 5878.66, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12083.04, 5898.71, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12055.41, 5898.69, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12051.16, 5878.19, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12015.3, 5878.12, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12034.91, 5898.66, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 12012.43, 5898.7, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11989.31, 5878.17, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11982.56, 5898.74, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11963.9, 5878.23, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11951.36, 5898.59, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11930.28, 5878.21, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11919.66, 5898.75, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11891.2, 5878.22, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19122, 11877.53, 5898.69, 10.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12230.52, 6141.92, 11.15,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12219.54, 6116.33, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12230.31, 6100.74, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12219.7, 6080.28, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12230.53, 6073.14, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12230.4, 6052.73, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12219.76, 6044.15, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12170.39, 6155.51, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12159.72, 6131.74, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12170.46, 6118.68, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12159.72, 6100.71, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12170.37, 6084.48, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12159.68, 6073.03, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12170.51, 6052.38, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12159.69, 6040.71, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12170.48, 6015.86, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12159.72, 5995.97, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12170.49, 5975.79, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12159.73, 5961.37, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12170.43, 5936.9, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12158.96, 5914.96, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12175.17, 5939.59, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12175.23, 5958.1, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12190.99, 5939.29, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12193.19, 5958.1, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12211.75, 5953.53, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12208.31, 5935.93, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12224.49, 5931.31, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12229.13, 5948.99, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12246.76, 5944.33, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12244.11, 5925.66, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12262.14, 5920.81, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12266.26, 5939.05, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12286.19, 5938.13, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19126, 12286.31, 5919.38, 10.28,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12099.44, 6155.9, 10.45,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12088.26, 6131.46, 10.45,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12099.66, 6114.26, 10.45,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12079.41, 6098.18, 10.34,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12079.44, 6072.15, 10.34,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12108.38, 6086.47, 10.45,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12108.72, 6063.95, 10.45,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12079.41, 6047.71, 10.34,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12050.57, 6015.25, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12039.68, 5990.52, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12050.56, 5973.26, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12039.65, 5954.33, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12050.54, 5939.38, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12039.72, 5917, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12050.45, 5900.26, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 11910.3, 6156.57, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 11899.5, 6132.78, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 11910.21, 6118.39, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 11899.52, 6096.5, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 11910.2, 6083.09, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 11899.51, 6064.47, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 11910.14, 6052.56, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12010.51, 6156.4, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 11999.83, 6137.31, 10.06,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12010.45, 6121.9, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 11999.77, 6107.04, 10.06,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12013.19, 6097.07, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 11999.8, 6081.58, 10.06,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12010.45, 6067.58, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 11999.86, 6054.69, 10.06,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12010.47, 6038.79, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 11899.47, 6038.44, 10.22,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12146.17, 5978.24, 0.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12128.24, 5982.54, 0.68,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12130.72, 5996.16, 0.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12148.73, 5991.88, 0.68,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12099.51, 5989.27, 0.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12114.11, 6001.51, 0.68,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12081.99, 5993.66, 0.68,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12059.63, 5999.68, 0.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19125, 12092.46, 6005.05, 0.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19127, 12074.8, 6009.29, 0.68,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12262.24, 6047.7, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12249.34, 6047.81, 10.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12206.44, 5994.26, 10.24,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12205.09, 5978.1, 10.24,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12002.22, 5971.92, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11978.45, 5971.77, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11990.19, 5960.59, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11990.35, 5982, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11966.98, 5981.6, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11966.66, 5960.84, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11954.3, 5971.51, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11942.31, 5981.61, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11941.91, 5960.85, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11928.54, 5971.15, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11916.26, 5981.49, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11915.3, 5960.23, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11900.03, 5971.09, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11954.49, 6054.94, 10.72,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11954.91, 6070.8, 10.72,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11959.38, 6114.71, 10.72,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11946.85, 6121.29, 10.72,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11959.52, 6128.54, 10.72,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 11955.44, 6121.61, 10.72,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12028.4, 6096.13, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12028.71, 6109.92, 10.37,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12025.08, 6133.02, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12058.38, 6136.77, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12069.74, 6136.71, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12059.66, 6062.83, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12059.63, 6075.18, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12059.66, 6089.06, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12059.47, 6101.55, 10.38,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12125.98, 6101.99, 10.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12137.05, 6101.82, 10.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12186.09, 6096.49, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12197.55, 6096.37, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(19123, 12191.32, 6110.28, 16.96,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12135.94, 5938.1, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12135.3, 5930.72, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12114.04, 5956.42, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12106, 5957.71, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12079.78, 5943.12, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12080, 5935.11, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12105.28, 5917.45, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12112.79, 5917.08, 10.27,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12240.38, 6107.57, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12234.23, 6107.16, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12237.35, 6112.56, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12253.26, 6090.38, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12248.29, 6081.26, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12258.54, 6081.61, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12268.26, 6116.29, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12271.18, 6121.49, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12265.29, 6121.51, 11.26,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3525, 12279.82, 6133.07, 10.35,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, 12201.68, 5867.21, 12.17,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, 12181.68, 5867.21, 12.15,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(14537, 12161.68, 5867.21, 12.13,   0.00, 0.00, 0.00, -1, -1, -1, 500);
//End остров 4
//Start дрифт-трасса 1
	CreateDynamicObject(8171, -1396.80, 355.06, 6.15,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, -1258.87, 434.54, 6.15,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, -1397.17, 434.53, 6.15,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, -1662.75, 260.52, 6.92,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, -1539.75, 260.42, 6.93,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, -1476.80, 260.66, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, -1445.01, 260.25, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1473.24, 260.44, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1466.84, 260.40, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1460.44, 260.43, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1454.05, 260.43, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1447.61, 260.42, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1444.79, 263.75, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1444.77, 270.16, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1444.75, 276.54, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1444.74, 282.90, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1444.72, 289.20, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1431.92, 292.39, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1406.31, 292.39, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(711, -1461.22, 260.42, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, -1444.84, 278.10, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1339.76, 294.73, 6.85,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1334.99, 299.30, 6.85,   0.00, 0.00, 132.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1330.27, 303.79, 6.85,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1329.58, 360.49, 6.85,   0.00, 0.00, 28.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -1389.28, 370.39, 5.84,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -1430.31, 370.37, 5.84,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -1419.43, 411.59, 5.84,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -1378.63, 411.58, 5.84,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1470.17, 416.31, 6.92,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1469.77, 425.58, 6.92,   0.00, 0.00, -95.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1467.01, 434.32, 6.92,   0.00, 0.00, -120.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1460.06, 439.35, 6.92,   0.00, 0.00, -168.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1471.17, 401.29, 6.92,   0.00, 0.00, -96.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1471.66, 391.97, 6.92,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1471.41, 382.60, 6.92,   0.00, 0.00, -87.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1470.65, 373.34, 6.92,   0.00, 0.00, -84.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1469.75, 364.02, 6.92,   0.00, 0.00, -85.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1467.59, 355.05, 6.92,   0.00, 0.00, -68.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1462.69, 347.32, 6.92,   0.00, 0.00, -47.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1455.36, 341.88, 6.92,   0.00, 0.00, -25.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1459.42, 343.96, 6.11,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1465.74, 350.90, 6.11,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1469.24, 359.62, 6.11,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1469.69, 370.17, 6.11,   0.00, 0.00, -0.06, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1462.28, 370.25, 6.11,   0.00, 0.00, -0.06, -1, -1, -1, 500);
	CreateDynamicObject(3877, -1468.58, 370.36, 10.63,   0.00, 84.00, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(3877, -1463.22, 370.26, 10.63,   0.00, 84.00, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(3877, -1465.94, 370.35, 10.63,   0.00, 84.00, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1224.75, 438.44, 6.83,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1224.75, 458.14, 6.83,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1324.98, 434.09, 6.78,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3877, -1338.09, 434.07, 7.83,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3877, -1338.09, 435.52, 7.83,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(3877, -1338.09, 436.96, 7.83,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1299.37, 434.09, 6.78,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1273.76, 434.10, 6.78,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1257.73, 434.14, 6.81,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1254.49, 434.17, 6.81,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1232.35, 478.79, 6.83,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, -1443.91, 481.75, 7.59,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1505.07, 461.16, 6.78,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1531.55, 461.07, 6.12,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1537.61, 449.77, 6.86,   0.00, 0.00, 153.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1543.48, 438.15, 6.12,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1558.39, 416.87, 6.12,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1637.13, 352.16, 6.78,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1637.18, 326.58, 6.78,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1637.20, 300.97, 6.78,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1637.13, 352.16, 8.02,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1637.13, 352.16, 9.29,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1637.18, 326.58, 8.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1637.18, 326.58, 9.32,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1637.20, 300.97, 8.01,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1637.20, 300.97, 9.34,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1601.17, 306.99, 6.86,   0.00, 0.00, 38.00, -1, -1, -1, 500);
	CreateDynamicObject(3749, -1639.07, 278.48, 11.46,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -1637.36, 260.74, 5.78,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3281, -1562.66, 281.34, 7.03,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(3281, -1562.67, 262.56, 7.03,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(711, -1469.22, 260.42, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, -1453.12, 260.35, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, -1444.84, 269.00, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, -1444.84, 287.51, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1250.67, 434.53, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1251.19, 434.16, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1250.66, 433.84, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(987, -1721.57, 260.64, 6.18,   0.00, 0.00, 156.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, -1318.00, 481.74, 7.59,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1582.49, 283.50, 6.16,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1590.67, 293.55, 6.86,   0.00, 0.00, 38.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1566.38, 283.23, 6.86,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1572.76, 283.23, 6.86,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1579.17, 283.23, 6.86,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1528.17, 461.24, 6.86,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1550.95, 427.55, 6.86,   0.00, 0.00, 145.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1566.80, 406.91, 6.86,   0.00, 0.00, 140.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1575.13, 396.94, 6.12,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1583.66, 387.16, 6.86,   0.00, 0.00, 139.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1599.41, 369.05, 6.86,   0.00, 0.00, 139.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1607.94, 359.51, 6.12,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1608.59, 359.51, 6.12,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1325.31, 416.02, 6.83,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1312.27, 416.00, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1299.34, 416.02, 6.83,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1286.29, 416.00, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1273.28, 416.02, 6.83,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1247.22, 416.02, 6.83,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1260.23, 416.01, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1231.70, 418.45, 6.83,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1234.14, 416.02, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1227.18, 422.97, 6.83,   0.00, 0.00, 135.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1224.77, 425.39, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1224.74, 471.07, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1247.60, 481.37, 6.83,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1234.59, 481.30, 6.14,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1227.83, 474.28, 6.83,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1223.33, 469.75, 6.83,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1380.73, 292.39, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1355.13, 292.39, 6.85,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1342.22, 292.36, 6.18,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1328.02, 318.87, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, -1328.02, 344.46, 6.85,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1328.06, 357.48, 6.18,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1331.24, 363.46, 6.18,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, -1334.17, 365.22, 6.85,   0.00, 0.00, 60.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1337.76, 366.32, 6.18,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1337.07, 366.32, 6.18,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1336.39, 366.32, 6.18,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1460.74, 401.32, 6.92,   0.00, 0.00, 96.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1462.10, 405.73, 6.11,   0.00, 0.00, -0.06, -1, -1, -1, 500);
	CreateDynamicObject(979, -1460.26, 391.98, 6.92,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(979, -1460.75, 382.63, 6.92,   0.00, 0.00, 84.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1461.32, 377.69, 6.11,   0.00, 0.00, -0.06, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1461.42, 377.02, 6.11,   0.00, 0.00, -0.06, -1, -1, -1, 500);
	CreateDynamicObject(1237, -1461.58, 376.37, 6.11,   0.00, 0.00, -0.06, -1, -1, -1, 500);
	CreateDynamicObject(711, -1332.62, 301.54, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, -1337.57, 297.12, 11.94,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16092, -1561.91, 271.96, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, -1562.92, 272.03, 14.20,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, -1562.92, 269.01, 14.20,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, -1562.92, 275.07, 14.20,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(705, -1205.74, 424.77, 5.72,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(705, -1205.74, 443.93, 5.72,   0.00, 0.00, 0.00, -1, -1, -1, 500);
//End дрифт-трасса 1
//Start дрифт-трасса 2
	ObjGam[20] = CreateObject(8343, 6264.50977, -3313.54004, 10.63000,   0.00000, 0.00000, -133.21001);

	CreateDynamicObject(8171, 6025.79004, -3725.76001, 10.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6049.97998, -3620.54004, 10.65000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6126.75000, -3583.53003, 10.64400,   0.00000, 0.00000, 163.28999, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6162.93018, -3593.77002, 10.63000,   0.00000, 0.00000, 163.28999, -1, -1, -1, 500);
	CreateDynamicObject(8171, 6172.16992, -3520.12988, 10.68000,   0.00000, 0.00000, -18.91000, -1, -1, -1, 500);
	CreateDynamicObject(8171, 6214.08984, -3516.34009, 10.64000,   0.00000, 0.00000, -18.91000, -1, -1, -1, 500);
	CreateDynamicObject(8171, 6214.47998, -3396.88989, 10.67400,   0.00000, 0.00000, -18.91000, -1, -1, -1, 500);
	CreateDynamicObject(8171, 6250.56982, -3409.61011, 10.63500,   0.00000, 0.00000, -18.91000, -1, -1, -1, 500);
//	CreateDynamicObject(8343, 6264.50977, -3313.54004, 10.63000,   0.00000, 0.00000, -133.21001, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6240.49023, -3337.51001, 10.62800,   0.00000, 0.00000, -137.50999, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6227.29980, -3347.10010, 10.62200,   0.00000, 0.00000, -137.50999, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6188.49023, -3300.86011, 10.62800,   0.00000, 0.00000, -429.72000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6220.72021, -3278.52002, 10.60400,   0.00000, 0.00000, -425.42001, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6218.14014, -3266.27002, 10.58000,   0.00000, 0.00000, -425.42001, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6192.77002, -3274.03003, 10.61000,   0.00000, 0.00000, -408.23001, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6114.91016, -3282.85010, 10.68000,   0.00000, 0.00000, -945.38000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6040.39990, -3273.68994, 10.71000,   0.00000, 0.00000, -777.78998, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6002.62012, -3292.81006, 10.49000,   0.00000, 0.00000, -763.17999, -1, -1, -1, 500);
	CreateDynamicObject(8171, 5948.37988, -3316.33008, 10.71000,   0.00000, 0.00000, -36.96000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5921.60986, -3383.20996, 10.71400,   0.00000, 0.00000, -700.44000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5896.52002, -3455.13989, 10.72000,   0.00000, 0.00000, -880.91998, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5842.72998, -3520.36011, 10.71400,   0.00000, 0.00000, -713.33002, -1, -1, -1, 500);
	CreateDynamicObject(8171, 5823.08984, -3628.92993, 10.75000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5841.72998, -3700.50000, 10.75000,   0.00000, 0.00000, -670.35999, -1, -1, -1, 500);
	CreateDynamicObject(8171, 5906.10986, -3790.68994, 10.75000,   0.00000, 0.00000, 47.27000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5959.06982, -3817.51001, 10.62000,   0.00000, 0.00000, -632.53998, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6002.29980, -3818.30005, 10.63000,   0.00000, 0.00000, -538.87000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5952.66016, -3783.12988, 10.07000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5952.66992, -3670.72998, 9.97000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5952.74023, -3558.53003, 10.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5952.95020, -3446.67993, 10.08000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5953.04980, -3338.53003, 10.04000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5953.75000, -3226.61011, 10.19000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6100.68018, -3344.53003, 10.02000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6112.97021, -3452.96997, 9.98000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6116.95020, -3542.33008, 9.96000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6111.56982, -3658.67993, 9.87000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6096.56006, -3741.80005, 9.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6104.49023, -3783.62988, 10.01000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6027.47998, -3588.86011, 11.49000,   0.00000, 0.00000, 223.45000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6034.47998, -3583.37988, 11.45000,   0.00000, 0.00000, 213.14000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6040.85986, -3579.18994, 11.47000,   0.00000, 0.00000, 213.14000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6046.06006, -3577.05005, 11.47000,   0.00000, 0.00000, 200.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6054.70996, -3574.39990, 11.45000,   0.00000, 0.00000, 194.23000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6063.04004, -3572.98999, 11.47000,   0.00000, 0.00000, 185.64000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6071.16992, -3572.66992, 11.49000,   0.00000, 0.00000, 178.75999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6080.02979, -3573.52002, 11.49000,   0.00000, 0.00000, 171.03000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6086.02002, -3574.50000, 11.49000,   0.00000, 0.00000, 171.03000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6093.52979, -3578.59009, 11.49000,   0.00000, 0.00000, 132.35001, -1, -1, -1, 500);
	CreateDynamicObject(978, 6100.22021, -3583.70996, 11.49000,   0.00000, 0.00000, 152.98000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6108.20020, -3586.62988, 11.49000,   0.00000, 0.00000, 165.87000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6117.10986, -3587.43994, 11.49000,   0.00000, 0.00000, 183.06000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6125.08984, -3585.15991, 11.49000,   0.00000, 0.00000, 208.84000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6132.06982, -3579.81006, 11.49000,   0.00000, 0.00000, 226.03000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6136.37012, -3572.63989, 11.52000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6138.95020, -3564.79004, 11.52000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6141.49023, -3557.05005, 11.52000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6144.14990, -3548.88989, 11.52000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6161.45996, -3503.06006, 14.23000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6190.43994, -3417.34009, 14.23000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 500);
	CreateDynamicObject(5001, 6185.87012, -3360.02002, 13.51000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 5838.77002, -3619.76001, 13.75000,   0.00000, 0.00000, 90.24000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 5807.45020, -3623.46997, 13.37000,   0.00000, 0.00000, 90.24000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 5903.14990, -3766.83008, 13.93000,   0.00000, 0.00000, 137.50999, -1, -1, -1, 500);
	CreateDynamicObject(5005, 5885.10010, -3791.87988, 13.93000,   0.00000, 0.00000, 137.50999, -1, -1, -1, 500);
	CreateDynamicObject(5001, 5956.60010, -3827.01001, 13.40000,   0.00000, 0.00000, -42.97000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6040.60986, -3731.46997, 14.20000,   0.00000, 0.00000, 90.24000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6010.14990, -3731.18994, 13.86000,   0.00000, 0.00000, 90.24000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6179.04980, -3296.29004, 11.47000,   0.00000, 0.00000, 189.08000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6170.64014, -3298.41992, 11.37000,   0.00000, 0.00000, 197.67000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6163.39990, -3300.84009, 11.47000,   0.00000, 0.00000, 200.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6155.56982, -3303.68994, 11.47000,   0.00000, 0.00000, 200.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6149.85010, -3305.78003, 11.47000,   0.00000, 0.00000, 200.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6141.25977, -3308.92993, 11.42000,   0.00000, 0.00000, 200.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6133.54004, -3311.75000, 11.42000,   0.00000, 0.00000, 200.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6126.29980, -3313.43994, 11.46000,   0.00000, 0.00000, 187.36000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6120.00977, -3314.47998, 11.42000,   0.00000, 0.00000, 187.36000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6111.50000, -3315.50000, 11.42000,   0.00000, 0.00000, 187.36000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6102.60986, -3315.30005, 11.42000,   0.00000, 0.00000, 169.31000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6094.14990, -3313.18994, 11.42000,   0.00000, 0.00000, 162.42999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6087.14990, -3310.68994, 11.42000,   0.00000, 0.00000, 159.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6079.66016, -3306.58008, 11.42000,   0.00000, 0.00000, 141.81000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6195.93994, -3509.42993, 14.19000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6223.56006, -3427.38989, 14.23000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6256.33984, -3441.30005, 14.19000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6230.04004, -3519.35010, 14.19000,   0.00000, 0.00000, 71.33000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 5933.39990, -3311.22998, 14.06000,   0.00000, 0.00000, 52.43000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6283.83008, -3359.32007, 11.48000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6286.77002, -3350.60010, 11.48000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6289.16016, -3344.62012, 11.47000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6291.91016, -3336.39990, 11.47000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6294.54980, -3328.39990, 11.47000,   0.00000, 0.00000, 251.81000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6296.95020, -3320.72998, 11.47000,   0.00000, 0.00000, 256.10999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6297.70020, -3312.57007, 11.47000,   0.00000, 0.00000, 275.01999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6296.70996, -3303.88989, 11.47000,   0.00000, 0.00000, 277.60001, -1, -1, -1, 500);
	CreateDynamicObject(978, 6294.91992, -3296.27002, 11.47000,   0.00000, 0.00000, 287.91000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6291.70020, -3289.20996, 11.47000,   0.00000, 0.00000, 299.94000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6287.47998, -3282.86011, 11.47000,   0.00000, 0.00000, 309.39999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6282.16992, -3276.37988, 11.47000,   0.00000, 0.00000, 309.39999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6276.89990, -3270.63989, 11.47000,   0.00000, 0.00000, 314.54999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6271.06982, -3264.81006, 11.47000,   0.00000, 0.00000, 314.54999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6264.50977, -3258.14990, 11.47000,   0.00000, 0.00000, 314.54999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6258.70996, -3252.32007, 11.42000,   0.00000, 0.00000, 314.54999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6253.77002, -3247.18994, 11.42000,   0.00000, 0.00000, 314.54999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6247.20020, -3241.46997, 11.42000,   0.00000, 0.00000, 323.14999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6240.43994, -3236.98999, 11.42000,   0.00000, 0.00000, 330.01999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6232.62012, -3233.52002, 11.42000,   0.00000, 0.00000, 342.06000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6224.81982, -3231.71997, 11.42000,   0.00000, 0.86000, 351.51001, -1, -1, -1, 500);
	CreateDynamicObject(978, 6216.10010, -3230.87012, 11.42000,   0.00000, 0.86000, -3.33000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6208.89014, -3231.17993, 11.42000,   0.00000, 0.86000, 6.12000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6200.99023, -3232.40991, 11.42000,   0.00000, 0.86000, 10.42000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6192.79980, -3234.81006, 11.42000,   0.00000, 0.86000, 21.59000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6184.72998, -3238.12988, 11.45000,   0.00000, 0.86000, 21.59000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6176.12012, -3241.60010, 11.45000,   0.00000, 0.86000, 21.59000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6167.85986, -3244.83008, 11.45000,   0.00000, 0.86000, 21.59000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6160.16992, -3249.11011, 11.45000,   0.00000, 0.86000, 37.06000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6153.85986, -3254.13989, 11.45000,   0.00000, 0.86000, 40.50000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6148.31982, -3258.92993, 11.45000,   0.00000, 0.86000, 40.50000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6141.91016, -3264.41992, 11.45000,   0.00000, 0.86000, 40.50000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6135.74023, -3269.72998, 11.45000,   0.00000, 0.86000, 40.50000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6129.75977, -3274.88989, 11.42000,   0.00000, 0.86000, 40.50000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6122.56982, -3279.61011, 11.42000,   0.00000, 0.86000, 25.89000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6114.89014, -3282.13989, 11.42000,   0.00000, 0.86000, 11.28000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6105.89014, -3282.26001, 11.42000,   0.00000, 0.86000, -11.07000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6098.18994, -3278.46997, 11.42000,   0.00000, 0.86000, -42.01000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6093.33008, -3272.70996, 11.42000,   0.00000, 0.86000, -58.34000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6089.37012, -3266.37012, 11.42000,   0.00000, 0.86000, -58.34000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6085.31982, -3259.84009, 11.42000,   0.00000, 0.86000, -58.34000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6079.83008, -3252.88989, 11.38000,   0.00000, 0.86000, -45.45000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6073.12988, -3247.56006, 11.38000,   0.00000, 0.86000, -30.84000, -1, -1, -1, 500);
	CreateDynamicObject(3452, 6139.18994, -3525.66992, 15.94000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 500);
	CreateDynamicObject(3452, 6129.93994, -3553.83008, 15.92000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 500);
	CreateDynamicObject(3452, 6148.47021, -3497.60010, 15.94000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 500);
	CreateDynamicObject(3452, 6157.70996, -3469.58008, 15.94000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 500);
	CreateDynamicObject(3452, 6166.89990, -3441.71997, 15.93000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 500);
	CreateDynamicObject(3452, 6175.93018, -3414.42993, 15.98000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 500);
	CreateDynamicObject(3452, 6185.22021, -3386.30005, 15.98000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 500);
	CreateDynamicObject(3452, 6194.41016, -3358.44995, 15.98000,   0.00000, 0.00000, -108.29000, -1, -1, -1, 500);
	CreateDynamicObject(6100, 6180.37012, -3318.14990, 34.77000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4113, 6122.52979, -3335.34009, 46.29000,   0.00000, 0.00000, 14.61000, -1, -1, -1, 500);
	CreateDynamicObject(5408, 6008.04004, -3391.84009, 32.74000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6875, 6046.58984, -3308.35010, 2.67000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8131, 6005.25000, -3298.35010, 21.12000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8620, 5989.33984, -3306.70996, 33.54000,   0.00000, 0.00000, 40.39000, -1, -1, -1, 500);
	CreateDynamicObject(16605, 5983.72021, -3323.50000, 10.77000,   0.00000, 0.00000, -173.61000, -1, -1, -1, 500);
	CreateDynamicObject(18282, 6077.89014, -3319.16992, 10.77000,   0.00000, 0.00000, 154.70000, -1, -1, -1, 500);
	CreateDynamicObject(3249, 6094.08984, -3326.37988, 10.26000,   0.00000, 0.00000, 165.00999, -1, -1, -1, 500);
	CreateDynamicObject(3362, 6063.08984, -3306.55005, 10.56000,   0.00000, 0.00000, 51.57000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6073.68018, -3301.46997, 11.42000,   0.00000, 0.00000, 137.50999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6068.02979, -3295.76001, 11.42000,   0.00000, 0.00000, 130.63000, -1, -1, -1, 500);
	CreateDynamicObject(4002, 6062.91016, -3721.35010, 20.96000,   0.00000, 0.00000, -88.52000, -1, -1, -1, 500);
	CreateDynamicObject(4007, 6069.70020, -3656.12012, 39.83000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4019, 6133.43018, -3666.04004, 10.86000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6130.66016, -3629.39990, 11.40000,   0.00000, 0.00000, 167.59000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6122.35010, -3626.98999, 11.47000,   0.00000, 0.00000, 161.57001, -1, -1, -1, 500);
	CreateDynamicObject(978, 6113.77002, -3625.47998, 11.36000,   0.00000, 0.00000, 177.89999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6105.43018, -3625.09009, 11.49000,   0.00000, 0.00000, 177.89999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6096.62012, -3623.72998, 11.49000,   0.00000, 0.00000, 164.14999, -1, -1, -1, 500);
	CreateDynamicObject(978, 6089.00977, -3620.91992, 11.49000,   0.00000, 0.00000, 156.42000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6117.87988, -3633.00000, 10.19000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6108.37988, -3630.98999, 10.19000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6097.43994, -3630.37988, 10.19000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(744, 6126.49023, -3580.33008, 9.96000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(744, 6121.31006, -3581.72998, 10.08000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(754, 6116.97021, -3582.87988, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(751, 6113.14014, -3584.30005, 10.23000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3508, 6107.47998, -3584.45996, 10.20000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1395, 6101.50977, -3575.17993, 42.73000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1394, 6108.14990, -3562.05005, 91.16000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3474, 6074.37012, -3560.82007, 17.15000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5126, 6054.72998, -3563.13989, 25.36000,   0.00000, 0.00000, -81.65000, -1, -1, -1, 500);
	CreateDynamicObject(11400, 6059.16016, -3589.72998, 23.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1381, 6055.85986, -3586.88989, 19.35000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3255, 6067.77979, -3619.56006, 11.21000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4113, 6200.75000, -3630.12988, 46.23000,   0.00000, 0.00000, 52.43000, -1, -1, -1, 500);
	CreateDynamicObject(4017, 6114.58008, -3785.95996, 20.90000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4019, 5968.97998, -3745.85010, 7.57000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4002, 5985.85986, -3779.67993, 32.69000,   0.00000, 0.00000, 88.52000, -1, -1, -1, 500);
	CreateDynamicObject(4019, 5970.06982, -3679.81006, 8.71000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4019, 5982.77002, -3605.89990, 9.96000,   0.00000, 0.00000, -15.47000, -1, -1, -1, 500);
	CreateDynamicObject(4021, 6034.29980, -3572.30005, 16.81000,   0.00000, 0.00000, 22.35000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6066.47021, -3243.71997, 11.38000,   0.00000, 0.86000, -28.26000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6060.66992, -3240.92993, 11.38000,   0.00000, 0.86000, -23.96000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6053.89990, -3238.62012, 11.38000,   0.00000, 0.86000, -11.93000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6045.18018, -3237.87012, 11.48000,   0.00000, 0.86000, 2.68000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6036.27979, -3238.26001, 11.38000,   0.00000, 0.86000, 2.68000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6027.68018, -3238.62988, 11.38000,   0.00000, 0.86000, 2.68000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6019.56982, -3239.97998, 11.38000,   0.00000, 0.86000, 18.15000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6011.04004, -3243.38989, 11.38000,   0.00000, 0.86000, 26.75000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6003.08984, -3247.33008, 11.38000,   0.00000, 0.86000, 26.75000, -1, -1, -1, 500);
	CreateDynamicObject(978, 5994.54004, -3251.62012, 11.38000,   0.00000, 0.86000, 26.75000, -1, -1, -1, 500);
	CreateDynamicObject(978, 5987.20020, -3255.29004, 11.38000,   0.00000, 0.86000, 26.75000, -1, -1, -1, 500);
	CreateDynamicObject(978, 5978.66016, -3259.61011, 11.30000,   0.00000, 0.86000, 26.75000, -1, -1, -1, 500);
	CreateDynamicObject(978, 5971.33984, -3263.31006, 11.35000,   0.00000, 0.86000, 26.75000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6040.22021, -3814.38989, 11.23000,   0.00000, 0.86000, 77.45000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6037.74023, -3822.17993, 11.37000,   0.00000, 0.86000, 66.28000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6034.68018, -3829.15991, 11.37000,   0.00000, 0.86000, 66.28000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6030.50977, -3836.68994, 11.37000,   0.00000, 0.86000, 56.83000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6024.68994, -3843.40991, 11.37000,   0.00000, 0.86000, 42.22000, -1, -1, -1, 500);
	CreateDynamicObject(978, 6017.64990, -3849.16992, 11.37000,   0.00000, 0.86000, 36.20000, -1, -1, -1, 500);
	CreateDynamicObject(978, 5820.77002, -3732.63989, 11.21000,   0.00000, 0.86000, 130.74001, -1, -1, -1, 500);
	CreateDynamicObject(978, 5815.50000, -3724.94995, 11.21000,   0.00000, 0.86000, 116.99000, -1, -1, -1, 500);
	CreateDynamicObject(978, 5811.87012, -3716.84009, 11.21000,   0.00000, 0.86000, 109.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, 5809.56006, -3708.76001, 11.21000,   0.00000, 0.86000, 103.24000, -1, -1, -1, 500);
	CreateDynamicObject(978, 5839.52979, -3702.25000, 11.21000,   0.00000, 0.86000, 100.66000, -1, -1, -1, 500);
	CreateDynamicObject(978, 5842.37012, -3709.75000, 11.21000,   0.00000, 0.86000, 123.00000, -1, -1, -1, 500);
	CreateDynamicObject(4019, 5872.95020, -3581.12012, 10.98000,   0.00000, 0.00000, 1.72000, -1, -1, -1, 500);
	CreateDynamicObject(4019, 5875.72021, -3648.03003, 10.91000,   0.00000, 0.00000, 1.72000, -1, -1, -1, 500);
	CreateDynamicObject(4019, 5969.72021, -3396.05005, 7.92000,   0.00000, 0.00000, 1.72000, -1, -1, -1, 500);
	CreateDynamicObject(4019, 5906.68018, -3720.97998, 10.31000,   0.00000, 0.00000, 48.99000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5841.20020, -3528.40991, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5869.49023, -3509.79004, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5408, 5949.37988, -3514.40991, 33.57000,   0.00000, 0.00000, -42.97000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5938.20020, -3450.78003, 10.31000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5935.60986, -3466.25000, 10.31000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5895.56006, -3506.51001, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5855.95020, -3511.08008, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5957.60010, -3335.04004, 10.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5948.79980, -3346.83008, 10.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5938.47021, -3360.23999, 10.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5928.62012, -3375.11011, 10.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5922.08008, -3392.17993, 10.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5928.29980, -3412.87012, 10.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5937.12988, -3435.64990, 10.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5965.43994, -3818.94995, 10.53000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5975.77002, -3824.60010, 10.35000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5988.66016, -3825.60010, 10.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5999.79980, -3820.84009, 10.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6007.54980, -3810.11011, 10.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5846.91016, -3704.80005, 10.19000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6100, 5872.72998, -3410.45996, 10.32000,   0.00000, 0.00000, -77.35000, -1, -1, -1, 500);
	CreateDynamicObject(6100, 5877.16992, -3446.71997, 34.73000,   0.00000, 0.00000, -86.80000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5882.00977, -3509.10010, 10.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5858.22998, -3468.36011, 10.41000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5847.20020, -3472.64990, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5832.20996, -3479.17993, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5819.62012, -3489.36011, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5806.85010, -3536.34009, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5804.72998, -3527.17993, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5803.31982, -3517.44995, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5808.87012, -3503.88989, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5847.08984, -3517.46997, 10.36000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6004.99023, -3288.26001, 10.53000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5993.50977, -3295.33008, 10.51000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5978.83008, -3307.55005, 10.51000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5969.47998, -3318.58008, 10.51000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6051.47998, -3278.45996, 10.51000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6022.39014, -3278.23999, 10.53000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6038.08984, -3274.20996, 10.53000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6169.56006, -3632.13989, 10.63000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6203.60010, -3600.87012, 10.62000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6045.50000, -3797.30005, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6044.56982, -3811.90991, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6040.85010, -3825.62988, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6036.22021, -3835.30005, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6029.14014, -3844.38989, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 6020.29980, -3852.09009, 10.52000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5921.60986, -3834.81006, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5899.87012, -3814.55005, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5888.10010, -3803.26001, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5876.12988, -3791.71997, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5866.24023, -3782.38989, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5854.60986, -3772.41992, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5842.68994, -3761.77002, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5822.60010, -3743.97998, 10.29000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5832.45996, -3752.57007, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5910.83008, -3824.94995, 10.30000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(616, 5813.99023, -3735.12988, 10.29000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 6252.41992, -3345.97998, 10.58000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 6254.89990, -3339.29004, 10.54000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
//End дрифт-трасса 2
//Start дрифт-трасса 3
	ObjGam[21] = CreateObject(8171, 5853.88, 903.35, 10.00,   0.00, 0.00, 0.00);

	CreateDynamicObject(10018, 5854.15, 730.72, 15.52,   0.00, 0.00, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(8357, 5853.95, 727.87, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5829.93, 573.19, 10.01,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 5744.60, 520.83, 10.05,   0.00, 0.00, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5728.15, 480.76, 10.11,   0.00, 0.00, 90.08, -1, -1, -1, 500);
	CreateDynamicObject(8171, 5845.58, 456.79, 10.09,   0.00, 0.00, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(8354, 5885.32, 433.8, 6.58,   0.00, 353.04, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 6070.43, 456.68, 20.72,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8354, 5933.35, 433.8, 12.43,   0.00, 353.04, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6159.63, 484.88, 20.72,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8354, 6160.80, 601.09, 12.43,   0.00, 353.04, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(8354, 6160.80, 649.16, 6.57,   0.00, 353.04, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(8357, 6183.66, 728.01, 9.24,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 6159.50, 899.25, 9.22,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6119.26, 915.8199, 9.20,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 6050.87, 851.4301, 9.19,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 5969.75, 871.49, 9.11,   0.00, 0.00, 0.00, -1, -1, -1, 500);
//	CreateDynamicObject(8171, 5853.88, 903.35, 10.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5878.01, 1010.85, 9.96,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 5945.52, 1005.46, 9.13,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8354, 5990.38, 1056.56, 2.78,   0.00, 353.98, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5944.02, 1079.12, -3.09,   0.00, 8.59, 77.03, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5979.50, 1043.21, 9.56,   0.00, 7.73, 17.19, -1, -1, -1, 500);
	CreateDynamicObject(979, 5935.57, 1042.93, 9.95,   0.00, 0.00, 150.47, -1, -1, -1, 500);
	CreateDynamicObject(979, 5926.98, 1047.22, 10.25,   0.00, 354.84, 156.56, -1, -1, -1, 500);
	CreateDynamicObject(979, 5943.23, 1038.01, 9.97,   0.00, 0.00, 144.45, -1, -1, -1, 500);
	CreateDynamicObject(979, 5950.71, 1032.19, 9.97,   0.00, 0.00, 139.22, -1, -1, -1, 500);
	CreateDynamicObject(979, 5956.98, 1025.28, 9.97,   0.00, 0.00, 124.61, -1, -1, -1, 500);
	CreateDynamicObject(979, 5918.08, 1050.45, 10.80,   0.00, 359.14, 162.58, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5911.22, 986.83, -2.94,   0.00, 7.73, 143.83, -1, -1, -1, 500);
	CreateDynamicObject(978, 5918.31, 1020.56, 10.75,   0.00, 0.00, 332.50, -1, -1, -1, 500);
	CreateDynamicObject(978, 5925.49, 1014.66, 10.22,   0.00, 5.16, 307.89, -1, -1, -1, 500);
	CreateDynamicObject(978, 5928.97, 1006.27, 9.87,   0.00, 0.00, 277.58, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5891.06, 961.4301, -0.87,   0.00, 353.98, 322.97, -1, -1, -1, 500);
	CreateDynamicObject(6356, 5889.18, 1000.39, 20.59,   0.00, 0.00, 148.91, -1, -1, -1, 500);
	CreateDynamicObject(7461, 5905.84, 909.16, 10.72,   0.00, 0.00, 82.19, -1, -1, -1, 500);
	CreateDynamicObject(7461, 5893.69, 903.64, 11.31,   0.00, 0.00, 263.05, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5906.53, 880.13, 11.44,   0.00, 0.00, 49.37, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5893.60, 844.99, 9.53,   0.00, 2.58, 222.27, -1, -1, -1, 500);
	CreateDynamicObject(18271, 5915.94, 917.65, 31.21,   0.00, 0.00, 152.28, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5915.12, 840.03, 14.17,   0.00, 2.58, 76.02, -1, -1, -1, 500);
	CreateDynamicObject(18271, 5889.30, 914.4, 32.82,   0.00, 0.00, 191.25, -1, -1, -1, 500);
	CreateDynamicObject(978, 5909.43, 1023.84, 10.80,   0.00, 0.00, 345.39, -1, -1, -1, 500);
	CreateDynamicObject(17071, 5900.88, 911.9399, 13.79,   0.00, 0.00, 7.18, -1, -1, -1, 500);
	CreateDynamicObject(17071, 5884.71, 924.41, 12.83,   0.00, 0.00, 32.58, -1, -1, -1, 500);
	CreateDynamicObject(978, 5899.72, 1025.59, 10.80,   0.00, 0.00, 353.98, -1, -1, -1, 500);
	CreateDynamicObject(978, 5890.46, 1024.83, 10.80,   0.00, 0.00, 15.55, -1, -1, -1, 500);
	CreateDynamicObject(978, 5881.81, 1021.01, 10.80,   0.00, 0.00, 32.81, -1, -1, -1, 500);
	CreateDynamicObject(978, 5874.73, 1014.93, 10.80,   0.00, 0.00, 50.08, -1, -1, -1, 500);
	CreateDynamicObject(978, 5870.04, 1006.81, 10.80,   0.00, 0.00, 69.92, -1, -1, -1, 500);
	CreateDynamicObject(978, 5868.25, 997.59, 10.80,   0.00, 0.00, 88.05, -1, -1, -1, 500);
	CreateDynamicObject(17071, 5917.21, 997.87, 14.70,   0.00, 0.00, 341.95, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5816.56, 858.98, 14.05,   0.00, 0.00, 48.52, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5815.44, 925.4399, 19.52,   0.00, 0.00, 127.19, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5831.90, 1040.65, 19.52,   0.00, 0.86, 90.78, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5904.19, 1090.31, 19.50,   0.00, 0.00, 65.86, -1, -1, -1, 500);
	CreateDynamicObject(5186, 5750.60, 486.93, 9.98,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8038, 5768.40, 501.2, 30.10,   0.00, 0.00, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(5186, 5854.43, 516.03, 9.96,   0.00, 0.00, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5916.87, 495.87, 15.14,   -15.57, 5.00, 36.50, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5804.57, 419.25, 20.19,   0.00, 0.00, 217.19, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5686.80, 442.7, 20.20,   0.00, 0.00, 180.86, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5662.24, 490.81, 21.12,   0.00, 0.00, 141.95, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5672.01, 536.81, 21.04,   0.00, 0.00, 106.56, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5681.09, 554.74, 21.07,   0.00, 0.00, 71.09, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5659.89, 582.68, 21.07,   0.00, 0.00, 37.34, -1, -1, -1, 500);
	CreateDynamicObject(5186, 5805.95, 604.45, 9.96,   0.00, 0.00, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(18227, 5797.74, 608.07, 21.99,   347.97, 351.41, 95.78, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5809.39, 592.02, 12.10,   354.84, 358.28, 355.63, -1, -1, -1, 500);
	CreateDynamicObject(17033, 5819.27, 574.97, 9.76,   0.00, 0.00, 178.20, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5931.19, 505.88, 21.10,   1.72, 358.28, 50.08, -1, -1, -1, 500);
	CreateDynamicObject(18227, 5868.15, 521.27, 14.09,   347.97, 351.41, 62.03, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5849.78, 519.82, 10.89,   354.84, 358.28, 172.89, -1, -1, -1, 500);
	CreateDynamicObject(17071, 5826.41, 520.58, 13.75,   0.00, 0.00, 129.69, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5983.52, 982.76, 20.13,   0.00, 0.00, 306.33, -1, -1, -1, 500);
	CreateDynamicObject(979, 5961.24, 1016.93, 9.97,   0.00, 0.00, 109.14, -1, -1, -1, 500);
	CreateDynamicObject(5186, 5982.11, 834.49, 9.09,   0.00, 0.00, 157.50, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6021.54, 862.6899, -2.71,   0.00, 0.00, 52.66, -1, -1, -1, 500);
	CreateDynamicObject(5186, 5902.61, 555.96, 9.99,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6039.32, 790.29, 20.13,   0.00, 0.00, 214.61, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5938.75, 807.13, 14.88,   0.00, 2.58, 104.46, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5957.47, 418.53, 17.80,   -8.94, 13.22, 219.69, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6112.60, 418.77, 29.50,   0.00, 0.00, 217.19, -1, -1, -1, 500);
	CreateDynamicObject(5186, 6060.61, 486.09, 20.69,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6009.55, 381.6, 4.64,   0.00, 0.00, 339.22, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5920.69, 386.66, -3.16,   0.00, 0.00, 5.23, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6072.81, 506.58, 12.26,   0.00, 0.00, 87.19, -1, -1, -1, 500);
	CreateDynamicObject(18228, 6113.01, 493.81, 23.81,   0.00, 0.00, 318.44, -1, -1, -1, 500);
	CreateDynamicObject(18228, 6141.66, 505.44, 23.98,   0.00, 0.00, 359.92, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6191.12, 439.71, 29.44,   0.00, 0.00, 247.50, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6216.54, 483.47, 29.41,   0.00, 0.00, 293.36, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6220.96, 596.48, 20.68,   351.87, 358.25, 306.75, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6260.52, 521.15, 6.91,   0.00, 0.00, 58.67, -1, -1, -1, 500);
	CreateDynamicObject(17034, 5881.18, 551.82, 6.41,   0.00, 0.00, 86.48, -1, -1, -1, 500);
	CreateDynamicObject(17034, 5891.43, 590.24, 5.66,   0.00, 0.00, 112.27, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6221.37, 741.9, 20.11,   0.00, 0.00, 306.33, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6258.95, 628.19, -4.08,   0.00, 1.72, 59.77, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6145.30, 598.46, 22.16,   1.78, 6.93, 127.35, -1, -1, -1, 500);
	CreateDynamicObject(18228, 6146.29, 522.54, 24.40,   0.00, 0.00, 50.00, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6146.08, 720.86, 19.81,   0.00, 0.00, 128.05, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6110.25, 624.99, -5.59,   0.00, 1.72, 262.34, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6221.44, 887.51, 20.24,   0.00, 0.00, 308.05, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6195.09, 960.98, 20.24,   0.00, 0.00, 340.94, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6163.59, 976.85, 20.24,   0.00, 0.00, 10.39, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6124.23, 978.01, 20.24,   0.00, 0.00, 46.80, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6078.04, 951.27, 20.21,   0.00, 0.00, 84.92, -1, -1, -1, 500);
	CreateDynamicObject(4814, 6145.56, 792.02, 19.86,   0.00, 0.00, 128.05, -1, -1, -1, 500);
	CreateDynamicObject(5186, 6142.13, 882.12, 9.17,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(5186, 6115.09, 517.9, 20.70,   0.00, 0.00, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(17025, 6117.22, 499.9, 43.72,   23.20, 22.35, 335.70, -1, -1, -1, 500);
	CreateDynamicObject(733, 6151.43, 481.43, 20.38,   0.00, 0.00, 70.86, -1, -1, -1, 500);
	CreateDynamicObject(733, 6076.67, 478.24, 20.63,   0.00, 0.00, 153.37, -1, -1, -1, 500);
	CreateDynamicObject(726, 5837.45, 477.44, 9.96,   0.00, 0.00, 57.03, -1, -1, -1, 500);
	CreateDynamicObject(726, 5821.03, 486.22, 9.96,   0.00, 0.00, 57.03, -1, -1, -1, 500);
	CreateDynamicObject(726, 5810.13, 520.62, 9.96,   0.00, 0.00, 57.03, -1, -1, -1, 500);
	CreateDynamicObject(725, 5890.06, 548.95, 8.39,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(723, 5906.42, 569.64, 22.02,   0.00, 0.00, 281.25, -1, -1, -1, 500);
	CreateDynamicObject(722, 5882.71, 593.28, 9.38,   0.00, 0.00, 7.89, -1, -1, -1, 500);
	CreateDynamicObject(721, 5836.52, 494.73, 8.87,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(731, 5811.68, 494.67, 9.95,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(726, 5831.14, 600.02, 9.94,   0.00, 0.00, 57.03, -1, -1, -1, 500);
	CreateDynamicObject(731, 5876.16, 849.52, 9.56,   338.51, 0.86, 312.73, -1, -1, -1, 500);
	CreateDynamicObject(725, 5863.74, 504.14, 9.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(733, 5987.21, 849.7, 9.08,   0.00, 0.00, 320.39, -1, -1, -1, 500);
	CreateDynamicObject(733, 5974.21, 854.5699, 8.88,   0.00, 0.00, 220.63, -1, -1, -1, 500);
	CreateDynamicObject(5186, 6068.38, 865.8101, 9.17,   0.00, 0.00, 357.65, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6050.79, 892.49, 8.87,   0.00, 0.00, 102.89, -1, -1, -1, 500);
	CreateDynamicObject(730, 6070.12, 868, 9.11,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(729, 6058.26, 859.3101, 9.10,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(730, 6056.19, 851.15, 9.13,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(732, 6065.08, 863.59, 9.07,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(732, 6063.77, 853.75, 9.12,   0.00, 0.00, 67.50, -1, -1, -1, 500);
	CreateDynamicObject(729, 6070.21, 858.79, 9.16,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6104.11, 805.61, 3.20,   0.00, 0.00, 292.58, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6129.08, 865.6801, -3.40,   0.00, 0.00, 318.59, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6131.31, 865.88, -10.84,   0.00, 24.06, 312.58, -1, -1, -1, 500);
	CreateDynamicObject(729, 6119.84, 901.49, 9.18,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(730, 6125.51, 918.3199, 9.09,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(730, 6126.54, 909.9301, 9.19,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(732, 6117.86, 906.84, 9.18,   0.00, 0.00, 67.50, -1, -1, -1, 500);
	CreateDynamicObject(729, 6120.31, 912.9301, 9.18,   0.00, 0.00, 66.18, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5854.00, 813.68, 10.80,   0.00, 0.00, 0.86, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5853.89, 654.9, 10.71,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5854.02, 673.7, 10.87,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5854.01, 734.83, 10.82,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5854.01, 753.7, 10.85,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5854.04, 794.84, 10.86,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16092, 5845.06, 833.34, 10.33,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(16092, 5862.87, 833.3199, 10.33,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 5845.13, 834.23, 17.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 5842.11, 834.23, 17.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 5848.12, 834.23, 17.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 5862.92, 834.23, 17.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 5859.92, 834.23, 17.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 5865.90, 834.23, 17.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
//End дрифт-трасса 3
//Start дрифт-трасса 4
	ObjGam[22] = CreateObject(8354, 5813.91, 2910.57, 10.03,   0.00, 0.00, 180.00);

	CreateDynamicObject(8357, 5853.95, 2727.87, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5829.93, 2573.19, 10.01,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 5663.26, 2520.90, 10.01,   0.00, 0.00, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5646.67, 2480.85, 10.02,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 6200.59, 2431.38, 18.46,   7.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8357, 6377.42, 3241.13, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 6353.24, 3550.69, 10.04,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6313.16, 3567.22, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 5853.88, 2903.35, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5877.95, 3233.58, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
//	CreateDynamicObject(8354, 5813.91, 2910.57, 10.03,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(4814, 5777.48, 2886.68, 19.52,   0.00, 0.00, 127.19, -1, -1, -1, 500);
	CreateDynamicObject(8038, 5883.88, 2880.85, 30.06,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16092, 5869.62, 2826.57, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16092, 5838.33, 2826.57, 10.33,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16092, 5846.35, 2825.86, 17.80,   0.00, 90.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(16092, 5861.49, 2825.86, 17.80,   0.00, 90.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 5866.06, 2834.30, 17.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 5861.56, 2834.30, 17.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 5857.05, 2834.30, 17.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 5850.91, 2834.30, 17.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 5846.42, 2834.30, 17.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1262, 5841.91, 2834.30, 17.79,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(16092, 5861.49, 2824.62, 17.80,   0.00, -90.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(16092, 5846.35, 2824.62, 17.80,   0.00, -90.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5834.38, 2820.99, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 5834.36, 2834.00, 9.99,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5821.34, 2834.04, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5795.75, 2834.04, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8357, 5853.85, 3078.91, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 5834.52, 2980.40, 9.99,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5821.48, 2980.39, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5795.91, 2980.39, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5834.55, 2993.40, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, 5834.21, 3069.12, 12.75,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, 5834.03, 2745.18, 12.75,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, 5873.27, 2984.28, 12.75,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, 5873.26, 3110.13, 12.75,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, 5873.97, 2784.57, 12.75,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 5609.19, 2344.15, 10.01,   0.00, 0.00, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5592.56, 2303.95, 10.02,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5825.41, 2432.68, 10.02,   0.00, 0.00, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 5808.86, 2392.55, 10.01,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 5897.46, 2256.01, 10.02,   0.00, 0.00, 270.00, -1, -1, -1, 500);
	CreateDynamicObject(8357, 5990.64, 2212.77, 10.05,   0.00, 0.00, 55.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 6144.81, 2134.40, 10.02,   0.00, 0.00, 55.00, -1, -1, -1, 500);
	CreateDynamicObject(8357, 6200.61, 2256.34, 10.06,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6181.42, 2157.76, 10.03,   0.00, 0.00, 235.00, -1, -1, -1, 500);
	CreateDynamicObject(8357, 6200.57, 2606.42, 26.90,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6224.66, 2761.10, 26.89,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 6264.95, 2744.38, 26.87,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6353.44, 2598.12, 26.89,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 6313.33, 2614.69, 26.87,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 6377.54, 2715.03, 18.46,   7.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8357, 6377.45, 2890.06, 10.05,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 6377.44, 3065.62, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 6377.40, 3416.71, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 6224.80, 3516.38, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6265.04, 3499.97, 10.02,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8344, 6176.37, 3583.84, 10.04,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(8343, 6136.21, 3600.43, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8357, 5980.30, 3409.71, 10.05,   0.00, 0.00, -35.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 5897.24, 3290.99, 10.04,   0.00, 0.00, -35.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 6080.95, 3553.50, 10.04,   0.00, 0.00, -35.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 5740.75, 2545.05, 10.02,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 5738.47, 2456.79, 10.02,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8171, 5728.45, 2368.29, 10.02,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(8357, 5744.83, 2279.90, 10.06,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5790.77, 2959.73, -14.33,   0.00, 0.00, -33.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5777.48, 2959.44, -5.67,   0.00, 21.50, -33.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5724.49, 2758.53, -16.44,   0.00, 21.50, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5714.75, 2758.44, -8.00,   0.00, 27.50, -69.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5785.97, 2871.08, -8.00,   0.00, 0.00, -19.50, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5769.35, 2869.78, -8.00,   0.00, 0.00, -19.50, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5751.74, 2869.23, -8.00,   0.00, 0.00, -19.50, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5780.53, 3008.44, -1.76,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5783.21, 2802.28, 3.73,   0.00, 0.00, 14.00, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5783.96, 2816.94, 3.73,   0.00, 0.00, 14.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, 5873.97, 2658.75, 12.75,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5834.39, 2669.46, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5834.32, 2588.04, 10.74,   0.00, 0.00, -91.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5834.39, 2643.86, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5834.39, 2618.25, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 5834.39, 2602.26, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 5834.39, 2595.85, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5833.04, 2578.86, 10.74,   0.00, 0.00, -105.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5828.60, 2571.17, 10.74,   0.00, 0.00, -135.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5821.24, 2565.73, 10.74,   0.00, 0.00, -152.27, -1, -1, -1, 500);
	CreateDynamicObject(979, 5812.61, 2563.20, 10.74,   0.00, 0.00, -175.00, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5790.08, 2571.41, -1.39,   0.00, 0.00, 149.00, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5783.71, 2581.42, -1.39,   0.00, 0.00, 149.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5800.43, 2564.24, 10.74,   0.00, 0.00, -180.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5760.19, 2562.85, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5734.48, 2562.86, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5708.87, 2562.88, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5683.17, 2562.78, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5748.07, 2527.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5722.47, 2527.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5873.04, 2591.36, 10.74,   0.00, 0.00, 82.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5871.42, 2582.16, 10.74,   0.00, 0.00, 78.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5869.02, 2573.21, 10.74,   0.00, 0.00, 72.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5865.84, 2564.47, 10.74,   0.00, 0.00, 68.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5861.72, 2556.40, 10.74,   0.00, 0.00, 58.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5856.29, 2548.94, 10.74,   0.00, 0.00, 50.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5850.02, 2542.23, 10.74,   0.00, 0.00, 44.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5842.71, 2536.56, 10.74,   0.00, 0.00, 32.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5834.47, 2532.38, 10.74,   0.00, 0.00, 22.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5825.57, 2529.67, 10.74,   0.00, 0.00, 12.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5816.56, 2527.97, 10.74,   0.00, 0.00, 9.50, -1, -1, -1, 500);
	CreateDynamicObject(982, 5799.28, 2527.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5773.67, 2527.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5696.88, 2527.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5671.28, 2527.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5654.21, 2525.78, 10.74,   0.00, 0.00, 18.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5665.82, 2562.65, 10.74,   0.00, 0.00, -178.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5646.14, 2521.49, 10.74,   0.00, 0.00, 38.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5640.20, 2514.67, 10.74,   0.00, 0.00, 60.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5637.25, 2506.14, 10.74,   0.00, 0.00, 82.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5637.57, 2497.03, 10.74,   0.00, 0.00, 102.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5640.73, 2488.38, 10.74,   0.00, 0.00, 118.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5646.34, 2481.19, 10.74,   0.00, 0.00, 138.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5654.13, 2476.68, 10.74,   0.00, 0.00, 162.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5663.05, 2475.13, 10.74,   0.00, 0.00, 178.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5656.60, 2562.00, 10.74,   0.00, 0.00, -174.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5647.51, 2560.38, 10.74,   0.00, 0.00, -166.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5638.88, 2557.42, 10.74,   0.00, 0.00, -156.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5630.66, 2553.21, 10.74,   0.00, 0.00, -150.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5623.37, 2547.70, 10.74,   0.00, 0.00, -136.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5616.67, 2541.23, 10.74,   0.00, 0.00, -136.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5610.75, 2534.18, 10.74,   0.00, 0.00, -124.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5606.49, 2526.13, 10.74,   0.00, 0.00, -112.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5603.31, 2517.37, 10.74,   0.00, 0.00, -108.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5601.42, 2508.42, 10.74,   0.00, 0.00, -96.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5601.41, 2499.28, 10.74,   0.00, 0.00, -84.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5602.71, 2490.11, 10.74,   0.00, 0.00, -80.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5605.10, 2481.20, 10.74,   0.00, 0.00, -70.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5608.85, 2472.80, 10.74,   0.00, 0.00, -62.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5612.47, 2466.38, 10.74,   0.00, 0.00, -60.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5618.00, 2459.05, 10.74,   0.00, 0.00, -46.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5624.77, 2452.95, 10.74,   0.00, 0.00, -38.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5632.39, 2447.81, 10.74,   0.00, 0.00, -30.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5640.66, 2443.96, 10.74,   0.00, 0.00, -20.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5649.48, 2441.45, 10.74,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5658.65, 2440.00, 10.74,   0.00, 0.00, -6.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5667.85, 2439.21, 10.74,   0.00, 0.00, -4.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, 5735.02, 2438.66, 9.99,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, 5730.43, 2475.24, 9.99,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5806.12, 2474.00, 10.70,   0.00, 0.00, 86.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5831.04, 2469.14, 10.70,   0.00, 0.00, 72.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5848.46, 2458.45, 10.70,   0.00, 0.00, 50.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5863.89, 2438.73, 10.70,   0.00, 0.00, 26.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5869.95, 2414.44, 10.70,   0.00, 0.00, 2.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5865.62, 2389.79, 10.70,   0.00, 0.00, -22.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5851.63, 2369.04, 10.70,   0.00, 0.00, -46.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5830.57, 2355.37, 10.70,   0.00, 0.00, -68.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5807.40, 2350.72, 10.70,   0.00, 0.00, -88.00, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5817.73, 2426.48, -2.49,   0.00, 0.00, 98.00, -1, -1, -1, 500);
	CreateDynamicObject(18228, 5812.77, 2394.20, -2.49,   0.00, 0.00, -25.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5802.31, 2438.99, 10.74,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5813.90, 2438.10, 10.74,   0.00, 0.00, -10.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5822.39, 2435.02, 10.74,   0.00, 0.00, -30.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5829.34, 2429.18, 10.74,   0.00, 0.00, -50.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5834.03, 2421.38, 10.74,   0.00, 0.00, -68.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5835.93, 2412.47, 10.74,   0.00, 0.00, -88.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5833.00, 2401.65, 10.74,   0.00, 0.00, -116.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5825.94, 2393.43, 10.74,   0.00, 0.00, -140.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5818.15, 2388.75, 10.74,   0.00, 0.00, -158.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5807.72, 2385.93, 10.74,   0.00, 0.00, -178.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5798.46, 2385.60, 10.74,   0.00, 0.00, -178.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5789.23, 2385.84, 10.74,   0.00, 0.00, -185.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5802.73, 2475.21, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5822.47, 2473.26, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5840.83, 2466.46, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5857.56, 2452.30, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5868.69, 2431.10, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5871.40, 2404.65, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5864.64, 2382.96, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5847.60, 2362.97, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5823.93, 2351.51, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5798.76, 2349.49, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, 5731.88, 2349.91, 9.99,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8150, 5721.96, 2386.50, 9.99,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5541.11, 2319.67, -11.37,   0.00, 0.00, -33.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5553.64, 2367.94, -11.37,   0.00, 0.00, -80.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5568.00, 2267.42, -11.37,   0.00, 0.00, 13.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5646.44, 2386.13, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5620.86, 2386.11, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5575.33, 2376.37, 10.74,   0.00, 0.00, -148.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 5604.89, 2385.77, 10.70,   0.00, 0.00, 96.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 5598.56, 2385.08, 10.70,   0.00, 0.00, 96.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 5592.29, 2384.06, 10.70,   0.00, 0.00, 102.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5568.07, 2370.72, 10.74,   0.00, 0.00, -136.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5561.76, 2363.94, 10.74,   0.00, 0.00, -130.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5556.15, 2356.76, 10.74,   0.00, 0.00, -126.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5548.86, 2341.82, 10.74,   0.00, 0.00, -110.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5545.55, 2328.97, 10.74,   0.00, 0.00, -98.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5546.20, 2314.45, 10.74,   0.00, 0.00, -84.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5557.92, 2288.76, 10.74,   0.00, 0.00, -56.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5563.72, 2281.58, 10.74,   0.00, 0.00, -46.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5570.56, 2275.46, 10.74,   0.00, 0.00, -38.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5578.25, 2270.28, 10.74,   0.00, 0.00, -30.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5586.66, 2266.38, 10.74,   0.00, 0.00, -20.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5595.57, 2263.84, 10.74,   0.00, 0.00, -12.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5604.66, 2262.40, 10.74,   0.00, 0.00, -6.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5656.20, 2350.27, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5630.61, 2350.28, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 5614.63, 2350.29, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 5608.25, 2350.06, 10.70,   0.00, 0.00, 94.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 5601.96, 2349.07, 10.70,   0.00, 0.00, 104.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5594.96, 2345.91, 10.74,   0.00, 0.00, 31.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5588.36, 2339.75, 10.74,   0.00, 0.00, 55.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5584.05, 2331.66, 10.74,   0.00, 0.00, 69.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5582.64, 2322.76, 10.74,   0.00, 0.00, 93.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5584.85, 2313.93, 10.74,   0.00, 0.00, 115.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5589.96, 2306.35, 10.74,   0.00, 0.00, 133.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5597.25, 2300.87, 10.74,   0.00, 0.00, 153.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5605.84, 2298.26, 10.74,   0.00, 0.00, 173.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5615.08, 2297.61, 10.74,   0.00, 0.00, 179.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 5621.10, 2262.14, 6.73,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 5739.77, 2297.35, 6.73,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 5753.56, 2262.14, 6.73,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 5872.02, 2297.35, 6.73,   0.00, 0.00, -90.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5896.22, 2193.90, -5.00,   0.00, 0.00, -25.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5912.42, 2182.29, -5.00,   0.00, 0.00, -25.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5927.67, 2171.30, -5.00,   0.00, 0.00, -25.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5943.03, 2160.49, -5.00,   0.00, 0.00, -25.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6124.30, 2221.38, -5.00,   0.00, 0.00, -130.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6123.61, 2205.87, -5.00,   0.00, 0.00, -130.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6123.36, 2188.81, -5.00,   0.00, 0.00, -130.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6123.14, 2172.84, -5.00,   0.00, 0.00, -130.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6137.64, 3507.43, -5.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6146.44, 3519.79, -5.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6155.97, 3532.56, -5.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 6162.98, 3542.37, -5.00,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5938.88, 3214.94, -5.00,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5948.41, 3228.82, -5.00,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(18226, 5958.68, 3242.42, -5.00,   0.00, 0.00, 33.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5590.83, 2382.49, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5574.33, 2376.81, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5559.56, 2363.31, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5547.65, 2341.35, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5544.76, 2329.72, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5544.90, 2315.16, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5557.31, 2287.87, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5569.14, 2274.65, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5588.19, 2264.10, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5888.68, 2297.17, 10.74,   0.00, 0.00, 175.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5897.75, 2295.39, 10.74,   0.00, 0.00, 163.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5906.48, 2292.21, 10.74,   0.00, 0.00, 157.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5914.50, 2287.76, 10.74,   0.00, 0.00, 145.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5878.39, 2261.98, 10.74,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5887.55, 2261.11, 10.74,   0.00, 0.00, -11.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 5895.92, 2257.73, 10.74,   0.00, 0.00, -33.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6016.42, 2215.89, 6.73,   0.00, 0.00, -125.06, -1, -1, -1, 500);
	CreateDynamicObject(7371, 5909.41, 2248.75, 6.73,   0.00, 0.00, 55.02, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6124.75, 2139.89, 6.73,   0.00, 0.00, -125.06, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6017.80, 2172.91, 6.73,   0.00, 0.00, 55.02, -1, -1, -1, 500);
	CreateDynamicObject(711, 5912.75, 2244.62, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5928.78, 2233.56, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5943.83, 2222.89, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6127.40, 2097.86, 10.70,   0.00, 0.00, 62.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6151.35, 2090.07, 10.70,   0.00, 0.00, 82.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6174.62, 2092.46, 10.70,   0.00, 0.00, 108.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6196.29, 2104.97, 10.70,   0.00, 0.00, 132.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6211.40, 2125.02, 10.70,   0.00, 0.00, 154.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6138.40, 2130.69, 10.74,   0.00, 0.00, 146.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6146.59, 2126.52, 10.74,   0.00, 0.00, 160.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6155.53, 2124.62, 10.74,   0.00, 0.00, 176.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6164.58, 2125.57, 10.74,   0.00, 0.00, 196.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6172.67, 2129.70, 10.74,   0.00, 0.00, 218.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6178.77, 2136.47, 10.74,   0.00, 0.00, 238.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6181.99, 2144.89, 10.74,   0.00, 0.00, 260.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6217.93, 2154.92, 6.73,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6183.01, 2269.56, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 6217.56, 2139.66, 10.70,   0.00, 0.00, -10.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6181.90, 2153.57, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6183.86, 2170.93, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6183.85, 2203.86, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6181.90, 2226.22, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6182.87, 2294.49, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6182.87, 2320.07, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6182.88, 2345.67, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6218.14, 2287.88, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6218.13, 2313.47, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6218.14, 2339.07, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6182.83, 2358.67, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6182.83, 2359.37, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6182.83, 2360.07, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6182.83, 2360.79, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6182.83, 2361.49, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6182.83, 2362.15, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6182.83, 2362.81, 10.03,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6218.21, 2358.50, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 6218.13, 2355.06, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6218.21, 2359.14, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6218.21, 2359.86, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6218.21, 2360.52, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6218.21, 2361.18, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6218.21, 2361.78, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6218.21, 2362.43, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6218.21, 2363.03, 10.04,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6218.05, 2375.62, 8.09,   -7.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6183.00, 2482.77, 21.25,   7.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 6182.84, 2497.02, 27.13,   7.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6182.82, 2500.36, 26.88,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6218.23, 2500.48, 26.92,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 6218.21, 2497.15, 27.22,   7.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8682, 6182.80, 2545.58, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8682, 6218.23, 2545.73, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8682, 6182.80, 2635.52, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8682, 6218.23, 2635.68, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8682, 6182.79, 2697.97, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8682, 6218.24, 2698.13, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6127.32, 2096.20, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6148.60, 2088.93, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6171.31, 2089.87, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6191.69, 2098.91, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6208.16, 2115.23, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6184.79, 2755.60, 27.57,   0.00, 0.00, -9.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6189.08, 2772.25, 27.58,   0.00, 0.00, -120.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6194.00, 2780.12, 27.58,   0.00, 0.00, -124.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6206.25, 2792.21, 27.57,   0.00, 0.00, -49.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6228.26, 2803.92, 27.57,   0.00, 0.00, -75.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6253.33, 2805.65, 27.57,   0.00, 0.00, -97.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6275.40, 2797.68, 27.57,   0.00, 0.00, -121.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6294.06, 2780.86, 27.57,   0.00, 0.00, -143.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6304.38, 2758.11, 27.57,   0.00, 0.00, -168.13, -1, -1, -1, 500);
	CreateDynamicObject(8682, 6306.99, 2700.62, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8682, 6271.54, 2701.52, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6219.07, 2747.63, 27.58,   0.00, 0.00, 81.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6221.75, 2756.40, 27.58,   0.00, 0.00, 65.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6226.95, 2763.84, 27.58,   0.00, 0.00, 45.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6234.41, 2769.06, 27.58,   0.00, 0.00, 25.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6243.23, 2771.10, 27.58,   0.00, 0.00, 1.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6252.26, 2769.84, 27.58,   0.00, 0.00, -17.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6260.35, 2765.71, 27.58,   0.00, 0.00, -37.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6266.70, 2759.13, 27.58,   0.00, 0.00, -55.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6270.39, 2750.84, 27.58,   0.00, 0.00, -77.00, -1, -1, -1, 500);
	CreateDynamicObject(8682, 6306.99, 2660.63, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(8682, 6271.54, 2661.53, 27.40,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6307.81, 2611.17, 27.58,   0.00, 0.00, 99.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6277.68, 2587.07, 27.58,   0.00, 0.00, -67.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6273.75, 2603.94, 27.57,   0.00, 0.00, -170.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6282.14, 2579.01, 27.58,   0.00, 0.00, -55.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6294.76, 2567.27, 27.57,   0.00, 0.00, -129.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6317.05, 2555.92, 27.57,   0.00, 0.00, -105.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6342.10, 2554.18, 27.57,   0.00, 0.00, -83.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6365.52, 2562.72, 27.57,   0.00, 0.00, -57.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6383.57, 2580.16, 27.57,   0.00, 0.00, -35.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6393.32, 2603.20, 27.57,   0.00, 0.00, -11.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6395.76, 2628.54, 27.57,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6310.50, 2602.39, 27.58,   0.00, 0.00, 115.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6315.83, 2595.05, 27.58,   0.00, 0.00, 137.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6323.47, 2590.10, 27.58,   0.00, 0.00, 157.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6332.36, 2588.05, 27.58,   0.00, 0.00, 177.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6341.43, 2589.17, 27.58,   0.00, 0.00, 197.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6349.56, 2593.31, 27.58,   0.00, 0.00, 217.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6355.62, 2600.06, 27.58,   0.00, 0.00, 239.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6358.88, 2608.55, 27.58,   0.00, 0.00, 259.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6359.84, 2625.79, 27.57,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6395.77, 2644.83, 26.87,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6359.81, 2645.21, 26.88,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 6359.84, 2641.77, 27.57,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 6395.75, 2641.34, 27.57,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6359.81, 2645.85, 26.88,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6395.77, 2645.44, 26.87,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6395.77, 2646.09, 26.87,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6359.81, 2646.48, 26.88,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6359.99, 2765.34, 8.78,   -7.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6395.62, 2657.87, 22.02,   7.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 6359.79, 2780.62, 11.15,   -7.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6359.75, 2784.01, 10.02,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(1237, 6395.85, 2783.94, 10.08,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(983, 6395.83, 2780.45, 11.12,   -7.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6183.71, 2758.79, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6188.14, 2767.84, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6191.37, 2777.93, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6198.24, 2786.83, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6273.33, 2596.47, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6278.19, 2583.36, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6286.85, 2572.10, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6297.53, 2563.11, 32.80,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6359.89, 2904.34, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6395.68, 2796.04, 6.73,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6359.89, 3036.63, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6395.68, 2928.32, 6.73,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6359.89, 3168.94, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6395.68, 3060.65, 6.73,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6359.89, 3301.21, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6395.68, 3193.03, 6.73,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6359.89, 3433.51, 6.73,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6395.68, 3325.33, 6.73,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6359.70, 3458.37, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6395.86, 3458.30, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6359.71, 3483.97, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6359.71, 3509.57, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6359.72, 3535.16, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6395.84, 3483.87, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6395.82, 3509.45, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6395.81, 3535.04, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6393.59, 3560.44, 10.70,   0.00, 0.00, 10.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6384.59, 3583.87, 10.70,   0.00, 0.00, 32.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6367.20, 3601.84, 10.70,   0.00, 0.00, 56.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6343.99, 3611.20, 10.70,   0.00, 0.00, 80.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6318.97, 3610.30, 10.70,   0.00, 0.00, 104.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6296.49, 3599.32, 10.70,   0.00, 0.00, 128.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6280.02, 3580.35, 10.70,   0.00, 0.00, 150.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6272.52, 3556.51, 10.70,   0.00, 0.00, 175.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6271.41, 3530.97, 10.70,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6359.19, 3552.47, 10.74,   0.00, 0.00, -84.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6356.82, 3561.30, 10.74,   0.00, 0.00, -66.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6351.83, 3568.99, 10.74,   0.00, 0.00, -48.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6344.58, 3574.46, 10.74,   0.00, 0.00, -26.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6335.84, 3576.96, 10.74,   0.00, 0.00, -6.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6326.71, 3576.48, 10.74,   0.00, 0.00, 12.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6318.47, 3572.80, 10.74,   0.00, 0.00, 36.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6311.99, 3566.33, 10.74,   0.00, 0.00, 54.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6308.14, 3558.08, 10.74,   0.00, 0.00, 76.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6306.95, 3540.89, 10.70,   0.00, 0.00, 180.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6306.05, 3515.34, 10.70,   0.00, 0.00, 176.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6299.95, 3490.91, 10.70,   0.00, 0.00, 156.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6285.23, 3470.67, 10.70,   0.00, 0.00, 132.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6263.54, 3458.16, 10.70,   0.00, 0.00, 108.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6238.65, 3455.56, 10.70,   0.00, 0.00, 84.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6214.85, 3463.31, 10.70,   0.00, 0.00, 60.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6195.90, 3479.79, 10.70,   0.00, 0.00, 38.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6185.38, 3502.39, 10.70,   0.00, 0.00, 12.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6182.72, 3527.70, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6182.73, 3553.28, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6182.29, 3578.86, 10.70,   0.00, 0.00, 2.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6270.72, 3513.67, 10.74,   0.00, 0.00, -98.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6268.07, 3504.98, 10.74,   0.00, 0.00, -116.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6262.83, 3497.50, 10.74,   0.00, 0.00, -134.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6255.39, 3492.29, 10.74,   0.00, 0.00, -156.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6246.53, 3490.08, 10.74,   0.00, 0.00, -176.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6237.52, 3491.18, 10.74,   0.00, 0.00, -198.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6229.35, 3495.34, 10.74,   0.00, 0.00, -216.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6223.00, 3501.93, 10.74,   0.00, 0.00, -236.00, -1, -1, -1, 500);
	CreateDynamicObject(979, 6219.28, 3510.27, 10.74,   0.00, 0.00, -256.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6218.09, 3527.50, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6218.08, 3553.09, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6218.06, 3578.68, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6214.10, 3603.63, 10.70,   0.00, 0.00, 18.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6201.58, 3625.30, 10.70,   0.00, 0.00, 42.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6181.34, 3640.01, 10.70,   0.00, 0.00, 66.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6156.86, 3645.22, 10.70,   0.00, 0.00, 90.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6132.22, 3640.42, 10.70,   0.00, 0.00, 112.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 6111.80, 3626.11, 10.70,   0.00, 0.00, 138.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6179.84, 3595.75, 10.74,   0.00, 0.00, -65.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6174.60, 3603.24, 10.74,   0.00, 0.00, -45.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6167.07, 3608.32, 10.74,   0.00, 0.00, -23.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6158.19, 3610.37, 10.74,   0.00, 0.00, -3.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6149.08, 3609.41, 10.74,   0.00, 0.00, 15.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 6140.89, 3605.42, 10.74,   0.00, 0.00, 37.00, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6096.45, 3606.66, 6.73,   0.00, 0.00, -35.04, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6068.27, 3504.48, 6.73,   0.00, 0.00, 145.01, -1, -1, -1, 500);
	CreateDynamicObject(7371, 5992.42, 3396.10, 6.73,   0.00, 0.00, 145.01, -1, -1, -1, 500);
	CreateDynamicObject(7371, 6020.52, 3498.40, 6.73,   0.00, 0.00, -35.04, -1, -1, -1, 500);
	CreateDynamicObject(7371, 5944.51, 3390.06, 6.73,   0.00, 0.00, -35.04, -1, -1, -1, 500);
	CreateDynamicObject(7371, 5916.57, 3287.71, 6.73,   0.00, 0.00, 145.01, -1, -1, -1, 500);
	CreateDynamicObject(978, 5907.43, 3274.25, 10.74,   0.00, 0.00, 55.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5883.46, 3239.60, 10.74,   0.00, 0.00, 55.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5878.14, 3232.02, 10.74,   0.00, 0.00, 55.00, -1, -1, -1, 500);
	CreateDynamicObject(978, 5873.83, 3223.90, 10.74,   0.00, 0.00, 69.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5872.13, 3206.90, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5872.57, 3181.30, 10.70,   0.00, 0.00, 2.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5868.01, 3281.33, 10.70,   0.00, 0.00, -35.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5853.33, 3260.37, 10.70,   0.00, 0.00, -35.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5841.41, 3237.94, 10.70,   0.00, 0.00, -21.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5836.14, 3213.22, 10.70,   0.00, 0.00, -3.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5835.47, 3187.64, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5835.46, 3162.05, 10.70,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(982, 5834.90, 3136.47, 10.70,   0.00, 0.00, -2.50, -1, -1, -1, 500);
	CreateDynamicObject(711, 6395.31, 3558.46, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6388.35, 3580.10, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6373.66, 3599.21, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6304.67, 3497.59, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6292.13, 3475.04, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6271.52, 3459.35, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6217.21, 3599.65, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6206.66, 3622.29, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 6187.18, 3638.84, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5837.78, 3225.36, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5836.77, 3205.73, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5800.33, 2835.80, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5813.95, 2835.80, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5827.52, 2835.80, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5827.62, 2978.60, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5813.87, 2978.60, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
	CreateDynamicObject(711, 5800.01, 2978.60, 15.91,   0.00, 0.00, 0.00, -1, -1, -1, 500);
//End дрифт-трасса 4
//Start дрифт-трасса 5
	ObjGam[23] = CreateObject(5004, 2809.69458, -5649.09717, 10.76300,   0.00000, 0.00000, 90.00000);

	CreateDynamicObject(16112, 3136.30005, -6157.60010, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16113, 3076.30103, -6222.00000, 9.70000,   0.00000, 0.00000, 19.99510, -1, -1, -1, 500);
	CreateDynamicObject(16113, 3032.69995, -6196.70020, 9.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16113, 2991.50000, -6174.39990, 9.70000,   0.00000, 0.00000, 26.00000, -1, -1, -1, 500);
	CreateDynamicObject(16113, 2952.43726, -6151.04297, 9.70000,   0.00000, 0.00000, 342.00000, -1, -1, -1, 500);
	CreateDynamicObject(16113, 2912.30103, -6130.50000, 9.70000,   0.00000, 0.00000, 29.99270, -1, -1, -1, 500);
	CreateDynamicObject(16113, 2875.50000, -6106.89990, 9.70000,   0.00000, 0.00000, 309.99570, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3237.89990, -6177.60107, 9.70000,   0.00000, 0.00000, 153.98441, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3239.12793, -5789.89893, 9.70000,   0.00000, 0.00000, 161.97141, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3233.50000, -5830.50000, 9.70000,   0.00000, 0.00000, 161.97141, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3232.80103, -6034.70020, 9.70000,   0.00000, 0.00000, 157.97791, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3232.30103, -5935.89990, 9.70000,   0.00000, 0.00000, 161.97141, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3232.19995, -5884.39990, 9.70000,   0.00000, 0.00000, 161.97141, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3231.19995, -6125.70020, 9.70000,   0.00000, 0.00000, 189.98109, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3230.30103, -6079.70020, 9.70000,   0.00000, 0.00000, 153.97890, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3229.80103, -5988.60107, 9.70000,   0.00000, 0.00000, 161.97690, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3222.30103, -6221.39990, 9.70000,   0.00000, 0.00000, 135.98880, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3186.66895, -5690.45996, 10.60000,   0.00000, 0.00000, 235.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3172.60107, -6247.20020, 9.70000,   0.00000, 0.00000, 91.98850, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3138.30005, -5685.20020, 10.60000,   0.00000, 0.00000, 261.97690, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3121.00000, -6245.30078, 9.70000,   0.00000, 0.00000, 59.99630, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3116.50000, -6051.60010, 9.60000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3030.30103, -5843.30078, 9.50000,   0.00000, 0.00000, 279.99210, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3020.10010, -5812.00000, 10.00000,   0.00000, 0.00000, 5.99210, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3006.36816, -5853.54199, 9.50000,   0.00000, 0.00000, 173.99600, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3001.51855, -5808.98975, 9.50000,   0.00000, 0.00000, 115.98260, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2993.50000, -5764.80078, 9.50000,   0.00000, 0.00000, 167.98100, -1, -1, -1, 500);
	CreateDynamicObject(16133, 2925.39990, -5971.50000, 10.00000,   0.00000, 0.00000, 127.99620, -1, -1, -1, 500);
	CreateDynamicObject(16133, 2898.00000, -5978.39990, 10.70000,   0.00000, 0.00000, 19.99620, -1, -1, -1, 500);
	CreateDynamicObject(16133, 2816.90576, -5834.24805, 9.40000,   0.00000, 0.00000, 92.00000, -1, -1, -1, 500);
	CreateDynamicObject(16133, 2811.99780, -6010.72900, 9.40000,   0.00000, 0.00000, 242.00000, -1, -1, -1, 500);
	CreateDynamicObject(16133, 2779.46362, -5861.32959, 9.40000,   0.00000, 0.00000, 129.98840, -1, -1, -1, 500);
	CreateDynamicObject(16133, 2767.26416, -5992.32080, 9.40000,   0.00000, 0.00000, 217.99620, -1, -1, -1, 500);
	CreateDynamicObject(16133, 2752.14502, -5902.65234, 9.40000,   0.00000, 0.00000, 144.00000, -1, -1, -1, 500);
	CreateDynamicObject(16133, 2745.71289, -5951.49072, 9.40000,   0.00000, 0.00000, 176.00000, -1, -1, -1, 500);
	CreateDynamicObject(16685, 3208.53101, -5800.44385, 10.70000,   0.28020, 0.00000, 88.01150, -1, -1, -1, 500);
	CreateDynamicObject(16685, 3206.30103, -5944.20020, 10.70000,   0.27470, 0.00000, 88.00600, -1, -1, -1, 500);
	CreateDynamicObject(16685, 3200.76392, -6143.39893, 10.70000,   0.00000, 0.00000, 270.01099, -1, -1, -1, 500);
	CreateDynamicObject(16685, 3159.19995, -5960.10107, 10.70000,   0.27470, 0.00000, 90.01100, -1, -1, -1, 500);
	CreateDynamicObject(16685, 3158.79004, -5793.27197, 10.70000,   0.28560, 0.00000, 88.01150, -1, -1, -1, 500);
	CreateDynamicObject(16685, 3148.57593, -6121.82813, 10.67700,   0.00000, 0.00000, 270.01099, -1, -1, -1, 500);
	CreateDynamicObject(16685, 3096.34912, -6122.03223, 10.70000,   0.19780, 0.00000, 270.01099, -1, -1, -1, 500);
	CreateDynamicObject(16685, 3075.59399, -5788.32080, 10.70000,   0.28560, 0.00000, 68.01090, -1, -1, -1, 500);
	CreateDynamicObject(16685, 3044.36011, -6099.11084, 10.70000,   0.33510, 0.00000, 270.01099, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2992.35791, -6098.21582, 10.70000,   0.19780, 0.00000, 270.01099, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2977.39990, -5950.89990, 10.80000,   0.28560, 0.00000, 180.01649, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2977.39990, -5743.20020, 10.78000,   0.24720, 0.00000, 180.01649, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2977.19995, -5795.30078, 10.80000,   0.28560, 0.00000, 180.01649, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2977.00000, -5847.50000, 10.78000,   0.29660, 0.00000, 180.01649, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2976.89990, -5899.39990, 10.78000,   0.28560, 0.00000, 180.01649, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2976.89990, -6003.00000, 10.76900,   0.29110, 0.00000, 180.01649, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2960.39990, -5695.79980, 10.80000,   0.24720, 0.00000, 180.01649, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2940.18799, -6060.40381, 10.70000,   0.01650, 0.00000, 270.01099, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2918.08105, -5657.60791, 10.80000,   0.24720, 0.00000, 180.01649, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2897.29199, -5853.29688, 10.70000,   0.18680, 0.00000, 184.00549, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2888.26196, -6027.52686, 10.70000,   0.19780, 0.00000, 270.01651, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2871.93994, -5978.31982, 10.70000,   0.18680, 0.00000, 180.00549, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2865.26611, -5906.86084, 10.70000,   0.18680, 0.00000, 180.00549, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2856.80005, -5823.50000, 10.50000,   0.20000, 0.00000, 90.01650, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2854.69189, -5952.35400, 10.70000,   0.18680, 0.00000, 180.00549, -1, -1, -1, 500);
	CreateDynamicObject(16685, 2836.13989, -6022.30713, 10.50000,   0.19780, 0.00000, 270.01651, -1, -1, -1, 500);
	CreateDynamicObject(3578, 7154.51123, -10507.41016, 23.32500,   0.00000, 0.00000, 272.95480, -1, -1, -1, 500);
	CreateDynamicObject(3578, 7168.26123, -10507.74023, 23.32500,   0.00000, 0.00000, 261.94061, -1, -1, -1, 500);
	CreateDynamicObject(3666, 7091.00000, -10896.29980, 12.50000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(688, 3200.93335, -6100.51709, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(688, 3186.00000, -6088.39990, 10.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(688, 3148.71338, -6079.70654, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(690, 3110.60864, -6134.41797, 10.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(690, 3086.16138, -6138.75439, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(690, 3085.92554, -6048.92529, 10.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(690, 3066.94971, -6119.70264, 10.60000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(690, 3050.58276, -6039.53271, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(690, 3041.71997, -6113.69092, 10.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(690, 3019.50000, -6103.79980, 10.80000,   0.00000, 0.00000, 32.00000, -1, -1, -1, 500);
	CreateDynamicObject(690, 2867.11743, -6080.48340, 10.50000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(690, 2856.14258, -6066.70557, 10.60000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(694, 3168.00000, -6085.10010, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(695, 2925.38037, -6043.42969, 10.80000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(696, 3005.30005, -6093.00000, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(696, 2993.39990, -6095.10010, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(696, 2984.89990, -6085.00000, 10.80000,   0.00000, 0.00000, 260.00000, -1, -1, -1, 500);
	CreateDynamicObject(696, 2972.00000, -6082.79980, 10.70000,   0.00000, 0.00000, 260.00000, -1, -1, -1, 500);
	CreateDynamicObject(696, 2962.74268, -6076.72803, 10.70000,   0.00000, 0.00000, 260.00000, -1, -1, -1, 500);
	CreateDynamicObject(696, 2950.22119, -6071.59570, 10.70000,   0.00000, 0.00000, 109.99690, -1, -1, -1, 500);
	CreateDynamicObject(696, 2938.22119, -6061.66211, 10.70000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, 3114.63013, -5871.31006, 10.90000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(791, 7118.10010, -10903.00000, 10.30000,   0.00000, 0.00000, 39.99570, -1, -1, -1, 500);
	CreateDynamicObject(791, 3197.19995, -5912.89990, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(791, 3093.38501, -5907.86279, 10.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(791, 3014.50000, -5935.39990, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(791, 2959.19995, -5932.20020, 10.70000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, 3013.89990, -6133.30078, 11.00000,   0.00000, 0.00000, 59.99630, -1, -1, -1, 500);
	CreateDynamicObject(8171, 2894.30005, -6064.29980, 11.00000,   0.00000, 0.00000, 59.99630, -1, -1, -1, 500);
	CreateDynamicObject(827, 7173.55615, -10508.03027, 25.33800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 3174.30103, -6147.89990, 11.00000,   0.00000, 0.00000, 251.99890, -1, -1, -1, 500);
	CreateDynamicObject(8343, 3060.80103, -5841.30078, 10.97000,   0.00000, 0.00000, 215.99670, -1, -1, -1, 500);
	CreateDynamicObject(8343, 3000.60010, -5880.70020, 10.99900,   0.00000, 0.00000, 116.39470, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2977.10107, -5992.20020, 10.98000,   0.00000, 0.00000, 339.99939, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2966.00000, -6029.89990, 11.00000,   0.00000, 0.00000, 71.99890, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2915.39990, -5719.70020, 10.98000,   0.00000, 0.00000, 276.99829, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2895.10010, -6037.00000, 11.02200,   0.00000, 0.00000, 59.99630, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2831.50000, -5881.20020, 10.93000,   0.00000, 0.00000, 325.99731, -1, -1, -1, 500);
	CreateDynamicObject(8344, 3173.08081, -5778.09473, 10.96000,   0.00000, 0.00000, 160.00000, -1, -1, -1, 500);
	CreateDynamicObject(8344, 3141.89990, -6179.29980, 10.98000,   0.00000, 0.00000, 60.00000, -1, -1, -1, 500);
	CreateDynamicObject(8344, 3096.00000, -5761.89990, 11.00000,   0.00000, 0.00000, 279.99759, -1, -1, -1, 500);
	CreateDynamicObject(8344, 3076.00000, -5980.10107, 11.00000,   0.00000, 0.00000, 63.99540, -1, -1, -1, 500);
	CreateDynamicObject(8344, 2857.69995, -6025.70020, 11.00000,   359.89999, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8344, 2801.10010, -5933.00000, 11.02900,   359.79129, 0.00000, 341.97690, -1, -1, -1, 500);
	CreateDynamicObject(8355, 3150.10010, -5912.10010, 11.00000,   0.00000, 0.00000, 339.99799, -1, -1, -1, 500);
	CreateDynamicObject(8355, 3070.21997, -6088.89990, 11.00000,   0.00000, 0.00000, 72.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2953.10010, -5795.10010, 11.01900,   0.00000, 0.00000, 7.99800, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2924.39990, -5881.50000, 10.94000,   0.00000, 0.00000, 76.99770, -1, -1, -1, 500);
	CreateDynamicObject(996, 3043.10010, -6144.50000, 10.65000,   0.00000, 0.00000, 59.99630, -1, -1, -1, 500);
	CreateDynamicObject(996, 3035.50000, -6157.70020, 10.65000,   0.00000, 0.00000, 60.00000, -1, -1, -1, 500);
//	CreateDynamicObject(5004, 2809.69458, -5649.09717, 10.76300,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3233.30884, -5741.04346, 9.70000,   0.00000, 0.00000, 185.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3222.51538, -5716.72949, 9.70000,   0.00000, 0.00000, 207.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3098.08472, -5693.00928, 10.60000,   0.00000, 0.00000, 261.97690, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3056.20166, -5707.41699, 10.60000,   0.00000, 0.00000, 287.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3025.69971, -5737.84424, 10.60000,   0.00000, 0.00000, 316.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3013.66577, -5765.01221, 10.60000,   0.00000, 0.00000, 338.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3089.38110, -5670.90771, 10.60000,   0.00000, 0.00000, 164.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3082.17773, -5648.59766, 10.60000,   0.00000, 0.00000, 164.17999, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3049.60083, -5616.93311, 10.60000,   0.00000, 0.00000, 250.75999, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3013.67773, -5617.24561, 10.60000,   0.00000, 0.00000, 251.25999, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2972.41699, -5617.54004, 10.60000,   0.00000, 0.00000, 250.74001, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2931.39673, -5618.56299, 10.60000,   0.00000, 0.00000, 251.25999, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2894.49023, -5617.16113, 10.60000,   0.00000, 0.00000, 250.80000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2853.52246, -5617.21777, 10.60000,   0.00000, 0.00000, 251.25999, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2811.72461, -5617.18945, 10.60000,   0.00000, 0.00000, 250.75999, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2769.97144, -5615.30225, 10.60000,   0.00000, 0.00000, 251.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2740.60522, -5642.66650, 10.60000,   0.00000, 0.00000, 338.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2739.31836, -5681.69873, 10.60000,   0.00000, 0.00000, 337.44000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2739.25146, -5722.23047, 10.60000,   0.00000, 0.00000, 345.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2740.59009, -5764.55859, 10.60000,   0.00000, 0.00000, 360.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2764.23804, -5804.46484, 10.60000,   0.00000, 0.00000, 62.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2817.77637, -5805.20410, 10.60000,   0.00000, 0.00000, 42.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3194.54370, -6241.13379, 9.70000,   0.00000, 0.00000, 105.00000, -1, -1, -1, 500);
	CreateDynamicObject(791, 3123.34595, -5851.23633, 10.00000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, 3132.25732, -5810.08936, 10.90000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16092, 3046.99194, -5869.51416, 11.32740,   0.00000, 0.00000, 26.00000, -1, -1, -1, 500);
	CreateDynamicObject(16092, 3052.89014, -5881.65771, 11.32740,   0.00000, 0.00000, 26.00000, -1, -1, -1, 500);
	CreateDynamicObject(16092, 3058.78882, -5893.79102, 11.32740,   0.00000, 0.00000, 26.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 3044.83789, -5867.21875, 18.82430,   0.00000, 0.00000, 118.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 3047.43042, -5872.56494, 18.82430,   0.00000, 0.00000, 118.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 3050.76001, -5879.33643, 18.82430,   0.00000, 0.00000, 118.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 3053.35034, -5884.67480, 18.82430,   0.00000, 0.00000, 118.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 3056.61914, -5891.44482, 18.82430,   0.00000, 0.00000, 118.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 3059.20337, -5896.82080, 18.82430,   0.00000, 0.00000, 118.00000, -1, -1, -1, 500);
	CreateDynamicObject(8682, 2896.48706, -5895.01855, 11.47260,   0.00000, 0.00000, 76.64000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2952.70386, -5908.30029, 11.59770,   0.00000, 0.00000, 77.02000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2977.62622, -5914.07959, 11.59770,   0.00000, 0.00000, 77.02000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3002.84082, -5917.73193, 11.59770,   0.00000, 0.00000, 86.54000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3027.70972, -5914.34033, 11.59770,   0.00000, 0.00000, 109.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3050.99072, -5903.96191, 11.59770,   0.00000, 0.00000, 119.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3072.39014, -5890.04834, 11.59770,   0.00000, 0.00000, 127.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3088.89355, -5871.21436, 11.59770,   0.00000, 0.00000, 150.56000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3096.73950, -5847.37598, 11.59770,   0.00000, 0.00000, 173.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3094.99121, -5822.32910, 11.59770,   0.00000, 0.00000, 195.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3206.91748, -5820.54102, 11.59770,   0.00000, 0.00000, 149.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3164.28125, -5805.96436, 11.59770,   0.00000, 0.00000, 175.00000, -1, -1, -1, 500);
	CreateDynamicObject(8682, 3184.87280, -5873.72705, 11.47260,   0.00000, 0.00000, -20.06000, -1, -1, -1, 500);
	CreateDynamicObject(8682, 3147.75635, -5860.94336, 11.47260,   0.00000, 0.00000, -20.06000, -1, -1, -1, 500);
	CreateDynamicObject(8682, 3157.84448, -5947.71680, 11.47260,   0.00000, 0.00000, -20.06000, -1, -1, -1, 500);
	CreateDynamicObject(8682, 3123.58569, -5927.67480, 11.47260,   0.00000, 0.00000, -19.76000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3134.67236, -6000.14795, 11.59770,   0.00000, 0.00000, 142.67999, -1, -1, -1, 500);
	CreateDynamicObject(982, 3115.68994, -6016.51074, 11.59770,   0.00000, 0.00000, 119.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3091.75610, -6023.93506, 11.59770,   0.00000, 0.00000, 95.54000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3066.72559, -6021.62842, 11.59770,   0.00000, 0.00000, 74.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3042.91235, -6012.45264, 11.59770,   0.00000, 0.00000, 64.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3027.50464, -5961.51221, 11.59770,   0.00000, 0.00000, 64.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3003.47144, -5953.25293, 11.59770,   0.00000, 0.00000, 78.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2978.44482, -5953.26025, 11.59770,   0.00000, 0.00000, 102.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2955.32739, -5963.08984, 11.59770,   0.00000, 0.00000, 124.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2935.85083, -5979.46240, 11.59770,   0.00000, 0.00000, 136.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2928.05078, -6039.32568, 11.59770,   0.00000, 0.00000, 208.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2943.19653, -6059.56836, 11.59770,   0.00000, 0.00000, 225.60001, -1, -1, -1, 500);
	CreateDynamicObject(982, 2964.03491, -6073.70215, 11.59770,   0.00000, 0.00000, 246.00000, -1, -1, -1, 500);
	CreateDynamicObject(8682, 3018.52344, -6092.70605, 11.47260,   0.00000, 0.00000, 72.12000, -1, -1, -1, 500);
	CreateDynamicObject(8682, 3074.80737, -6069.68018, 11.47260,   0.00000, 0.00000, 71.96000, -1, -1, -1, 500);
	CreateDynamicObject(8682, 3104.13452, -6120.31006, 11.47260,   0.00000, 0.00000, 72.12000, -1, -1, -1, 500);
	CreateDynamicObject(8682, 3130.19971, -6087.70215, 11.47260,   0.00000, 0.00000, 71.96000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3184.06055, -6108.00977, 11.59770,   0.00000, 0.00000, 240.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 3150.87646, -6136.51074, 11.47480,   0.00000, 0.00000, -30.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 3157.88623, -6142.38623, 11.47480,   0.00000, 0.00000, -50.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3205.49707, -6121.92188, 11.59770,   0.00000, 0.00000, 234.00000, -1, -1, -1, 500);
	CreateDynamicObject(8682, 3062.62964, -6138.58643, 11.47260,   0.00000, 0.00000, 59.92000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3113.57056, -6165.49072, 11.59770,   0.00000, 0.00000, 70.00000, -1, -1, -1, 500);
	CreateDynamicObject(8682, 2984.71802, -6093.63525, 11.47260,   0.00000, 0.00000, 60.12000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2934.67407, -6064.79834, 11.59770,   0.00000, 0.00000, 59.86000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2788.56226, -5801.99756, 10.60000,   0.00000, 0.00000, 68.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3142.53979, -5759.80615, 9.40000,   0.00000, 0.00000, 265.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3161.69214, -5791.90674, 9.40000,   0.00000, 0.00000, 146.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3112.25903, -5766.22510, 9.40000,   0.00000, 0.00000, 265.88000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3091.24072, -5795.81006, 9.40000,   0.00000, 0.00000, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2852.50000, -5833.85645, 9.40000,   0.00000, 0.00000, 62.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2902.18555, -5845.48779, 9.40000,   0.00000, 0.00000, 62.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2925.13403, -5821.75879, 9.40000,   0.00000, 0.00000, 170.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3056.28345, -5968.64453, 9.40000,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3100.25488, -5964.63086, 9.40000,   0.00000, 0.00000, 138.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2823.11694, -5903.43115, 9.40000,   0.00000, 0.00000, -55.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2821.74414, -5951.16943, 9.40000,   0.00000, 0.00000, 69.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2859.97241, -5958.29443, 9.40000,   0.00000, 0.00000, 51.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2865.80396, -5897.20117, 9.40000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 3012.68262, -6004.89160, 9.40000,   0.00000, 0.00000, -131.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2983.60449, -6017.56738, 9.40000,   0.00000, 0.00000, 61.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2986.45728, -6034.37744, 9.40000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3019.87671, -6051.79395, 11.59770,   0.00000, 0.00000, 72.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2916.54932, -6016.59863, 9.40000,   0.00000, 0.00000, 157.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2912.51221, -6051.99658, 11.59770,   0.00000, 0.00000, 60.04000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2898.53589, -6033.13232, 11.59770,   0.00000, 0.00000, 13.00000, -1, -1, -1, 500);
	CreateDynamicObject(16133, 2851.28589, -6037.74219, 9.40000,   0.00000, 0.00000, 5.00000, -1, -1, -1, 500);
//End дрифт-трасса 5
//Start дрифт-трасса 6
	ObjGam[24] = CreateObject(6959, 2405.04004, -4115.22998, 12.72000,   0.00000, 0.00000, 0.00000);

	CreateDynamicObject(619, 2238.60010, -4423.79004, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(9907, 2369.38989, -4151.12988, -7.04000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2193.70996, -4353.20996, 12.68000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2193.63989, -4352.54980, 12.56000,   0.00000, 0.00000, 171.00000, -1, -1, -1, 500);
	CreateDynamicObject(5147, 2358.69995, -4189.97021, 22.50400,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2445.39990, -4230.49023, 12.68500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2465.00000, -4217.29004, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2203.21997, -4371.47998, 12.56000,   0.00000, 0.00000, 149.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2238.84009, -4468.43994, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2426.45996, -4216.89014, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2308.87012, -4502.81982, 12.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(972, 2394.71997, -4171.64014, 12.69000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, 2405.04004, -4155.22998, 12.72000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2463.35010, -3970.94995, 13.47000,   0.00000, 0.00000, 89.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2290.97998, -4494.70020, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(972, 2398.61011, -4098.62012, 12.69000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2220.55005, -4454.20020, 12.68500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2465.05005, -4237.41016, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2204.53003, -4376.22998, 13.42000,   0.00000, 0.00000, -97.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2238.59009, -4491.72021, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2203.05005, -4437.10986, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2426.27002, -4236.04980, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2290.62012, -4520.56006, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2501.34009, -3900.14990, 13.47000,   0.00000, 0.00000, 170.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2327.64990, -4548.25000, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2202.75000, -4458.47021, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2239.38989, -4508.62988, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2505.39990, -3936.21997, 13.47000,   0.00000, 0.00000, -7.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2202.42993, -4477.83008, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2291.40991, -4560.54980, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2239.22998, -4528.39990, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2202.91992, -4498.35010, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2238.87012, -4546.45996, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2167.58008, -4346.12988, 13.42000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2324.71997, -4610.33984, 13.47000,   0.00000, 0.00000, 84.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2227.47998, -4338.06982, 13.42000,   0.00000, 0.00000, 124.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2139.63989, -4348.64014, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2201.22998, -4515.04004, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2292.15991, -4598.02002, 13.47000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3516, 2434.20996, -4161.93994, 15.85000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2326.16992, -4616.00000, 12.56000,   0.00000, 0.00000, -52.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2322.21997, -4621.14014, 13.47000,   0.00000, 0.00000, 71.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2239.13013, -4567.39209, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(972, 2415.11011, -4098.64990, 12.69000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2224.47998, -4331.41016, 12.56000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2574.27002, -3907.75000, 12.56000,   0.00000, 0.00000, 25.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2277.23999, -4626.41016, 13.47000,   0.00000, 0.00000, -152.00000, -1, -1, -1, 500);
	CreateDynamicObject(9907, 2414.21851, -4102.12988, -40.37600,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2202.33008, -4535.87988, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2316.93994, -4633.08984, 13.47000,   0.00000, 0.00000, 57.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2284.84009, -4618.29004, 12.68500,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1263, 2426.64990, -4161.93994, 16.07000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2285.55005, -4619.56982, 13.47000,   0.00000, 0.00000, -129.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2121.21997, -4346.77002, 13.45000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2211.17993, -4322.66016, 13.42000,   0.00000, 0.00000, 147.00000, -1, -1, -1, 500);
	CreateDynamicObject(5532, 2407.33008, -4150.22021, 20.74000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2239.70996, -4590.37988, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(18452, 2413.10010, -4170.22021, 15.64000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1676, 2413.86011, -4173.12012, 14.47000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2202.10010, -4555.66992, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2093.80005, -4342.91992, 13.45000,   0.00000, 0.00000, -20.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2308.98999, -4643.54004, 13.47000,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2295.56006, -4206.81982, 6.27000,   0.00000, 0.00000, -107.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2193.79004, -4312.12012, 12.56000,   0.00000, 0.00000, 28.00000, -1, -1, -1, 500);
	CreateDynamicObject(972, 2410.71997, -4171.64014, 12.69000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2162.85010, -4312.29004, 13.42000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(972, 2387.88989, -4146.18018, 12.56000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2271.65991, -4626.66992, 12.56000,   0.00000, 0.00000, 55.00000, -1, -1, -1, 500);
	CreateDynamicObject(16362, 2445.47998, -4145.60010, 15.69000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2081.88989, -4336.97021, 13.45000,   0.00000, 0.00000, -32.00000, -1, -1, -1, 500);
	CreateDynamicObject(9907, 2369.38989, -4102.12988, -7.04000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1263, 2445.43994, -4161.85010, 16.12000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2464.97998, -4261.22021, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2074.59009, -4334.79980, 12.56000,   0.00000, 0.00000, 193.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2425.90991, -4261.20996, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2202.54004, -4576.75000, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2271.43994, -4662.22021, 13.47000,   0.00000, 0.00000, 7.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2071.62305, -4328.99902, 13.45000,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2266.52002, -4629.27979, 13.47000,   0.00000, 0.00000, 182.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2243.76001, -4615.47021, 12.56000,   0.00000, 0.00000, -18.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2305.26001, -4649.81982, 12.56000,   0.00000, 0.00000, -86.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2465.14990, -4276.10010, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2678.13989, -4184.20020, 13.48000,   0.00000, 0.00000, 184.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2098.82007, -4306.16016, 13.45000,   0.00000, 0.00000, -215.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2255.61011, -4627.70996, 13.47000,   0.00000, 0.00000, 160.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2246.41992, -4621.91992, 13.47000,   0.00000, 0.00000, 137.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2062.92993, -4319.08008, 13.45000,   0.00000, 0.00000, -57.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2425.75000, -4277.50000, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2298.94995, -4651.83008, 13.47000,   0.00000, 0.00000, 33.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2193.52002, -4374.35986, 0.24000,   0.00000, 0.00000, -23.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2146.07007, -4215.00000, 2.77000,   0.00000, 0.00000, -107.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2202.68994, -4602.35010, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(9907, 2480.88989, -4151.12988, -7.04000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2056.27002, -4306.72998, 13.45000,   0.00000, 0.00000, -70.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2086.91992, -4287.95020, 13.45000,   0.00000, 0.00000, 97.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2464.82007, -4294.72998, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2089.50000, -4271.00000, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2087.56006, -4265.72998, 13.45000,   0.00000, 0.00000, 81.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2050.60010, -4286.31006, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2097.89990, -4264.81006, 0.02000,   0.00000, 0.00000, -24.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2052.81006, -4278.91992, 13.45000,   0.00000, 0.00000, -97.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2465.17993, -4309.16016, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2055.39990, -4266.16016, 13.45000,   0.00000, 0.00000, -106.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2425.63989, -4310.41992, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2091.15991, -4242.00977, 13.45000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2214.88989, -4208.58008, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2243.76001, -4208.41992, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2186.87988, -4208.87012, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2056.75000, -4255.64014, 13.45000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2263.37012, -4208.35986, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2392.84009, -4322.68994, -1.42000,   0.00000, 0.00000, -65.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2425.55005, -4328.47021, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2465.35010, -4329.81006, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2463.14990, -4341.72021, 13.46000,   0.00000, 0.00000, 86.42000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2203.70996, -4365.35986, 13.42000,   0.00000, 0.00000, -72.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2421.35010, -4347.79980, 12.68000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2093.48999, -4225.29004, 12.56000,   0.00000, 0.00000, -69.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2420.31006, -4350.37012, 13.46000,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2460.94995, -4350.62988, 13.46000,   0.00000, 0.00000, 65.84000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2363.89990, -4341.97998, 13.46000,   0.00000, 0.00000, 171.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2374.35010, -4344.87012, 13.46000,   0.00000, 0.00000, 158.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2093.05005, -4220.39990, 13.45000,   0.00000, 0.00000, 69.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2280.10010, -4196.72998, 13.63000,   0.00000, 0.00000, 6.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2198.87012, -4355.89990, 13.42000,   0.00000, 0.00000, -51.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2353.36011, -4340.87012, 13.46000,   0.00000, 0.00000, 177.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2382.87988, -4351.33008, 13.46000,   0.00000, 0.00000, 137.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2343.13989, -4341.41992, 13.46000,   0.00000, 0.00000, 189.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2411.86011, -4356.35010, 13.46000,   0.00000, 0.00000, -154.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2336.11011, -4341.18018, 12.56000,   0.00000, 0.00000, 76.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2457.04004, -4359.00000, 13.46000,   0.00000, 0.00000, 64.08000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2399.12988, -4357.68994, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2392.12988, -4357.06982, 13.46000,   0.00000, 0.00000, 160.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2401.97998, -4358.75977, 13.46000,   0.00000, 0.00000, 182.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2333.27002, -4344.27979, 13.46000,   0.00000, 0.00000, 200.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2452.37988, -4366.68994, 13.46000,   0.00000, 0.00000, 53.50000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2301.05005, -4370.29980, 13.46000,   0.00000, 0.00000, -121.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2323.84009, -4348.58984, 13.46000,   0.00000, 0.00000, 209.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2262.42993, -4179.70020, 13.23000,   0.00000, 0.00000, 155.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2274.20996, -4181.47021, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2446.48999, -4373.89990, 13.46000,   0.00000, 0.00000, 48.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2057.31006, -4222.18994, 13.45000,   0.00000, 0.00000, -95.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2439.45996, -4379.68018, 13.46000,   0.00000, 0.00000, 30.84000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2291.91992, -4409.93018, 13.46000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2315.17993, -4354.41992, 13.46000,   0.00000, 0.00000, -141.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2431.76001, -4384.83008, 13.46000,   0.00000, 0.00000, 36.70000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2280.20996, -4172.83984, 10.02000,   0.00000, 0.00000, 65.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2169.12988, -4171.58984, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2356.50000, -4374.64990, 13.46000,   0.00000, 0.00000, -9.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2059.94995, -4209.52002, 13.45000,   0.00000, 0.00000, -110.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2365.04175, -4377.41211, 13.46000,   0.00000, 0.00000, -26.84000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2061.39990, -4203.04004, 12.56000,   0.00000, 0.00000, 113.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2350.81006, -4375.20020, 12.56000,   0.00000, 0.00000, -104.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2423.58008, -4389.20996, 13.46000,   0.00000, 0.00000, 19.60000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2130.43994, -4167.75977, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2372.17993, -4383.08008, 13.46000,   0.00000, 0.00000, -50.08000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2073.57715, -4187.30518, 13.45000,   0.00000, 0.00000, -134.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2344.54004, -4375.72998, 13.46000,   0.00000, 0.00000, 18.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2307.26001, -4361.72998, 13.46000,   0.00000, 0.00000, -133.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2414.65991, -4391.93018, 13.46000,   0.00000, 0.00000, 14.32000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2089.02002, -4173.62988, 12.56000,   0.00000, 0.00000, 78.00000, -1, -1, -1, 500);
	CreateDynamicObject(5333, 2584.01001, -4189.95020, 21.49000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2379.44995, -4388.43018, 13.46000,   0.00000, 0.00000, -22.60000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2405.83008, -4392.81982, 13.46000,   0.00000, 0.00000, -2.76000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2570.01001, -4046.17993, 13.48000,   0.00000, 0.00000, -55.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2396.76001, -4392.22021, 13.46000,   0.00000, 0.00000, -4.80000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2711.20996, -4146.70996, 13.48000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2202.96997, -4630.54004, 13.44000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2286.60010, -4658.52002, 13.47000,   0.00000, 0.00000, 20.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2587.33008, -4064.82007, 12.56000,   0.00000, 0.00000, 191.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2279.31006, -4662.93994, 12.56000,   0.00000, 0.00000, -113.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2388.26001, -4391.06006, 13.46000,   0.00000, 0.00000, -10.66000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2336.67993, -4380.25000, 13.46000,   0.00000, 0.00000, 41.62000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2202.75000, -4641.77979, 13.44000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2258.89990, -4662.25977, 13.47000,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2245.90991, -4659.62012, 13.47000,   0.00000, 0.00000, -20.00000, -1, -1, -1, 500);
	CreateDynamicObject(971, 2235.10010, -4657.00000, 15.92000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2251.39990, -4662.95020, 12.56000,   0.00000, 0.00000, -149.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2332.94995, -4385.54980, 12.68500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(971, 2226.35010, -4657.02002, 15.92000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2615.05005, -4036.37988, 13.48000,   0.00000, 0.00000, 169.00000, -1, -1, -1, 500);
	CreateDynamicObject(971, 2217.52002, -4657.02002, 15.92000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2330.53003, -4386.81006, 13.46000,   0.00000, 0.00000, 52.38000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2350.01001, -4393.50000, 3.78000,   0.00000, 0.00000, 66.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2202.52002, -4652.68018, 13.44000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(971, 2208.77002, -4657.02002, 15.92000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(971, 2205.27002, -4657.02002, 15.92000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2296.62988, -4379.91992, 13.46000,   0.00000, 0.00000, -111.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2705.37012, -4167.39990, 13.48000,   0.00000, 0.00000, -131.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2326.77002, -4394.89014, 13.46000,   0.00000, 0.00000, 77.28000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2664.35010, -4035.61011, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2710.12012, -4158.02002, 13.48000,   0.00000, 0.00000, -103.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2325.75000, -4404.06006, 13.46000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2293.60010, -4389.54980, 13.46000,   0.00000, 0.00000, -101.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2711.91992, -4135.27979, 13.48000,   0.00000, 0.00000, -98.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2716.73999, -4203.77979, 13.48000,   0.00000, 0.00000, 33.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2608.83008, -3957.17993, 13.46000,   0.00000, 0.00000, 98.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2236.98999, -4358.18994, 13.42000,   0.00000, 0.00000, 105.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2700.34009, -4075.59009, 12.56000,   0.00000, 0.00000, 176.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2681.89990, -4035.72998, 13.48000,   0.00000, 0.00000, 181.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2239.65991, -4362.72021, 12.56000,   0.00000, 0.00000, -25.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2292.12988, -4399.77979, 13.46000,   0.00000, 0.00000, -94.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2714.50000, -4112.45020, 13.48000,   0.00000, 0.00000, -88.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2238.82007, -4369.00000, 13.42000,   0.00000, 0.00000, 96.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2701.26001, -4073.62012, 13.48000,   0.00000, 0.00000, -30.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2238.12988, -4380.93994, 13.42000,   0.00000, 0.00000, 82.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2748.60010, -4101.89014, 13.48000,   0.00000, 0.00000, 86.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2728.14990, -4049.05005, 12.56000,   0.00000, 0.00000, 6.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2734.37012, -4057.78003, 13.48000,   0.00000, 0.00000, 131.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2745.29004, -4076.65991, 13.48000,   0.00000, 0.00000, 108.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2748.68994, -4082.62012, 12.56000,   0.00000, 0.00000, -22.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2740.47998, -4062.30005, 12.56000,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2702.37012, -4075.92993, 12.68500,   0.00000, 0.00000, -88.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2553.27002, -3939.17993, 13.46000,   0.00000, 0.00000, -11.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2742.11011, -4171.62012, 13.48000,   0.00000, 0.00000, 69.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2700.36011, -4035.22998, 12.56000,   0.00000, 0.00000, 33.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2233.12012, -4347.68994, 13.42000,   0.00000, 0.00000, 115.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2446.22900, -4056.09009, 12.68500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2238.87012, -4446.91016, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2562.82007, -3942.93994, 13.46000,   0.00000, 0.00000, -33.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2189.75000, -4349.02979, 13.42000,   0.00000, 0.00000, -24.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2744.77002, -4159.72998, 13.48000,   0.00000, 0.00000, 84.00000, -1, -1, -1, 500);
//	CreateDynamicObject(6959, 2405.04004, -4115.22998, 12.72000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2706.98999, -4039.46997, 13.48000,   0.00000, 0.00000, 162.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2527.68994, -3903.68994, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2579.75000, -3912.76001, 13.46000,   0.00000, 0.00000, 149.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2327.19995, -4509.50977, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2541.45532, -3937.37891, 13.46000,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2590.37988, -3920.62988, 13.46000,   0.00000, 0.00000, 136.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2537.08008, -3938.84009, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2553.54004, -3904.52002, 13.46000,   0.00000, 0.00000, 174.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2529.46997, -3936.80005, 13.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2203.85010, -4387.12988, 13.45000,   0.00000, 0.00000, -87.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2727.34009, -4195.14014, 13.48000,   0.00000, 0.00000, 44.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2664.46997, -4199.47021, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2173.57007, -4348.16992, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2714.65991, -4101.75977, 13.48000,   0.00000, 0.00000, -93.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2599.12866, -3931.22900, 13.46000,   0.00000, 0.00000, 124.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2515.65991, -3947.34009, 2.20000,   0.00000, 0.00000, 251.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2671.14990, -4181.24023, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2179.06006, -4346.52979, 13.42000,   0.00000, 0.00000, -4.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2709.00000, -4080.35010, 13.48000,   0.00000, 0.00000, -53.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2495.03003, -3934.66992, 13.47000,   0.00000, 0.00000, -10.00000, -1, -1, -1, 500);
	CreateDynamicObject(3516, 2452.96997, -4161.87988, 15.85000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2488.00000, -3899.19995, 13.47000,   0.00000, 0.00000, 184.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2506.86011, -3940.25000, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2545.87988, -3902.77002, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2513.05005, -3903.33008, 13.47000,   0.00000, 0.00000, 161.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2517.67993, -3936.79004, 13.46000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2483.93994, -3934.95996, 13.47000,   0.00000, 0.00000, 14.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2719.40991, -4204.56982, 12.56000,   0.00000, 0.00000, -98.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2463.91992, -3958.94995, 13.47000,   0.00000, 0.00000, 86.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2471.14990, -3944.70996, 12.69000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2693.64990, -4211.77002, 13.48000,   0.00000, 0.00000, -3.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2473.88989, -3940.51001, 13.47000,   0.00000, 0.00000, 42.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2567.40991, -3907.32007, 13.46000,   0.00000, 0.00000, 162.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2223.25000, -4666.31006, 3.49000,   0.00000, 0.00000, -111.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2466.93994, -3949.06006, 13.47000,   0.00000, 0.00000, 60.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2476.43994, -3901.29004, 13.47000,   0.00000, 0.00000, 194.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2290.87012, -4609.87988, 13.47000,   0.00000, 0.00000, -106.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2465.98999, -3904.65991, 13.47000,   0.00000, 0.00000, -158.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2429.58008, -3968.11011, 13.47000,   0.00000, 0.00000, -86.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2456.39990, -3910.08008, 13.47000,   0.00000, 0.00000, -144.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2429.52002, -3957.18994, 13.47000,   0.00000, 0.00000, -95.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2447.84009, -3917.51001, 13.47000,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2269.88989, -4608.85986, 0.71000,   0.00000, 0.00000, 254.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2220.02002, -4329.77979, 13.42000,   0.00000, 0.00000, 136.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2431.37988, -3945.70996, 13.47000,   0.00000, 0.00000, -104.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2675.23999, -4202.25977, 13.48000,   0.00000, 0.00000, -36.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2440.59009, -3925.89990, 13.47000,   0.00000, 0.00000, -126.00000, -1, -1, -1, 500);
	CreateDynamicObject(1676, 2413.34009, -4167.60986, 14.47000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2435.09009, -3935.21997, 13.47000,   0.00000, 0.00000, -115.00000, -1, -1, -1, 500);
	CreateDynamicObject(7520, 2397.87012, -4121.18018, 12.95000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2593.62988, -4015.79004, 13.48000,   0.00000, 0.00000, 104.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2108.38989, -4346.14990, 13.45000,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2597.14990, -3999.51001, 12.56000,   0.00000, 0.00000, -70.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2199.29004, -4316.08008, 13.42000,   0.00000, 0.00000, 160.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2610.16992, -4033.47998, 12.56000,   0.00000, 0.00000, 16.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2187.11011, -4313.10010, 13.42000,   0.00000, 0.00000, 173.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2726.62012, -4050.03003, 13.48000,   0.00000, 0.00000, 139.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2748.18994, -4089.15991, 13.48000,   0.00000, 0.00000, 98.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2174.98999, -4312.18994, 13.42000,   0.00000, 0.00000, 179.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2745.28003, -4146.87012, 13.48000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2693.09009, -4036.41992, 13.48000,   0.00000, 0.00000, 174.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2154.79004, -4310.31006, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2712.85010, -4095.96997, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2220.62988, -4592.39014, 12.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2667.59009, -4183.16016, 13.48000,   0.00000, 0.00000, 166.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2615.87988, -4071.75000, 13.48000,   0.00000, 0.00000, -4.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2426.08008, -4341.47021, 13.46000,   0.00000, 0.00000, -111.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2119.46997, -4311.20020, 13.45000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2445.44067, -4092.33008, 12.69000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2240.78003, -4612.22998, 13.47000,   0.00000, 0.00000, 103.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2108.79004, -4310.20020, 13.45000,   0.00000, 0.00000, 170.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2574.33008, -3958.94995, 13.46000,   0.00000, 0.00000, -79.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2573.09009, -3964.33008, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2097.19995, -4305.08008, 12.68500,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2095.40991, -4301.33008, 12.56000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2574.45996, -3968.91992, 13.46000,   0.00000, 0.00000, -97.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2687.89990, -4181.49023, 13.48000,   0.00000, 0.00000, 207.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2714.05005, -4090.68994, 13.48000,   0.00000, 0.00000, -77.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2091.01001, -4298.52002, 13.45000,   0.00000, 0.00000, 125.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2597.86011, -3994.47998, 13.48000,   0.00000, 0.00000, 49.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2086.57007, -4276.37988, 13.45000,   0.00000, 0.00000, 87.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2053.13989, -4294.02002, 13.45000,   0.00000, 0.00000, -83.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2597.73999, -4025.56006, 13.48000,   0.00000, 0.00000, 121.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2656.27002, -4071.62988, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2565.11011, -3984.22998, 12.56000,   0.00000, 0.00000, 103.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2596.83008, -4020.04004, 12.56000,   0.00000, 0.00000, -22.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2090.00000, -4254.00000, 13.45000,   0.00000, 0.00000, 79.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2640.82007, -4034.50000, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2605.14551, -4032.69897, 13.48000,   0.00000, 0.00000, 150.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2607.19995, -3985.01001, 12.56000,   0.00000, 0.00000, -66.00000, -1, -1, -1, 500);
	CreateDynamicObject(972, 2387.88989, -4160.43018, 12.56000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2747.77002, -4152.83008, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2262.44995, -4205.50000, 13.45000,   0.00000, 0.00000, 36.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2155.73706, -4209.22266, 16.29000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2717.59009, -4043.89990, 13.48000,   0.00000, 0.00000, 153.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2091.13989, -4231.04980, 13.45000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2566.32007, -3948.44995, 12.56000,   0.00000, 0.00000, 172.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2134.64990, -4209.39014, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2609.18994, -3948.90991, 12.56000,   0.00000, 0.00000, -26.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2690.36011, -4176.68994, 12.56000,   0.00000, 0.00000, 65.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2270.65991, -4199.97021, 13.45000,   0.00000, 0.00000, 32.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2140.62012, -4206.16016, 13.45000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2746.62012, -4113.62012, 13.48000,   0.00000, 0.00000, 75.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2278.97998, -4199.75000, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2570.09009, -3949.65991, 13.46000,   0.00000, 0.00000, -53.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2129.90991, -4204.22998, 13.45000,   0.00000, 0.00000, -18.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2605.32007, -3943.29004, 13.46000,   0.00000, 0.00000, 109.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2210.73999, -4190.00977, 12.68000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2055.08008, -4240.27002, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2604.41992, -4031.29004, 12.69000,   0.00000, 0.00000, 92.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2097.96997, -4213.16992, 12.68000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2607.03003, -3975.85010, 13.46000,   0.00000, 0.00000, 86.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2119.37012, -4202.20996, 13.45000,   0.00000, 0.00000, -2.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2710.36011, -4132.20020, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2099.67993, -4210.22998, 13.45000,   0.00000, 0.00000, 46.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2696.96997, -4175.39990, 13.48000,   0.00000, 0.00000, -141.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2107.38989, -4206.31982, 12.56000,   0.00000, 0.00000, -98.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2704.73999, -4167.39990, 12.69000,   0.00000, 0.00000, 180.44000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2108.65991, -4204.06006, 13.45000,   0.00000, 0.00000, 23.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2707.26001, -4162.04980, 12.56000,   0.00000, 0.00000, 91.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2271.92993, -4182.81006, 13.45000,   0.00000, 0.00000, 169.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2282.21997, -4183.93018, 13.66000,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2253.27002, -4174.81006, 13.45000,   0.00000, 0.00000, 149.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2226.06006, -4171.12012, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2200.84009, -4171.64990, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2255.33008, -4172.87012, 12.56000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2750.72998, -4096.37988, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2146.96997, -4172.77979, 13.45000,   0.00000, 0.00000, 179.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2748.50000, -4113.58984, 12.56000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2665.25000, -4197.72021, 13.48000,   0.00000, 0.00000, -10.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2136.62988, -4171.12988, 13.45000,   0.00000, 0.00000, 163.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2735.63989, -4184.72998, 13.48000,   0.00000, 0.00000, 57.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2065.47998, -4197.87988, 13.45000,   0.00000, 0.00000, -121.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2626.54004, -4036.91992, 13.48000,   0.00000, 0.00000, 184.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2735.80005, -4187.20020, 12.56000,   0.00000, 0.00000, -78.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2123.20996, -4167.93018, 13.45000,   0.00000, 0.00000, 174.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2713.87988, -4124.18018, 13.48000,   0.00000, 0.00000, -99.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2683.80005, -4208.06982, 13.48000,   0.00000, 0.00000, -32.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2108.95996, -4168.52979, 13.45000,   0.00000, 0.00000, 189.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2703.33008, -4126.18994, 9.05000,   0.00000, 0.00000, 158.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2083.46997, -4178.60986, 13.45000,   0.00000, 0.00000, -145.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2604.41992, -3985.44995, 13.46000,   0.00000, 0.00000, 62.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2096.41992, -4172.06982, 13.45000,   0.00000, 0.00000, -159.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2677.70996, -4071.32007, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2559.48999, -4028.58008, 12.56000,   0.00000, 0.00000, 149.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2563.42993, -4033.93994, 13.48000,   0.00000, 0.00000, -67.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2559.17993, -4021.52002, 13.48000,   0.00000, 0.00000, -79.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2579.62012, -4056.37988, 13.48000,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2590.01001, -4063.75000, 13.48000,   0.00000, 0.00000, -31.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2558.43311, -4010.00488, 13.48000,   0.00000, 0.00000, -98.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2602.96997, -4069.37988, 13.48000,   0.00000, 0.00000, -18.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2561.53003, -3998.67993, 13.48000,   0.00000, 0.00000, -109.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2553.61011, -3989.62988, 7.55000,   0.00000, 0.00000, 131.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2626.60010, -4073.52002, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2656.69995, -4172.83984, 9.55000,   0.00000, 0.00000, 69.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2593.19995, -4004.45996, 13.48000,   0.00000, 0.00000, 80.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2571.48999, -3978.36011, 13.46000,   0.00000, 0.00000, -118.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2684.34058, -4210.91016, 12.56000,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 2563.55005, -3944.68994, 12.68500,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2705.03003, -4209.27979, 13.48000,   0.00000, 0.00000, 20.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2680.48999, -4069.68994, 13.48000,   0.00000, 0.00000, 4.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2617.12988, -3977.59009, 0.60000,   0.00000, 0.00000, -47.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2691.60010, -4070.15991, 13.48000,   0.00000, 0.00000, -10.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 2740.75000, -4066.34009, 13.48000,   0.00000, 0.00000, 121.00000, -1, -1, -1, 500);
	CreateDynamicObject(619, 2425.67383, -4295.05078, 12.56000,   0.00000, 0.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(16121, 2678.83936, -4217.10400, 9.55000,   0.00000, 0.00000, -137.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 2566.13940, -3988.14404, 13.48000,   0.00000, 0.00000, -119.00000, -1, -1, -1, 500);
	CreateDynamicObject(19121, 2358.18652, -4182.56104, 23.60710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19121, 2358.11621, -4197.12793, 23.60710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19121, 2584.13501, -4182.55566, 23.60710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19121, 2584.21362, -4197.12988, 23.60710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
//End дрифт-трасса 6
//Start дрифт-трасса 7
	ObjGam[25] = CreateObject(8357, 9121.086, 3000.896, 10.19590,   0.00000, 0.00000, 0.00000);

	CreateDynamicObject(8357, 9200.926, 3000.896, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8357, 9161.028, 3000.896, 10.20590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
//	CreateDynamicObject(8357, 9121.086, 3000.896, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8357, 9200.926, 2788.075, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16092, 9208.566, 2893.587, 10.78290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16092, 9193.426, 2893.591, 10.78290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 9208.626, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 9211.611, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 9205.649, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 9202.665, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 9199.458, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 9196.475, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 9193.491, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 9190.485, 2894.504, 18.25410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8344, 9225.166, 2616.854, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8344, 9313.605, 2546.352, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9357.161, 2437.153, 10.19590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9449.787, 2432.568, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 9473.83, 2549.988, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9497.939, 2667.424, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9590.564, 2662.248, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9627.488, 2573.534, 10.19590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9720.121, 2568.253, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 9744.167, 2685.664, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9768.291, 2803.097, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9856.998, 2840.448, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9861.575, 2933.073, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 9744.169, 2957.125, 10.19590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9630.658, 2938.216, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9582.504, 2841.667, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9518.304, 2837.97, 10.20590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9480.968, 2926.674, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9415.187, 2922.958, 10.18590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9367.047, 2826.405, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9302.947, 2822.78, 10.20590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9307.97, 3128.246, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8357, 9283.865, 2973.555, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9400.604, 3122.95, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9454.898, 3065.642, 10.20590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9547.525, 3060.339, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9595.654, 3156.885, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9688.287, 3151.798, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9725.593, 3063.095, 10.19590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9818.22, 3058.276, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 9842.26, 3175.693, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9823.277, 3289.222, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9726.729, 3337.37, 10.19590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9689.267, 3426.078, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9596.642, 3431.106, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9548.465, 3334.558, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9455.833, 3339.249, 10.19590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9418.746, 3427.956, 10.19590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9326.11, 3432.972, 10.19590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9277.961, 3336.439, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 9190.992, 3302.363, 10.20590,   0.00000, 0.00000, -7.00000, -1, -1, -1, 500);
	CreateDynamicObject(8357, 9161.028, 3153.941, 10.19590,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3980, 9061.878, 2958.007, 20.05450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3980, 9061.869, 3084.163, 20.07450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9116.242, 3124.294, 17.14070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5763, 9143.918, 2861.753, 10.05630,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9167.545, 2835.479, -21.68720,   0.00000, 0.00000, 99.70770, -1, -1, -1, 500);
	CreateDynamicObject(5763, 9072.545, 2861.768, 10.07630,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9124.121, 3156.428, 17.14070,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9226.719, 3284.594, 20.59230,   0.00000, 0.00000, 154.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9236.512, 3282.678, 20.59230,   0.00000, 0.00000, 156.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9249.765, 3278.972, 20.59230,   0.00000, 0.00000, 174.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9247.001, 3338.928, 15.40059,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9233.352, 3350.542, 15.40059,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9218.219, 3354.787, 15.40059,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9240.236, 3372.245, 15.50720,   0.00000, 0.00000, 84.00000, -1, -1, -1, 500);
	CreateDynamicObject(3466, 9195.922, 3120.55, 12.69030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3444, 9195.981, 3147.329, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9220.021, 3121.608, 13.61200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9193.686, 3176.292, 13.05400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3445, 9190.134, 3206.063, 13.19680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9191.35, 3237.614, 16.69050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9126.104, 3188.682, 17.16170,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9126.173, 3222.791, 17.16170,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9125.314, 3255.816, 17.17170,   0.00000, 0.00000, 86.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9129.255, 3287.266, 17.17170,   0.00000, 0.00000, 80.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9140.064, 3319.967, 17.17170,   0.00000, 0.00000, 64.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9164.967, 3348.371, 17.17170,   0.00000, 0.00000, 34.00000, -1, -1, -1, 500);
	CreateDynamicObject(3466, 9235.738, 3093.914, 12.69030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3444, 9235.785, 3067.129, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9231.213, 3036.492, 16.69050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3466, 9235.842, 3006.128, 12.69030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9231.281, 2975.719, 16.69050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9231.287, 2941.602, 16.69050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3466, 9235.698, 2911.281, 12.69030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3444, 9235.553, 2884.675, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3466, 9235.268, 2858.036, 12.69030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3444, 9235.426, 2831.389, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3466, 9235.335, 2804.73, 12.69030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3444, 9235.768, 2778.107, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9231.25, 2747.523, 16.69050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3444, 9235.552, 2717.149, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9231, 2686.526, 16.69050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3444, 9235.537, 2656.045, 12.68810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9328.692, 2617.259, 16.70050,   0.00000, 0.00000, -25.00000, -1, -1, -1, 500);
	CreateDynamicObject(3980, 9142.214, 2760.461, 20.05450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9166.25, 2671.174, -21.68720,   0.00000, 0.00000, 99.70770, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9165.905, 2633.006, -21.68720,   0.00000, 0.00000, 99.70770, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9175.326, 2611.105, 14.02070,   0.00000, 0.00000, 187.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9308.514, 2538.166, 13.94769,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9180.988, 2590.077, 14.02070,   0.00000, 0.00000, 203.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9192.212, 2571.369, 14.02070,   0.00000, 0.00000, 219.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9208.973, 2556.765, 14.02070,   0.00000, 0.00000, 239.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9229.428, 2548.504, 14.02070,   0.00000, 0.00000, 257.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9277.598, 2524.52, 12.92678,   0.00000, 0.00000, 190.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9251.219, 2546.579, 14.02070,   0.00000, 0.00000, -87.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9272.812, 2551.169, 14.02070,   0.00000, 0.00000, -69.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9309.42, 2506.445, 13.64200,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9303.636, 2451.322, 13.64200,   0.00000, 0.00000, 186.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9262.616, 2638.724, 12.92680,   0.00000, 0.00000, -4.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9266.592, 2633.538, 12.94680,   0.00000, 0.00000, -4.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9227.599, 2632.763, 14.02070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9349.365, 2590.716, 16.70050,   0.00000, 0.00000, 39.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9364.727, 2555.877, 16.70050,   0.00000, 0.00000, 9.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9367.311, 2521.031, 16.70050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9372.763, 2539.86, 10.07581,   0.00000, 0.00000, 189.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9361.063, 2578.429, 10.07580,   0.00000, 0.00000, 219.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9367.772, 2583.89, 10.07580,   0.00000, 0.00000, 219.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9272.219, 2611.96, 14.02070,   0.00000, 0.00000, 108.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9293.724, 2615.668, 14.02070,   0.00000, 0.00000, 92.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9300.839, 2609.623, 10.07580,   0.00000, 0.00000, -14.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9312.357, 2606.75, 10.07580,   0.00000, 0.00000, 64.85600, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9309.479, 2487.352, 14.02070,   0.00000, 0.00000, 251.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9305.031, 2474.469, 14.03070,   0.00000, 0.00000, 253.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9313.266, 2421.547, 13.64200,   0.00000, 0.00000, 210.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9334.983, 2398.388, 13.64200,   0.00000, 0.00000, 236.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9364.604, 2387.013, 13.64200,   0.00000, 0.00000, -98.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9389.061, 2379.713, 13.64200,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9195.421, 3351.498, 14.02070,   0.00000, 0.00000, 100.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9202.365, 3345.339, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9331.967, 3392.355, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9182.273, 3266.122, 10.07580,   0.00000, 0.00000, -96.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9192.746, 3272.498, 14.02070,   0.00000, 0.00000, 84.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9194.979, 3286.198, 14.01070,   0.00000, 0.00000, 78.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9194.86, 3304.245, 10.07580,   0.00000, 0.00000, -132.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9395.236, 2472.703, 12.92680,   0.00000, 0.00000, -15.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9413.031, 2468.635, 12.94680,   0.00000, 0.00000, 83.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9535.096, 2630.363, 12.94680,   0.00000, 0.00000, -103.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9552.602, 2625.118, 12.92680,   0.00000, 0.00000, -195.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9661.979, 2614.672, 12.92680,   0.00000, 0.00000, -4.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9685.143, 2605.931, 12.94680,   0.00000, 0.00000, 79.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9807.362, 2768.329, 12.94680,   0.00000, 0.00000, -91.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9814.682, 2874.512, 12.92680,   0.00000, 0.00000, 87.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9825.686, 2894.985, 12.94680,   0.00000, 0.00000, 177.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9668.713, 2902.885, 12.94680,   0.00000, 0.00000, -92.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9344.021, 3091.056, 12.94680,   0.00000, 0.00000, -98.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9369.649, 3080.929, 12.92680,   0.00000, 0.00000, 185.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9490.811, 3103.161, 12.92680,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9511.157, 3097.319, 12.94680,   0.00000, 0.00000, 81.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9630.764, 3118.824, 12.94680,   0.00000, 0.00000, -100.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9653.438, 3111.295, 12.92680,   0.00000, 0.00000, -185.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9762.885, 3102.733, 12.92680,   0.00000, 0.00000, -11.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9781.844, 3096.059, 12.94680,   0.00000, 0.00000, 82.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9788.773, 3250.106, 12.94680,   0.00000, 0.00000, 179.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9763.922, 3373.405, 12.94680,   0.00000, 0.00000, -9.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9651.913, 3389.694, 12.94680,   0.00000, 0.00000, 172.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9633.379, 3394.581, 12.92680,   0.00000, 0.00000, -97.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9511.098, 3370.538, 12.92680,   0.00000, 0.00000, 85.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9492.701, 3376.273, 12.94680,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9380.34, 3392.839, 12.94680,   0.00000, 0.00000, 169.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9364.269, 3397.736, 12.92680,   0.00000, 0.00000, -93.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9330.646, 3356.673, 13.94770,   0.00000, 0.00000, 176.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9307.219, 3297.264, 20.59230,   0.00000, 0.00000, -138.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9319.994, 3311.502, 20.59230,   0.00000, 0.00000, -124.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9268.639, 3386.53, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9268.913, 3400.374, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9269.998, 3415.312, 20.59230,   0.00000, 0.00000, 86.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9294.559, 3475.615, 17.16170,   0.00000, 0.00000, 42.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9282.438, 3450.939, 14.02070,   0.00000, 0.00000, 62.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9327.729, 3493.201, 17.16170,   0.00000, 0.00000, 14.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9366.592, 3491.126, 17.16170,   0.00000, 0.00000, -20.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9454.864, 3467.009, 17.16170,   0.00000, 0.00000, -42.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9364.383, 2485.296, 13.94770,   0.00000, 0.00000, 172.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9377.262, 2504.162, 10.07580,   0.00000, 0.00000, 181.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9368.869, 2504.004, 10.07580,   0.00000, 0.00000, 181.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9481.795, 3397.418, -21.68720,   0.00000, 0.00000, -99.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9380.892, 3425.502, 13.94770,   0.00000, 0.00000, 84.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9475.396, 3409.445, 14.02070,   0.00000, 0.00000, -86.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9472.427, 3426.157, 14.02070,   0.00000, 0.00000, -74.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9466.808, 3441.462, 14.02070,   0.00000, 0.00000, -66.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9421.819, 3484.662, 17.16170,   0.00000, 0.00000, -14.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9374.895, 3470.051, 10.07580,   0.00000, 0.00000, 5.02960, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9395.029, 3481.252, 14.02070,   0.00000, 0.00000, 3.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9380.876, 3470.553, 10.07580,   0.00000, 0.00000, 5.02960, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9354.897, 3429.427, 14.02070,   0.00000, 0.00000, -194.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9401.816, 3367.215, 13.94770,   0.00000, 0.00000, -7.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9417.678, 3413.482, 15.40060,   0.00000, 0.00000, 100.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9418.305, 3407.274, 15.40060,   0.00000, 0.00000, 104.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9415.771, 3399.567, 15.40060,   0.00000, 0.00000, 84.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9409.68, 3392.763, 15.40060,   0.00000, 0.00000, 110.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9509.746, 3338.646, 13.94770,   0.00000, 0.00000, 261.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9484.873, 3342.398, 14.02070,   0.00000, 0.00000, -8.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9462.468, 3372.686, 14.02070,   0.00000, 0.00000, -134.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9456.914, 3363.8, 14.01070,   0.00000, 0.00000, -110.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9445.132, 3360.125, 10.07580,   0.00000, 0.00000, -78.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9447.563, 3348.449, 10.07580,   0.00000, 0.00000, -48.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9408.145, 3328.891, 16.69050,   0.00000, 0.00000, 207.00000, -1, -1, -1, 500);
	CreateDynamicObject(3445, 9431.148, 3302.436, 13.22680,   0.00000, 0.00000, -127.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9461.499, 3286.219, 13.07400,   0.00000, 0.00000, -189.00000, -1, -1, -1, 500);
	CreateDynamicObject(3444, 9491.857, 3281.161, 12.72810,   0.00000, 0.00000, -91.00000, -1, -1, -1, 500);
	CreateDynamicObject(3466, 9530.653, 3274.919, 12.73030,   0.00000, 0.00000, -87.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9560.214, 3287.182, 13.64200,   0.00000, 0.00000, -63.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9516.664, 3288.943, 10.07580,   0.00000, 0.00000, 157.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9398.93, 3343.416, 10.07580,   0.00000, 0.00000, 27.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9391.291, 3339.51, 10.07580,   0.00000, 0.00000, 27.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9417.905, 3309.001, 10.07580,   0.00000, 0.00000, 53.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9414.167, 3304.062, 10.07580,   0.00000, 0.00000, 53.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9446.102, 3289.161, 10.07580,   0.00000, 0.00000, 81.03440, -1, -1, -1, 500);
	CreateDynamicObject(987, 9475.708, 3279.962, 10.07580,   0.00000, 0.00000, 260.70001, -1, -1, -1, 500);
	CreateDynamicObject(987, 9477.642, 3291.742, 10.07580,   0.00000, 0.00000, 260.70001, -1, -1, -1, 500);
	CreateDynamicObject(987, 9478.394, 3296.352, 10.07580,   0.00000, 0.00000, 260.70001, -1, -1, -1, 500);
	CreateDynamicObject(987, 9505.555, 3293.541, 10.07580,   0.00000, 0.00000, 268.32401, -1, -1, -1, 500);
	CreateDynamicObject(987, 9505.202, 3281.614, 10.07580,   0.00000, 0.00000, 268.32401, -1, -1, -1, 500);
	CreateDynamicObject(987, 9505.099, 3278.049, 10.07580,   0.00000, 0.00000, 268.32401, -1, -1, -1, 500);
	CreateDynamicObject(987, 9551.277, 3272.697, 10.07580,   0.00000, 0.00000, 117.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9548.588, 3277.991, 10.07580,   0.00000, 0.00000, 117.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9544.195, 3272.719, 10.07580,   0.00000, 0.00000, -87.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9543.574, 3284.622, 10.07580,   0.00000, 0.00000, -87.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9604.107, 3314.285, 10.07580,   0.00000, 0.00000, -34.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9543.355, 3288.495, 10.07580,   0.00000, 0.00000, -87.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9377.295, 2540.581, 10.07581,   0.00000, 0.00000, 189.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9317.412, 2617.55, 10.07580,   0.00000, 0.00000, 64.85600, -1, -1, -1, 500);
	CreateDynamicObject(987, 9321.276, 2625.797, 10.07580,   0.00000, 0.00000, 64.85600, -1, -1, -1, 500);
	CreateDynamicObject(987, 9300.408, 2520.917, 10.07580,   0.00000, 0.00000, 0.16800, -1, -1, -1, 500);
	CreateDynamicObject(987, 9293.28, 2464.812, 10.07580,   0.00000, 0.00000, 6.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9295.907, 2465.076, 10.07580,   0.00000, 0.00000, 6.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9298.258, 2429.64, 10.07580,   0.00000, 0.00000, 30.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9302.681, 2432.193, 10.07580,   0.00000, 0.00000, 30.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9317.984, 2399.116, 10.07580,   0.00000, 0.00000, 56.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9349.06, 2380.217, 10.07580,   0.00000, 0.00000, 82.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9321.017, 2403.584, 10.07580,   0.00000, 0.00000, 56.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9349.871, 2385.891, 10.07580,   0.00000, 0.00000, 82.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9380.554, 2447.948, -21.68720,   0.00000, 0.00000, 3.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9415.357, 2437.194, 14.02070,   0.00000, 0.00000, -12.48000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9559.196, 2652.718, -21.68720,   0.00000, 0.00000, 183.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9526.723, 2665.258, 15.40060,   0.00000, 0.00000, 172.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9642.286, 2578.604, 15.40060,   0.00000, 0.00000, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9656.258, 2582.898, -21.68720,   0.00000, 0.00000, 5.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9575.059, 2657.028, 15.40060,   0.00000, 0.00000, 156.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9580.665, 2655.669, 15.40060,   0.00000, 0.00000, 176.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9585.553, 2652.218, 15.40060,   0.00000, 0.00000, 158.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9685.327, 2595.419, 20.59230,   0.00000, 0.00000, -69.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9636.158, 2580.648, 15.40060,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9850.203, 2893.84, -21.66720,   0.00000, 0.00000, 88.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9846.141, 2856.304, -21.68720,   0.00000, 0.00000, 96.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9850.731, 2848.404, 15.40060,   0.00000, 0.00000, 150.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9349.258, 3115.901, -21.66720,   0.00000, 0.00000, 177.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9612.732, 3154.936, 15.40060,   0.00000, 0.00000, 2.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9374.688, 3101.1, -21.68720,   0.00000, 0.00000, 97.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9480.581, 3087.176, -21.68720,   0.00000, 0.00000, -80.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9504.307, 3073.338, -21.66720,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9605.564, 3105.901, 20.59230,   0.00000, 0.00000, -91.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9604.926, 3091.514, 20.59230,   0.00000, 0.00000, -91.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9603.638, 3075.934, 20.59230,   0.00000, 0.00000, -95.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9632.161, 3152.568, 13.94770,   0.00000, 0.00000, 79.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9657.646, 3148.356, 14.02070,   0.00000, 0.00000, 174.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9670.624, 3147.003, 14.01070,   0.00000, 0.00000, 174.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9679.687, 3143.657, 14.02070,   0.00000, 0.00000, 146.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9731.014, 3071.969, 15.40060,   0.00000, 0.00000, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9775.92, 3070.439, -21.66720,   0.00000, 0.00000, -1.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9738.897, 3076.323, -21.68720,   0.00000, 0.00000, 1.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9735.729, 3069.663, 15.40060,   0.00000, 0.00000, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9740.617, 3067.597, 15.40060,   0.00000, 0.00000, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9747.955, 3067.23, 15.40060,   0.00000, 0.00000, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9637.745, 3420.312, -21.68720,   0.00000, 0.00000, 179.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9600.986, 3405.405, 15.40060,   0.00000, 0.00000, -26.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9201.371, 3220.475, 10.07580,   0.00000, 0.00000, -179.16800, -1, -1, -1, 500);
	CreateDynamicObject(987, 9197.725, 3191.75, 10.07580,   0.00000, 0.00000, -2.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9209.683, 3160.708, 10.07580,   0.00000, 0.00000, -84.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9229.068, 3107.278, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9238.71, 3107.273, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9238.748, 3019.368, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9238.591, 2924.52, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9238.425, 2730.506, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6391, 9662.178, 3405.569, -21.66720,   0.00000, 0.00000, 96.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9428.721, 2375.151, 13.07400,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9405.64, 2380.262, 14.02070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9398.447, 2377.432, 10.07580,   0.00000, 0.00000, -92.00000, -1, -1, -1, 500);
	CreateDynamicObject(3445, 9457.889, 2377.765, 13.22120,   0.00000, 0.00000, -157.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9479.345, 2387.682, 16.69580,   0.00000, 0.00000, -141.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9408.025, 2393.551, 9.98270,   -90.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9498.912, 2412.525, 17.16930,   0.00000, 0.00000, -117.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9504.338, 2448.339, 13.07400,   0.00000, 0.00000, -94.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9509.812, 2479.494, 17.16930,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9501.932, 2508.983, 13.64200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9509.81, 2533.854, 16.69580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9505.465, 2559.794, 13.07400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9507.219, 2583.909, 13.64200,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9443.778, 2371.066, 10.07580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9443.771, 2375.198, 10.07580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9443.767, 2387.127, 10.07580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9466.971, 2379.19, 10.07580,   0.00000, 0.00000, -67.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9462.305, 2390.188, 10.07580,   0.00000, 0.00000, -67.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9460.564, 2394.267, 10.07580,   0.00000, 0.00000, -67.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9490.288, 2390.536, 10.07580,   0.00000, 0.00000, -51.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9482.772, 2399.815, 10.07580,   0.00000, 0.00000, -51.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9477.482, 2406.308, 10.07580,   0.00000, 0.00000, -51.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9510.09, 2423.574, 10.07580,   0.00000, 0.00000, -27.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9499.49, 2429.002, 10.07580,   0.00000, 0.00000, -27.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9490.946, 2433.375, 10.07580,   0.00000, 0.00000, -27.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9502.959, 2432.71, 10.07580,   0.00000, 0.00000, 176.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9509.385, 2463.036, 10.07580,   0.00000, 0.00000, -4.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9497.494, 2463.861, 10.07580,   0.00000, 0.00000, -4.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9492.827, 2464.183, 10.07580,   0.00000, 0.00000, -4.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9514.767, 2494.503, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9511.043, 2494.517, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9514.542, 2544.32, 10.07580,   0.00000, 0.00000, -2.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9149.773, 3344.017, 10.07580,   0.00000, 0.00000, 124.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9156.432, 3334.144, 10.07580,   0.00000, 0.00000, 124.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9161.573, 3326.492, 10.07580,   0.00000, 0.00000, 124.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9446.998, 3480.773, 10.07580,   0.00000, 0.00000, 48.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9439.009, 3471.904, 10.07580,   0.00000, 0.00000, 48.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9432.684, 3464.902, 10.07580,   0.00000, 0.00000, 48.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9408.432, 3493.084, 10.07580,   0.00000, 0.00000, 76.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9405.553, 3481.505, 10.07580,   0.00000, 0.00000, 76.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9403.175, 3471.968, 10.07580,   0.00000, 0.00000, 76.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9354.184, 3500.879, 10.07580,   0.00000, 0.00000, 70.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9350.117, 3489.687, 10.07580,   0.00000, 0.00000, 70.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9346.858, 3480.728, 10.07580,   0.00000, 0.00000, 70.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9312.005, 3494.334, 10.07580,   0.00000, 0.00000, 104.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9314.884, 3482.767, 10.07580,   0.00000, 0.00000, 104.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9317.193, 3473.504, 10.07580,   0.00000, 0.00000, 104.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9280.086, 3469.201, 10.07580,   0.00000, 0.00000, 132.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9288.076, 3460.34, 10.07580,   0.00000, 0.00000, 132.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9294.598, 3453.098, 10.07580,   0.00000, 0.00000, 132.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9129.008, 3308.656, 10.07580,   0.00000, 0.00000, 154.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9139.732, 3303.429, 10.07580,   0.00000, 0.00000, 154.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9147.574, 3299.606, 10.07580,   0.00000, 0.00000, 154.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9121.794, 3273.364, 10.07580,   0.00000, 0.00000, 170.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9133.536, 3271.291, 10.07580,   0.00000, 0.00000, 170.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9143.097, 3269.615, 10.07580,   0.00000, 0.00000, 170.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9119.38, 3241.194, 10.07580,   0.00000, 0.00000, 176.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9131.274, 3240.353, 10.07580,   0.00000, 0.00000, 176.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9140.979, 3240.422, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9111.363, 3239.85, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9444.476, 2472.317, 13.94769,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9444.472, 2507.311, 13.94769,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9502.799, 2620.348, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9503.473, 2655.145, 14.02070,   0.00000, 0.00000, -116.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9444.98, 2653.97, 14.02070,   0.00000, 0.00000, -94.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9502.826, 2600.549, 14.00070,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9512.885, 2593.22, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9437.379, 2539.921, 17.17180,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9437.347, 2570.204, 17.17180,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9437.335, 2600.462, 17.17180,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9437.334, 2630.724, 17.17180,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9470.616, 2707.563, 13.07400,   0.00000, 0.00000, 40.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9447.988, 2670.666, 14.02070,   0.00000, 0.00000, -106.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9454.76, 2686.567, 14.02070,   0.00000, 0.00000, -120.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9494.234, 2719.73, 14.02070,   0.00000, 0.00000, -160.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9522.828, 2721.677, 13.94770,   0.00000, 0.00000, -94.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9501.895, 2646.344, 14.00070,   0.00000, 0.00000, -84.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9544.449, 2716.059, 14.02070,   0.00000, 0.00000, -209.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9563.623, 2713.688, 13.94770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9432.423, 2524.885, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9441.776, 2524.868, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9444.49, 2524.869, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9483.045, 2717.096, 10.07580,   0.00000, 0.00000, -50.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9456.553, 2701.025, 10.07580,   0.00000, 0.00000, 130.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9464.207, 2691.869, 10.07580,   0.00000, 0.00000, 130.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9467.251, 2688.236, 10.07580,   0.00000, 0.00000, 130.00000, -1, -1, -1, 500);
	CreateDynamicObject(3445, 9593.619, 2716.473, 13.22900,   0.00000, 0.00000, -15.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9618.678, 2701.464, 13.08100,   0.00000, 0.00000, -36.00000, -1, -1, -1, 500);
	CreateDynamicObject(3445, 9640.844, 2681.269, 13.22900,   0.00000, 0.00000, -60.00000, -1, -1, -1, 500);
	CreateDynamicObject(3445, 9649.195, 2660.608, 13.22900,   0.00000, 0.00000, -76.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9644.225, 2629.175, 13.94770,   0.00000, 0.00000, 170.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9630.826, 2691.575, 10.07580,   0.00000, 0.00000, -126.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9638.303, 2690.086, 10.07580,   0.00000, 0.00000, 30.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9627.98, 2684.131, 10.07580,   0.00000, 0.00000, 30.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9623.951, 2681.799, 10.07580,   0.00000, 0.00000, 30.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9649.278, 2669.733, 10.07580,   0.00000, 0.00000, 14.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9637.697, 2666.867, 10.07580,   0.00000, 0.00000, 14.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9633.151, 2665.75, 10.07580,   0.00000, 0.00000, 14.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9608.938, 2713.546, 10.07580,   0.00000, 0.00000, 54.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9601.928, 2703.891, 10.07580,   0.00000, 0.00000, 54.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9599.074, 2699.977, 10.07580,   0.00000, 0.00000, 54.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9585.639, 2720.936, 10.07580,   0.00000, 0.00000, 75.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9582.552, 2709.417, 10.07580,   0.00000, 0.00000, 75.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9581.096, 2703.936, 10.07580,   0.00000, 0.00000, 75.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9573.563, 2603.777, 13.94770,   0.00000, 0.00000, -8.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9578.669, 2565.092, 13.94770,   0.00000, 0.00000, 23.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9603.955, 2534.983, 13.94770,   0.00000, 0.00000, 57.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9640.84, 2522.668, 13.94770,   0.00000, 0.00000, 86.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9673.551, 2519.961, 14.02070,   0.00000, 0.00000, -203.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9670.452, 2531.889, 10.07580,   0.00000, 0.00000, 183.11600, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9705.337, 2507.594, 13.64220,   0.00000, 0.00000, 183.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9695.22, 2521.378, 10.07580,   0.00000, 0.00000, 157.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9725.801, 2519.335, 14.02070,   0.00000, 0.00000, -68.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9744.729, 2530.729, 14.02070,   0.00000, 0.00000, -50.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9759.046, 2547.788, 14.02070,   0.00000, 0.00000, -30.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9767.24, 2568.037, 14.02070,   0.00000, 0.00000, -14.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9772.733, 2596.871, 13.94770,   0.00000, 0.00000, 179.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9773.036, 2632.038, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9710.049, 2625.615, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9725.747, 2587.878, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9710.061, 2636.161, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9710.121, 2646.39, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9710.145, 2656.816, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9710.111, 2709.318, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9710.121, 2719.928, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9710.152, 2730.322, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9710.25, 2740.879, 20.59230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9713.133, 2795.229, 20.59230,   0.00000, 0.00000, 84.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9716.637, 2806.653, 20.59230,   0.00000, 0.00000, 74.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9722.059, 2821.516, 20.59230,   0.00000, 0.00000, 62.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9769.067, 2859.253, 20.59230,   0.00000, 0.00000, 16.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9759.854, 2855.692, 20.59230,   0.00000, 0.00000, 22.00000, -1, -1, -1, 500);
	CreateDynamicObject(7238, 9784.553, 2861.446, 20.59230,   0.00000, 0.00000, 4.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9815.5, 2853.832, 15.40060,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9773.04, 2697.223, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9780.134, 2664.617, 17.17560,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9714.302, 2505.814, 10.07580,   0.00000, 0.00000, -87.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9713.672, 2517.729, 10.07580,   0.00000, 0.00000, -87.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9713.611, 2522.436, 10.07580,   0.00000, 0.00000, -88.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9785.06, 2679.627, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9778.604, 2679.639, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9773.001, 2679.636, 10.07580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9773.018, 2732.206, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9773.012, 2767.191, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9598.523, 3342.142, 13.94770,   0.00000, 0.00000, 171.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9591.599, 3304.611, 17.16460,   0.00000, 0.00000, -124.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9594.231, 3320.96, 10.07580,   0.00000, 0.00000, -34.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9586.098, 3326.445, 10.07580,   0.00000, 0.00000, -34.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9601.369, 3378.48, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9601.592, 3396.746, 15.40060,   0.00000, 0.00000, -20.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9811.771, 2769.614, 12.92680,   0.00000, 0.00000, -91.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9673.447, 2904.431, 12.92680,   0.00000, 0.00000, -92.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9790.031, 3246.633, 12.92680,   0.00000, 0.00000, 179.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9653.223, 3385.264, 12.92680,   0.00000, 0.00000, 172.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9762.675, 3376.941, 12.92680,   0.00000, 0.00000, -9.00000, -1, -1, -1, 500);
	CreateDynamicObject(6866, 9489.827, 3106.996, 12.94680,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9816.551, 2786.662, 14.02070,   0.00000, 0.00000, 165.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9844.938, 2786.567, 13.94770,   0.00000, 0.00000, 97.00000, -1, -1, -1, 500);
	CreateDynamicObject(3466, 9880.457, 2793.96, 12.73090,   0.00000, 0.00000, -55.00000, -1, -1, -1, 500);
	CreateDynamicObject(3444, 9901.73, 2816.979, 12.73550,   0.00000, 0.00000, -31.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9911.937, 2841.354, 13.63800,   0.00000, 0.00000, -104.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9912.193, 2868.419, 13.08270,   0.00000, 0.00000, -88.00000, -1, -1, -1, 500);
	CreateDynamicObject(3445, 9921.338, 2914.864, 13.22340,   0.00000, 0.00000, -88.00000, -1, -1, -1, 500);
	CreateDynamicObject(3488, 9920.293, 2937.679, 16.69720,   0.00000, 0.00000, -74.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9903.444, 2965.399, 17.16640,   0.00000, 0.00000, -47.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9902.685, 2894.172, 10.07580,   0.00000, 0.00000, -109.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9907.354, 2905.164, 10.07580,   0.00000, 0.00000, -113.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9915.694, 2883.516, 10.07580,   0.00000, 0.00000, 2.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9903.761, 2883.107, 10.07580,   0.00000, 0.00000, 2.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9898.728, 2882.94, 10.07580,   0.00000, 0.00000, 2.00000, -1, -1, -1, 500);
	CreateDynamicObject(3445, 9879.103, 2981.643, 13.22340,   0.00000, 0.00000, -26.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9763.447, 2989.165, 13.08270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9793.403, 2985.638, 13.63800,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9823.122, 2989.158, 13.08270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3444, 9853.701, 2989.446, 12.73550,   0.00000, 0.00000, 82.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9732.509, 2989.156, 13.08270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9701.58, 2989.156, 13.08270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9916.261, 2849.402, 10.07580,   0.00000, 0.00000, -14.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9904.672, 2852.296, 10.07580,   0.00000, 0.00000, -14.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9911.144, 2827.011, 10.07580,   0.00000, 0.00000, -31.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9900.933, 2833.164, 10.07580,   0.00000, 0.00000, -31.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9896.022, 2836.106, 10.07580,   0.00000, 0.00000, -31.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9892.953, 2799.186, 10.07580,   0.00000, 0.00000, -55.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9886.11, 2808.949, 10.07580,   0.00000, 0.00000, -55.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9883.818, 2812.224, 10.07580,   0.00000, 0.00000, -55.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9923.261, 2923.802, 10.07580,   0.00000, 0.00000, 2.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9911.327, 2923.399, 10.07580,   0.00000, 0.00000, 2.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9908.331, 2923.288, 10.07580,   0.00000, 0.00000, 2.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9921.974, 2948.945, 10.07580,   0.00000, 0.00000, 16.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9910.522, 2945.671, 10.07580,   0.00000, 0.00000, 16.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9901.446, 2943.061, 10.07580,   0.00000, 0.00000, 16.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9896.803, 2979.732, 10.07580,   0.00000, 0.00000, 43.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9888.083, 2971.604, 10.07580,   0.00000, 0.00000, 43.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9881.153, 2965.154, 10.07580,   0.00000, 0.00000, 43.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9872.157, 2987.518, 10.07580,   0.00000, 0.00000, 64.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9866.928, 2976.803, 10.07580,   0.00000, 0.00000, 64.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9864.984, 2972.801, 10.07580,   0.00000, 0.00000, 64.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9840.787, 2994.167, 10.07580,   0.00000, 0.00000, 82.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9839.124, 2982.37, 10.07580,   0.00000, 0.00000, 82.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9807.557, 2993.16, 10.07580,   0.00000, 0.00000, 87.11600, -1, -1, -1, 500);
	CreateDynamicObject(987, 9686.642, 2993.138, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9686.631, 2981.204, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9686.613, 2974.355, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9674.97, 2976.907, 10.07580,   0.00000, 0.00000, -12.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9665.326, 2983.916, 10.07580,   0.00000, 0.00000, -36.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9821.67, 2928.224, 13.94770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9786.674, 2928.245, 13.94770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3466, 9755.934, 2923.278, 12.73090,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9725.268, 2928.251, 13.94770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9690.279, 2928.256, 13.94770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3683, 9664.184, 2932.458, 15.40060,   0.00000, 0.00000, 160.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9769.125, 2920.359, 10.07580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9769.117, 2928.29, 10.07580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9647.079, 2992.599, 13.94770,   0.00000, 0.00000, -86.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9610.242, 2979.896, 13.94770,   0.00000, 0.00000, -56.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9585.505, 2949.332, 13.94770,   0.00000, 0.00000, -22.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9578.23, 2911.877, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9570.123, 2879.464, 17.16640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9577.209, 2857.192, 14.02070,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9565.248, 2864.459, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9567.244, 2864.446, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9527.741, 2844.905, 14.02070,   0.00000, 0.00000, -29.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9568.283, 2844.404, 13.98070,   0.00000, 0.00000, 19.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9574.747, 2849.267, 14.00070,   0.00000, 0.00000, 55.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9635.918, 2896.548, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9635.283, 2861.211, 13.94770,   0.00000, 0.00000, 178.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9624.582, 2823.914, 13.94770,   0.00000, 0.00000, 150.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9596.715, 2796.542, 13.94770,   0.00000, 0.00000, 119.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9559.42, 2786.183, 13.94770,   0.00000, 0.00000, 92.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9456.645, 2851.11, 17.16640,   0.00000, 0.00000, 94.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9522.725, 2788.429, 13.94770,   0.00000, 0.00000, 81.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9487.311, 2805.321, 13.94770,   0.00000, 0.00000, 48.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9468.816, 2827.013, 14.02070,   0.00000, 0.00000, 115.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9452.8, 2835.797, 10.07580,   0.00000, 0.00000, 184.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9464.697, 2836.62, 10.07580,   0.00000, 0.00000, 184.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9474.102, 2837.28, 10.07580,   0.00000, 0.00000, 184.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9546.961, 2842.547, 13.94770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9521.627, 2851.11, 14.00070,   0.00000, 0.00000, -62.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9520.008, 2859.445, 13.98070,   0.00000, 0.00000, -96.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9523.314, 2867.271, 14.02070,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9532.645, 2882.225, 14.02070,   0.00000, 0.00000, -114.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9535.327, 2911.269, 13.94770,   0.00000, 0.00000, 184.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9521.929, 2948.06, 13.94770,   0.00000, 0.00000, 216.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9490.793, 2971.941, 13.94770,   0.00000, 0.00000, -111.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9423.646, 2976.462, 13.94770,   0.00000, 0.00000, -81.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9456.742, 2981.598, 13.08270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9441.814, 2985.64, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9441.799, 2973.71, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9388.246, 2959.566, 13.94770,   0.00000, 0.00000, -48.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9367.516, 2926.357, 13.94770,   0.00000, 0.00000, -16.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9355.108, 2891.894, 17.16640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9361.948, 2859.61, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9350.23, 2876.903, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9362.154, 2876.892, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9465.278, 2877.269, 14.02070,   0.00000, 0.00000, 73.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9473.979, 2893.611, 14.02070,   0.00000, 0.00000, 51.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9478.761, 2902.964, 14.00070,   0.00000, 0.00000, 75.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9478.49, 2911.475, 13.98070,   0.00000, 0.00000, 109.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9473.457, 2918.569, 14.02070,   0.00000, 0.00000, 142.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9455.863, 2921.678, 13.94770,   0.00000, 0.00000, 88.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9433.066, 2921.167, 14.02070,   0.00000, 0.00000, -170.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9425.473, 2917.322, 14.00070,   0.00000, 0.00000, -136.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9421, 2909.599, 13.98070,   0.00000, 0.00000, -104.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9360.297, 2837.687, 14.02070,   0.00000, 0.00000, -106.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9419.512, 2887.238, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9419.518, 2852.249, 13.94770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9412.235, 2814.776, 13.94770,   0.00000, 0.00000, 158.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9355.78, 2830.944, 14.00070,   0.00000, 0.00000, 38.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9316.173, 2828.756, 14.02070,   0.00000, 0.00000, -14.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9338.184, 2827.861, 13.94770,   0.00000, 0.00000, -88.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9308.457, 2833.22, 14.00070,   0.00000, 0.00000, -46.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9304.611, 2840.809, 13.98070,   0.00000, 0.00000, -80.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9305.743, 2848.824, 14.02070,   0.00000, 0.00000, -116.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9311.258, 2876.67, 13.94770,   0.00000, 0.00000, 176.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9387.483, 2784.217, 13.94770,   0.00000, 0.00000, 124.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9350.817, 2771.233, 13.94770,   0.00000, 0.00000, 95.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9314.065, 2771.56, 13.94770,   0.00000, 0.00000, 84.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9277.674, 2785.525, 13.94770,   0.00000, 0.00000, 54.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9260.36, 2821.523, 12.81000,   0.00000, 0.00000, 110.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9265.564, 2811.175, 12.85920,   0.00000, 0.00000, -58.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9257.707, 2832.7, 12.85920,   0.00000, 0.00000, -82.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9256.816, 2844.237, 12.81000,   0.00000, 0.00000, 88.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9268.711, 2805.013, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9261.762, 2817.094, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9258.525, 2825.788, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9256.313, 2839.596, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9256.677, 2848.87, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9259.702, 2862.758, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.379, 2869.71, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.134, 2883.873, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.19, 2893.208, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.173, 2907.297, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.194, 2916.544, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.164, 2930.554, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.088, 2939.81, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.043, 2954.019, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.118, 2963.253, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.09, 2977.28, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9258.602, 2855.762, 12.85920,   0.00000, 0.00000, -102.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9263.314, 2865.834, 12.81000,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9265.798, 2876.876, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9265.689, 2900.327, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9265.58, 2923.627, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9265.489, 2946.933, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9265.507, 2970.316, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9265.701, 2888.5, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9265.67, 2911.967, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9265.522, 2935.197, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9265.499, 2958.627, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9265.606, 2981.879, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.103, 2986.49, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.121, 3000.597, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.093, 3009.873, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.133, 3024.019, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.074, 3033.283, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.047, 3056.417, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.141, 3047.219, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.021, 3070.522, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.111, 3079.764, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.106, 3093.918, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9265.536, 2993.615, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9265.559, 3016.982, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9265.458, 3040.338, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9265.485, 3063.511, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9265.506, 3086.854, 12.85920,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9265.634, 3005.293, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9265.566, 3028.715, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9265.546, 3051.842, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9265.551, 3075.237, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9265.512, 3098.572, 12.81000,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9264.981, 3103.09, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9265.58, 3117.204, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9266.53, 3126.376, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9271.348, 3139.705, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9276.26, 3147.589, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9265.589, 3110.194, 12.85920,   0.00000, 0.00000, -92.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9269.278, 3133.039, 12.85920,   0.00000, 0.00000, -109.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9281.173, 3152.839, 12.85920,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9266.313, 3121.802, 12.81000,   0.00000, 0.00000, 84.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9274.208, 3143.548, 12.81000,   0.00000, 0.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9285.479, 3158.263, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9297.765, 3176.063, 13.94770,   0.00000, 0.00000, -64.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.484, 2896.011, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.525, 2910.121, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.461, 2919.357, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.412, 2933.518, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.455, 2942.719, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.484, 2956.691, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.45, 2965.909, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9302.369, 2903.067, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9302.4, 2914.786, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9302.311, 2926.495, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9302.364, 2949.733, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9302.172, 2972.925, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9302.176, 2996.238, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9302.18, 3019.551, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9302.229, 3042.845, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9302.297, 3066.209, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.484, 2979.984, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.527, 2989.182, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.402, 3003.298, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.48, 3012.53, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.418, 3026.552, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9302.28, 2938.138, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9302.273, 2961.31, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9302.283, 2984.596, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9302.171, 3007.915, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9302.229, 3031.176, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9302.307, 3054.453, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.496, 3035.791, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.379, 3049.824, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.486, 3059.054, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.486, 3073.179, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9302.285, 3077.75, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.463, 3082.354, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9302.293, 3089.433, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.451, 3096.492, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9302.286, 3101.158, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9302.463, 3105.74, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9406.944, 3170.237, 13.94770,   0.00000, 0.00000, -109.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9325.191, 3184.835, 14.02070,   0.00000, 0.00000, 1.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9343.871, 3180.859, 14.02070,   0.00000, 0.00000, -25.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9401.315, 3083.372, 14.02070,   0.00000, 0.00000, 185.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9346.516, 3168.851, 10.07580,   0.00000, 0.00000, -20.00000, -1, -1, -1, 500);
	CreateDynamicObject(7940, 9372.672, 3178.909, 13.08270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9357.668, 3164.795, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9357.679, 3170.878, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9357.701, 3182.82, 10.07580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9438.889, 3147.46, 13.94770,   0.00000, 0.00000, -142.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9454.113, 3111.582, 13.94770,   0.00000, 0.00000, 188.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9406.021, 3062.12, 14.02070,   0.00000, 0.00000, 200.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9416.948, 3042.813, 14.02070,   0.00000, 0.00000, -141.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9433.353, 3028.039, 14.02070,   0.00000, 0.00000, -123.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9453.688, 3019.202, 14.02070,   0.00000, 0.00000, -104.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9474.906, 3016.2, 14.02070,   0.00000, 0.00000, -92.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9494.456, 3015.013, 14.00070,   0.00000, 0.00000, -95.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9511.535, 3010.926, 14.02070,   0.00000, 0.00000, -112.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9534.311, 3007.734, 14.02070,   0.00000, 0.00000, -84.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9555.713, 3013.874, 14.02070,   0.00000, 0.00000, -64.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9573.845, 3026.098, 14.02070,   0.00000, 0.00000, -48.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9587.732, 3043.253, 14.02070,   0.00000, 0.00000, -30.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9543.321, 3091.524, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9543.328, 3126.52, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9553.128, 3145.305, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9554.516, 3152.308, 12.85920,   0.00000, 0.00000, -100.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9555.748, 3159.185, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9558.792, 3165.622, 12.85920,   0.00000, 0.00000, -114.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9561.398, 3172.154, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9565.869, 3177.828, 12.85920,   0.00000, 0.00000, -126.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9569.808, 3183.56, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9575.402, 3188.078, 12.85920,   0.00000, 0.00000, -139.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9580.581, 3192.728, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9590.997, 3214.665, 17.16640,   0.00000, 0.00000, 19.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9575.198, 3214.466, 10.07580,   0.00000, 0.00000, 109.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9579.082, 3203.186, 10.07580,   0.00000, 0.00000, 109.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9582.221, 3194.05, 10.07580,   0.00000, 0.00000, 109.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9611.993, 3203.424, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9619.202, 3202.991, 12.85920,   0.00000, 0.00000, 177.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9626.134, 3202.636, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9632.534, 3199.381, 12.85920,   0.00000, 0.00000, 153.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9638.924, 3196.405, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9645.821, 3194.878, 12.85920,   0.00000, 0.00000, 175.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9652.72, 3194.554, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 9670.661, 3210.679, 17.16640,   0.00000, 0.00000, -3.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9655.924, 3216.385, 10.07580,   0.00000, 0.00000, 87.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9655.29, 3204.481, 10.07580,   0.00000, 0.00000, 87.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9654.767, 3194.841, 10.07580,   0.00000, 0.00000, 87.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9686.159, 3193.135, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9692.916, 3190.623, 12.85920,   0.00000, 0.00000, 161.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9699.454, 3188.345, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9705.439, 3184.52, 12.85920,   0.00000, 0.00000, 148.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9711.359, 3180.884, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9716.292, 3175.778, 12.85920,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9721.289, 3170.887, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9725.164, 3164.825, 12.85920,   0.00000, 0.00000, 123.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9728.87, 3158.879, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9731.226, 3152.138, 12.85920,   0.00000, 0.00000, 110.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9733.49, 3145.427, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9734.355, 3138.428, 12.85920,   0.00000, 0.00000, 97.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9735.107, 3131.441, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9734.23, 3124.458, 12.85920,   0.00000, 0.00000, 83.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9733.365, 3117.335, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9730.971, 3110.728, 12.85920,   0.00000, 0.00000, 71.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9672.334, 3095.124, 13.94770,   0.00000, 0.00000, -10.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9676.447, 3056.19, 13.94770,   0.00000, 0.00000, 22.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9701.199, 3025.66, 13.94770,   0.00000, 0.00000, 56.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9732.865, 3021.924, 10.07580,   0.00000, 0.00000, 170.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9744.762, 3021.097, 10.07580,   0.00000, 0.00000, 176.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9756.683, 3021.099, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9768.615, 3021.103, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9779.889, 3017.22, 10.07580,   0.00000, 0.00000, 161.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9791.094, 3013.151, 10.07580,   0.00000, 0.00000, 160.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9803.064, 3012.955, 10.07580,   0.00000, 0.00000, 179.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9814.859, 3014.825, 10.07580,   0.00000, 0.00000, -171.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9826.007, 3019.122, 10.07580,   0.00000, 0.00000, -159.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9836.014, 3025.636, 10.07580,   0.00000, 0.00000, -147.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9844.733, 3033.778, 10.07580,   0.00000, 0.00000, -137.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9851.562, 3043.565, 10.07580,   0.00000, 0.00000, -125.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9856.203, 3054.553, 10.07580,   0.00000, 0.00000, -113.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9859.292, 3066.103, 10.07580,   0.00000, 0.00000, -105.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9860.32, 3077.996, 10.07580,   0.00000, 0.00000, -95.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9860.318, 3089.923, 10.07580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 9166.197, 2824.67, 9.92180,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 9153.141, 3206.397, 9.92740,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9860.62, 3096.029, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.809, 3091.311, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9860.74, 3154.994, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.859, 3100.651, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.759, 3109.894, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.773, 3119.333, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.877, 3128.757, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.822, 3138.241, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.82, 3147.831, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.734, 3162.055, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.817, 3171.292, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9860.628, 3105.322, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9860.681, 3114.604, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9860.729, 3124.099, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9860.701, 3133.531, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9860.756, 3143.063, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9860.801, 3166.67, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9860.851, 3190.125, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9860.861, 3213.66, 12.81000,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9860.473, 3237.279, 12.81000,   0.00000, 0.00000, -84.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9868.565, 3258.58, 12.81000,   0.00000, 0.00000, -99.39200, -1, -1, -1, 500);
	CreateDynamicObject(980, 9860.787, 3178.364, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9860.779, 3201.921, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9860.848, 3225.422, 12.85920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9863.765, 3248.073, 12.85920,   0.00000, 0.00000, 56.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.809, 3185.363, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.888, 3194.756, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.838, 3208.965, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.833, 3218.327, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.862, 3232.528, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9860.082, 3241.946, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9867.965, 3253.844, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9869.154, 3270.197, 12.85920,   0.00000, 0.00000, 91.76800, -1, -1, -1, 500);
	CreateDynamicObject(974, 9868.057, 3281.931, 12.81000,   0.00000, 0.00000, -78.72400, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9869.397, 3263.141, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9869.145, 3277.312, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9867.285, 3286.491, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9861.901, 3299.567, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9864.515, 3292.952, 12.85920,   0.00000, 0.00000, 112.58000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9851.928, 3312.388, 12.85920,   0.00000, 0.00000, 134.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9856.846, 3307.429, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9847.077, 3317.687, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9839.31, 3322.837, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9826.48, 3328.685, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9817.397, 3330.958, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9832.908, 3325.544, 12.85920,   0.00000, 0.00000, 155.53600, -1, -1, -1, 500);
	CreateDynamicObject(980, 9810.371, 3331.238, 12.85920,   0.00000, 0.00000, 175.81200, -1, -1, -1, 500);
	CreateDynamicObject(980, 9786.855, 3331.708, 12.85920,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9859.328, 3303.368, 12.81000,   0.00000, 0.00000, -58.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9843.215, 3320.082, 12.81000,   0.00000, 0.00000, -33.04400, -1, -1, -1, 500);
	CreateDynamicObject(974, 9822.037, 3329.62, 12.81000,   0.00000, 0.00000, -14.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9798.484, 3331.711, 12.81000,   0.00000, 0.00000, -1.16000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9803.111, 3332.052, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9793.768, 3332.025, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9779.614, 3331.968, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9770.236, 3331.976, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9775.034, 3331.689, 12.81000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(980, 9763.172, 3331.528, 12.85920,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 9755.977, 3331.944, 10.06170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(974, 9751.468, 3331.919, 12.81000,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9814.404, 3092.794, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9814.403, 3127.787, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3466, 9809.434, 3158.494, 12.73090,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9806.55, 3145.295, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9814.433, 3145.294, 10.07580,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9814.437, 3189.135, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9814.438, 3224.12, 13.94770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9814.455, 3249.11, 14.02070,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9786.559, 3284.759, 13.94770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9751.571, 3284.765, 13.94770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9714.038, 3292.73, 13.94770,   0.00000, 0.00000, 66.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9684.197, 3318.207, 13.94770,   0.00000, 0.00000, 33.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9672.443, 3355.47, 13.94770,   0.00000, 0.00000, 2.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9675.034, 3383.755, 14.02070,   0.00000, 0.00000, 70.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9743.356, 3395.484, 13.94770,   0.00000, 0.00000, -188.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9737.914, 3434.256, 13.94770,   0.00000, 0.00000, -156.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9724.073, 3462.997, 13.63800,   0.00000, 0.00000, -40.00000, -1, -1, -1, 500);
	CreateDynamicObject(3445, 9614.183, 3491.074, 13.22340,   0.00000, 0.00000, 1.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9718.723, 3470.384, 10.07580,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(3446, 9706.242, 3474.645, 13.63800,   0.00000, 0.00000, -26.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9711.051, 3461.242, 10.07580,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9708.977, 3458.77, 10.07580,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9699.347, 3480.547, 10.07580,   0.00000, 0.00000, 64.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9694.11, 3469.827, 10.07580,   0.00000, 0.00000, 64.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9692.244, 3465.972, 10.07580,   0.00000, 0.00000, 64.00000, -1, -1, -1, 500);
	CreateDynamicObject(8337, 9675.473, 3476.86, 13.94770,   0.00000, 0.00000, -94.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9645.652, 3468.091, 10.07580,   0.00000, 0.00000, 1.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9634.612, 3472.563, 10.07580,   0.00000, 0.00000, -22.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9623.543, 3477.02, 10.07580,   0.00000, 0.00000, -22.00000, -1, -1, -1, 500);
	CreateDynamicObject(3445, 9592.269, 3487.339, 13.22340,   0.00000, 0.00000, 19.00000, -1, -1, -1, 500);
	CreateDynamicObject(3445, 9572.705, 3477.209, 13.22340,   0.00000, 0.00000, 36.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9561.989, 3457.112, 14.02070,   0.00000, 0.00000, 142.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9605.318, 3493.092, 10.07580,   0.00000, 0.00000, 91.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9605.509, 3481.162, 10.07580,   0.00000, 0.00000, 91.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9605.551, 3477.827, 10.07580,   0.00000, 0.00000, 91.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9583.199, 3486.564, 10.07580,   0.00000, 0.00000, 109.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9587.067, 3475.275, 10.07580,   0.00000, 0.00000, 109.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9588.178, 3471.996, 10.07580,   0.00000, 0.00000, 109.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9564.346, 3473.744, 10.07580,   0.00000, 0.00000, 126.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9571.351, 3464.1, 10.07580,   0.00000, 0.00000, 126.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 9573.923, 3460.564, 10.07580,   0.00000, 0.00000, 126.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9551.528, 3437.455, 14.02070,   0.00000, 0.00000, 162.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9547.387, 3416.205, 14.02070,   0.00000, 0.00000, 176.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9546.679, 3395.73, 14.02070,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9546.677, 3375.738, 14.02070,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8335, 9546.674, 3355.742, 14.02070,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
//End дрифт-трасса 7
//Start дрифт-трасса 8
	ObjGam[26] = CreateObject(8357, -9272.914062, -6030.569335, 10.500410, 0.000000, 0.000000, 0.000000);

//	CreateDynamicObject(8357, -9272.914062, -6030.569335, 10.500410, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8357, -9232.915039, -6030.569335, 10.500398, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8357, -9232.857421, -5817.744628, 10.500398, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9208.802734, -5663.049316, 10.480400, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9120.106445, -5625.893554, 10.480400, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9071.931640, -5529.344238, 10.480400, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8983.218750, -5492.107421, 10.480400, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8809.431640, -5399.478027, 10.480400, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -8922.552734, -5399.612792, 10.480400, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8814.871093, -5492.104492, 10.480400, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8903.579101, -5529.508300, 10.480400, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8907.646484, -5622.137695, 10.480400, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -8815.144531, -5682.490722, 10.480400, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8939.465820, -5791.695312, 10.480400, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -8826.339843, -5791.558105, 10.480400, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8976.821289, -5702.986816, 10.480400, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9069.455078, -5697.593750, 10.480400, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -9093.551757, -5815.028320, 10.480400, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9074.588867, -5928.533691, 10.480400, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8981.956054, -5933.239257, 10.480400, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8890.529296, -5929.050781, 10.500398, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8357, -8871.301757, -6078.132812, 28.981500, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -8907.070312, -6227.149414, 47.444698, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -9016.144531, -6214.740722, 47.444698, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -9151.896484, -6046.645019, 47.444698, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9059.402343, -6105.529296, 47.444698, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8988.259765, -6058.415527, 47.444698, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -9140.433593, -5937.580566, 47.444698, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -9031.363281, -5949.211914, 47.444698, 0.000000, 0.000000, -180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8895.630859, -6063.689941, 47.444698, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8357, -8871.548828, -5910.624511, 65.944999, -10.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8891.176757, -5761.501953, 84.404197, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8983.800781, -5756.803710, 84.404197, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9152.859375, -5892.577148, 84.404197, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -9043.650390, -5849.293945, 84.404197, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9158.331054, -5985.209472, 84.404197, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -9065.837890, -6045.041992, 84.404197, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9022.659179, -6154.246093, 84.404197, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9050.297851, -6365.604980, 84.404197, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -8930.164062, -6213.212890, 84.404197, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -8941.091796, -6322.290527, 84.404197, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9055.544921, -6458.236328, 84.404197, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8357, -8902.473632, -6482.447753, 65.944999, -10.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8749.406250, -6506.527832, 47.444698, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8755.043945, -6599.158203, 47.444698, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -9028.999023, -6485.231445, 47.444698, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8985.986328, -6594.441406, 47.444698, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8868.544921, -6618.560546, 47.444698, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9121.498046, -6425.951171, 47.444698, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8357, -8966.823242, -6313.782226, 28.981500, -10.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9115.969726, -6333.317871, 47.444698, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8813.739257, -6337.875488, 10.500398, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8818.936523, -6430.508300, 10.500398, 0.000000, 0.000000, -180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8357, -9232.981445, -6243.407226, 10.500398, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -8928.142578, -6473.251464, 10.500398, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8987.455078, -6565.748046, 10.500398, 0.000000, 0.000000, -180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9080.093750, -6560.181152, 10.500398, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9215.519531, -6394.169921, 10.500398, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -9123.019531, -6450.975585, 10.500398, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9292.439453, -6123.736328, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9292.454101, -6098.166503, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9292.420898, -6072.558593, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9292.408203, -6046.989746, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9292.371093, -6021.435058, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9292.351562, -5995.835449, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9292.337890, -5970.259277, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9292.303710, -5944.670410, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9292.297851, -5931.074707, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9279.503906, -5924.695312, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9260.332031, -5924.730468, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -9255.474609, -5924.718750, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9252.261718, -5911.905273, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9252.239257, -5886.325195, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9252.248046, -5860.733398, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9252.232421, -5835.148437, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9252.238281, -5809.538085, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9252.224609, -5783.946289, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9252.197265, -5758.330078, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9252.186523, -5732.749511, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9252.173828, -5707.160156, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9251.682617, -5681.597656, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9246.441406, -5656.954101, 11.146598, 0.000000, 0.000000, -22.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9232.742187, -5635.923828, 11.146598, 0.000000, 0.000000, -44.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9211.974609, -5621.956054, 11.146598, 0.000000, 0.000000, -68.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9187.332031, -5617.418945, 11.146598, 0.000000, 0.000000, -91.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9168.780273, -5620.354003, 11.146598, 0.000000, 0.000000, 65.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9158.327148, -5627.411621, 11.146598, 0.000000, 0.000000, 47.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9147.485351, -5633.524902, 11.146598, 0.000000, 0.000000, 74.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9135.175781, -5633.623046, 11.146598, 0.000000, 0.000000, 105.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9123.894531, -5628.128417, 11.146598, 0.000000, 0.000000, 127.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9117.014648, -5618.118164, 11.146598, 0.000000, 0.000000, 164.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9115.271484, -5599.191406, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9115.232421, -5573.574218, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9114.760742, -5547.996582, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9109.505859, -5523.363281, 11.146598, 0.000000, 0.000000, -22.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9095.673828, -5502.471679, 11.146598, 0.000000, 0.000000, -45.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9074.759765, -5488.649902, 11.146598, 0.000000, 0.000000, -68.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9050.130859, -5484.322753, 11.146598, 0.000000, 0.000000, -92.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9031.522460, -5487.387695, 11.146598, 0.000000, 0.000000, 66.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9020.807617, -5494.089355, 11.146598, 0.000000, 0.000000, 50.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9009.699218, -5499.750976, 11.146598, 0.000000, 0.000000, 76.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8997.255859, -5499.855468, 11.146598, 0.000000, 0.000000, 103.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8986.484375, -5493.899902, 11.146598, 0.000000, 0.000000, 135.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8979.977539, -5483.314453, 11.146598, 0.000000, 0.000000, 162.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8978.006835, -5464.431640, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8978.550781, -5445.288085, 11.146598, 0.000000, 0.000000, 185.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8982.225585, -5426.517578, 11.146598, 0.000000, 0.000000, 14.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8982.010742, -5401.740722, 11.146598, 0.000000, 0.000000, -15.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8970.284179, -5379.750000, 11.146598, 0.000000, 0.000000, -41.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8950.393554, -5364.494140, 11.146598, 0.000000, 0.000000, -64.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8926.134765, -5358.030761, 11.146598, 0.000000, 0.000000, -86.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8900.589843, -5356.688476, 11.146598, 0.000000, 0.000000, -88.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8875.027343, -5356.259765, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8849.458984, -5356.287109, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8823.916992, -5357.192871, 11.146598, 0.000000, 0.000000, -94.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8799.660156, -5363.729492, 11.146598, 0.000000, 0.000000, -116.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8779.603515, -5378.867187, 11.146598, 0.000000, 0.000000, -138.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8767.110351, -5400.514160, 11.146598, 0.000000, 0.000000, -162.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8764.503906, -5425.364746, 11.146598, 0.000000, 0.000000, -6.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8769.181640, -5440.299316, 11.146598, 0.000000, 0.000000, -34.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8772.294921, -5458.384765, 11.146598, 0.000000, 0.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8773.850585, -5483.773437, 11.146598, 0.000000, 0.000000, -9.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8782.443359, -5507.359375, 11.146598, 0.000000, 0.000000, -31.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8799.363281, -5525.843261, 11.146598, 0.000000, 0.000000, -54.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8822.235351, -5536.028808, 11.146598, 0.000000, 0.000000, -78.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8847.254882, -5536.035156, 11.146598, 0.000000, 0.000000, -102.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8864.464843, -5529.000000, 11.146598, 0.000000, 0.000000, 47.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8875.172851, -5522.529296, 11.146598, 0.000000, 0.000000, 71.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8887.531250, -5521.433593, 11.146598, 0.000000, 0.000000, 99.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8898.807617, -5526.445800, 11.146598, 0.000000, 0.000000, 129.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8906.170898, -5536.383789, 11.146598, 0.000000, 0.000000, 158.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8908.561523, -5555.084960, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8908.362304, -5574.275878, 11.146598, 0.000000, 0.000000, 182.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8911.447265, -5586.156250, 11.146598, 0.000000, 0.000000, 149.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8915.898437, -5597.923339, 11.146598, 0.000000, 0.000000, 170.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8914.830078, -5610.211914, 11.146598, 0.000000, 0.000000, 200.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8907.837890, -5620.409179, 11.146598, 0.000000, 0.000000, 229.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8896.819335, -5626.157714, 11.146598, 0.000000, 0.000000, 76.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8877.824218, -5627.676269, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8858.750976, -5626.345703, 11.146598, 0.000000, 0.000000, 102.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8846.667968, -5622.399414, 11.146598, 0.000000, 0.000000, 114.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8828.101562, -5621.113769, 11.146598, 0.000000, 0.000000, 84.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8804.309570, -5628.833984, 11.146598, 0.000000, 0.000000, 60.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8785.727539, -5645.583007, 11.146598, 0.000000, 0.000000, 36.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8775.322265, -5668.401855, 11.146598, 0.000000, 0.000000, 13.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8772.004882, -5693.645507, 11.146598, 0.000000, 0.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8771.555664, -5719.225585, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8771.802734, -5738.398437, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8769.849609, -5750.802246, 11.146598, 0.000000, 0.000000, 20.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8765.865234, -5769.461914, 11.146598, 0.000000, 0.000000, 8.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8768.669921, -5794.069824, 11.146598, 0.000000, 0.000000, -21.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8782.291015, -5815.059570, 11.146598, 0.000000, 0.000000, -45.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8803.184570, -5828.903808, 11.146598, 0.000000, 0.000000, -68.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8827.825195, -5834.147949, 11.146598, 0.000000, 0.000000, -88.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8853.404296, -5834.587402, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8878.992187, -5834.591308, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8904.557617, -5834.599609, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8930.010742, -5832.833007, 11.146598, 0.000000, 0.000000, -98.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8953.765625, -5824.671875, 11.146598, 0.000000, 0.000000, 60.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8972.705078, -5808.186523, 11.146598, 0.000000, 0.000000, 38.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8983.666015, -5785.687011, 11.146598, 0.000000, 0.000000, 14.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8984.085937, -5760.753906, 11.146598, 0.000000, 0.000000, -12.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8977.133789, -5743.493164, 11.146598, 0.000000, 0.000000, -42.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8970.454101, -5732.831054, 11.146598, 0.000000, 0.000000, -22.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8968.718750, -5720.549316, 11.146598, 0.000000, 0.000000, 6.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8972.780273, -5708.794433, 11.146598, 0.000000, 0.000000, 32.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8981.977539, -5700.777343, 11.146598, 0.000000, 0.000000, 66.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9000.591796, -5698.183593, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9025.669921, -5694.655761, 11.146598, 0.000000, 0.000000, 74.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9044.169921, -5689.587402, 11.146598, 0.000000, 0.000000, 76.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9056.404296, -5690.117675, 11.146598, 0.000000, 0.000000, 109.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9066.985351, -5696.714843, 11.146598, 0.000000, 0.000000, 135.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9073.168945, -5707.407714, 11.146598, 0.000000, 0.000000, 165.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9074.828125, -5726.368652, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9074.817382, -5751.965332, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9074.799804, -5777.554687, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9074.789062, -5803.136718, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9074.770507, -5828.722656, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9074.752929, -5854.290527, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9076.528320, -5879.746093, 11.146598, 0.000000, 0.000000, -8.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9080.820312, -5898.308105, 11.146598, 0.000000, 0.000000, -23.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9082.752929, -5910.567382, 11.146598, 0.000000, 0.000000, 5.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9078.627929, -5922.239746, 11.146598, 0.000000, 0.000000, 34.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9069.309570, -5930.340332, 11.146598, 0.000000, 0.000000, 64.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9050.786132, -5933.578125, 11.146598, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9025.605468, -5937.102539, 11.146598, 0.000000, 0.000000, 76.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9006.877929, -5941.205566, 11.146598, 0.000000, 0.000000, 81.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8994.450195, -5940.323242, 11.146598, 0.000000, 0.000000, 107.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8983.971679, -5933.769531, 11.146598, 0.000000, 0.000000, 137.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8978.065429, -5922.897949, 11.146598, 0.000000, 0.000000, 166.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8976.551757, -5903.895996, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8976.566406, -5892.467773, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8963.776367, -5886.091308, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8938.200195, -5886.101074, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8912.623046, -5886.545410, 11.146598, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8887.678710, -5890.932617, 11.146598, 0.000000, 0.000000, 72.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8865.710937, -5903.083496, 11.146598, 0.000000, 0.000000, 50.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8850.505859, -5922.891601, 11.146598, 0.000000, 0.000000, 25.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8845.080078, -5947.270507, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8848.057617, -5965.685546, 11.146598, 0.000000, 0.000000, -28.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8849.166015, -5967.752929, 11.146598, 0.000000, 0.000000, -28.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.155273, -5985.987792, 13.400300, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.161132, -6011.196289, 17.851060, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.177734, -6036.401855, 22.292909, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.179687, -6061.605468, 26.730699, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.183593, -6086.807617, 31.179000, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.199218, -6112.007812, 35.622100, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.208984, -6137.231445, 40.066699, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.203125, -6162.428710, 44.510200, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8852.212890, -6176.712402, 47.037601, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8847.826171, -6194.915039, 48.119998, 0.000000, 0.000000, 20.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8845.886718, -6219.496582, 48.119998, 0.000000, 0.000000, -11.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8855.651367, -6242.544921, 48.119998, 0.000000, 0.000000, -35.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8873.833984, -6259.794433, 48.119998, 0.000000, 0.000000, -58.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8897.331054, -6268.375000, 48.119998, 0.000000, 0.000000, -82.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8922.808593, -6270.169433, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8948.389648, -6270.152343, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8967.560546, -6270.602050, 48.119998, 0.000000, 0.000000, 94.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8986.235351, -6274.581054, 48.119998, 0.000000, 0.000000, 106.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9010.932617, -6274.993652, 48.119998, 0.000000, 0.000000, 76.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9033.573242, -6264.186035, 48.119998, 0.000000, 0.000000, 53.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9049.984375, -6245.274414, 48.119998, 0.000000, 0.000000, 29.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9057.509765, -6221.347656, 48.119998, 0.000000, 0.000000, 6.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9058.841796, -6195.827636, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9058.839843, -6170.230468, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9054.877929, -6145.260742, 48.119998, 0.000000, 0.000000, -18.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9050.932617, -6126.711914, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9053.628906, -6114.519531, 48.119998, 0.000000, 0.000000, 25.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9061.696289, -6105.245605, 48.119998, 0.000000, 0.000000, 57.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9073.422851, -6101.194335, 48.119998, 0.000000, 0.000000, 85.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9092.576171, -6100.183105, 48.119998, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9110.956054, -6102.820800, 48.119998, 0.000000, 0.000000, 119.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9129.226562, -6107.682617, 48.119998, 0.000000, 0.000000, 98.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9153.773437, -6104.655761, 48.119998, 0.000000, 0.000000, 68.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9174.832031, -6090.959960, 48.119998, 0.000000, 0.000000, 46.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9189.050781, -6070.291992, 48.119998, 0.000000, 0.000000, 23.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9194.720703, -6045.740722, 48.119998, 0.000000, 0.000000, 3.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9195.400390, -6020.169433, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9195.412109, -5994.578613, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9199.794921, -5969.750976, 48.119998, 0.000000, 0.000000, 20.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9201.287109, -5945.270019, 48.119998, 0.000000, 0.000000, -13.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9191.054687, -5922.321777, 48.119998, 0.000000, 0.000000, -35.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9172.734375, -5905.252929, 48.119998, 0.000000, 0.000000, -59.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9149.197265, -5896.468261, 48.119998, 0.000000, 0.000000, 100.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9123.791992, -5894.241699, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9098.208984, -5894.694824, 48.119998, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9079.087890, -5894.246582, 48.119998, 0.000000, 0.000000, 98.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9067.211914, -5890.157714, 48.119998, 0.000000, 0.000000, 120.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9048.902343, -5887.388671, 48.119998, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9024.612304, -5893.432617, 48.119998, 0.000000, 0.000000, 64.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9004.559570, -5908.537109, 48.119998, 0.000000, 0.000000, 42.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8992.461914, -5930.339355, 48.119998, 0.000000, 0.000000, 16.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8988.486328, -5955.413085, 48.119998, 0.000000, 0.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8988.027343, -5980.980957, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8988.923828, -6006.540039, 48.119998, 0.000000, 0.000000, -4.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8992.907226, -6024.893066, 48.119998, 0.000000, 0.000000, -29.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8996.570312, -6036.856445, 48.119998, 0.000000, 0.000000, -5.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8994.520507, -6049.072753, 48.119998, 0.000000, 0.000000, 24.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8986.485351, -6058.311035, 48.119998, 0.000000, 0.000000, 58.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8974.724609, -6062.587402, 48.119998, 0.000000, 0.000000, 82.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8955.603515, -6063.462890, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8932.385742, -6067.848144, 48.119998, 0.000000, 0.000000, 70.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8913.972656, -6072.001953, 48.119998, 0.000000, 0.000000, 92.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8902.270507, -6068.200683, 48.119998, 0.000000, 0.000000, 124.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8893.864257, -6059.019042, 48.119998, 0.000000, 0.000000, -29.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.750000, -6040.623046, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.736328, -6028.220214, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.750000, -6002.929199, 50.339298, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.767578, -5977.740722, 54.780101, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.774414, -5952.525390, 59.233600, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.778320, -5927.320312, 63.676700, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.783203, -5902.099121, 68.121002, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.793945, -5876.892578, 72.563499, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.806640, -5851.716308, 77.006103, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.818359, -5826.507812, 81.450698, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8890.822265, -5812.079101, 84.005699, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8887.990234, -5800.120117, 85.088302, 0.000000, 0.000000, -26.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8883.628906, -5788.174316, 85.088302, 0.000000, 0.000000, -14.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8883.400390, -5775.715332, 85.088302, 0.000000, 0.000000, 12.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8889.165039, -5764.855957, 85.088302, 0.000000, 0.000000, 44.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8899.701171, -5758.274414, 85.088302, 0.000000, 0.000000, 72.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8918.587890, -5756.282714, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8943.559570, -5752.321289, 85.088302, 0.000000, 0.000000, 72.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8962.116210, -5748.135742, 85.088302, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8974.250000, -5750.726074, 85.088302, 0.000000, 0.000000, 116.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8983.670898, -5758.755859, 85.088302, 0.000000, 0.000000, -35.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8988.110351, -5770.347167, 85.088302, 0.000000, 0.000000, -7.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8989.324218, -5789.471191, 85.088302, 0.000000, 0.000000, -2.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8986.867187, -5807.946289, 85.088302, 0.000000, 0.000000, 27.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8982.621093, -5826.328613, 85.088302, 0.000000, 0.000000, 6.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8985.850585, -5850.993164, 85.088302, 0.000000, 0.000000, -21.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8999.475585, -5871.979980, 85.088302, 0.000000, 0.000000, -45.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9020.199218, -5886.213867, 85.088302, 0.000000, 0.000000, -66.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9044.659179, -5891.879394, 85.088302, 0.000000, 0.000000, -88.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9070.234375, -5892.321777, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9095.828125, -5892.337890, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9114.275390, -5889.342285, 85.088302, 0.000000, 0.000000, 62.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9126.119140, -5884.791015, 85.088302, 0.000000, 0.000000, 76.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9138.579101, -5884.562011, 85.088302, 0.000000, 0.000000, 102.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9149.505859, -5890.224121, 85.088302, 0.000000, 0.000000, -47.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9156.251953, -5900.641113, 85.088302, 0.000000, 0.000000, -19.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9158.313476, -5919.481445, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9162.685546, -5944.290527, 85.088302, 0.000000, 0.000000, -20.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9167.625976, -5962.686523, 85.088302, 0.000000, 0.000000, -5.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9165.580078, -5974.897460, 85.088302, 0.000000, 0.000000, 24.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9157.942382, -5984.668945, 85.088302, 0.000000, 0.000000, 52.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9146.564453, -5989.491210, 85.088302, 0.000000, 0.000000, 82.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9127.451171, -5990.812500, 85.088302, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9102.357421, -5987.718750, 85.088302, 0.000000, 0.000000, 106.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9077.280273, -5985.077148, 85.088302, 0.000000, 0.000000, -94.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9053.560546, -5992.570312, 85.088302, 0.000000, 0.000000, 59.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9035.262695, -6009.621582, 85.088302, 0.000000, 0.000000, 35.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9025.479492, -6032.640625, 85.088302, 0.000000, 0.000000, 11.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9023.042968, -6057.999023, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9023.033203, -6083.588867, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9026.119140, -6108.791992, 85.088302, 0.000000, 0.000000, -14.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9030.771484, -6127.403320, 85.088302, 0.000000, 0.000000, -14.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9030.994140, -6139.852050, 85.088302, 0.000000, 0.000000, 12.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9025.305664, -6150.783203, 85.088302, 0.000000, 0.000000, 43.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9014.934570, -6157.643554, 85.088302, 0.000000, 0.000000, 70.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8996.133789, -6159.818359, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8976.994140, -6159.046875, 85.088302, 0.000000, 0.000000, 97.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8965.172851, -6154.973144, 85.088302, 0.000000, 0.000000, 121.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8946.902343, -6151.669921, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8922.700195, -6157.468750, 85.088302, 0.000000, 0.000000, 63.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8903.068359, -6173.069824, 85.088302, 0.000000, 0.000000, 40.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8891.531250, -6195.215820, 85.088302, 0.000000, 0.000000, 15.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8887.764648, -6220.346191, 85.088302, 0.000000, 0.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8887.321289, -6245.924316, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8887.310546, -6265.153320, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8883.554687, -6283.132812, 85.088302, 0.000000, 0.000000, 36.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8879.333984, -6301.079589, 85.088302, 0.000000, 0.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8883.880859, -6325.631347, 85.088302, 0.000000, 0.000000, -23.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8897.919921, -6346.447265, 85.088302, 0.000000, 0.000000, -45.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8918.896484, -6360.078613, 85.088302, 0.000000, 0.000000, -69.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8943.607421, -6365.128417, 85.088302, 0.000000, 0.000000, -88.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8969.180664, -6365.583007, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8994.759765, -6365.594726, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9012.940429, -6362.116210, 85.088302, 0.000000, 0.000000, 57.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9024.537109, -6357.301269, 85.088302, 0.000000, 0.000000, 78.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9036.920898, -6357.834960, 85.088302, 0.000000, 0.000000, 107.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9047.650390, -6364.132324, 85.088302, 0.000000, 0.000000, -46.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9054.008789, -6374.713867, 85.088302, 0.000000, 0.000000, -16.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9055.758789, -6393.651367, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9056.433593, -6412.799316, 85.088302, 0.000000, 0.000000, -6.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9060.473632, -6424.552246, 85.088302, 0.000000, 0.000000, -32.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9064.304687, -6436.360351, 85.088302, 0.000000, 0.000000, -4.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9062.142578, -6448.579589, 85.088302, 0.000000, 0.000000, 24.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9054.347656, -6458.177246, 85.088302, 0.000000, 0.000000, 54.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9042.810546, -6462.596191, 85.088302, 0.000000, 0.000000, -96.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9023.664062, -6463.270019, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9013.647460, -6463.285644, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8994.769531, -6463.270996, 82.892700, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8969.570312, -6463.284179, 78.449203, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8944.365234, -6463.292480, 74.007499, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8919.168945, -6463.300292, 69.564598, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8893.966796, -6463.316406, 65.118301, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8868.763671, -6463.331542, 60.676898, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8843.570312, -6463.325195, 56.227699, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8818.367187, -6463.339355, 51.782901, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8803.869140, -6463.343261, 49.189701, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8784.895507, -6463.329101, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8759.452148, -6465.087890, 48.119998, 0.000000, 0.000000, 82.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8735.699218, -6473.253906, 48.119998, 0.000000, 0.000000, 60.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8716.735351, -6489.714843, 48.119998, 0.000000, 0.000000, 38.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8705.962890, -6512.248046, 48.119998, 0.000000, 0.000000, 13.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8707.233398, -6536.797363, 48.119998, 0.000000, 0.000000, -19.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8712.054687, -6561.673339, 48.119998, 0.000000, 0.000000, -3.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8713.823242, -6587.179687, 48.119998, 0.000000, 0.000000, -5.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8720.730468, -6611.319335, 48.119998, 0.000000, 0.000000, -27.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8736.477539, -6630.769042, 48.119998, 0.000000, 0.000000, -51.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8758.704101, -6642.359375, 48.119998, 0.000000, 0.000000, -74.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8783.301757, -6642.371582, 48.119998, 0.000000, 0.000000, 74.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8801.836914, -6637.504882, 48.119998, 0.000000, 0.000000, 78.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8820.886718, -6636.605468, 48.119998, 0.000000, 0.000000, 92.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8846.461914, -6637.042480, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8872.042968, -6637.025390, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8897.640625, -6637.024414, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8923.234375, -6637.034667, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8948.824218, -6637.024902, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8974.337890, -6635.669921, 48.119998, 0.000000, 0.000000, 84.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8998.568359, -6628.708984, 48.119998, 0.000000, 0.000000, 64.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9017.933593, -6613.011230, 48.119998, 0.000000, 0.000000, 38.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9029.117187, -6590.557128, 48.119998, 0.000000, 0.000000, 15.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9028.678710, -6565.955078, 48.119998, 0.000000, 0.000000, -17.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9023.822265, -6547.420898, 48.119998, 0.000000, 0.000000, -10.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9023.144531, -6528.339843, 48.119998, 0.000000, 0.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9023.588867, -6502.759765, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9024.245117, -6483.608886, 48.119998, 0.000000, 0.000000, 6.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9028.017578, -6471.641601, 48.119998, 0.000000, 0.000000, 29.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9036.699218, -6462.941894, 48.119998, 0.000000, 0.000000, 61.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9048.683593, -6459.953613, 48.119998, 0.000000, 0.000000, 91.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9060.779296, -6462.951171, 48.119998, 0.000000, 0.000000, 117.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9072.707031, -6467.285156, 48.119998, 0.000000, 0.000000, 103.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9091.734375, -6468.710449, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9117.035156, -6466.044433, 48.119998, 0.000000, 0.000000, 78.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9140.021484, -6456.026367, 48.119998, 0.000000, 0.000000, 55.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9157.090820, -6437.715332, 48.119998, 0.000000, 0.000000, 31.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9165.672851, -6414.106933, 48.119998, 0.000000, 0.000000, 9.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9162.667968, -6389.682128, 48.119998, 0.000000, 0.000000, -23.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9158.106445, -6365.097656, 48.119998, 0.000000, 0.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9156.308593, -6339.710937, 48.119998, 0.000000, 0.000000, -10.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9147.303710, -6316.259277, 48.119998, 0.000000, 0.000000, -32.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9129.914062, -6298.268066, 48.119998, 0.000000, 0.000000, -56.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9106.711914, -6288.896972, 48.119998, 0.000000, 0.000000, -80.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9083.730468, -6290.263183, 48.119998, 0.000000, 0.000000, 71.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9059.144531, -6294.409179, 45.933998, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9033.954101, -6294.403808, 41.489799, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9008.758789, -6294.395019, 37.051300, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8983.567382, -6294.399414, 32.614601, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8958.376953, -6294.375488, 28.177200, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8933.171875, -6294.385742, 23.732299, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8907.978515, -6294.387207, 19.284900, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8882.779296, -6294.374023, 14.843600, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8868.215820, -6294.390136, 12.252578, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8849.239257, -6294.360839, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8823.786132, -6296.131835, 11.146598, 0.000000, 0.000000, 82.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8800.034179, -6304.289062, 11.146598, 0.000000, 0.000000, 60.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8781.070312, -6320.740722, 11.146598, 0.000000, 0.000000, 38.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8770.083984, -6343.226562, 11.146598, 0.000000, 0.000000, 14.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8771.152343, -6367.734863, 11.146598, 0.000000, 0.000000, -19.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8775.537109, -6386.211914, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8776.192382, -6405.383789, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8780.166015, -6430.457031, 11.146598, 0.000000, 0.000000, -16.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8791.541992, -6452.838378, 11.146598, 0.000000, 0.000000, -38.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8810.803710, -6468.744628, 11.146598, 0.000000, 0.000000, -63.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8834.964843, -6475.453613, 11.146598, 0.000000, 0.000000, -86.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8851.813476, -6472.129394, 11.146598, 0.000000, 0.000000, -109.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8876.706054, -6467.966796, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8902.292968, -6467.971679, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8921.496093, -6467.977539, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8934.127929, -6469.301269, 11.146598, 0.000000, 0.000000, 102.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8945.129882, -6474.897460, 11.146598, 0.000000, 0.000000, 132.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8952.167968, -6485.129882, 11.146598, 0.000000, 0.000000, -21.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8953.227539, -6497.374511, 11.146598, 0.000000, 0.000000, 11.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8949.304687, -6509.438964, 11.146598, 0.000000, 0.000000, 25.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8945.693359, -6527.974121, 11.146598, 0.000000, 0.000000, 4.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8946.125000, -6553.458496, 11.146598, 0.000000, 0.000000, -6.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8953.255859, -6577.582519, 11.146598, 0.000000, 0.000000, -27.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8969.128906, -6596.861328, 11.146598, 0.000000, 0.000000, -52.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8991.438476, -6608.483398, 11.146598, 0.000000, 0.000000, -73.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9015.869140, -6608.279296, 11.146598, 0.000000, 0.000000, 72.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9034.352539, -6603.425292, 11.146598, 0.000000, 0.000000, 82.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9053.477539, -6602.517578, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9078.687500, -6599.404785, 11.146598, 0.000000, 0.000000, 76.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9101.033203, -6588.257324, 11.146598, 0.000000, 0.000000, 51.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9117.174804, -6569.017578, 11.146598, 0.000000, 0.000000, 29.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9124.257812, -6545.058593, 11.146598, 0.000000, 0.000000, 4.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9120.351562, -6520.443847, 11.146598, 0.000000, 0.000000, -22.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9116.447265, -6495.799804, 11.146598, 0.000000, 0.000000, 4.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9117.317382, -6470.247558, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9117.770507, -6451.090820, 11.146598, 0.000000, 0.000000, 4.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9120.994140, -6438.976074, 11.146598, 0.000000, 0.000000, 26.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9129.094726, -6429.646484, 11.146598, 0.000000, 0.000000, 56.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9140.742187, -6425.401367, 11.146598, 0.000000, 0.000000, 84.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9158.599609, -6430.328125, 11.146598, 0.000000, 0.000000, -64.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9182.891601, -6436.393066, 11.146598, 0.000000, 0.000000, 92.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9208.287109, -6434.605957, 11.146598, 0.000000, 0.000000, 80.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9231.738281, -6425.583496, 11.146598, 0.000000, 0.000000, 58.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9249.743164, -6408.177734, 11.146598, 0.000000, 0.000000, 34.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9259.542968, -6385.065429, 11.146598, 0.000000, 0.000000, 12.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9256.993164, -6360.867675, 11.146598, 0.000000, 0.000000, -24.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9251.783203, -6336.388183, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9251.757812, -6310.804687, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9251.741210, -6285.215332, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9251.727539, -6259.636230, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9251.727539, -6234.042480, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9251.727539, -6208.450683, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9251.728515, -6182.858398, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9251.727539, -6157.260253, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9251.730468, -6142.949707, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9264.527343, -6136.564941, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9279.656250, -6136.562011, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.162109, -6124.194335, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.169921, -6098.598144, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.180664, -6073.009765, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.188476, -6047.423339, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.191406, -6021.833496, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.201171, -5996.242675, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.203125, -5970.631835, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.201171, -5945.041015, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.208007, -5919.448242, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.219726, -5893.850097, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.228515, -5868.260742, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.249023, -5842.677246, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.254882, -5817.096191, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.263671, -5791.509765, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.272460, -5765.926757, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.281250, -5740.344726, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.287109, -5714.753906, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.304687, -5689.168457, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9212.003906, -5670.373535, 11.146598, 0.000000, 0.000000, -21.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9205.034179, -5660.020996, 11.146598, 0.000000, 0.000000, -47.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9194.101562, -5654.318359, 11.146598, 0.000000, 0.000000, -78.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9181.733398, -5654.859863, 11.146598, 0.000000, 0.000000, 73.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9170.946289, -5661.074218, 11.146598, 0.000000, 0.000000, 47.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9154.042968, -5669.187500, 11.146598, 0.000000, 0.000000, 73.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9129.227539, -5670.505859, 11.146598, 0.000000, 0.000000, 101.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9106.185546, -5660.723144, 11.146598, 0.000000, 0.000000, -55.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9088.740234, -5642.641113, 11.146598, 0.000000, 0.000000, -33.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9079.790039, -5619.271972, 11.146598, 0.000000, 0.000000, -9.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9077.369140, -5593.861328, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9076.917968, -5568.279296, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9076.935546, -5549.091308, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9074.973632, -5536.625976, 11.146598, 0.000000, 0.000000, -18.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9068.018554, -5526.512207, 11.146598, 0.000000, 0.000000, -51.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9056.806640, -5521.148437, 11.146598, 0.000000, 0.000000, -78.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9044.410156, -5521.601074, 11.146598, 0.000000, 0.000000, 74.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9033.517578, -5527.643066, 11.146598, 0.000000, 0.000000, 48.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9016.540039, -5535.660644, 11.146598, 0.000000, 0.000000, 73.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8991.794921, -5536.750488, 11.146598, 0.000000, 0.000000, 102.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8968.789062, -5526.745117, 11.146598, 0.000000, 0.000000, -55.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8951.347656, -5508.675292, 11.146598, 0.000000, 0.000000, -33.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8942.392578, -5485.296386, 11.146598, 0.000000, 0.000000, -9.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8940.402343, -5459.852539, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8941.959960, -5440.863769, 11.146598, 0.000000, 0.000000, 14.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8945.916015, -5428.758789, 11.146598, 0.000000, 0.000000, 22.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8947.413085, -5416.498535, 11.146598, 0.000000, 0.000000, 172.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8942.951171, -5404.867187, 11.146598, 0.000000, 0.000000, 146.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8933.540039, -5396.967285, 11.146598, 0.000000, 0.000000, 114.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8914.916992, -5394.356933, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8889.327148, -5394.367187, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8863.731445, -5394.376464, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8838.149414, -5394.377929, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8819.144531, -5395.940429, 11.146598, 0.000000, 0.000000, 76.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8808.348632, -5401.928222, 11.146598, 0.000000, 0.000000, 46.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8801.783203, -5412.442382, 11.146598, 0.000000, 0.000000, 18.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8801.146484, -5424.764648, 11.146598, 0.000000, 0.000000, -12.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8805.879882, -5436.438964, 11.146598, 0.000000, 0.000000, -32.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8809.255859, -5454.641601, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8809.395507, -5473.819335, 11.146598, 0.000000, 0.000000, -1.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8812.221679, -5486.000976, 11.146598, 0.000000, 0.000000, -25.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8820.043945, -5495.636230, 11.146598, 0.000000, 0.000000, -53.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8831.493164, -5500.395507, 11.146598, 0.000000, 0.000000, 98.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8843.838867, -5499.111328, 11.146598, 0.000000, 0.000000, 70.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8854.613281, -5492.662597, 11.146598, 0.000000, 0.000000, 48.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8871.882812, -5485.732421, 11.146598, 0.000000, 0.000000, 78.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8896.908203, -5485.744140, 11.146598, 0.000000, 0.000000, 102.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8919.755859, -5495.928710, 11.146598, 0.000000, 0.000000, -54.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8936.509765, -5514.510253, 11.146598, 0.000000, 0.000000, -30.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8944.691406, -5538.263183, 11.146598, 0.000000, 0.000000, -8.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8946.484375, -5563.717773, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8950.008789, -5588.818847, 11.146598, 0.000000, 0.000000, -16.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8951.333984, -5613.719238, 11.146598, 0.000000, 0.000000, 10.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8941.976562, -5636.918945, 11.146598, 0.000000, 0.000000, 34.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8923.984375, -5654.300781, 11.146598, 0.000000, 0.000000, 58.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8900.470703, -5662.856933, 11.146598, 0.000000, 0.000000, 82.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8875.017578, -5664.657714, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8850.104492, -5660.503417, 11.146598, 0.000000, 0.000000, -71.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8831.652343, -5657.109375, 11.146598, 0.000000, 0.000000, -97.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8820.151367, -5661.657226, 11.146598, 0.000000, 0.000000, 54.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8812.599609, -5671.346679, 11.146598, 0.000000, 0.000000, 22.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8810.193359, -5690.064453, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8810.191406, -5715.651855, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8808.862304, -5741.163574, 11.146598, 0.000000, 0.000000, 6.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8804.336914, -5759.434082, 11.146598, 0.000000, 0.000000, 30.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8800.931640, -5771.362304, 11.146598, 0.000000, 0.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8803.720703, -5783.386718, 11.146598, 0.000000, 0.000000, -28.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8811.763671, -5792.974609, 11.146598, 0.000000, 0.000000, -52.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8829.597656, -5796.929687, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8855.184570, -5796.932617, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8880.775390, -5796.947265, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8906.373046, -5796.948242, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8925.528320, -5796.291503, 11.146598, 0.000000, 0.000000, 84.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8937.327148, -5792.236328, 11.146598, 0.000000, 0.000000, 58.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8945.563476, -5783.082519, 11.146598, 0.000000, 0.000000, 26.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8948.369140, -5770.945312, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8941.411132, -5753.815429, 11.146598, 0.000000, 0.000000, -33.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8932.452148, -5730.447753, 11.146598, 0.000000, 0.000000, -9.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8934.191406, -5705.574218, 11.146598, 0.000000, 0.000000, 17.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8946.341796, -5683.693847, 11.146598, 0.000000, 0.000000, 41.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8966.135742, -5668.246093, 11.146598, 0.000000, 0.000000, 63.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8990.291992, -5661.549804, 11.146598, 0.000000, 0.000000, 86.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9012.312500, -5660.373046, 11.146598, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9036.962890, -5655.152832, 11.146598, 0.000000, 0.000000, 68.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9061.325195, -5653.022460, 11.146598, 0.000000, 0.000000, -78.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9084.201171, -5663.184082, 11.146598, 0.000000, 0.000000, -54.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9101.335937, -5681.537109, 11.146598, 0.000000, 0.000000, -32.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9110.339843, -5704.975097, 11.146598, 0.000000, 0.000000, -10.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9112.574218, -5730.354492, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9112.578125, -5755.939453, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9112.583984, -5781.534667, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9112.588867, -5807.126953, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9112.600585, -5832.719726, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9112.603515, -5858.323730, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9112.622070, -5877.513671, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9116.993164, -5895.922363, 11.146598, 0.000000, 0.000000, -20.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9118.734375, -5920.451171, 11.146598, 0.000000, 0.000000, 12.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9108.933593, -5943.577148, 11.146598, 0.000000, 0.000000, 34.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9090.707031, -5960.591796, 11.146598, 0.000000, 0.000000, 60.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9067.035156, -5969.229980, 11.146598, 0.000000, 0.000000, 80.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9041.644531, -5971.460449, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9016.732421, -5975.625000, 11.146598, 0.000000, 0.000000, -109.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8991.994140, -5977.774902, 11.146598, 0.000000, 0.000000, -81.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8968.630859, -5968.800292, 11.146598, 0.000000, 0.000000, -57.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8950.939453, -5951.103515, 11.146598, 0.000000, 0.000000, -33.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8942.884765, -5936.270019, 11.146598, 0.000000, 0.000000, -15.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8926.789062, -5923.906738, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8907.597656, -5923.910156, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8895.462890, -5926.716308, 11.146598, 0.000000, 0.000000, 64.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8886.145507, -5934.814453, 11.146598, 0.000000, 0.000000, 34.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8881.906250, -5946.463867, 11.146598, 0.000000, 0.000000, 6.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8883.836914, -5958.666015, 11.146598, 0.000000, 0.000000, -24.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8887.808593, -5967.580566, 11.146598, 0.000000, 0.000000, -24.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.409179, -5985.987792, 13.400300, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.406250, -6011.196289, 17.851100, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.395507, -6036.401855, 22.292900, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.390625, -6061.605468, 26.730699, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.394531, -6086.807617, 31.179000, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.396484, -6112.007812, 35.622100, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.397460, -6137.231445, 40.066699, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8890.400390, -6162.428710, 44.510200, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8890.411132, -6176.712402, 47.037601, -10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8887.418945, -6188.541015, 48.119998, 0.000000, 0.000000, 28.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8882.660156, -6200.331542, 48.119998, 0.000000, 0.000000, 16.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8882.240234, -6212.735351, 48.119998, 0.000000, 0.000000, -12.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8887.695312, -6223.881347, 48.119998, 0.000000, 0.000000, -40.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8897.892578, -6230.746093, 48.119998, 0.000000, 0.000000, -72.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8916.779296, -6232.722167, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8942.365234, -6232.725585, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8964.770507, -6232.733398, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8982.986328, -6236.124511, 48.119998, 0.000000, 0.000000, -58.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8994.808593, -6239.854980, 48.119998, 0.000000, 0.000000, 93.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9006.999023, -6237.487304, 48.119998, 0.000000, 0.000000, 65.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9017.003906, -6229.943847, 48.119998, 0.000000, 0.000000, 41.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9021.192382, -6212.326660, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9021.208984, -6186.752929, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9021.214843, -6161.159667, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9017.267578, -6136.180664, 48.119998, 0.000000, 0.000000, -18.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9015.996093, -6111.500000, 48.119998, 0.000000, 0.000000, 12.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9026.536132, -6088.906250, 48.119998, 0.000000, 0.000000, 38.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9045.492187, -6072.420410, 48.119998, 0.000000, 0.000000, 60.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9069.240234, -6064.263183, 48.119998, 0.000000, 0.000000, 82.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9094.685546, -6062.499023, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9113.011718, -6065.683105, 48.119998, 0.000000, 0.000000, -60.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9124.626953, -6070.848632, 48.119998, 0.000000, 0.000000, -72.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9136.992187, -6071.728027, 48.119998, 0.000000, 0.000000, -100.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9148.134765, -6066.432128, 48.119998, 0.000000, 0.000000, 49.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9155.264648, -6056.250976, 48.119998, 0.000000, 0.000000, 21.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9157.567382, -6037.490234, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9157.583007, -6011.901367, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9157.601562, -5992.717285, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9159.164062, -5980.116699, 48.119998, 0.000000, 0.000000, 14.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9163.512695, -5968.158691, 48.119998, 0.000000, 0.000000, 26.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9165.878906, -5956.023437, 48.119998, 0.000000, 0.000000, -4.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9161.851562, -5944.329101, 48.119998, 0.000000, 0.000000, -34.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9152.837890, -5935.621093, 48.119998, 0.000000, 0.000000, -58.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9134.623046, -5932.248046, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9109.030273, -5932.242187, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9085.025390, -5932.240722, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9066.856445, -5928.749511, 48.119998, 0.000000, 0.000000, -57.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9055.156250, -5924.258789, 48.119998, 0.000000, 0.000000, -81.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9042.828125, -5925.452148, 48.119998, 0.000000, 0.000000, 70.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9032.548828, -5932.380371, 48.119998, 0.000000, 0.000000, 42.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9026.933593, -5943.388671, 48.119998, 0.000000, 0.000000, 12.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9025.619140, -5962.437500, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9025.630859, -5988.020019, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9025.642578, -6007.214843, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9030.013671, -6025.632324, 48.119998, 0.000000, 0.000000, -20.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9032.181640, -6050.257812, 48.119998, 0.000000, 0.000000, 10.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9022.458984, -6073.211914, 48.119998, 0.000000, 0.000000, 36.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9004.113281, -6090.353027, 48.119998, 0.000000, 0.000000, 58.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8980.625000, -6099.145507, 48.119998, 0.000000, 0.000000, 81.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8955.194335, -6100.924316, 48.119998, 0.000000, 0.000000, 91.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8930.370117, -6105.073730, 48.119998, 0.000000, 0.000000, 70.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8905.671875, -6107.653320, 48.119998, 0.000000, 0.000000, -82.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8882.410156, -6098.712402, 48.119998, 0.000000, 0.000000, -56.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8864.639648, -6080.939453, 48.119998, 0.000000, 0.000000, -34.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8855.041992, -6057.756835, 48.119998, 0.000000, 0.000000, -11.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.619140, -6032.408691, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8852.618164, -6021.821289, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.616210, -6002.929199, 50.339298, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.625000, -5977.740722, 54.780101, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.620117, -5952.525390, 59.233600, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.613281, -5927.320312, 63.676700, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.617187, -5902.099121, 68.121002, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.604492, -5876.892578, 72.563499, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.619140, -5851.716308, 77.006103, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8852.627929, -5826.507812, 81.450698, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8852.626953, -5812.079101, 84.005699, 10.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8848.673828, -5793.715820, 85.088302, 0.000000, 0.000000, -18.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8847.384765, -5769.032714, 85.088302, 0.000000, 0.000000, 12.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8857.562500, -5746.171875, 85.088302, 0.000000, 0.000000, 36.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8876.177734, -5729.441894, 85.088302, 0.000000, 0.000000, 60.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8899.857421, -5720.839355, 85.088302, 0.000000, 0.000000, 80.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8925.248046, -5719.073242, 85.088302, 0.000000, 0.000000, 92.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8949.921875, -5714.724121, 85.088302, 0.000000, 0.000000, 68.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8974.273437, -5712.593750, 85.088302, 0.000000, 0.000000, -78.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8997.645507, -5722.022460, 85.088302, 0.000000, 0.000000, -58.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9015.276367, -5739.656250, 85.088302, 0.000000, 0.000000, -32.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9024.287109, -5763.102539, 85.088302, 0.000000, 0.000000, -10.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9026.515625, -5788.505859, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9024.763671, -5807.463378, 85.088302, 0.000000, 0.000000, 16.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9020.615234, -5819.534667, 85.088302, 0.000000, 0.000000, 22.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9018.671875, -5831.828125, 85.088302, 0.000000, 0.000000, -4.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9022.681640, -5843.499023, 85.088302, 0.000000, 0.000000, -34.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9031.892578, -5851.796875, 85.088302, 0.000000, 0.000000, -62.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9050.330078, -5854.797851, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9075.912109, -5854.788085, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9095.765625, -5854.791992, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9120.620117, -5850.413085, 85.088302, 0.000000, 0.000000, 70.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9145.166992, -5848.713867, 85.088302, 0.000000, 0.000000, 102.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9168.143554, -5858.691406, 85.088302, 0.000000, 0.000000, -55.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9185.228515, -5876.989257, 85.088302, 0.000000, 0.000000, -31.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9193.828125, -5900.584472, 85.088302, 0.000000, 0.000000, -9.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9195.396484, -5926.008300, 85.088302, 0.000000, 0.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9199.751953, -5950.651855, 85.088302, 0.000000, 0.000000, -22.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9202.343750, -5975.106933, 85.088302, 0.000000, 0.000000, 10.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9193.366210, -5998.556640, 85.088302, 0.000000, 0.000000, 32.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9175.987304, -6016.563476, 85.088302, 0.000000, 0.000000, 56.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9152.790039, -6025.956054, 85.088302, 0.000000, 0.000000, 80.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9127.401367, -6028.198730, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9108.457031, -6026.416015, 85.088302, 0.000000, 0.000000, -74.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9096.488281, -6022.038085, 85.088302, 0.000000, 0.000000, -66.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9084.249023, -6019.887207, 85.088302, 0.000000, 0.000000, -94.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9072.518554, -6023.818359, 85.088302, 0.000000, 0.000000, 57.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9064.044921, -6032.893066, 85.088302, 0.000000, 0.000000, 29.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9060.514648, -6051.265625, 85.088302, 0.000000, 0.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9060.064453, -6076.837402, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9060.069335, -6097.166992, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9064.456054, -6121.977050, 85.088302, 0.000000, 0.000000, -20.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9066.187500, -6146.519531, 85.088302, 0.000000, 0.000000, 12.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9056.384765, -6169.644531, 85.088302, 0.000000, 0.000000, 34.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9038.177734, -6186.655273, 85.088302, 0.000000, 0.000000, 60.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9014.441406, -6194.849609, 85.088302, 0.000000, 0.000000, 82.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8988.976562, -6196.641113, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8970.426757, -6193.820800, 85.088302, 0.000000, 0.000000, -64.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8958.528320, -6189.254394, 85.088302, 0.000000, 0.000000, -74.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8946.083007, -6188.593750, 85.088302, 0.000000, 0.000000, -100.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8934.834960, -6193.733886, 85.088302, 0.000000, 0.000000, 51.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8927.173828, -6203.545898, 85.088302, 0.000000, 0.000000, 25.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8924.470703, -6222.139160, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8924.479492, -6247.725097, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8924.472656, -6269.591796, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8920.549804, -6287.435546, 85.088302, 0.000000, 0.000000, 38.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8915.515625, -6298.760742, 85.088302, 0.000000, 0.000000, 10.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8916.791992, -6310.975097, 85.088302, 0.000000, 0.000000, -22.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8923.635742, -6321.495117, 85.088302, 0.000000, 0.000000, -44.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8940.834960, -6326.989257, 85.088302, 0.000000, 0.000000, -86.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8966.414062, -6327.879394, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8992.007812, -6327.879882, 85.088302, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9016.914062, -6323.725097, 85.088302, 0.000000, 0.000000, 71.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9041.568359, -6322.019042, 85.088302, 0.000000, 0.000000, 101.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9064.837890, -6331.411132, 85.088302, 0.000000, 0.000000, -57.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9082.161132, -6349.340332, 85.088302, 0.000000, 0.000000, -31.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9090.762695, -6372.935058, 85.088302, 0.000000, 0.000000, -9.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9092.773437, -6398.365234, 85.088302, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9097.156250, -6423.187988, 85.088302, 0.000000, 0.000000, -20.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9099.758789, -6447.873046, 85.088302, 0.000000, 0.000000, 8.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9090.830078, -6471.156738, 85.088302, 0.000000, 0.000000, 34.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9073.083007, -6488.931152, 85.088302, 0.000000, 0.000000, 56.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9049.965820, -6498.754394, 85.088302, 0.000000, 0.000000, 78.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9024.665039, -6501.427734, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9013.643554, -6501.432128, 85.088302, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8994.769531, -6501.422363, 82.892700, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8969.570312, -6501.427246, 78.449203, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8944.365234, -6501.420410, 74.007499, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8919.168945, -6501.410644, 69.564598, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8893.966796, -6501.405761, 65.118301, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8868.763671, -6501.411132, 60.676898, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8843.570312, -6501.403320, 56.227699, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8818.367187, -6501.398925, 51.782901, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8803.869140, -6501.413574, 49.189701, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8784.884765, -6501.409667, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8765.716796, -6501.853027, 48.119998, 0.000000, 0.000000, 86.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8753.599609, -6505.115722, 48.119998, 0.000000, 0.000000, 64.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8744.466796, -6513.347656, 48.119998, 0.000000, 0.000000, 32.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8740.641601, -6525.158691, 48.119998, 0.000000, 0.000000, 4.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8742.798828, -6537.369140, 48.119998, 0.000000, 0.000000, -24.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8747.190429, -6555.876953, 48.119998, 0.000000, 0.000000, -8.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8748.981445, -6574.942382, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8750.308593, -6587.587402, 48.119998, 0.000000, 0.000000, -12.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8755.750000, -6598.740722, 48.119998, 0.000000, 0.000000, -40.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8765.611328, -6606.424804, 48.119998, 0.000000, 0.000000, -64.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8777.709960, -6608.551269, 48.119998, 0.000000, 0.000000, -96.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8789.834960, -6605.092285, 48.119998, 0.000000, 0.000000, 64.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8808.347656, -6601.403320, 48.119998, 0.000000, 0.000000, 86.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8833.900390, -6600.527832, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8859.493164, -6600.545410, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8885.088867, -6600.558105, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8910.687500, -6600.565429, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8936.276367, -6600.568359, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8961.859375, -6600.130859, 48.119998, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8980.437500, -6597.008300, 48.119998, 0.000000, 0.000000, 65.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8990.094726, -6589.207031, 48.119998, 0.000000, 0.000000, 37.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8994.726562, -6577.745605, 48.119998, 0.000000, 0.000000, 7.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8990.914062, -6559.445800, 48.119998, 0.000000, 0.000000, -21.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8986.350585, -6534.703613, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8986.365234, -6509.118652, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8987.269531, -6483.564941, 48.119998, 0.000000, 0.000000, 4.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8993.384765, -6459.124023, 48.119998, 0.000000, 0.000000, 24.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9008.116210, -6438.881835, 48.119998, 0.000000, 0.000000, 48.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9029.799804, -6426.375000, 48.119998, 0.000000, 0.000000, 72.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9054.576171, -6424.659667, 48.119998, 0.000000, 0.000000, 100.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9068.973632, -6428.653320, 48.119998, 0.000000, 0.000000, -61.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9087.361328, -6431.758300, 48.119998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9106.519531, -6431.103027, 48.119998, 0.000000, 0.000000, 84.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9118.516601, -6427.466796, 48.119998, 0.000000, 0.000000, 62.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9127.371093, -6418.935058, 48.119998, 0.000000, 0.000000, 30.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9130.796875, -6407.010253, 48.119998, 0.000000, 0.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9126.429687, -6388.669921, 48.119998, 0.000000, 0.000000, -21.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9121.844726, -6363.924804, 48.119998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9120.530273, -6344.870117, 48.119998, 0.000000, 0.000000, -12.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9115.278320, -6333.578125, 48.119998, 0.000000, 0.000000, -38.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9105.416015, -6326.131347, 48.119998, 0.000000, 0.000000, -68.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9093.113281, -6324.294921, 48.119998, 0.000000, 0.000000, 85.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9081.065429, -6327.765625, 48.119998, 0.000000, 0.000000, 63.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9077.308593, -6329.687011, 48.119998, 0.000000, 0.000000, 63.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9059.144531, -6332.587890, 45.933998, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9033.954101, -6332.586914, 41.489799, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9008.758789, -6332.582519, 37.051300, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8983.567382, -6332.579101, 32.614601, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8958.376953, -6332.578613, 28.177200, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8933.171875, -6332.566894, 23.732299, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8907.978515, -6332.552246, 19.284900, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8882.779296, -6332.554687, 14.843600, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8868.215820, -6332.559082, 12.252598, 10.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8849.232421, -6332.548339, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8830.046875, -6333.007324, 11.146598, 0.000000, 0.000000, 86.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8818.027343, -6336.466308, 11.146598, 0.000000, 0.000000, 62.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8808.814453, -6344.781738, 11.146598, 0.000000, 0.000000, 34.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8804.796875, -6356.458007, 11.146598, 0.000000, 0.000000, 4.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8808.738281, -6374.844238, 11.146598, 0.000000, 0.000000, -20.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8813.115234, -6399.649902, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8814.230468, -6418.746582, 11.146598, 0.000000, 0.000000, -10.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8819.275390, -6430.068359, 11.146598, 0.000000, 0.000000, -38.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8829.059570, -6437.699218, 11.146598, 0.000000, 0.000000, -66.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8841.295898, -6439.875000, 11.146598, 0.000000, 0.000000, 86.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8859.708984, -6435.059570, 11.146598, 0.000000, 0.000000, 70.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8884.524414, -6430.693847, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8910.111328, -6430.711914, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8935.548828, -6432.500000, 11.146598, 0.000000, 0.000000, -82.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8959.296875, -6440.674316, 11.146598, 0.000000, 0.000000, -60.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8977.900390, -6457.399414, 11.146598, 0.000000, 0.000000, -36.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8988.116210, -6480.279296, 11.146598, 0.000000, 0.000000, -12.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8986.411132, -6504.815429, 11.146598, 0.000000, 0.000000, 20.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -8982.039062, -6529.629882, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8982.273437, -6548.822265, 11.146598, 0.000000, 0.000000, -2.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8985.504882, -6560.858398, 11.146598, 0.000000, 0.000000, -28.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8993.679687, -6570.258789, 11.146598, 0.000000, 0.000000, -54.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9005.210937, -6574.672363, 11.146598, 0.000000, 0.000000, -84.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9023.447265, -6570.558105, 11.146598, 0.000000, 0.000000, 68.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9048.094726, -6565.776855, 11.146598, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9067.178710, -6564.688476, 11.146598, 0.000000, 0.000000, 80.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9078.652343, -6559.841308, 11.146598, 0.000000, 0.000000, 54.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9086.632812, -6550.340820, 11.146598, 0.000000, 0.000000, 26.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9088.992187, -6538.210937, 11.146598, 0.000000, 0.000000, -4.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9084.575195, -6519.674804, 11.146598, 0.000000, 0.000000, -18.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9080.625976, -6494.695312, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9080.627929, -6469.108398, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9082.416015, -6443.633300, 11.146598, 0.000000, 0.000000, 8.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9090.607421, -6419.895996, 11.146598, 0.000000, 0.000000, 30.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9107.363281, -6401.294433, 11.146598, 0.000000, 0.000000, 54.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9130.242187, -6391.128417, 11.146598, 0.000000, 0.000000, 78.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9154.337890, -6393.877441, 11.146598, 0.000000, 0.000000, -65.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9178.724609, -6399.266601, 11.146598, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9197.912109, -6399.048828, 11.146598, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9210.065429, -6396.032714, 11.146598, 0.000000, 0.000000, 64.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9219.760742, -6388.206542, 11.146598, 0.000000, 0.000000, 38.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9224.366210, -6376.795410, 11.146598, 0.000000, 0.000000, 6.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9219.828125, -6358.738281, 11.146598, 0.000000, 0.000000, -24.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -9214.196289, -6340.666015, 11.146598, 0.000000, 0.000000, -4.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.134765, -6328.879882, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.135742, -6303.303710, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.132812, -6277.723144, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.141601, -6252.132812, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.157226, -6226.555664, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.153320, -6200.978027, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.158203, -6175.383300, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -9214.154296, -6149.786132, 11.146598, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8357, -8871.301757, -6078.132812, 28.941499, -10.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8357, -8871.548828, -5910.624511, 65.904998, -10.000000, 180.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8357, -8902.473632, -6482.447753, 65.904998, -10.000000, 180.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(8357, -8966.823242, -6313.782226, 28.941499, -10.000000, 180.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8866.308593, -6197.914062, 47.345798, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8868.196289, -6220.013671, 47.351799, 0.000000, 180.000000, 72.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8877.936523, -6238.326660, 47.357799, 0.000000, 180.000000, 52.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8890.598632, -6247.872558, 47.363800, 0.000000, 180.000000, 22.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8909.906250, -6251.542480, 47.369800, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8939.884765, -6251.520019, 47.375801, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8966.447265, -6252.132324, 47.381801, 0.000000, 180.000000, 8.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8992.606445, -6257.141601, 47.387798, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9012.105468, -6253.455078, 47.393798, 0.000000, 180.000000, -22.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9027.171875, -6243.117187, 47.399799, 0.000000, 180.000000, -47.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9037.469726, -6228.736328, 47.405799, 0.000000, 180.000000, -75.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9040.465820, -6206.074707, 47.399799, 0.000000, 180.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9040.467773, -6176.083984, 47.393798, 0.000000, 180.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9038.572265, -6149.207519, 47.387798, 0.000000, 180.000000, 84.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9035.505859, -6123.159667, 47.381801, 0.000000, 180.000000, -87.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9040.336914, -6103.898925, 47.375801, 0.000000, 180.000000, -65.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9050.209960, -6092.434082, 47.369800, 0.000000, 180.000000, -33.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9064.160156, -6082.742187, 47.363800, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9094.152343, -6082.757812, 47.357799, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9114.858398, -6086.346679, 47.351799, 0.000000, 180.000000, 20.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9133.980468, -6089.753417, 47.345798, 0.000000, 180.000000, -4.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9151.023437, -6084.708007, 47.339801, 0.000000, 180.000000, -30.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9165.838867, -6072.571777, 47.333801, 0.000000, 180.000000, -54.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9174.146484, -6054.320800, 47.327800, 0.000000, 180.000000, -74.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9177.017578, -6031.823242, 47.321800, 0.000000, 180.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9177.021484, -6001.850585, 47.315799, 0.000000, 180.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9179.201171, -5979.070312, 47.309799, 0.000000, 180.000000, -74.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9183.222656, -5956.680664, 47.303798, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9179.340820, -5938.919921, 47.297798, 0.000000, 180.000000, 64.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9167.646484, -5923.937988, 47.291801, 0.000000, 180.000000, 40.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9147.828125, -5914.110839, 47.285800, 0.000000, 180.000000, 22.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9127.255859, -5912.709472, 47.291801, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9097.264648, -5912.717773, 47.297798, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9073.246093, -5911.791992, 47.303798, 0.000000, 180.000000, 14.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9048.923828, -5907.324707, 47.309799, 0.000000, 180.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9032.098632, -5910.746582, 47.315799, 0.000000, 180.000000, -26.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9017.103515, -5922.456054, 47.321800, 0.000000, 180.000000, -50.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9008.252929, -5939.441894, 47.327800, 0.000000, 180.000000, -74.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9006.182617, -5962.258300, 47.333801, 0.000000, 180.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9006.185546, -5992.238769, 47.339801, 0.000000, 180.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9010.211914, -6019.445800, 47.345798, 0.000000, 180.000000, 84.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9011.571289, -6044.716796, 47.351799, 0.000000, 180.000000, -85.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9006.060546, -6061.947265, 47.357799, 0.000000, 180.000000, -59.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8994.547851, -6073.262207, 47.363800, 0.000000, 180.000000, -29.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8978.425781, -6081.930664, 47.369800, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8948.425781, -6081.925292, 47.375801, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8924.014648, -6086.968750, 47.381801, 0.000000, 180.000000, -12.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8905.453125, -6088.258300, 47.387798, 0.000000, 180.000000, 14.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8889.960937, -6080.770507, 47.393798, 0.000000, 180.000000, 42.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8877.623046, -6066.647460, 47.399799, 0.000000, 180.000000, 68.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8871.982421, -6047.134765, 47.405799, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8871.970703, -6030.375488, 47.399799, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8868.015625, -5790.770507, 84.345497, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8868.092773, -5768.093261, 84.339500, 0.000000, 180.000000, -72.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8874.804687, -5754.155273, 84.333503, 0.000000, 180.000000, -50.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8887.138671, -5743.413574, 84.327499, 0.000000, 180.000000, -26.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8902.270507, -5737.922851, 84.321502, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8932.275390, -5736.420898, 84.315498, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8959.002929, -5732.176757, 84.309501, 0.000000, 180.000000, -6.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8976.318359, -5733.211425, 84.303497, 0.000000, 180.000000, 20.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8991.769531, -5741.662597, 84.297500, 0.000000, 180.000000, 44.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9002.727539, -5757.019042, 84.291496, 0.000000, 180.000000, 68.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9006.666992, -5776.263671, 84.285499, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9005.628906, -5801.636230, 84.279502, 0.000000, 180.000000, -80.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9002.196289, -5826.295898, 84.273498, 0.000000, 180.000000, -88.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9004.070312, -5843.652832, 84.267501, 0.000000, 180.000000, -114.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9014.974609, -5860.496093, 84.261497, 0.000000, 180.000000, -136.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9030.583007, -5870.295410, 84.255500, 0.000000, 180.000000, 19.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9051.787109, -5873.720214, 84.249496, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9081.766601, -5873.710449, 84.243499, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9107.306640, -5872.033203, 84.237503, 0.000000, 180.000000, -10.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9132.707031, -5866.496582, 84.243499, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9149.767578, -5869.648925, 84.249496, 0.000000, 180.000000, 28.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9165.495117, -5881.017089, 84.255500, 0.000000, 180.000000, 52.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9174.531250, -5897.939453, 84.261497, 0.000000, 180.000000, 76.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9176.490234, -5921.594726, 84.267501, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9179.046875, -5947.024902, 84.273498, 0.000000, 180.000000, 80.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9181.855468, -5970.604492, 84.279502, 0.000000, 180.000000, 94.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9176.903320, -5986.429687, 84.285499, 0.000000, 180.000000, -57.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9165.864257, -6000.643554, 84.291496, 0.000000, 180.000000, -29.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9148.298828, -6008.400390, 84.297500, 0.000000, 180.000000, -4.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9120.908203, -6009.613281, 84.303497, 0.000000, 180.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9096.493164, -6004.732421, 84.309501, 0.000000, 180.000000, 14.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9077.427734, -6003.697753, 84.315498, 0.000000, 180.000000, -10.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9060.113281, -6012.130371, 84.321502, 0.000000, 180.000000, -34.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9048.240234, -6025.980468, 84.327499, 0.000000, 180.000000, -60.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9042.225585, -6045.172363, 84.333503, 0.000000, 180.000000, -82.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9041.638671, -6071.688476, 84.339500, 0.000000, 180.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9042.603515, -6098.608398, 84.345497, 0.000000, 180.000000, 83.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9046.881835, -6126.537109, 84.351501, 0.000000, 180.000000, 79.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9046.353515, -6144.197265, 84.357498, 0.000000, 180.000000, -74.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9038.035156, -6161.458496, 84.351501, 0.000000, 180.000000, -50.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9024.764648, -6172.662109, 84.345497, 0.000000, 180.000000, -22.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9005.164062, -6177.777343, 84.339500, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8978.600585, -6176.893554, 84.333503, 0.000000, 180.000000, 8.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8951.541992, -6171.271972, 84.327499, 0.000000, 180.000000, 2.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8933.685546, -6173.956054, 84.321502, 0.000000, 180.000000, -24.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8919.395507, -6185.102539, 84.315498, 0.000000, 180.000000, -50.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8909.427734, -6202.514160, 84.309501, 0.000000, 180.000000, -72.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8905.962890, -6224.117187, 84.303497, 0.000000, 180.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8906.041992, -6254.096191, 84.297500, 0.000000, 180.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8903.033203, -6279.554687, 84.291496, 0.000000, 180.000000, -80.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8902.816406, -6322.076171, 84.285499, 0.000000, 180.000000, 62.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8899.365234, -6304.529785, 84.279502, 0.000000, 180.000000, 89.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8914.691406, -6335.724609, 84.273498, 0.000000, 180.000000, 36.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8931.965820, -6344.151855, 84.267501, 0.000000, 180.000000, 12.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8956.628906, -6346.476074, 84.261497, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8986.653320, -6346.462890, 84.255500, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9012.062500, -6343.858398, 84.249496, 0.000000, 180.000000, -10.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9035.113281, -6341.436523, 84.243499, 0.000000, 180.000000, 6.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9052.402343, -6346.870605, 84.237503, 0.000000, 180.000000, 32.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9065.582031, -6359.284667, 84.243499, 0.000000, 180.000000, 58.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9072.500000, -6377.135742, 84.249496, 0.000000, 180.000000, 82.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9074.712890, -6405.249023, 84.255500, 0.000000, 180.000000, 86.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9079.661132, -6428.491699, 84.261497, 0.000000, 180.000000, 72.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9080.070312, -6445.791015, 84.267501, 0.000000, 180.000000, -80.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9072.956054, -6462.604492, 84.273498, 0.000000, 180.000000, -54.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9060.434570, -6474.811523, 84.279502, 0.000000, 180.000000, -26.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9040.409179, -6481.509277, 84.285499, 0.000000, 180.000000, -6.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9022.271484, -6482.345214, 84.291496, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8782.673828, -6482.614746, 47.345798, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8758.102539, -6485.261718, 47.351799, 0.000000, 180.000000, -12.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8740.738281, -6492.988769, 47.357799, 0.000000, 180.000000, -36.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8728.161132, -6507.243164, 47.363800, 0.000000, 180.000000, -60.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8723.138671, -6524.531250, 47.369800, 0.000000, 180.000000, -86.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8727.125000, -6547.434570, 47.375801, 0.000000, 180.000000, 78.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8730.387695, -6573.630859, 47.381801, 0.000000, 180.000000, 86.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8734.486328, -6595.287109, 47.387798, 0.000000, 180.000000, 68.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8745.484375, -6611.832031, 47.393798, 0.000000, 180.000000, 46.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8760.819335, -6621.431640, 47.399799, 0.000000, 180.000000, 20.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8779.591796, -6624.167968, 47.405799, 0.000000, 180.000000, -4.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8807.657226, -6618.244140, 47.399799, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8837.614257, -6618.302734, 47.393798, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8867.497070, -6618.321777, 47.387798, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8897.470703, -6618.315917, 47.381801, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8927.445312, -6618.296386, 47.375801, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8956.520507, -6617.919433, 47.369800, 0.000000, 180.000000, -2.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8980.226562, -6615.281250, 47.363800, 0.000000, 180.000000, -16.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -8996.805664, -6605.782226, 47.357799, 0.000000, 180.000000, -40.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9008.101562, -6590.364257, 47.351799, 0.000000, 180.000000, -64.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9011.781250, -6573.751953, 47.345798, 0.000000, 180.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9006.812500, -6546.556640, 47.339801, 0.000000, 180.000000, 82.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9004.929687, -6520.145507, 47.333801, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9005.824218, -6491.928222, 47.327800, 0.000000, 180.000000, -86.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9010.289062, -6470.493652, 47.321800, 0.000000, 180.000000, -68.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9020.900390, -6454.726562, 47.315799, 0.000000, 180.000000, -44.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9035.708007, -6446.267089, 47.309799, 0.000000, 180.000000, -16.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9054.859375, -6443.752929, 47.303798, 0.000000, 180.000000, 8.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9083.448242, -6449.074707, 47.297798, 0.000000, 180.000000, 10.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9106.488281, -6448.405761, 47.291801, 0.000000, 180.000000, -6.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9125.553710, -6441.802246, 47.285800, 0.000000, 180.000000, -28.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9139.096679, -6430.047363, 47.291801, 0.000000, 180.000000, -54.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9146.247070, -6413.325195, 47.297798, 0.000000, 180.000000, -80.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9145.439453, -6392.294433, 47.303798, 0.000000, 180.000000, 80.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9140.379882, -6366.858886, 47.309799, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9137.597656, -6342.400878, 47.315799, 0.000000, 180.000000, 78.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9129.842773, -6325.079589, 47.321800, 0.000000, 180.000000, 54.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9116.139648, -6313.376464, 47.327800, 0.000000, 180.000000, 28.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9097.136718, -6307.661132, 47.333801, 0.000000, 180.000000, 6.000000, -1, -1, -1, 500);
	CreateDynamicObject(12814, -9086.636718, -6310.402832, 47.339801, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9233.616210, -5927.097656, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9232.797851, -5801.858398, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9164.051757, -5644.359375, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9027.006835, -5510.061035, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8876.285156, -5375.725585, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8858.942382, -5509.839843, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8859.218750, -5645.634277, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8871.402343, -5815.404785, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9025.599609, -5678.410156, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9093.380859, -5884.832519, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8957.888671, -5888.518554, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8870.728515, -5971.078613, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8859.421875, -6313.975097, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8863.753906, -6449.312988, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9032.166015, -6584.404785, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9167.011718, -6418.254394, -0.105300, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9233.198242, -6256.115234, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9233.501953, -6133.371582, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9232.956054, -6042.848144, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9273.201171, -6133.347656, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9272.413085, -6042.824218, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9273.052734, -5927.929199, -0.105300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8870.962890, -6185.534179, 36.852901, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9040.414062, -6149.821289, 36.852901, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9176.035156, -5981.259277, 36.852901, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9007.578125, -6013.593750, 36.852901, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8907.625000, -6020.204101, 37.617698, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8835.511718, -6020.534179, 37.634700, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -8847.694335, -6020.235351, 47.687900, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -8838.699218, -6020.234863, 47.687900, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -8895.528320, -6020.140136, 47.687900, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -8904.523437, -6020.148925, 47.687900, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8871.764648, -5851.704589, 65.397903, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8863.285156, -5781.355468, 73.793098, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9007.618164, -5804.398925, 73.793098, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9159.598632, -5873.431152, 73.793098, 0.000000, 0.000000, 135.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9110.019531, -6009.337890, 73.793098, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8974.228515, -6178.253906, 73.793098, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9029.914062, -6284.267578, 74.596801, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9030.403320, -6373.985351, 74.580703, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.161132, -6361.780761, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.166992, -6370.776855, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.161132, -6314.486816, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.159179, -6305.485351, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.161132, -6296.490722, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.164062, -6287.494140, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.166992, -6458.494628, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9047.866210, -6517.135742, 74.580703, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.169921, -6449.494140, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.167968, -6440.490234, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.164062, -6431.490722, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.167968, -6422.494628, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.171875, -6413.498535, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.175781, -6404.499511, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.175781, -6395.497070, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.173828, -6386.495605, 84.671096, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9030.166992, -6379.773437, 84.631103, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9047.587890, -6504.946777, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3095, -9047.585937, -6513.942871, 84.651100, 180.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8795.615234, -6482.440917, 36.852901, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8799.937500, -6618.936035, 36.852901, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9016.046875, -6456.444824, 36.852901, 0.000000, 0.000000, 45.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9128.895507, -6320.465820, 36.852901, 0.000000, 0.000000, 135.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9233.501953, -6133.393554, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9273.285156, -6133.373046, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9232.986328, -6042.894042, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9272.537109, -6042.850585, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9233.733398, -5927.179687, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9273.130859, -5927.965332, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9232.895507, -5801.948242, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9164.212890, -5644.473632, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9027.012695, -5510.178222, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8876.487304, -5375.784667, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8859.046875, -5509.860839, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8859.353515, -5645.653320, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9025.782226, -5678.528320, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8871.569335, -5815.507812, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8957.949218, -5888.404785, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8870.815429, -5970.926269, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9093.450195, -5884.678710, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9233.260742, -6256.020996, -129.912094, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8859.599609, -6313.981933, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8863.938476, -6449.353027, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9032.014648, -6584.491210, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9166.853515, -6418.415039, -129.912094, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8870.946289, -6185.294921, -92.932701, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9040.423828, -6149.742187, -92.932701, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9007.646484, -6013.557617, -92.932701, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9176.100585, -5981.244140, -92.932701, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9128.704101, -6320.455078, -92.932701, 0.000000, 180.000000, 135.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9016.250000, -6456.255371, -92.932701, 0.000000, 180.000000, 45.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8795.837890, -6482.525390, -92.932701, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8800.159179, -6618.952636, -92.932701, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8907.494140, -6020.382324, -92.187301, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8835.411132, -6020.615234, -92.187301, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8871.937500, -5851.886718, -64.413597, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8863.451171, -5781.490234, -56.009998, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9007.731445, -5804.549804, -56.009998, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9159.390625, -5873.430664, -56.009998, 0.000000, 180.000000, 135.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9109.937500, -6009.415527, -56.009998, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -8974.398437, -6178.280273, -56.009998, 0.000000, 180.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9029.926757, -6284.202148, -55.198501, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9030.557617, -6373.839843, -55.208499, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -9047.918945, -6517.035156, -55.208499, 0.000000, 180.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(16092, -9251.354492, -5916.587402, 11.091500, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(16092, -9215.088867, -5916.587402, 11.091500, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(16092, -9224.199218, -5916.596191, 18.562000, 0.000000, 90.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(16092, -9233.108398, -5916.586425, 18.562000, 0.000000, 90.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(16092, -9233.316406, -5916.606445, 18.562000, 0.000000, -90.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(16092, -9242.233398, -5916.596191, 18.562000, 0.000000, -90.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(711, -9290.218750, -5926.697265, 16.436700, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(711, -9281.703125, -5926.541015, 16.436700, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(711, -9272.829101, -5926.475097, 16.436700, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(711, -9263.958984, -5926.489746, 16.436700, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(711, -9255.229492, -5926.404296, 16.436700, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -9233.289062, -5924.541015, 18.568098, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -9227.208007, -5924.541015, 18.568098, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -9221.304687, -5924.541015, 18.568098, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -9239.360351, -5924.541015, 18.568098, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -9245.285156, -5924.541015, 18.568098, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
//End дрифт-трасса 8
//Start дрифт-трасса 9
	ObjGam[27] = CreateObject(6959, -5938.099609, -6139.700195, 9.399998, 0.000000, 0.000000, 359.978027);

	CreateDynamicObject(5184, -5894.827148, -6098.495117, 28.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(5184, -5980.799804, -6098.500000, 28.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(5184, -6017.600097, -6060.899902, 28.100000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(5184, -6063.700195, -6018.600097, 28.000000, 0.000000, 0.000000, 269.989013, -1, -1, -1, 500);
	CreateDynamicObject(5184, -6141.500000, -5941.100097, 28.100000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 500);
	CreateDynamicObject(5184, -6141.500000, -5859.000000, 28.100000, 0.000000, 0.000000, 179.972534, -1, -1, -1, 500);
	CreateDynamicObject(5184, -6011.699218, -5859.100585, 28.100000, 0.000000, 0.000000, 179.961547, -1, -1, -1, 500);
	CreateDynamicObject(5184, -5881.899414, -5859.100585, 28.100000, 0.000000, 0.000000, 179.950561, -1, -1, -1, 500);
	CreateDynamicObject(5184, -5812.399902, -5901.299804, 28.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 500);
	CreateDynamicObject(5184, -5853.700195, -6015.034179, 28.100000, 0.000000, 0.000000, 89.945098, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6185.799804, -5939.899902, 9.399998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6185.799804, -5899.899902, 9.399998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6185.799804, -5860.000000, 9.390000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(5184, -6141.500000, -5917.299804, 28.000000, 0.000000, 0.000000, 179.978027, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6144.500000, -5939.899902, 9.420000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6103.200195, -5939.899902, 9.399998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6144.500000, -5899.899902, 9.409998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6103.200195, -5899.899902, 9.399998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6144.500000, -5859.910156, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6103.200195, -5859.910156, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6061.899902, -5859.910156, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6061.899902, -5899.899902, 9.409998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6061.899902, -5939.899902, 9.409998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6061.899414, -5979.800781, 9.420000, 0.000000, 0.000000, 179.994506, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6020.700195, -5859.899902, 9.390000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5979.399902, -5859.899902, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5938.100097, -5859.899902, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5896.799804, -5859.899902, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5855.500000, -5860.000488, 9.399998, 0.000000, 0.000000, 359.983489, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5814.200195, -5860.000000, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(5184, -5858.399902, -5859.000000, 28.100000, 0.000000, 0.000000, 179.950561, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5814.200195, -5900.000000, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6061.899902, -6019.700195, 9.409998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6061.899414, -6059.700195, 9.409998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6020.599609, -6059.700195, 9.390000, 0.000000, 0.000000, 179.994506, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5979.299804, -6059.700195, 9.420000, 0.000000, 0.000000, 179.994506, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5979.299804, -6099.700195, 9.420000, 0.000000, 0.000000, 179.994506, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5979.199218, -6139.600585, 9.409998, 0.000000, 0.000000, 179.994506, -1, -1, -1, 500);
	CreateDynamicObject(5184, -5854.700195, -5981.200195, 27.979999, 0.000000, 0.000000, 359.945098, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5814.200195, -5940.000000, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5814.200195, -5980.000000, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(5184, -5812.399902, -5935.100097, 27.989999, 0.000000, 0.000000, 89.945098, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5855.500000, -5980.000000, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5855.500000, -6020.000000, 9.399998, 0.000000, 0.000000, 359.983520, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5855.500000, -6060.000000, 9.390000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5896.799804, -6139.700195, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
//	CreateDynamicObject(6959, -5938.099609, -6139.700195, 9.399998, 0.000000, 0.000000, 359.978027, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5938.000000, -6099.700195, 9.399998, 0.000000, 0.000000, 359.978027, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5938.005859, -6059.701171, 9.399998, 0.000000, 0.000000, 359.977996, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5896.699218, -6099.700195, 9.409998, 0.000000, 0.000000, 359.983489, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5896.799804, -6059.700195, 9.409998, 0.000000, 0.000000, 359.977996, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5896.799804, -6019.700195, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5896.799804, -5979.700195, 9.390000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5938.099609, -6019.800781, 9.390000, 0.000000, 0.000000, 359.983489, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5979.399902, -6019.799804, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6020.700195, -6019.799804, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6020.700195, -5979.799804, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6020.600097, -5939.799804, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -6020.600097, -5899.799804, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5979.399902, -5979.799804, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5979.299804, -5939.899902, 9.420000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5979.299804, -5899.899902, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5938.000000, -5899.910156, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5896.700195, -5899.899902, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5855.399902, -5900.000000, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5855.299804, -5940.000000, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5896.620117, -5939.899902, 9.409998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5937.950195, -5939.899902, 9.390000, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(6959, -5938.100097, -5979.810058, 9.399998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(982, -5999.800292, -6122.899902, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -5999.800292, -6092.500000, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -5999.800292, -6097.299804, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -6012.799804, -6079.700195, 10.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -6038.399902, -6079.700195, 10.000000, 0.000000, 0.000000, 89.994506, -1, -1, -1, 500);
	CreateDynamicObject(982, -6064.000000, -6079.700195, 10.000000, 0.000000, 0.000000, 89.994506, -1, -1, -1, 500);
	CreateDynamicObject(982, -6068.799804, -6079.700195, 10.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -6081.600097, -6066.899902, 10.000000, 0.000000, 0.000000, 179.994506, -1, -1, -1, 500);
	CreateDynamicObject(982, -6081.600097, -6041.299804, 10.000000, 0.000000, 0.000000, 179.989013, -1, -1, -1, 500);
	CreateDynamicObject(982, -6081.600097, -6015.700195, 10.000000, 0.000000, 0.000000, 179.989013, -1, -1, -1, 500);
	CreateDynamicObject(982, -6081.600097, -5990.100097, 10.000000, 0.000000, 0.000000, 179.989013, -1, -1, -1, 500);
	CreateDynamicObject(982, -6081.600097, -5972.500000, 10.000000, 0.000000, 0.000000, 179.989013, -1, -1, -1, 500);
	CreateDynamicObject(982, -6094.399902, -5959.700195, 10.000000, 0.000000, 0.000000, 269.989013, -1, -1, -1, 500);
	CreateDynamicObject(982, -6120.000000, -5959.700195, 10.000000, 0.000000, 0.000000, 269.983520, -1, -1, -1, 500);
	CreateDynamicObject(982, -6145.600097, -5959.700195, 10.000000, 0.000000, 0.000000, 269.983520, -1, -1, -1, 500);
	CreateDynamicObject(982, -6171.200195, -5959.700195, 10.000000, 0.000000, 0.000000, 269.983520, -1, -1, -1, 500);
	CreateDynamicObject(982, -6193.600097, -5959.700195, 10.000000, 0.000000, 0.000000, 269.983520, -1, -1, -1, 500);
	CreateDynamicObject(982, -6206.399902, -5946.899902, 10.000000, 0.000000, 0.000000, 179.983520, -1, -1, -1, 500);
	CreateDynamicObject(982, -6206.399902, -5921.299804, 10.000000, 0.000000, 0.000000, 179.983520, -1, -1, -1, 500);
	CreateDynamicObject(982, -6206.399902, -5895.700195, 10.000000, 0.000000, 0.000000, 179.983520, -1, -1, -1, 500);
	CreateDynamicObject(982, -6206.399902, -5870.100097, 10.000000, 0.000000, 0.000000, 179.983520, -1, -1, -1, 500);
	CreateDynamicObject(982, -6206.399902, -5852.500000, 10.000000, 0.000000, 0.000000, 179.983520, -1, -1, -1, 500);
	CreateDynamicObject(982, -6193.600097, -5839.700195, 10.000000, 0.000000, 0.000000, 89.983520, -1, -1, -1, 500);
	CreateDynamicObject(982, -6168.000000, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -6142.399902, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -6116.799804, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -6091.200195, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -6065.600097, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -6040.000000, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -6014.399902, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5988.799804, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5963.200195, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5937.600097, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5912.000000, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5886.399902, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5860.799804, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5835.200195, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5809.600097, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5806.399902, -5839.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5793.600097, -5852.500000, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5793.600097, -5878.100097, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5793.600097, -5903.700195, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5793.600097, -5929.299804, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5793.600097, -5954.899902, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5793.600097, -5980.500000, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5793.600097, -5986.899902, 10.000000, 0.000000, 0.000000, 359.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5806.399902, -5999.700195, 10.000000, 0.000000, 0.000000, 269.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5822.399902, -5999.700195, 10.000000, 0.000000, 0.000000, 269.972534, -1, -1, -1, 500);
	CreateDynamicObject(982, -5835.200195, -6012.500000, 10.000000, 0.000000, 0.000000, 359.972534, -1, -1, -1, 500);
	CreateDynamicObject(982, -5835.200195, -6038.100097, 10.000000, 0.000000, 0.000000, 359.972534, -1, -1, -1, 500);
	CreateDynamicObject(982, -5835.200195, -6063.700195, 10.000000, 0.000000, 0.000000, 359.972534, -1, -1, -1, 500);
	CreateDynamicObject(982, -5876.159667, -6095.696289, 10.000000, 0.000000, 0.000000, 359.972503, -1, -1, -1, 500);
	CreateDynamicObject(982, -5876.172851, -6121.272949, 10.000000, 0.000000, 0.000000, 359.972503, -1, -1, -1, 500);
	CreateDynamicObject(982, -5876.183593, -6146.868164, 10.000000, 0.000000, 0.000000, 359.972503, -1, -1, -1, 500);
	CreateDynamicObject(982, -5888.978515, -6159.691406, 10.000000, 0.000000, 0.000000, 269.967010, -1, -1, -1, 500);
	CreateDynamicObject(982, -5899.200195, -6159.700195, 10.000000, 0.000000, 0.000000, 269.967041, -1, -1, -1, 500);
	CreateDynamicObject(982, -5924.799804, -6159.700195, 10.000000, 0.000000, 0.000000, 269.961547, -1, -1, -1, 500);
	CreateDynamicObject(982, -5950.399902, -6159.700195, 10.000000, 0.000000, 0.000000, 269.967041, -1, -1, -1, 500);
	CreateDynamicObject(982, -5976.000000, -6159.700195, 10.000000, 0.000000, 0.000000, 269.967041, -1, -1, -1, 500);
	CreateDynamicObject(982, -5987.200195, -6159.700195, 10.000000, 0.000000, 0.000000, 269.967041, -1, -1, -1, 500);
	CreateDynamicObject(982, -5987.100097, -6079.700195, 10.000000, 0.000000, 0.000000, 89.989013, -1, -1, -1, 500);
	CreateDynamicObject(982, -5961.500000, -6079.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5935.899414, -6079.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5898.299804, -6079.700195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5999.807128, -6146.941894, 10.000000, 0.000000, 0.000000, 179.961547, -1, -1, -1, 500);
	CreateDynamicObject(8843, -5939.898437, -6064.657226, 9.399998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -5872.700195, -6079.700195, 10.000000, 0.000000, 0.000000, 89.972526, -1, -1, -1, 500);
	CreateDynamicObject(982, -5847.100097, -6079.700195, 10.000000, 0.000000, 0.000000, 89.972526, -1, -1, -1, 500);
	CreateDynamicObject(1673, -5938.599609, -6070.000000, 13.100000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(1673, -5939.500000, -6069.299804, 13.100000, 0.000000, 0.000000, 89.994506, -1, -1, -1, 500);
	CreateDynamicObject(982, -5951.899414, -6059.600585, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5926.299804, -6059.600097, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5977.500000, -6059.600097, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -6003.100097, -6059.600097, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -6028.700195, -6059.600097, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(983, -6044.500000, -6058.500000, 10.100000, 0.000000, 0.000000, 70.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -6049.600097, -6054.899902, 10.100000, 0.000000, 0.000000, 39.993900, -1, -1, -1, 500);
	CreateDynamicObject(983, -6052.200195, -6049.299804, 10.100000, 0.000000, 0.000000, 9.984740, -1, -1, -1, 500);
	CreateDynamicObject(983, -6052.200195, -6043.000000, 10.100000, 0.000000, 0.000000, 349.975585, -1, -1, -1, 500);
	CreateDynamicObject(983, -6049.600097, -6037.399902, 10.100000, 0.000000, 0.000000, 319.969482, -1, -1, -1, 500);
	CreateDynamicObject(983, -6044.500000, -6033.899902, 10.100000, 0.000000, 0.000000, 288.965820, -1, -1, -1, 500);
	CreateDynamicObject(983, -6038.299804, -6033.399902, 10.100000, 0.000000, 0.000000, 259.956909, -1, -1, -1, 500);
	CreateDynamicObject(983, -6032.700195, -6036.000000, 10.100000, 0.000000, 0.000000, 229.947509, -1, -1, -1, 500);
	CreateDynamicObject(983, -6027.799804, -6040.100097, 10.100000, 0.000000, 0.000000, 229.943847, -1, -1, -1, 500);
	CreateDynamicObject(983, -6022.899902, -6044.200195, 10.100000, 0.000000, 0.000000, 229.943847, -1, -1, -1, 500);
	CreateDynamicObject(983, -6018.000000, -6048.299804, 10.100000, 0.000000, 0.000000, 229.943847, -1, -1, -1, 500);
	CreateDynamicObject(983, -6013.100097, -6052.399902, 10.100000, 0.000000, 0.000000, 229.943847, -1, -1, -1, 500);
	CreateDynamicObject(983, -6007.899902, -6056.100097, 10.100000, 0.000000, 0.000000, 239.193847, -1, -1, -1, 500);
	CreateDynamicObject(983, -6059.100097, -6079.100097, 10.100000, 0.000000, 0.000000, 79.984741, -1, -1, -1, 500);
	CreateDynamicObject(983, -6065.200195, -6077.500000, 10.100000, 0.000000, 0.000000, 69.974983, -1, -1, -1, 500);
	CreateDynamicObject(983, -6071.000000, -6074.799804, 10.100000, 0.000000, 0.000000, 59.971920, -1, -1, -1, 500);
	CreateDynamicObject(983, -6076.200195, -6071.200195, 10.100000, 0.000000, 0.000000, 49.968868, -1, -1, -1, 500);
	CreateDynamicObject(983, -6080.100097, -6066.200195, 10.100000, 0.000000, 0.000000, 25.960329, -1, -1, -1, 500);
	CreateDynamicObject(983, -6081.000000, -6030.200195, 10.100000, 0.000000, 0.000000, 349.949707, -1, -1, -1, 500);
	CreateDynamicObject(983, -6078.799804, -6024.299804, 10.100000, 0.000000, 0.000000, 327.947509, -1, -1, -1, 500);
	CreateDynamicObject(983, -6074.299804, -6020.000000, 10.100000, 0.000000, 0.000000, 299.947387, -1, -1, -1, 500);
	CreateDynamicObject(983, -6068.500000, -6017.299804, 10.100000, 0.000000, 0.000000, 289.943237, -1, -1, -1, 500);
	CreateDynamicObject(983, -6062.500000, -6015.100097, 10.100000, 0.000000, 0.000000, 289.934692, -1, -1, -1, 500);
	CreateDynamicObject(983, -6056.500000, -6012.899902, 10.100000, 0.000000, 0.000000, 289.934692, -1, -1, -1, 500);
	CreateDynamicObject(983, -6050.299804, -6011.299804, 10.100000, 0.000000, 0.000000, 279.184692, -1, -1, -1, 500);
	CreateDynamicObject(983, -6043.899902, -6010.799804, 10.100000, 0.000000, 0.000000, 269.934570, -1, -1, -1, 500);
	CreateDynamicObject(983, -6037.500000, -6010.799804, 10.100000, 0.000000, 0.000000, 269.934082, -1, -1, -1, 500);
	CreateDynamicObject(983, -6031.100097, -6011.399902, 10.100000, 0.000000, 0.000000, 259.434082, -1, -1, -1, 500);
	CreateDynamicObject(983, -6025.200195, -6013.600097, 10.100000, 0.000000, 0.000000, 239.675659, -1, -1, -1, 500);
	CreateDynamicObject(983, -6020.000000, -6017.299804, 10.100000, 0.000000, 0.000000, 229.666748, -1, -1, -1, 500);
	CreateDynamicObject(983, -6020.000000, -6017.300781, 10.100000, 0.000000, 0.000000, 229.908203, -1, -1, -1, 500);
	CreateDynamicObject(983, -6015.100097, -6021.399902, 10.100000, 0.000000, 0.000000, 229.899902, -1, -1, -1, 500);
	CreateDynamicObject(983, -6010.200195, -6025.500000, 10.100000, 0.000000, 0.000000, 229.899902, -1, -1, -1, 500);
	CreateDynamicObject(983, -6005.299804, -6029.600097, 10.100000, 0.000000, 0.000000, 229.899902, -1, -1, -1, 500);
	CreateDynamicObject(983, -6000.100097, -6033.299804, 10.100000, 0.000000, 0.000000, 239.899902, -1, -1, -1, 500);
	CreateDynamicObject(983, -5994.299804, -6036.000000, 10.100000, 0.000000, 0.000000, 249.897460, -1, -1, -1, 500);
	CreateDynamicObject(983, -5988.100097, -6037.600097, 10.100000, 0.000000, 0.000000, 261.145019, -1, -1, -1, 500);
	CreateDynamicObject(983, -5981.699218, -6038.100585, 10.100000, 0.000000, 0.000000, 270.137329, -1, -1, -1, 500);
	CreateDynamicObject(983, -6002.100097, -6058.600097, 10.100000, 0.000000, 0.000000, 255.188842, -1, -1, -1, 500);
	CreateDynamicObject(982, -5977.500000, -6059.600585, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5965.799804, -6038.200195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(982, -5948.200195, -6038.200195, 10.000000, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(983, -5932.100097, -6038.200195, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5925.899902, -6037.100097, 10.000000, 0.000000, 0.000000, 289.994506, -1, -1, -1, 500);
	CreateDynamicObject(983, -5920.399902, -6033.899902, 10.000000, 0.000000, 0.000000, 309.989624, -1, -1, -1, 500);
	CreateDynamicObject(983, -5916.399902, -6029.100097, 10.000000, 0.000000, 0.000000, 329.979248, -1, -1, -1, 500);
	CreateDynamicObject(983, -5914.200195, -6023.200195, 10.000000, 0.000000, 0.000000, 349.968872, -1, -1, -1, 500);
	CreateDynamicObject(983, -5914.200195, -6016.899902, 10.000000, 0.000000, 0.000000, 9.958498, -1, -1, -1, 500);
	CreateDynamicObject(983, -5916.399902, -6011.000000, 10.000000, 0.000000, 0.000000, 30.448120, -1, -1, -1, 500);
	CreateDynamicObject(983, -5920.799804, -6006.600097, 10.000000, 0.000000, 0.000000, 59.937618, -1, -1, -1, 500);
	CreateDynamicObject(983, -5926.700195, -6004.399902, 10.000000, 0.000000, 0.000000, 79.930419, -1, -1, -1, 500);
	CreateDynamicObject(983, -5933.000000, -6004.399902, 10.000000, 0.000000, 0.000000, 99.925537, -1, -1, -1, 500);
	CreateDynamicObject(983, -5938.899902, -6006.500000, 10.000000, 0.000000, 0.000000, 119.915161, -1, -1, -1, 500);
	CreateDynamicObject(983, -5943.700195, -6010.500000, 10.000000, 0.000000, 0.000000, 139.904785, -1, -1, -1, 500);
	CreateDynamicObject(983, -5947.399902, -6015.700195, 10.000000, 0.000000, 0.000000, 149.899902, -1, -1, -1, 500);
	CreateDynamicObject(983, -5950.600097, -6021.200195, 10.000000, 0.000000, 0.000000, 149.891967, -1, -1, -1, 500);
	CreateDynamicObject(983, -5953.799804, -6026.700195, 10.000000, 0.000000, 0.000000, 149.886474, -1, -1, -1, 500);
	CreateDynamicObject(983, -5957.500000, -6031.899902, 10.000000, 0.000000, 0.000000, 139.386474, -1, -1, -1, 500);
	CreateDynamicObject(983, -5962.399902, -6035.899902, 10.000000, 0.000000, 0.000000, 117.878051, -1, -1, -1, 500);
	CreateDynamicObject(983, -5968.399902, -6037.799804, 10.000000, 0.000000, 0.000000, 97.372306, -1, -1, -1, 500);
	CreateDynamicObject(983, -5916.899902, -6058.500000, 10.000000, 0.000000, 0.000000, 289.989624, -1, -1, -1, 500);
	CreateDynamicObject(983, -5911.100097, -6055.799804, 10.000000, 0.000000, 0.000000, 299.989624, -1, -1, -1, 500);
	CreateDynamicObject(983, -5905.899902, -6052.200195, 10.000000, 0.000000, 0.000000, 309.981689, -1, -1, -1, 500);
	CreateDynamicObject(983, -5901.399902, -6047.700195, 10.000000, 0.000000, 0.000000, 319.973754, -1, -1, -1, 500);
	CreateDynamicObject(983, -5897.700195, -6042.500000, 10.000000, 0.000000, 0.000000, 329.971313, -1, -1, -1, 500);
	CreateDynamicObject(983, -5895.000000, -6036.700195, 10.000000, 0.000000, 0.000000, 339.963378, -1, -1, -1, 500);
	CreateDynamicObject(983, -5893.299804, -6030.500000, 10.000000, 0.000000, 0.000000, 349.955444, -1, -1, -1, 500);
	CreateDynamicObject(983, -5892.700195, -6024.200195, 10.000000, 0.000000, 0.000000, 359.953002, -1, -1, -1, 500);
	CreateDynamicObject(983, -5892.700195, -6017.799804, 10.000000, 0.000000, 0.000000, 359.945068, -1, -1, -1, 500);
	CreateDynamicObject(983, -5892.700195, -6011.399902, 10.000000, 0.000000, 0.000000, 359.945068, -1, -1, -1, 500);
	CreateDynamicObject(983, -5893.200195, -6005.100097, 10.000000, 0.000000, 0.000000, 9.684080, -1, -1, -1, 500);
	CreateDynamicObject(983, -5894.799804, -5998.899902, 10.000000, 0.000000, 0.000000, 19.673460, -1, -1, -1, 500);
	CreateDynamicObject(983, -5897.500000, -5993.100097, 10.000000, 0.000000, 0.000000, 29.671020, -1, -1, -1, 500);
	CreateDynamicObject(983, -5901.500000, -5988.299804, 10.000000, 0.000000, 0.000000, 49.663089, -1, -1, -1, 500);
	CreateDynamicObject(983, -5906.700195, -5984.600097, 10.000000, 0.000000, 0.000000, 59.652709, -1, -1, -1, 500);
	CreateDynamicObject(983, -5912.399902, -5981.899902, 10.000000, 0.000000, 0.000000, 69.644783, -1, -1, -1, 500);
	CreateDynamicObject(983, -5918.500000, -5980.200195, 10.000000, 0.000000, 0.000000, 79.642326, -1, -1, -1, 500);
	CreateDynamicObject(983, -5924.899902, -5979.600097, 10.000000, 0.000000, 0.000000, 89.639892, -1, -1, -1, 500);
	CreateDynamicObject(983, -5931.299804, -5979.600097, 10.000000, 0.000000, 0.000000, 89.637451, -1, -1, -1, 500);
	CreateDynamicObject(983, -5937.700195, -5979.500000, 10.000000, 0.000000, 0.000000, 89.637451, -1, -1, -1, 500);
	CreateDynamicObject(983, -5944.100097, -5980.000000, 10.000000, 0.000000, 0.000000, 99.637451, -1, -1, -1, 500);
	CreateDynamicObject(983, -5950.299804, -5981.600097, 10.000000, 0.000000, 0.000000, 109.635009, -1, -1, -1, 500);
	CreateDynamicObject(983, -5955.799804, -5984.700195, 10.000000, 0.000000, 0.000000, 129.627075, -1, -1, -1, 500);
	CreateDynamicObject(983, -5959.899902, -5989.500000, 10.000000, 0.000000, 0.000000, 149.616699, -1, -1, -1, 500);
	CreateDynamicObject(983, -5963.200195, -5995.000000, 10.000000, 0.000000, 0.000000, 149.611816, -1, -1, -1, 500);
	CreateDynamicObject(983, -5966.399902, -6000.500000, 10.000000, 0.000000, 0.000000, 149.611816, -1, -1, -1, 500);
	CreateDynamicObject(983, -5969.600097, -6006.000000, 10.000000, 0.000000, 0.000000, 149.611816, -1, -1, -1, 500);
	CreateDynamicObject(983, -5972.799804, -6011.500000, 10.000000, 0.000000, 0.000000, 149.611816, -1, -1, -1, 500);
	CreateDynamicObject(983, -5977.200195, -6015.799804, 10.000000, 0.000000, 0.000000, 119.611816, -1, -1, -1, 500);
	CreateDynamicObject(983, -5983.100097, -6016.899902, 10.000000, 0.000000, 0.000000, 79.602661, -1, -1, -1, 500);
	CreateDynamicObject(983, -5988.700195, -6014.299804, 10.000000, 0.000000, 0.000000, 49.595951, -1, -1, -1, 500);
	CreateDynamicObject(982, -5999.300292, -6002.399902, 10.000000, 0.000000, 0.000000, 39.978031, -1, -1, -1, 500);
	CreateDynamicObject(982, -6013.899902, -5981.500000, 10.000000, 0.000000, 0.000000, 29.973749, -1, -1, -1, 500);
	CreateDynamicObject(982, -6028.899902, -6004.100097, 10.000000, 0.000000, 0.000000, 29.965208, -1, -1, -1, 500);
	CreateDynamicObject(982, -6041.700195, -5981.899902, 10.000000, 0.000000, 0.000000, 29.965208, -1, -1, -1, 500);
	CreateDynamicObject(982, -6026.700195, -5959.299804, 10.000000, 0.000000, 0.000000, 29.965208, -1, -1, -1, 500);
	CreateDynamicObject(983, -6050.200195, -5968.399902, 10.000000, 0.000000, 0.000000, 39.595951, -1, -1, -1, 500);
	CreateDynamicObject(983, -6054.700195, -5963.899902, 10.000000, 0.000000, 0.000000, 49.589229, -1, -1, -1, 500);
	CreateDynamicObject(983, -6059.899902, -5960.200195, 10.000000, 0.000000, 0.000000, 59.586788, -1, -1, -1, 500);
	CreateDynamicObject(983, -6065.600097, -5957.500000, 10.000000, 0.000000, 0.000000, 69.578857, -1, -1, -1, 500);
	CreateDynamicObject(983, -6071.700195, -5955.799804, 10.000000, 0.000000, 0.000000, 79.570922, -1, -1, -1, 500);
	CreateDynamicObject(983, -6078.000000, -5955.200195, 10.000000, 0.000000, 0.000000, 89.568481, -1, -1, -1, 500);
	CreateDynamicObject(982, -6093.799804, -5952.899902, 10.000000, 0.000000, 0.000000, 79.956047, -1, -1, -1, 500);
	CreateDynamicObject(983, -6035.100097, -5945.799804, 10.000000, 0.000000, 0.000000, 39.578861, -1, -1, -1, 500);
	CreateDynamicObject(983, -6039.600097, -5941.200195, 10.000000, 0.000000, 0.000000, 49.572750, -1, -1, -1, 500);
	CreateDynamicObject(983, -6044.799804, -5937.500000, 10.000000, 0.000000, 0.000000, 59.564819, -1, -1, -1, 500);
	CreateDynamicObject(983, -6050.600097, -5934.700195, 10.000000, 0.000000, 0.000000, 69.556877, -1, -1, -1, 500);
	CreateDynamicObject(983, -6056.700195, -5933.000000, 10.000000, 0.000000, 0.000000, 79.548950, -1, -1, -1, 500);
	CreateDynamicObject(983, -6063.000000, -5931.799804, 10.000000, 0.000000, 0.000000, 79.546508, -1, -1, -1, 500);
	CreateDynamicObject(983, -6069.299804, -5931.200195, 10.000000, 0.000000, 0.000000, 89.546508, -1, -1, -1, 500);
	CreateDynamicObject(982, -6085.100097, -5929.000000, 10.000000, 0.000000, 0.000000, 79.956047, -1, -1, -1, 500);
	CreateDynamicObject(982, -6110.299804, -5924.500000, 10.000000, 0.000000, 0.000000, 79.947509, -1, -1, -1, 500);
	CreateDynamicObject(982, -6119.000000, -5948.399902, 10.000000, 0.000000, 0.000000, 79.947509, -1, -1, -1, 500);
	CreateDynamicObject(983, -6126.000000, -5921.700195, 10.000000, 0.000000, 0.000000, 79.546508, -1, -1, -1, 500);
	CreateDynamicObject(983, -6132.100097, -5920.000000, 10.000000, 0.000000, 0.000000, 69.546508, -1, -1, -1, 500);
	CreateDynamicObject(983, -6137.799804, -5917.299804, 10.000000, 0.000000, 0.000000, 59.537960, -1, -1, -1, 500);
	CreateDynamicObject(983, -6143.000000, -5913.600097, 10.000000, 0.000000, 0.000000, 49.529418, -1, -1, -1, 500);
	CreateDynamicObject(983, -6147.500000, -5909.000000, 10.000000, 0.000000, 0.000000, 39.520870, -1, -1, -1, 500);
	CreateDynamicObject(983, -6150.600097, -5903.500000, 10.000000, 0.000000, 0.000000, 19.517820, -1, -1, -1, 500);
	CreateDynamicObject(983, -6151.600097, -5897.299804, 10.000000, 0.000000, 0.000000, 359.511718, -1, -1, -1, 500);
	CreateDynamicObject(983, -6150.399902, -5891.100097, 10.000000, 0.000000, 0.000000, 339.516601, -1, -1, -1, 500);
	CreateDynamicObject(983, -6147.200195, -5885.600097, 10.000000, 0.000000, 0.000000, 319.510498, -1, -1, -1, 500);
	CreateDynamicObject(983, -6142.100097, -5882.100097, 10.000000, 0.000000, 0.000000, 289.504394, -1, -1, -1, 500);
	CreateDynamicObject(983, -6135.899902, -5881.100097, 10.000000, 0.000000, 0.000000, 269.495239, -1, -1, -1, 500);
	CreateDynamicObject(983, -6130.000000, -5882.799804, 10.000000, 0.000000, 0.000000, 239.494628, -1, -1, -1, 500);
	CreateDynamicObject(983, -6125.200195, -5886.899902, 10.000000, 0.000000, 0.000000, 219.485473, -1, -1, -1, 500);
	CreateDynamicObject(983, -6122.100097, -5892.399902, 10.000000, 0.000000, 0.000000, 199.479370, -1, -1, -1, 500);
	CreateDynamicObject(983, -6120.500000, -5898.600097, 10.000000, 0.000000, 0.000000, 189.473266, -1, -1, -1, 500);
	CreateDynamicObject(983, -6119.500000, -5904.899902, 10.000000, 0.000000, 0.000000, 189.470214, -1, -1, -1, 500);
	CreateDynamicObject(983, -6117.899902, -5911.000000, 10.000000, 0.000000, 0.000000, 199.470214, -1, -1, -1, 500);
	CreateDynamicObject(983, -6114.799804, -5916.500000, 10.000000, 0.000000, 0.000000, 219.462280, -1, -1, -1, 500);
	CreateDynamicObject(983, -6110.299804, -5921.000000, 10.000000, 0.000000, 0.000000, 230.707397, -1, -1, -1, 500);
	CreateDynamicObject(983, -6104.899902, -5924.200195, 10.000000, 0.000000, 0.000000, 248.951904, -1, -1, -1, 500);
	CreateDynamicObject(983, -6098.799804, -5926.200195, 10.000000, 0.000000, 0.000000, 254.944702, -1, -1, -1, 500);
	CreateDynamicObject(983, -6134.700195, -5945.600097, 10.000000, 0.000000, 0.000000, 79.520866, -1, -1, -1, 500);
	CreateDynamicObject(983, -6140.799804, -5943.899902, 10.000000, 0.000000, 0.000000, 69.513549, -1, -1, -1, 500);
	CreateDynamicObject(983, -6146.600097, -5941.200195, 10.000000, 0.000000, 0.000000, 59.505001, -1, -1, -1, 500);
	CreateDynamicObject(983, -6151.799804, -5937.500000, 10.000000, 0.000000, 0.000000, 49.501949, -1, -1, -1, 500);
	CreateDynamicObject(983, -6156.299804, -5932.899902, 10.000000, 0.000000, 0.000000, 39.498901, -1, -1, -1, 500);
	CreateDynamicObject(983, -6160.000000, -5927.600097, 10.000000, 0.000000, 0.000000, 29.495849, -1, -1, -1, 500);
	CreateDynamicObject(983, -6163.100097, -5922.000000, 10.000000, 0.000000, 0.000000, 29.487300, -1, -1, -1, 500);
	CreateDynamicObject(983, -6165.799804, -5916.200195, 10.000000, 0.000000, 0.000000, 19.487300, -1, -1, -1, 500);
	CreateDynamicObject(983, -6167.899902, -5910.200195, 10.000000, 0.000000, 0.000000, 19.478759, -1, -1, -1, 500);
	CreateDynamicObject(983, -6169.500000, -5904.000000, 10.000000, 0.000000, 0.000000, 9.478758, -1, -1, -1, 500);
	CreateDynamicObject(983, -6170.600097, -5897.700195, 10.000000, 0.000000, 0.000000, 9.475708, -1, -1, -1, 500);
	CreateDynamicObject(984, -6171.200195, -5888.100097, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6169.000000, -5875.700195, 10.000000, 0.000000, 0.000000, 340.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6162.700195, -5864.799804, 10.000000, 0.000000, 0.000000, 319.993896, -1, -1, -1, 500);
	CreateDynamicObject(984, -6152.600097, -5857.700195, 10.000000, 0.000000, 0.000000, 289.987792, -1, -1, -1, 500);
	CreateDynamicObject(984, -6140.200195, -5855.500000, 10.000000, 0.000000, 0.000000, 269.984130, -1, -1, -1, 500);
	CreateDynamicObject(984, -6127.799804, -5857.700195, 10.000000, 0.000000, 0.000000, 249.978027, -1, -1, -1, 500);
	CreateDynamicObject(984, -6116.899902, -5864.000000, 10.000000, 0.000000, 0.000000, 229.969482, -1, -1, -1, 500);
	CreateDynamicObject(984, -6107.899902, -5873.000000, 10.000000, 0.000000, 0.000000, 219.965820, -1, -1, -1, 500);
	CreateDynamicObject(984, -6101.600097, -5883.899902, 10.000000, 0.000000, 0.000000, 199.957275, -1, -1, -1, 500);
	CreateDynamicObject(984, -6098.299804, -5896.200195, 10.000000, 0.000000, 0.000000, 189.951171, -1, -1, -1, 500);
	CreateDynamicObject(983, -6096.100097, -5905.500000, 10.000000, 0.000000, 0.000000, 199.457397, -1, -1, -1, 500);
	CreateDynamicObject(983, -6093.000000, -5911.000000, 10.000000, 0.000000, 0.000000, 219.456787, -1, -1, -1, 500);
	CreateDynamicObject(983, -6088.200195, -5915.100097, 10.000000, 0.000000, 0.000000, 239.451904, -1, -1, -1, 500);
	CreateDynamicObject(983, -6082.299804, -5917.299804, 10.000000, 0.000000, 0.000000, 259.447021, -1, -1, -1, 500);
	CreateDynamicObject(983, -6076.000000, -5917.399902, 10.000000, 0.000000, 0.000000, 279.436645, -1, -1, -1, 500);
	CreateDynamicObject(983, -6070.100097, -5915.299804, 10.000000, 0.000000, 0.000000, 299.431762, -1, -1, -1, 500);
	CreateDynamicObject(983, -6065.200195, -5911.299804, 10.000000, 0.000000, 0.000000, 319.421386, -1, -1, -1, 500);
	CreateDynamicObject(983, -6065.199218, -5911.300781, 10.000000, 0.000000, 0.000000, 319.411010, -1, -1, -1, 500);
	CreateDynamicObject(982, -6054.899902, -5899.100097, 10.000000, 0.000000, 0.000000, 139.965209, -1, -1, -1, 500);
	CreateDynamicObject(982, -6038.399902, -5879.500000, 10.000000, 0.000000, 0.000000, 139.954833, -1, -1, -1, 500);
	CreateDynamicObject(983, -6063.100097, -5930.100097, 10.000000, 0.000000, 0.000000, 289.431762, -1, -1, -1, 500);
	CreateDynamicObject(983, -6057.700195, -5927.100097, 10.000000, 0.000000, 0.000000, 309.423828, -1, -1, -1, 500);
	CreateDynamicObject(983, -6053.100097, -5922.600097, 10.000000, 0.000000, 0.000000, 319.418945, -1, -1, -1, 500);
	CreateDynamicObject(982, -6042.799804, -5910.399902, 10.000000, 0.000000, 0.000000, 139.954833, -1, -1, -1, 500);
	CreateDynamicObject(982, -6026.299804, -5890.799804, 10.000000, 0.000000, 0.000000, 139.954803, -1, -1, -1, 500);
	CreateDynamicObject(984, -6025.299804, -5865.600097, 10.000000, 0.000000, 0.000000, 310.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6014.899902, -5858.299804, 10.000000, 0.000000, 0.000000, 299.990234, -1, -1, -1, 500);
	CreateDynamicObject(984, -6003.299804, -5852.899902, 10.000000, 0.000000, 0.000000, 289.981689, -1, -1, -1, 500);
	CreateDynamicObject(984, -5991.000000, -5849.600097, 10.000000, 0.000000, 0.000000, 279.978637, -1, -1, -1, 500);
	CreateDynamicObject(984, -5978.299804, -5848.500000, 10.000000, 0.000000, 0.000000, 269.975585, -1, -1, -1, 500);
	CreateDynamicObject(984, -6013.100097, -5876.899902, 10.000000, 0.000000, 0.000000, 309.967041, -1, -1, -1, 500);
	CreateDynamicObject(984, -6002.199707, -5870.600097, 10.000000, 0.000000, 0.000000, 289.962768, -1, -1, -1, 500);
	CreateDynamicObject(984, -5989.899902, -5867.299804, 10.000000, 0.000000, 0.000000, 279.956665, -1, -1, -1, 500);
	CreateDynamicObject(984, -5977.200195, -5866.200195, 10.000000, 0.000000, 0.000000, 269.948120, -1, -1, -1, 500);
	CreateDynamicObject(982, -5958.000000, -5866.200195, 10.000000, 0.000000, 0.000000, 89.954826, -1, -1, -1, 500);
	CreateDynamicObject(982, -5959.100097, -5848.500000, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 500);
	CreateDynamicObject(982, -5933.500000, -5848.500000, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 500);
	CreateDynamicObject(982, -5907.899902, -5848.500000, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 500);
	CreateDynamicObject(982, -5882.299804, -5848.500000, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 500);
	CreateDynamicObject(982, -5932.399902, -5866.200195, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 500);
	CreateDynamicObject(982, -5906.799804, -5866.200195, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 500);
	CreateDynamicObject(982, -5881.200195, -5866.200195, 10.000000, 0.000000, 0.000000, 89.950561, -1, -1, -1, 500);
	CreateDynamicObject(983, -5865.200195, -5866.299804, 10.100000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5859.000000, -5867.399902, 10.100000, 0.000000, 0.000000, 69.994506, -1, -1, -1, 500);
	CreateDynamicObject(983, -5853.600097, -5870.500000, 10.100000, 0.000000, 0.000000, 49.993900, -1, -1, -1, 500);
	CreateDynamicObject(983, -5849.500000, -5875.299804, 10.100000, 0.000000, 0.000000, 29.987789, -1, -1, -1, 500);
	CreateDynamicObject(983, -5847.299804, -5881.200195, 10.100000, 0.000000, 0.000000, 9.987178, -1, -1, -1, 500);
	CreateDynamicObject(983, -5847.299804, -5887.500000, 10.100000, 0.000000, 0.000000, 349.981079, -1, -1, -1, 500);
	CreateDynamicObject(983, -5849.500000, -5893.500000, 10.100000, 0.000000, 0.000000, 329.974975, -1, -1, -1, 500);
	CreateDynamicObject(983, -5853.600097, -5898.299804, 10.100000, 0.000000, 0.000000, 309.968872, -1, -1, -1, 500);
	CreateDynamicObject(983, -5859.100097, -5901.500000, 10.100000, 0.000000, 0.000000, 289.962768, -1, -1, -1, 500);
	CreateDynamicObject(983, -5865.299804, -5902.600097, 10.100000, 0.000000, 0.000000, 269.956665, -1, -1, -1, 500);
	CreateDynamicObject(984, -5863.100097, -5848.500000, 10.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5850.399902, -5849.600097, 10.000000, 0.000000, 0.000000, 79.994506, -1, -1, -1, 500);
	CreateDynamicObject(984, -5838.100097, -5852.899902, 10.000000, 0.000000, 0.000000, 69.991462, -1, -1, -1, 500);
	CreateDynamicObject(984, -5827.200195, -5859.200195, 10.000000, 0.000000, 0.000000, 49.982910, -1, -1, -1, 500);
	CreateDynamicObject(984, -5819.100097, -5868.899902, 10.000000, 0.000000, 0.000000, 29.976810, -1, -1, -1, 500);
	CreateDynamicObject(984, -5815.899902, -5880.899902, 10.000000, 0.000000, 0.000000, 359.976196, -1, -1, -1, 500);
	CreateDynamicObject(984, -5818.100097, -5893.299804, 10.000000, 0.000000, 0.000000, 339.978027, -1, -1, -1, 500);
	CreateDynamicObject(984, -5824.399902, -5904.200195, 10.000000, 0.000000, 0.000000, 319.971923, -1, -1, -1, 500);
	CreateDynamicObject(984, -5834.100097, -5912.299804, 10.000000, 0.000000, 0.000000, 299.971313, -1, -1, -1, 500);
	CreateDynamicObject(984, -5845.600097, -5917.600097, 10.000000, 0.000000, 0.000000, 289.965209, -1, -1, -1, 500);
	CreateDynamicObject(984, -5857.899902, -5920.899902, 10.000000, 0.000000, 0.000000, 279.956665, -1, -1, -1, 500);
	CreateDynamicObject(984, -5870.600097, -5922.000000, 10.000000, 0.000000, 0.000000, 269.948120, -1, -1, -1, 500);
	CreateDynamicObject(984, -5874.778808, -5901.499511, 10.000000, 0.000000, 0.000000, 259.945068, -1, -1, -1, 500);
	CreateDynamicObject(984, -5887.071289, -5898.184570, 10.000000, 0.000000, 0.000000, 249.942016, -1, -1, -1, 500);
	CreateDynamicObject(984, -5898.236328, -5892.241210, 10.000000, 0.000000, 0.000000, 234.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5899.778320, -5910.636718, 10.000000, 0.000000, 0.000000, 236.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5909.906738, -5902.875000, 10.000000, 0.000000, 0.000000, 229.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5919.627441, -5894.587890, 10.000000, 0.000000, 0.000000, 230.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5954.875976, -5916.749023, 10.000000, 0.000000, 0.000000, -25.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5909.326171, -5907.622070, 10.000000, 0.000000, 0.000000, 26.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5910.899902, -5948.600097, 10.000000, 0.000000, 0.000000, 49.885860, -1, -1, -1, 500);
	CreateDynamicObject(983, -5880.000000, -5920.899902, 10.100000, 0.000000, 0.000000, 249.956054, -1, -1, -1, 500);
	CreateDynamicObject(983, -6015.713378, -5930.187988, 10.100000, 0.000000, 0.000000, 184.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5932.067382, -5919.790039, 10.100000, 0.000000, 0.000000, 105.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5915.072265, -5900.669921, 10.100000, 0.000000, 0.000000, 247.500000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5907.799804, -5922.799804, 10.100000, 0.000000, 0.000000, 339.921264, -1, -1, -1, 500);
	CreateDynamicObject(983, -5908.299804, -5929.000000, 10.100000, 0.000000, 0.000000, 9.916990, -1, -1, -1, 500);
	CreateDynamicObject(983, -5928.065917, -5922.016601, 10.100000, 0.000000, 0.000000, 16.500000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5901.700195, -5939.500000, 10.100000, 0.000000, 0.000000, 39.907840, -1, -1, -1, 500);
	CreateDynamicObject(984, -5894.700195, -5946.000000, 10.000000, 0.000000, 0.000000, 49.877929, -1, -1, -1, 500);
	CreateDynamicObject(984, -5901.899902, -5957.600097, 10.000000, 0.000000, 0.000000, 39.866939, -1, -1, -1, 500);
	CreateDynamicObject(984, -5894.600097, -5968.000000, 10.000000, 0.000000, 0.000000, 29.863889, -1, -1, -1, 500);
	CreateDynamicObject(984, -5889.200195, -5979.600097, 10.000000, 0.000000, 0.000000, 19.855350, -1, -1, -1, 500);
	CreateDynamicObject(984, -5886.000000, -5991.899902, 10.000000, 0.000000, 0.000000, 9.846798, -1, -1, -1, 500);
	CreateDynamicObject(984, -5884.500000, -6004.600097, 10.000000, 0.000000, 0.000000, 3.843750, -1, -1, -1, 500);
	CreateDynamicObject(984, -5884.899902, -5954.299804, 10.000000, 0.000000, 0.000000, 49.866939, -1, -1, -1, 500);
	CreateDynamicObject(984, -5875.899902, -5963.299804, 10.000000, 0.000000, 0.000000, 39.866939, -1, -1, -1, 500);
	CreateDynamicObject(984, -5868.600097, -5973.700195, 10.000000, 0.000000, 0.000000, 29.863889, -1, -1, -1, 500);
	CreateDynamicObject(984, -5863.200195, -5985.299804, 10.000000, 0.000000, 0.000000, 19.855350, -1, -1, -1, 500);
	CreateDynamicObject(984, -5859.899902, -5997.600097, 10.000000, 0.000000, 0.000000, 9.846798, -1, -1, -1, 500);
	CreateDynamicObject(984, -5858.799804, -6010.299804, 10.000000, 0.000000, 0.000000, 359.843750, -1, -1, -1, 500);
	CreateDynamicObject(984, -5859.100097, -6023.100097, 10.000000, 0.000000, 0.000000, 357.840698, -1, -1, -1, 500);
	CreateDynamicObject(984, -5884.799804, -6017.299804, 10.000000, 0.000000, 0.000000, 353.839721, -1, -1, -1, 500);
	CreateDynamicObject(984, -5887.299804, -6029.799804, 10.000000, 0.000000, 0.000000, 343.842163, -1, -1, -1, 500);
	CreateDynamicObject(984, -5891.899902, -6041.700195, 10.000000, 0.000000, 0.000000, 333.839111, -1, -1, -1, 500);
	CreateDynamicObject(983, -5896.700195, -6049.899902, 10.000000, 0.000000, 0.000000, 320.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5901.200195, -6054.399902, 10.000000, 0.000000, 0.000000, 309.993286, -1, -1, -1, 500);
	CreateDynamicObject(983, -5906.700195, -6057.500000, 10.000000, 0.000000, 0.000000, 287.984741, -1, -1, -1, 500);
	CreateDynamicObject(983, -5910.399902, -6058.600097, 10.000000, 0.000000, 0.000000, 287.979125, -1, -1, -1, 500);
	CreateDynamicObject(984, -5860.700195, -6035.700195, 10.000000, 0.000000, 0.000000, 347.835693, -1, -1, -1, 500);
	CreateDynamicObject(984, -5864.500000, -6047.899902, 10.000000, 0.000000, 0.000000, 337.832641, -1, -1, -1, 500);
	CreateDynamicObject(984, -5870.299804, -6059.200195, 10.000000, 0.000000, 0.000000, 327.824096, -1, -1, -1, 500);
	CreateDynamicObject(984, -5878.000000, -6069.399902, 10.000000, 0.000000, 0.000000, 317.815551, -1, -1, -1, 500);
	CreateDynamicObject(984, -5888.000000, -6076.899902, 10.000000, 0.000000, 0.000000, 295.807006, -1, -1, -1, 500);
	CreateDynamicObject(1237, -5911.100097, -6079.700195, 9.399998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -5923.100097, -6079.700195, 9.399998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5924.747070, -6087.867675, 6.099998, 0.000000, 0.000000, 78.000000, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5947.799804, -6079.700195, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5964.700195, -6079.700195, 6.099998, 0.000000, 0.000000, 359.983520, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5981.500000, -6079.700195, 6.099998, 0.000000, 0.000000, 359.983520, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5991.600097, -6079.700195, 6.099998, 0.000000, 0.000000, 359.983520, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5911.100097, -6087.899902, 6.099998, 0.000000, 0.000000, 89.978027, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6041.299804, -6059.100097, 11.500000, 0.000000, 0.000000, 330.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6045.500000, -6035.600097, 11.500000, 0.000000, 0.000000, 219.996337, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6051.799804, -6049.200195, 11.500000, 0.000000, 0.000000, 279.990234, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6021.500000, -6058.600097, 11.500000, 0.000000, 0.000000, 359.986572, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6031.100097, -6039.399902, 11.500000, 0.000000, 0.000000, 139.983520, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5950.600097, -6038.000000, 11.500000, 0.000000, 0.000000, 359.982299, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5929.200195, -6037.399902, 11.500000, 0.000000, 0.000000, 29.983520, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5916.399902, -6026.600097, 11.500000, 0.000000, 0.000000, 79.976196, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5918.200195, -6008.799804, 11.500000, 0.000000, 0.000000, 159.969482, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5935.799804, -6005.200195, 11.500000, 0.000000, 0.000000, 209.960937, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5970.200195, -6004.399902, 11.500000, 0.000000, 0.000000, 59.959720, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5979.799804, -6016.299804, 11.500000, 0.000000, 0.000000, 359.952392, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5994.799804, -6005.600097, 11.500000, 0.000000, 0.000000, 309.956054, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6008.000000, -5991.000000, 11.500000, 0.000000, 0.000000, 299.951782, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6041.000000, -5984.600097, 11.500000, 0.000000, 0.000000, 119.943237, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6048.600097, -5970.399902, 11.500000, 0.000000, 0.000000, 129.943237, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6060.399902, -5960.000000, 11.500000, 0.000000, 0.000000, 149.935302, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6074.799804, -5955.500000, 11.500000, 0.000000, 0.000000, 179.924926, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6112.100097, -5923.299804, 11.500000, 0.000000, 0.000000, 349.917602, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6130.399902, -5919.899902, 11.500000, 0.000000, 0.000000, 339.909057, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6145.799804, -5909.700195, 11.500000, 0.000000, 0.000000, 309.900512, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6147.899902, -5887.500000, 11.500000, 0.000000, 0.000000, 229.891357, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6133.200195, -5881.899902, 11.500000, 0.000000, 0.000000, 169.883422, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6121.700195, -5895.899902, 11.500000, 0.000000, 0.000000, 89.881591, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6094.399902, -5907.799804, 11.500000, 0.000000, 0.000000, 299.879150, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6082.299804, -5916.399902, 11.500000, 0.000000, 0.000000, 359.871826, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6067.600097, -5912.700195, 11.500000, 0.000000, 0.000000, 39.868160, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6042.500000, -5910.399902, 11.500000, 0.000000, 0.000000, 229.863891, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6041.500000, -5881.500000, 11.500000, 0.000000, 0.000000, 49.861450, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6016.000000, -5880.799804, 11.500000, 0.000000, 0.000000, 229.861450, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6001.799804, -5871.600097, 11.500000, 0.000000, 0.000000, 199.855957, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5983.799804, -5867.399902, 11.500000, 0.000000, 0.000000, 179.852294, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5956.700195, -5847.600097, 11.500000, 0.000000, 0.000000, 359.851684, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5929.799804, -5867.299804, 11.500000, 0.000000, 0.000000, 179.840698, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5903.100097, -5847.299804, 11.500000, 0.000000, 0.000000, 359.829711, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5878.299804, -5867.200195, 11.500000, 0.000000, 0.000000, 179.818725, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5857.299804, -5868.399902, 11.500000, 0.000000, 0.000000, 149.818725, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5849.100097, -5880.399902, 11.500000, 0.000000, 0.000000, 89.809570, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5853.100097, -5896.299804, 11.500000, 0.000000, 0.000000, 39.802249, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5868.600097, -5901.100097, 11.500000, 0.000000, 0.000000, 349.797973, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5889.000000, -5917.200195, 11.500000, 0.000000, 0.000000, 159.788208, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5910.630859, -5903.340820, 11.500000, 0.000000, 0.000000, -47.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5907.899902, -5926.799804, 11.500000, 0.000000, 0.000000, 279.769897, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5901.000000, -5939.700195, 11.500000, 0.000000, 0.000000, 309.761352, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5898.299804, -5964.000000, 11.500000, 0.000000, 0.000000, 129.759521, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5869.700195, -5969.200195, 11.500000, 0.000000, 0.000000, 299.754028, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5886.200195, -5996.200195, 11.500000, 0.000000, 0.000000, 99.750976, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5858.299804, -6013.700195, 11.500000, 0.000000, 0.000000, 269.750366, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5890.299804, -6036.399902, 11.500000, 0.000000, 0.000000, 69.747306, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5877.700195, -6072.500000, 11.500000, 0.000000, 0.000000, 229.746704, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5908.299804, -6055.700195, 11.500000, 0.000000, 0.000000, 19.746089, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5999.300292, -6082.299804, 11.500000, 0.000000, 0.000000, 29.721069, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5940.500000, -6080.600097, 11.500000, 0.000000, 0.000000, 319.718017, -1, -1, -1, 500);
	CreateDynamicObject(1262, -5938.926757, -6069.657226, 15.630000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -5938.926757, -6066.657226, 15.630000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -5938.926757, -6072.657226, 15.630000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -5938.926757, -6075.657226, 15.630000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -5938.926757, -6063.657226, 15.630000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(8331, -5939.799804, -6076.399902, 2.200000, 0.000000, 0.000000, 20.000000, -1, -1, -1, 500);
	CreateDynamicObject(8843, -5939.898437, -6074.657226, 9.399998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8843, -5939.898437, -6069.657226, 9.399998, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5924.421386, -6086.033203, 10.000000, 0.000000, 0.000000, -12.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5911.087890, -6086.281250, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5930.909667, -6079.717285, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5902.974121, -6079.716308, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5930.653808, -6059.537597, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5947.542968, -6059.526367, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5964.448242, -6059.534667, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5981.324218, -6059.522460, 6.099998, 0.000000, 0.000000, 359.989013, -1, -1, -1, 500);
	CreateDynamicObject(9191, -5998.204101, -6059.509765, 6.099998, 0.000000, 0.000000, 359.983520, -1, -1, -1, 500);
	CreateDynamicObject(984, -5907.517578, -5883.582031, 10.000000, 0.000000, 0.000000, 220.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5928.592285, -5870.763671, 10.000000, 0.000000, 0.000000, 263.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5941.326171, -5869.991699, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5888.729003, -5917.013671, 10.000000, 0.000000, 0.000000, 244.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5916.938476, -5875.107910, 10.000000, 0.000000, 0.000000, 236.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5930.369628, -5887.882812, 10.000000, 0.000000, 0.000000, 246.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5942.609375, -5885.277832, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5954.093750, -5869.986328, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5955.395996, -5885.277343, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5968.193359, -5885.279296, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5966.857421, -5869.991699, 10.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5979.623046, -5870.656250, 10.000000, 0.000000, 0.000000, 276.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5980.843261, -5886.600585, 10.000000, 0.000000, 0.000000, 282.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5992.188964, -5872.855468, 10.000000, 0.000000, 0.000000, 284.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5992.745605, -5890.936523, 10.000000, 0.000000, 0.000000, 118.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6004.050781, -5877.396484, 10.000000, 0.000000, 0.000000, 298.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6014.299804, -5884.834960, 10.000000, 0.000000, 0.000000, 314.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6022.991699, -5894.188964, 10.000000, 0.000000, 0.000000, 140.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6030.470703, -5904.507812, 10.000000, 0.000000, 0.000000, 148.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6035.607421, -5916.068847, 10.000000, 0.000000, 0.000000, 164.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6037.369140, -5928.599609, 10.000000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6035.584960, -5941.147460, 10.000000, 0.000000, 0.000000, 196.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6002.662109, -5898.704101, 10.000000, 0.000000, 0.000000, 138.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6010.117675, -5908.979980, 10.000000, 0.000000, 0.000000, 150.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6014.619628, -5920.758789, 10.000000, 0.000000, 0.000000, 168.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5990.004394, -5945.987304, 10.000000, 0.000000, 0.000000, 30.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -6013.294921, -5939.382324, 10.000000, 0.000000, 0.000000, 200.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -6008.170898, -5988.994140, 10.100000, 0.000000, 0.000000, 232.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5969.922851, -5978.580078, 10.000000, 0.000000, 0.000000, 40.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -5997.101562, -6000.451171, 10.000000, 0.000000, 0.000000, 42.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5985.826660, -6011.656738, 10.000000, 0.000000, 0.000000, 58.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5980.009277, -6012.580078, 10.000000, 0.000000, 0.000000, 104.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5975.118164, -6009.156738, 10.000000, 0.000000, 0.000000, 146.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5971.273925, -6004.067382, 10.000000, 0.000000, 0.000000, 140.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -6004.727050, -5956.464843, 10.000000, 0.000000, 0.000000, 29.973749, -1, -1, -1, 500);
	CreateDynamicObject(983, -5982.394531, -5989.401855, 10.000000, 0.000000, 0.000000, 96.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -5991.967285, -5978.632812, 10.000000, 0.000000, 0.000000, 29.973749, -1, -1, -1, 500);
	CreateDynamicObject(983, -5981.539062, -5986.892578, 10.000000, 0.000000, 0.000000, 47.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5986.847167, -5983.507812, 10.000000, 0.000000, 0.000000, 68.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5967.623535, -5998.872070, 10.000000, 0.000000, 0.000000, 150.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5965.479492, -5992.959960, 10.000000, 0.000000, 0.000000, 170.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5965.367675, -5986.640625, 10.000000, 0.000000, 0.000000, 188.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -5980.400390, -5962.592773, 10.000000, 0.000000, 0.000000, 29.973749, -1, -1, -1, 500);
	CreateDynamicObject(982, -5959.575683, -5935.173339, 10.000000, 0.000000, 0.000000, -9.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5995.610351, -5934.521484, 10.000000, 0.000000, 0.000000, 22.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5994.589355, -5893.924804, 10.000000, 0.000000, 0.000000, 112.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5997.779296, -5925.392089, 10.000000, 0.000000, 0.000000, -4.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5996.377929, -5919.252929, 10.000000, 0.000000, 0.000000, -22.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5992.741210, -5914.235351, 10.000000, 0.000000, 0.000000, -50.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5987.105957, -5911.999511, 10.000000, 0.000000, 0.000000, -87.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5981.218750, -5913.524414, 10.000000, 0.000000, 0.000000, -122.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5977.232421, -5918.128417, 10.000000, 0.000000, 0.000000, -156.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5982.297851, -5891.533203, 10.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5970.627929, -5895.097167, 10.000000, 0.000000, 0.000000, 56.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5976.262207, -5924.219238, 10.000000, 0.000000, 0.000000, -186.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5980.228515, -5958.656250, 10.000000, 0.000000, 0.000000, 190.800003, -1, -1, -1, 500);
	CreateDynamicObject(984, -5980.760742, -5946.035156, 10.000000, 0.000000, 0.000000, 174.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5978.339843, -5933.540039, 10.000000, 0.000000, 0.000000, 164.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5962.242675, -5904.257812, 10.000000, 0.000000, 0.000000, 29.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5958.355468, -5916.182617, 10.000000, 0.000000, 0.000000, 7.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5965.471191, -5979.776855, 10.000000, 0.000000, 0.000000, 64.400001, -1, -1, -1, 500);
	CreateDynamicObject(983, -5956.507812, -5982.599121, 10.000000, 0.000000, 0.000000, 89.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5961.700683, -5954.203125, 10.000000, 0.000000, 0.000000, -1.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5959.102539, -5962.305664, 10.000000, 0.000000, 0.000000, 58.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5956.800781, -5960.828125, 10.000000, 0.000000, 0.000000, 7.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5959.448242, -5955.407226, 10.000000, 0.000000, 0.000000, 44.700000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5942.998535, -5975.753417, 10.000000, 0.000000, 0.000000, -42.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5937.836914, -5964.668457, 10.000000, 0.000000, 0.000000, -8.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5938.264648, -5952.073730, 10.000000, 0.000000, 0.000000, 12.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5919.266601, -5939.118652, 10.000000, 0.000000, 0.000000, 33.000000, -1, -1, -1, 500);
	CreateDynamicObject(982, -5937.375976, -5933.214355, 10.000000, 0.000000, 0.000000, -10.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5947.497070, -5906.616210, 10.000000, 0.000000, 0.000000, -47.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5936.763671, -5900.178222, 10.000000, 0.000000, 0.000000, -71.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5924.361328, -5898.766601, 10.000000, 0.000000, 0.000000, -96.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5906.604492, -5916.614746, 10.100000, 0.000000, 0.000000, 178.000000, -1, -1, -1, 500);
	CreateDynamicObject(983, -5905.727539, -5934.601562, 10.100000, 0.000000, 0.000000, 39.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5925.635742, -5928.071289, 10.000000, 0.000000, 0.000000, 27.000000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -5911.027343, -6092.857421, 9.399998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -5925.691406, -6092.315429, 9.399998, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5928.558593, -5890.501464, 11.500000, 0.000000, 0.000000, 150.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5955.046875, -5886.369628, 11.500000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5989.512695, -5890.511718, 11.500000, 0.000000, 0.000000, 206.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6030.894531, -5904.156250, 11.500000, 0.000000, 0.000000, 57.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -6035.525390, -5943.667968, 11.500000, 0.000000, 0.000000, 97.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5985.221679, -5988.821289, 11.500000, 0.000000, 0.000000, -33.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5984.157714, -5985.378417, 11.500000, 0.000000, 0.000000, 171.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5983.157226, -5954.478515, 11.500000, 0.000000, 0.000000, -62.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5997.228027, -5925.494628, 11.500000, 0.000000, 0.000000, -91.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5976.871093, -5921.240722, 11.500000, 0.000000, 0.000000, 98.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5961.016113, -5960.157226, 11.500000, 0.000000, 0.000000, -62.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5957.668457, -5957.945312, 11.500000, 0.000000, 0.000000, 120.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5971.571289, -5893.744140, 11.500000, 0.000000, 0.000000, -33.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5957.221191, -5920.412109, 11.500000, 0.000000, 0.000000, -84.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5954.057128, -5913.401855, 11.500000, 0.000000, 0.000000, 69.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5933.250976, -5898.290039, 11.500000, 0.000000, 0.000000, 18.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5914.634765, -5899.949218, 11.500000, 0.000000, 0.000000, 142.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5968.516601, -5979.023925, 11.500000, 0.000000, 0.000000, 156.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5945.555664, -5979.530761, 11.500000, 0.000000, 0.000000, 222.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5938.146484, -5941.137695, 11.500000, 0.000000, 0.000000, -98.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5930.488281, -5920.080566, 11.500000, 0.000000, 0.000000, 164.000000, -1, -1, -1, 500);
	CreateDynamicObject(3398, -5916.396484, -5944.370605, 11.500000, 0.000000, 0.000000, 135.000000, -1, -1, -1, 500);
	CreateDynamicObject(5184, -5919.903808, -6098.521484, 27.979999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(5184, -5895.927734, -6061.156738, 28.049999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5835.195800, -6073.309082, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(984, -5876.168945, -6086.087890, 10.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
//End дрифт-трасса 9
//Start дрифт-трасса 10
	ObjGam[28] = CreateObject(8355, -9044.02148, -8961.57422, 4.34790,   0.00000, 0.00000, 11.25000);

	CreateDynamicObject(3452, -9026.97363, -8903.71484, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(5005, -9029.49609, -8939.15039, 7.42440,   0.00000, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9021.34766, -8931.96484, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(5005, -9073.42871, -8902.24805, 7.79330,   0.00000, 0.00000, -258.75000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9074.90625, -8933.68457, 10.07230,   -24.92370, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(7909, -9044.53906, -8955.89551, 13.02030,   0.00000, 0.00000, -168.75000, -1, -1, -1, 500);
	CreateDynamicObject(7306, -9044.40527, -8955.95313, 12.95080,   0.00000, 0.00000, 236.25000, -1, -1, -1, 500);
	CreateDynamicObject(7306, -9044.05664, -8957.62207, 12.95080,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(7909, -9044.19043, -8957.71387, 13.02030,   0.00000, 0.00000, -348.75000, -1, -1, -1, 500);
	CreateDynamicObject(1540, -9050.96875, -8958.19043, 9.20590,   0.00000, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(7305, -9079.84766, -8937.61914, 27.23650,   0.00000, 0.00000, -213.75000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9011.27539, -8898.90332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9070.63379, -8954.85938, 10.07230,   -24.92370, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9005.80078, -8926.15332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 500);
//	CreateDynamicObject(8355, -9044.02148, -8961.57422, 4.34790,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(10763, -9077.60645, -8892.40527, 30.37720,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9032.62305, -8875.34570, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9015.67285, -8960.46484, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9016.90039, -8870.65332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9000.12891, -8954.40332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(5005, -9046.60156, -8853.13086, 7.41830,   0.00000, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9065.16406, -8982.50781, 10.07230,   -24.92370, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(7307, -9070.82324, -8983.75586, 27.29090,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9038.24805, -8847.04688, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -9066.87598, -8846.74414, 4.36680,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(4890, -9000.13477, -8862.24316, 22.92000,   0.00000, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9022.32617, -8843.40332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9009.95215, -8989.21582, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -8994.75586, -8981.40332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9059.48926, -9011.25879, 10.07230,   -24.92370, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(4890, -9109.57910, -8993.62598, 18.29220,   0.00000, 0.00000, -258.75000, -1, -1, -1, 500);
	CreateDynamicObject(5007, -9027.91113, -9013.74805, 7.16040,   0.00000, 0.00000, -168.75000, -1, -1, -1, 500);
	CreateDynamicObject(8038, -9126.89160, -8858.17383, 22.75720,   0.00000, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9043.95117, -8818.49805, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(615, -9103.03223, -8828.66797, 4.36690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9027.94922, -8815.15332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -9089.37305, -8820.64941, 5.02600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -9089.37305, -8820.64941, 4.37600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -9089.84570, -8820.77344, 5.02600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -9089.84570, -8820.77344, 4.37600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7306, -9062.04492, -9028.79785, 27.17370,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9008.27734, -9030.33887, 4.31960,   0.00000, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9053.71680, -9040.14844, 10.07230,   -24.92370, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(615, -9147.33301, -8847.59473, 4.36690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -9126.68945, -8818.07227, 4.37310,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(4847, -9151.46484, -8992.36328, -4.94160,   0.00000, 0.00000, -270.00000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9049.57617, -8790.12500, 7.62230,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8999.77734, -9041.33887, 4.34460,   0.00000, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9033.54883, -8786.90332, 19.12230,   -20.62650, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -8969.70313, -9027.55859, 5.43490,   0.00000, 0.00000, 103.82830, -1, -1, -1, 500);
	CreateDynamicObject(5005, -9166.36133, -8854.18555, 7.82460,   0.00000, 0.00000, -696.64038, -1, -1, -1, 500);
	CreateDynamicObject(5005, -9168.72266, -8855.14648, 7.82460,   0.00000, 0.00000, -516.64038, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8999.77734, -9049.83887, 4.31960,   0.00000, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -9084.87402, -8782.28809, 4.74220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -9126.05664, -8798.42676, 4.74220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8994.94238, -9051.44922, 0.35200,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 500);
	CreateDynamicObject(5005, -9132.20703, -8802.29688, 7.42460,   0.00000, 0.00000, -158.35941, -1, -1, -1, 500);
	CreateDynamicObject(615, -9183.73633, -8865.29492, 4.31790,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9048.08984, -9068.39844, 10.07230,   -24.92370, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(4851, -9156.65332, -9026.04004, -2.75920,   0.00000, 0.00000, 107.26610, -1, -1, -1, 500);
	CreateDynamicObject(7416, -9202.37793, -8914.04688, 4.30370,   0.00000, 0.00000, 13.04620, -1, -1, -1, 500);
	CreateDynamicObject(3472, -9161.71582, -8812.63086, 4.74220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8994.94238, -9065.50000, 3.05200,   -1.71890, 0.00000, 102.03210, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8994.94238, -9065.50000, 1.67700,   -3.43770, 0.00000, 102.03210, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8994.94238, -9065.50000, 0.10200,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 500);
	CreateDynamicObject(17105, -9136.85156, -8782.47266, 15.74059,   0.85940, 2.57830, -76.09440, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9036.58984, -9082.64844, 10.07230,   -24.92370, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -9017.08984, -9089.39844, 10.07230,   -24.92370, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -8977.90430, -9080.08594, 5.15990,   0.00000, 0.00000, 103.82830, -1, -1, -1, 500);
	CreateDynamicObject(7906, -9025.87598, -9094.10547, 22.24900,   0.00000, 0.00000, 168.75000, -1, -1, -1, 500);
	CreateDynamicObject(4847, -9046.09180, -9095.26172, -4.95979,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(6873, -9189.14453, -8953.58789, -94.38490,   0.00000, 0.00000, -83.04730, -1, -1, -1, 500);
	CreateDynamicObject(8650, -9227.61133, -8938.88086, 5.20190,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -8992.83984, -9091.39844, 10.07230,   -24.92370, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -8974.83984, -9088.39844, 10.07230,   -24.92370, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(16061, -9204.50098, -8819.23535, -2.23620,   -1.71890, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(5007, -9226.64746, -8864.33594, 6.76490,   0.00000, 0.00000, 111.64050, -1, -1, -1, 500);
	CreateDynamicObject(3472, -9225.60449, -8979.79297, 4.67230,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -9233.73340, -8888.69434, 4.37740,   0.00000, 0.00000, 292.49991, -1, -1, -1, 500);
	CreateDynamicObject(3472, -9238.87793, -8925.74219, 4.68060,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -9237.48340, -8888.69434, 4.32740,   0.00000, 0.00000, 292.49991, -1, -1, -1, 500);
	CreateDynamicObject(8650, -9239.31934, -8901.60938, 5.42680,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(615, -9240.04785, -8895.95508, -6.42190,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -9208.11230, -9030.37988, 5.19810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16134, -9242.33789, -8894.86133, -1.43330,   0.00000, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(6873, -9211.89453, -8895.58789, -94.38490,   0.00000, 0.00000, -71.79720, -1, -1, -1, 500);
	CreateDynamicObject(4550, -8995.21289, -9014.09082, -152.15810,   0.00000, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(18362, -8867.67383, -9001.85449, 7.01160,   -20.62650, 10.31320, 50.00200, -1, -1, -1, 500);
	CreateDynamicObject(8650, -9049.20313, -9122.08984, 5.57960,   -2.57830, 0.00000, 93.51510, -1, -1, -1, 500);
	CreateDynamicObject(8650, -9019.12695, -9120.25977, 6.48390,   -0.85940, 0.00000, 93.51510, -1, -1, -1, 500);
	CreateDynamicObject(8650, -9079.45996, -9121.86230, 4.67310,   -0.85940, 0.00000, 85.70280, -1, -1, -1, 500);
	CreateDynamicObject(16061, -9224.86816, -9024.26563, -2.60950,   -1.71890, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, -8972.11230, -9110.18555, -8.92169,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -8988.88281, -9118.86426, 7.17250,   -1.71890, 0.00000, 91.79620, -1, -1, -1, 500);
	CreateDynamicObject(8392, -8914.56445, -9080.01563, 22.26120,   0.00000, 0.00000, 12.10950, -1, -1, -1, 500);
	CreateDynamicObject(7416, -9248.35938, -8982.19531, 4.30310,   0.00000, 0.00000, 1.79620, -1, -1, -1, 500);
	CreateDynamicObject(4847, -9248.39258, -8988.57617, -5.03530,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8860.87305, -9022.16992, 12.71240,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 500);
	CreateDynamicObject(4847, -9248.39258, -9004.17578, -4.98530,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -8958.53320, -9117.95020, 8.35810,   -2.57830, 0.00000, 91.79620, -1, -1, -1, 500);
	CreateDynamicObject(8650, -9238.18848, -9030.37988, 5.19810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8860.87305, -9036.91992, 12.46240,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 500);
	CreateDynamicObject(4847, -9253.39453, -9004.32422, -5.06030,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8860.87305, -9041.41992, 12.33740,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8996.57227, -9137.77344, 6.33760,   -1.71890, 0.00000, 93.43770, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8996.57227, -9141.02344, 6.31260,   -1.71890, 0.00000, 93.43770, -1, -1, -1, 500);
	CreateDynamicObject(8355, -9198.81445, -9092.63184, 4.33270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -8928.34570, -9115.87891, 9.74010,   -2.57830, 0.00000, 96.09340, -1, -1, -1, 500);
	CreateDynamicObject(978, -9278.85742, -8936.68652, 5.21760,   0.00000, 0.00000, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, -9278.85742, -8936.68652, 4.71760,   0.00000, 0.00000, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, -9283.25000, -8928.46777, 5.21760,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(978, -9283.25000, -8928.46777, 4.71760,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -9125.56445, -9141.80469, 4.35770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16134, -9279.52051, -8973.69531, -1.99480,   0.00000, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, -9286.30371, -8919.63867, 5.21760,   0.00000, 0.00000, -74.45280, -1, -1, -1, 500);
	CreateDynamicObject(978, -9286.30371, -8919.63867, 4.71760,   0.00000, 0.00000, -74.45280, -1, -1, -1, 500);
	CreateDynamicObject(3877, -9287.95703, -8914.45313, 5.28010,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -9287.98730, -8914.44336, 4.38030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -9247.97266, -9053.29297, 4.30600,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -9284.98438, -8871.28125, 4.57440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -9001.92188, -9157.72168, 5.64970,   -2.57830, 0.00000, 91.71890, -1, -1, -1, 500);
	CreateDynamicObject(790, -9289.62402, -8936.69141, -16.11450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -8898.31445, -9112.00000, 11.37280,   -3.43770, 0.00000, 98.67170, -1, -1, -1, 500);
	CreateDynamicObject(4875, -8969.97754, -9132.09473, -81.28630,   62.73880, 6.87550, -11.32730, -1, -1, -1, 500);
	CreateDynamicObject(3472, -9268.44727, -9027.88281, 4.67230,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -9292.95508, -8891.77832, 4.57440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, -8889.48242, -9107.69824, -1.92580,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -9268.43848, -9030.37988, 5.19810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16061, -9047.33594, -9166.05273, -2.90660,   -4.29720, 0.00000, 91.71890, -1, -1, -1, 500);
	CreateDynamicObject(790, -9295.37402, -8916.44141, -16.11450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -9288.50586, -8985.23438, 4.33470,   0.00000, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -8868.67578, -9106.80273, 13.18120,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(790, -8996.90332, -9177.05762, -13.38410,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9092.81055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4602, -8836.57715, -9076.75977, 65.32170,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9099.31055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4847, -9250.64453, -9100.57422, -5.06030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -8785.35742, -8995.42285, 20.18870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, -8976.40332, -9182.80762, -13.38410,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -9298.43652, -9033.32813, 5.19810,   0.00000, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9105.06055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8863.75586, -9123.63867, 12.37300,   -3.43770, 0.00000, 98.59430, -1, -1, -1, 500);
	CreateDynamicObject(8650, -8838.94336, -9100.89648, 15.00620,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9110.81055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4847, -9046.09180, -9198.44238, -4.95979,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9116.06055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9121.06055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5001, -9330.57129, -8975.32813, 6.67710,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9126.56055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8859.40527, -9139.63867, 12.44800,   -3.43770, 0.00000, 98.59430, -1, -1, -1, 500);
	CreateDynamicObject(3472, -8866.78906, -9147.71289, 12.30610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -8762.47852, -8987.65625, 22.35050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9132.56055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9137.81055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9143.31055, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9148.58496, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9155.08496, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9162.58496, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3510, -9250.53906, -9170.83496, -0.77700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8731.65625, -9009.41113, 24.37890,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 500);
	CreateDynamicObject(8354, -9303.12695, -9103.75977, 4.32570,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8739.19141, -9095.06738, 22.15390,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 500);
	CreateDynamicObject(17104, -8759.26074, -9144.68359, 27.75890,   -3.43770, 0.00000, 102.10940, -1, -1, -1, 500);
	CreateDynamicObject(8355, -8739.19141, -9100.61230, 22.05390,   -5.15660, 0.00000, 102.03210, -1, -1, -1, 500);
	CreateDynamicObject(8650, -8698.50684, -9111.42676, 26.19010,   -5.15660, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(18362, -8695.72461, -8963.17285, 21.14950,   -20.62650, 10.31320, 47.42370, -1, -1, -1, 500);
	CreateDynamicObject(16061, -8677.53906, -9115.89648, 19.42850,   -3.43770, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -8673.99316, -9106.54688, 28.44790,   -5.15660, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -8644.51270, -9106.54883, 30.93570,   -4.29720, 0.00000, 78.75000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -8627.86523, -9052.65039, 33.10930,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -8623.48926, -9052.11816, 33.19250,   -5.15660, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3873, -8620.79492, -9027.81934, 41.66400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18349, -8623.40820, -9108.22070, 60.24070,   -5.15660, 6.87550, 104.68770, -1, -1, -1, 500);
	CreateDynamicObject(8343, -8615.25977, -9009.82715, 34.67890,   5.15660, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -8596.31445, -8949.04102, 37.72610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -8577.81445, -8972.42773, 38.95170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -8561.99609, -9001.56348, 39.83880,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7304, -8557.00781, -9000.57227, 47.33050,   0.00000, 0.00000, 26.01510, -1, -1, -1, 500);
	CreateDynamicObject(3472, -8545.03223, -9035.17773, 40.74850,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10903, -8543.45313, -8980.27344, 43.29040,   0.00000, -1.71890, -153.98489, -1, -1, -1, 500);
	CreateDynamicObject(3472, -8532.05664, -9064.11914, 41.38740,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8493, -9315.39941, -9191.47461, 18.73390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -9333.09375, -9094.98242, 6.89610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -9324.11035, -9046.77930, 5.19810,   0.00000, 0.00000, 134.06329, -1, -1, -1, 500);
	CreateDynamicObject(7392, -9336.51074, -9077.79980, 16.24710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -9334.90039, -9056.84082, 6.89610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5767, -9370.26953, -9077.56250, 45.91350,   0.00000, 0.00000, -178.20380, -1, -1, -1, 500);
	CreateDynamicObject(8650, -9379.59473, -9091.45508, 3.25150,   0.00000, 0.00000, 179.06329, -1, -1, -1, 500);
	CreateDynamicObject(4847, -9352.89453, -9004.32422, -5.08530,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16173, -9371.07715, -9217.96387, 54.69330,   -6.01610, -13.75100, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(973, -9409.98340, -9099.77148, 5.09060,   0.00000, 0.00000, -168.75000, -1, -1, -1, 500);
	CreateDynamicObject(973, -9409.98340, -9099.77148, 4.61560,   0.00000, 0.00000, -168.75000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -9403.75195, -9057.48047, 4.32540,   0.00000, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -9418.25488, -9102.54980, 4.33400,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16173, -9422.82715, -9087.71387, 53.19330,   -6.01610, -13.75100, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7416, -9429.22852, -9058.76563, 4.31620,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16173, -9374.82715, -8937.21387, 49.94330,   -6.01610, -13.75100, -131.56219, -1, -1, -1, 500);
	CreateDynamicObject(4847, -9459.89453, -9174.07422, -5.06030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4847, -9459.89453, -9079.32422, -5.06030,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(5005, -9466.29297, -9024.43164, 7.35050,   0.00000, 0.00000, -349.60941, -1, -1, -1, 500);
	CreateDynamicObject(1262, -9045.05078, -8955.44531, 10.60840,   0.00000, 0.00000, 11.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -9046.62598, -8955.75098, 10.60840,   0.00000, 0.00000, 11.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -9048.19238, -8956.06836, 10.60840,   0.00000, 0.00000, 11.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -9043.47363, -8955.12988, 10.60840,   0.00000, 0.00000, 11.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -9041.90820, -8954.81445, 10.60840,   0.00000, 0.00000, 11.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -9188.20996, -9049.39844, 7.29870,   0.00000, 0.00000, 107.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -9107.84180, -9115.00586, 7.29870,   0.00000, 0.00000, 174.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -9107.84180, -9115.00586, 14.29870,   0.00000, 0.00000, 174.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -9188.20996, -9049.39844, 14.29870,   0.00000, 0.00000, 107.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -9209.98828, -8978.04590, 7.64640,   0.00000, 0.00000, -74.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -9209.98828, -8978.04590, 12.64640,   0.00000, 0.00000, -74.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -9194.30762, -9030.18555, 6.19900,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -9188.20996, -9049.39844, 0.29870,   0.00000, 0.00000, 107.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -9107.84180, -9115.00586, 0.29870,   0.00000, 0.00000, 174.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -9219.13477, -9136.27734, 7.17480,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -9274.85254, -9136.16992, 7.17480,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -9274.85254, -9136.16992, 0.17480,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(983, -8861.03809, -9067.16211, 12.48790,   -5.15660, 0.00000, 101.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, -8818.30176, -9097.12988, 15.93280,   -3.43770, 0.00000, 101.00000, -1, -1, -1, 500);
	CreateDynamicObject(983, -8812.69824, -9092.79492, 16.31280,   0.00000, 0.00000, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -8819.37109, -9073.50195, 18.36740,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -8696.64844, -9047.41406, 29.68090,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8777.87695, -8984.25781, 20.77270,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8737.91602, -8974.84277, 24.46720,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8698.45117, -8965.43262, 28.16270,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8629.30273, -8964.64160, 34.24690,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8589.72461, -8957.79395, 37.84810,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8572.23145, -8993.67090, 38.75510,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8551.44238, -9029.11816, 39.95660,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8544.20605, -9067.20410, 39.91460,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8581.09863, -9078.62500, 36.46020,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8617.16602, -9100.39551, 32.85660,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8637.30371, -9111.16016, 30.90410,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8866.96191, -9051.19043, 11.62900,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8793.85156, -9088.13281, 17.39490,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8802.07910, -9049.37207, 17.40490,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8753.63086, -9079.81250, 21.08750,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8762.35547, -9041.30469, 21.05880,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8722.90430, -9032.59766, 24.73160,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8714.63379, -9070.63672, 24.77170,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8683.85645, -9024.61719, 28.30060,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8675.58887, -9063.03125, 28.39400,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8644.78125, -9016.48633, 31.92260,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8636.68164, -9054.21484, 31.97180,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8616.08887, -9012.88672, 34.49990,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6959, -8608.98438, -9048.11523, 34.51520,   0.00000, -5.15660, 12.00000, -1, -1, -1, 500);
//End дрифт-трасса 10
//Start дрифт-трасса 11
	ObjGam[29] = CreateObject(8171, -6181.78076, -8986.47461, 17.80930,   0.00000, 0.00000, 56.25000);

	CreateDynamicObject(8650, -5937.48877, -9085.34570, 11.66220,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5907.01465, -9085.79590, 11.66220,   0.00000, 0.00000, 88.28110, -1, -1, -1, 500);
	CreateDynamicObject(4890, -5947.22754, -9091.88281, 17.55750,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5889.91406, -9086.21777, 11.66220,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7268, -5945.03564, -9046.31641, 22.52880,   0.00000, 0.00000, -539.99988, -1, -1, -1, 500);
	CreateDynamicObject(4890, -5947.22754, -9045.25586, 17.55750,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5967.73877, -9085.34570, 11.66220,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5864.43750, -9085.47070, 11.66220,   0.00000, 0.00000, 93.51510, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5998.18896, -9086.04590, 11.66220,   0.00000, 0.00000, 92.57830, -1, -1, -1, 500);
	CreateDynamicObject(3873, -5843.58008, -9101.11328, 24.39490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3873, -5843.58008, -9035.53711, 24.39490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5833.81006, -9052.24902, 11.66220,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5829.87695, -9085.70117, 11.66220,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(664, -5899.44629, -8981.13770, 11.12600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(664, -5934.60010, -8976.88281, 11.12600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6027.43848, -9086.92090, 11.66220,   0.00000, 0.00000, 90.85940, -1, -1, -1, 500);
	CreateDynamicObject(762, -5818.06738, -9091.86914, 13.80290,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(617, -5816.42529, -9087.70215, 10.54070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8397, -5814.99902, -9095.88379, 16.70030,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5812.49512, -9049.06348, 10.91600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6388, -5977.70850, -8975.87109, 26.26160,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5807.31885, -9099.66992, 10.91600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5804.12695, -9096.37305, 11.66220,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(10942, -5903.50342, -8957.86523, 32.34170,   0.00000, 61.01990, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5803.36035, -9052.24902, 11.66220,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6046.39160, -9086.07617, 10.94340,   0.00000, -0.85940, 163.43880, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5942.75830, -8953.66895, 23.92930,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8710, -5819.95703, -9002.75293, 11.50480,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3873, -6043.85693, -9035.30859, 24.39490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5890.37354, -8953.58105, 23.53240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3873, -6049.85693, -9101.30859, 24.39490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6055.24170, -9084.67578, 11.44340,   0.00000, -4.29720, 184.06540, -1, -1, -1, 500);
	CreateDynamicObject(615, -5795.26758, -9110.03223, 9.51570,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, -5793.29053, -9109.39355, 14.05290,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5974.52539, -8953.33008, 28.14710,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -5870.70898, -8953.12305, 19.00970,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -5870.70898, -8953.13281, 22.68470,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5979.13574, -8954.23047, 22.90090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -5870.70898, -8953.12305, 26.85970,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(615, -5790.66016, -9049.06250, 9.04070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6056.69922, -9049.05469, 13.04170,   -2.57830, 4.29720, -19.92170, -1, -1, -1, 500);
	CreateDynamicObject(8344, -6057.12158, -9040.59863, 12.94779,   4.29720, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(10942, -5903.50342, -8940.43945, 36.91670,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6063.74170, -9083.72461, 12.09340,   0.00000, -4.29720, 160.00101, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5780.54883, -9046.72949, 10.91600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6070.77051, -9080.84375, 7.30700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -5885.71875, -8934.53906, 22.88370,   -3.43770, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5780.12695, -9112.62305, 11.66220,   0.00000, 0.00000, 67.50000, -1, -1, -1, 500);
	CreateDynamicObject(664, -6071.17383, -9089.21484, 2.86820,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6004.92529, -8953.33008, 28.14710,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6072.26807, -9079.55273, 12.81840,   0.00000, -4.29720, 147.10941, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5838.73682, -8953.29590, 23.04470,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5778.23145, -9118.21484, 11.00739,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6012.69189, -8954.13281, 22.90090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5772.86035, -9052.24902, 11.66220,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(10948, -6054.94727, -9001.68359, 32.21840,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -6019.58008, -8958.73438, 27.03180,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6080.64258, -9074.02441, 13.56840,   0.00000, -4.29720, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(10942, -5903.50342, -8920.38965, 36.91670,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(615, -5765.93262, -9048.51465, 8.40190,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -5944.70898, -8916.62500, 26.85970,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6034.92139, -8956.73438, 28.14470,   0.00000, 0.00000, 102.96880, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6088.96777, -9068.45020, 14.31840,   0.00000, -4.29720, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5758.70361, -9117.34766, 12.33720,   -4.29720, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(10942, -5903.50342, -8908.63965, 27.16670,   0.00000, -47.26900, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, -5757.91992, -9118.99023, 14.12920,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(615, -5755.70508, -9032.51953, 9.54070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6096.84277, -9063.09961, 15.04340,   0.00000, -4.29720, 145.39059, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6061.88525, -8967.58594, 27.40090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(615, -5750.91260, -9122.05469, 8.79070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5747.20898, -9047.04688, 10.91600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6064.19727, -8967.53906, 28.14470,   0.00000, 0.00000, 117.73390, -1, -1, -1, 500);
	CreateDynamicObject(10193, -5931.71973, -8899.27148, 40.45120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3873, -5778.41113, -8968.52051, 23.69420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5742.61035, -9050.42578, 12.78720,   4.29720, 0.00000, -83.12450, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6105.48584, -9057.67676, 15.81240,   0.00000, -4.29720, 150.54720, -1, -1, -1, 500);
	CreateDynamicObject(762, -5740.98877, -9118.91113, 13.84659,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5737.82373, -9109.55859, 13.42099,   -1.71890, 0.00000, 123.74990, -1, -1, -1, 500);
	CreateDynamicObject(8171, -5798.21875, -8934.53906, 18.63370,   -2.57830, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -6112.31641, -9053.78223, 17.64670,   0.00000, 2.57830, -29.45280, -1, -1, -1, 500);
	CreateDynamicObject(978, -6112.31641, -9053.78223, 18.42170,   0.00000, 2.57830, -29.45280, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6113.01025, -9053.27539, 16.48730,   0.00000, -4.29720, 148.82820, -1, -1, -1, 500);
	CreateDynamicObject(762, -5735.73877, -9114.16113, 13.84659,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6086.84717, -8978.26563, 28.14470,   0.00000, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(762, -5735.24902, -9117.97070, 17.02570,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(10381, -5838.62598, -8904.45508, 29.71420,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5733.13086, -9109.91992, 14.14680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4079, -5755.90234, -8978.53320, 22.53560,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6108.29395, -9014.87891, 17.74190,   0.00000, 4.29720, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(762, -5730.23877, -9108.91113, 13.84659,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(9834, -5884.60352, -8884.38379, 23.85280,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6121.49561, -9049.59180, 14.46340,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, -5725.23877, -9104.41113, 13.84659,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6121.50977, -9047.90137, 17.28730,   0.00000, -4.29720, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -5723.56641, -9048.70703, 14.30570,   0.00000, -5.15660, -0.85940, -1, -1, -1, 500);
	CreateDynamicObject(8344, -5721.51221, -9075.07324, 13.60190,   -4.29720, 1.71890, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(10412, -6030.64160, -8907.61426, 42.88270,   0.00000, 0.00000, -49.29720, -1, -1, -1, 500);
	CreateDynamicObject(978, -6124.15576, -9046.00391, 18.66180,   0.00000, 3.43770, -32.89060, -1, -1, -1, 500);
	CreateDynamicObject(978, -6124.15576, -9046.00391, 19.38680,   0.00000, 3.43770, -32.89060, -1, -1, -1, 500);
	CreateDynamicObject(8344, -5722.76221, -9044.07324, 13.80190,   -4.29720, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5003, -5755.56250, -9060.50000, 16.78130,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4867, -5993.19531, -9079.14063, 10.54690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -5776.51953, -8934.53906, 18.75870,   -0.85940, 2.57830, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6107.94434, -8988.53418, 27.39850,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, -5720.28516, -9108.62695, 18.72800,   0.00000, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(4079, -5727.65234, -9013.28223, 21.78560,   0.00000, 0.00000, -112.50000, -1, -1, -1, 500);
	CreateDynamicObject(762, -5716.96387, -9101.98438, 15.34660,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(9900, -6102.86230, -9087.08203, 119.63420,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6129.98438, -9042.22559, 18.06230,   0.00000, -4.29720, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6114.92188, -8989.88965, 28.14470,   0.00000, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5713.07373, -9093.03711, 14.77100,   -3.43770, 0.00000, 123.74990, -1, -1, -1, 500);
	CreateDynamicObject(8171, -6101.99365, -8964.90234, 27.02930,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5712.90234, -9097.49121, 15.29270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, -5712.71387, -9097.73438, 15.34660,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -6084.45898, -8937.49902, 26.85970,   0.00000, 0.00000, 292.50000, -1, -1, -1, 500);
	CreateDynamicObject(16305, -5712.17383, -9032.71777, 20.08600,   2.57830, 0.00000, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(16305, -5737.21924, -8964.30859, 21.29650,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -6122.49707, -9003.64258, 65.21050,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(762, -5706.50195, -9102.15039, 20.51870,   0.00000, 0.00000, 67.50000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6138.40967, -9036.59863, 18.46230,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(762, -5705.21387, -9092.48438, 15.34660,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(16305, -5728.04590, -8977.81445, 21.94650,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(978, -6139.05078, -9036.02832, 19.69000,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(978, -6139.05078, -9036.02832, 20.69000,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(16305, -5731.21924, -8970.90625, 21.94650,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(16305, -5722.52246, -8988.46582, 21.94650,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6139.59180, -9037.28809, 16.92850,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16305, -5707.92969, -9022.99609, 20.06100,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5730.84229, -8963.12402, 19.38110,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5699.59473, -9088.12695, 16.01080,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, -5698.46387, -9088.73438, 17.59660,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -5723.90234, -8971.97852, 17.05100,   -1.71890, 4.29720, 202.50000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5702.64258, -9028.91992, 17.06510,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6235, -6140.47021, -9013.75977, 23.64560,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -5716.19971, -8985.33398, 19.64530,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6146.68408, -9031.07520, 18.46230,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(762, -6141.66406, -9006.84766, 30.17570,   0.00000, 0.00000, 157.50000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6144.41797, -9004.37793, 27.56970,   0.00000, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(762, -5690.21387, -9083.73438, 19.09660,   0.00000, 0.00000, 33.75000, -1, -1, -1, 500);
	CreateDynamicObject(762, -6149.50391, -9017.75781, 30.40110,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6148.46094, -9010.58398, 24.91960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -5688.44434, -9076.58984, 16.77100,   -4.29720, 0.00000, 123.74990, -1, -1, -1, 500);
	CreateDynamicObject(9834, -5789.85352, -8879.38379, 22.70280,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(664, -6164.24902, -9033.33691, 7.61820,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10193, -6120.66406, -8931.08691, 42.20120,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(6342, -6169.59717, -9059.48438, 26.64650,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -6160.74707, -9021.89258, 65.21050,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(13831, -6151.42383, -8984.34863, 67.00610,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(13831, -6151.42383, -8984.34863, 67.00610,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6150.86426, -8964.66699, 27.32350,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6172.43555, -9015.95117, 26.90590,   -2.57830, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6185.95898, -9021.54980, 26.23090,   -2.57830, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(7584, -5709.98340, -8915.58203, 42.48770,   0.00000, 0.00000, -8.67169, -1, -1, -1, 500);
//	CreateDynamicObject(8171, -6181.78076, -8986.47461, 17.80930,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6193.63770, -9025.23145, 25.60970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6181.59570, -8977.02832, 27.44780,   2.57830, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -6177.49707, -8965.39258, 65.21050,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(13831, -6194.42383, -8998.77539, 67.00610,   0.00000, 0.00000, -213.75000, -1, -1, -1, 500);
	CreateDynamicObject(13831, -6194.42383, -8998.77539, 67.00610,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6194.27930, -8980.33203, 24.94560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, -6193.28271, -8973.56250, 30.29390,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6197.09570, -8983.47461, 26.69780,   2.57830, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6213.95898, -9033.14844, 24.88090,   -2.57830, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6194.64990, -8962.37207, 18.43730,   0.00000, 0.00000, -56.95480, -1, -1, -1, 500);
	CreateDynamicObject(762, -6205.03271, -8981.81250, 29.56890,   0.00000, 0.00000, 157.50000, -1, -1, -1, 500);
	CreateDynamicObject(7584, -5627.48340, -9043.12500, 42.48770,   0.00000, 0.00000, -188.67171, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6199.22510, -8956.92480, 18.43730,   0.00000, 0.00000, -36.32830, -1, -1, -1, 500);
	CreateDynamicObject(3578, -6207.27441, -8951.27539, 18.43730,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -6229.69531, -9017.84961, 23.92240,   -2.57830, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(10143, -6195.36816, -8927.00977, 45.15510,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6228.30176, -8995.98047, 22.17510,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6228.30176, -8995.98047, 24.35010,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6228.30176, -8995.98047, 26.52510,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -6221.49707, -8981.89258, 65.21050,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6236.36133, -8997.92090, 21.44210,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10838, -6228.06348, -8955.19238, 28.73580,   0.00000, 0.00000, -247.50000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6255.87646, -9006.92578, 22.17510,   0.00000, 0.00000, -69.21890, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6255.87646, -9006.92578, 24.25010,   0.00000, 0.00000, -69.21890, -1, -1, -1, 500);
	CreateDynamicObject(10947, -6256.05225, -9000.51172, -16.96770,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -6262.80029, -9009.67578, 22.12510,   0.00000, 0.00000, -70.07830, -1, -1, -1, 500);
	CreateDynamicObject(661, -6273.34229, -9007.87500, 20.73300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6275.40820, -9008.30762, 22.87640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16305, -6281.65234, -9009.61621, 25.30520,   0.00000, 0.00000, -281.25000, -1, -1, -1, 500);
	CreateDynamicObject(10143, -6233.36816, -8901.55859, 45.15510,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(16305, -6290.76514, -9007.51563, 24.90340,   0.00000, 0.00000, 53.59440, -1, -1, -1, 500);
	CreateDynamicObject(7584, -6301.33301, -9087.37500, 19.38770,   0.00000, 0.00000, 78.75000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6294.54004, -9001.70215, 22.73360,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16305, -6295.56494, -9000.39063, 24.52840,   0.00000, 0.00000, -2.65560, -1, -1, -1, 500);
	CreateDynamicObject(16305, -6297.39014, -8994.80469, 24.52840,   0.00000, 0.00000, -2.65560, -1, -1, -1, 500);
	CreateDynamicObject(8344, -6281.39648, -8948.88379, 18.68520,   -0.85940, 0.00000, -123.74990, -1, -1, -1, 500);
	CreateDynamicObject(8344, -6300.95752, -9000.05078, 20.94640,   -2.57830, 1.71890, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -6276.04639, -8933.50781, 13.93519,   -4.29720, 11.17270, -123.74990, -1, -1, -1, 500);
	CreateDynamicObject(17029, -6298.50879, -8976.36035, 12.61639,   0.00000, -6.01610, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6305.26172, -8984.39063, 22.58250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16305, -6304.59326, -8980.81641, 23.68140,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6262.76318, -8894.18359, 26.00550,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(16305, -6309.94336, -8964.86328, 23.25640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6266.59863, -8887.28613, 21.45990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6270.01318, -8890.31055, 26.00550,   0.00000, 0.00000, -20.85850, -1, -1, -1, 500);
	CreateDynamicObject(8344, -6322.32080, -8986.97754, 15.63520,   -5.15660, 11.17270, 12.96889, -1, -1, -1, 500);
	CreateDynamicObject(8344, -6322.97168, -8985.22754, 15.63520,   -0.85940, 11.17270, 14.68780, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6277.58887, -8888.26172, 26.00550,   0.00000, 0.00000, -8.82640, -1, -1, -1, 500);
	CreateDynamicObject(8343, -6318.49854, -8958.17383, 19.72820,   0.85940, 1.71890, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -6308.89648, -8934.60352, 14.63520,   -0.85940, 11.17270, -77.03110, -1, -1, -1, 500);
	CreateDynamicObject(8344, -6308.99658, -8934.72852, 14.63520,   -4.29720, 11.17270, -75.31220, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6285.48975, -8887.56152, 26.00550,   0.00000, 0.00000, -0.23200, -1, -1, -1, 500);
	CreateDynamicObject(8344, -6328.22168, -8959.47754, 15.78520,   -0.85940, 11.17270, -7.81220, -1, -1, -1, 500);
	CreateDynamicObject(8344, -6323.34717, -8945.97852, 15.46020,   -2.57830, 11.17270, -41.56220, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6290.67090, -8886.02051, 22.91840,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6293.61426, -8888.11133, 26.00550,   0.00000, 0.00000, 8.36240, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6301.36426, -8889.43457, 26.00550,   0.00000, 0.00000, 10.94069, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6356.18945, -9012.88867, 26.00550,   0.00000, 0.00000, 131.26180, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6358.52490, -9011.93164, 25.29780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6309.11377, -8891.00977, 26.00550,   0.00000, 0.00000, 11.80010, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6360.33984, -9006.33789, 26.00550,   0.00000, 0.00000, 114.07300, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6316.56348, -8892.65723, 26.00550,   0.00000, 0.00000, 13.51900, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6317.53857, -8891.65234, 21.52210,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6363.11475, -8999.46387, 26.00550,   0.00000, 0.00000, 109.77580, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6324.38867, -8894.92969, 26.00550,   0.00000, 0.00000, 17.81620, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6365.46436, -8992.03906, 26.00550,   0.00000, 0.00000, 106.33810, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6367.53955, -8984.53906, 26.00550,   0.00000, 0.00000, 104.61920, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6331.81445, -8897.77930, 26.00550,   0.00000, 0.00000, 24.69170, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6369.28076, -8980.80762, 24.01760,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6369.41504, -8976.63965, 26.00550,   0.00000, 0.00000, 102.90040, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6339.06396, -8901.47852, 26.00550,   0.00000, 0.00000, 29.84830, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6370.81494, -8968.96680, 26.00550,   0.00000, 0.00000, 98.60320, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6343.58691, -8904.05469, 23.51460,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6345.51367, -8906.29980, 26.00550,   0.00000, 0.00000, 45.31820, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6351.01367, -8912.02148, 26.00550,   0.00000, 0.00000, 47.03700, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6371.51514, -8961.02051, 26.00550,   0.00000, 0.00000, 92.58710, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6371.74854, -8957.20117, 23.34160,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6356.51367, -8918.29688, 26.00550,   0.00000, 0.00000, 50.47480, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6371.29004, -8953.37109, 26.00550,   0.00000, 0.00000, 85.71160, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6361.56348, -8924.84863, 26.00550,   0.00000, 0.00000, 54.77190, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6370.63916, -8946.12109, 26.00550,   0.00000, 0.00000, 83.99270, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6365.63916, -8931.39746, 26.00550,   0.00000, 0.00000, 61.64740, -1, -1, -1, 500);
	CreateDynamicObject(3406, -6368.73926, -8938.32031, 26.00550,   0.00000, 0.00000, 70.24180, -1, -1, -1, 500);
	CreateDynamicObject(3472, -6365.46777, -8928.98047, 23.88490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -6226.97803, -8957.68652, 22.46920,   0.00000, 0.00000, -123.70000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -6225.52393, -8957.05371, 22.46920,   0.00000, 0.00000, -123.70000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -6228.45801, -8958.30078, 22.46920,   0.00000, 0.00000, -123.70000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -6224.01660, -8956.47070, 22.46920,   0.00000, 0.00000, -123.70000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -6222.57373, -8955.84180, 22.46920,   0.00000, 0.00000, -123.70000, -1, -1, -1, 500);
//End дрифт-трасса 11
//Start дрифт-трасса 12
	ObjGam[30] = CreateObject(8356, -3031.606445, -8882.853515, 14.535003, 0.859399, 0.000000, -180.000000);

	CreateDynamicObject(8185, -3012.305175, -8887.527343, 16.126495, -0.859399, 0.000000, 0.000000, -1, -1, -1, 500);
//	CreateDynamicObject(8356, -3031.606445, -8882.853515, 14.535003, 0.859399, 0.000000, -180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8356, -3031.606445, -8882.853515, 14.060104, 0.859399, 179.622299, -180.000000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -3036.546386, -8906.265625, 4.414993, 0.000000, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -3050.805175, -8887.527343, 16.126495, -0.859399, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(17031, -2986.224609, -8901.840820, 11.068801, 0.000000, 0.000000, 112.500000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3028.318847, -8855.199218, 9.947494, 1.718899, 0.000000, -67.500000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3015.942382, -8850.048828, 10.372406, 1.718899, 0.000000, -67.500000, -1, -1, -1, 500);
	CreateDynamicObject(978, -3044.002441, -8857.128906, 10.128906, 0.000000, 0.000000, 112.500000, -1, -1, -1, 500);
	CreateDynamicObject(978, -3044.002441, -8857.128906, 9.628997, 0.000000, 0.000000, 112.500000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -3036.546386, -8850.515625, 3.565200, 0.000000, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -2978.980957, -8855.195312, 10.859695, 1.718899, 0.000000, -67.500000, -1, -1, -1, 500);
	CreateDynamicObject(790, -2964.039062, -8885.475585, 1.423706, 0.000000, 0.000000, -180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -3077.571777, -8923.111328, 10.179504, -0.859399, 0.000000, -66.717903, -1, -1, -1, 500);
	CreateDynamicObject(10763, -2977.789062, -8834.173828, 36.667800, 0.000000, 0.000000, -112.500000, -1, -1, -1, 500);
	CreateDynamicObject(7909, -3032.360839, -8965.136718, 24.582000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(7909, -3032.36597, -8965.14160, 24.57200, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4242, -3075.086914, -8942.277343, 10.175994, 0.000000, 0.859399, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(11095, -3026.331542, -8968.425781, 18.576293, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(1290, -3009.914062, -8812.833984, 18.840805, 0.000000, 0.000000, -11.250000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -3036.546386, -8967.515625, 5.364807, 0.000000, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -2943.214843, -8861.838867, 10.592605, -0.859399, 0.000000, -248.204696, -1, -1, -1, 500);
	CreateDynamicObject(16317, -3087.710937, -8935.894531, 10.003097, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(11095, -3026.331542, -8974.773437, 18.576293, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2960.938476, -8827.376953, 18.545898, 0.000000, 0.000000, -78.750000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2957.156250, -8825.769531, 12.853500, 1.718899, 0.000000, -67.500000, -1, -1, -1, 500);
	CreateDynamicObject(17031, -2929.224609, -8879.840820, 11.068801, 0.000000, 0.000000, 123.749900, -1, -1, -1, 500);
	CreateDynamicObject(8185, -3096.296386, -8944.150390, 8.510604, 4.297200, 0.000000, -517.500000, -1, -1, -1, 500);
	CreateDynamicObject(8392, -3067.005371, -8970.721679, -3.621200, 0.000000, 0.000000, -78.750000, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2950.188476, -8822.876953, 19.020797, 0.000000, 0.000000, -78.750000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -3054.187988, -8980.308593, 9.222000, 0.000000, 0.000000, -18.048200, -1, -1, -1, 500);
	CreateDynamicObject(6313, -3072.179687, -8809.485351, 6.808395, -0.859399, -2.578299, -52.030101, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3006.516601, -8783.864257, 14.047698, 0.000000, 0.000000, -201.640594, -1, -1, -1, 500);
	CreateDynamicObject(1290, -3003.902832, -8783.646484, 18.840805, 0.000000, 0.000000, -45.000000, -1, -1, -1, 500);
	CreateDynamicObject(6313, -3082.484863, -8801.129882, 11.917495, -3.437700, -6.875500, 65.703796, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3047.591796, -8783.203125, 14.091598, 0.000000, 0.000000, -192.968902, -1, -1, -1, 500);
	CreateDynamicObject(790, -3066.205566, -8791.316406, -2.197601, 0.000000, 0.000000, 56.250000, -1, -1, -1, 500);
	CreateDynamicObject(1290, -3050.597167, -8781.209960, 18.985992, 0.000000, 0.000000, -11.250000, -1, -1, -1, 500);
	CreateDynamicObject(6985, -2975.520019, -9003.377929, 15.233306, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -2896.334960, -8851.275390, 16.358306, -30.080299, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -3134.970703, -8944.150390, 11.409896, 1.718899, 0.000000, -517.500000, -1, -1, -1, 500);
	CreateDynamicObject(1290, -3045.211914, -8765.102539, 18.840805, 0.000000, 0.000000, -11.250000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -3094.539062, -8996.357421, 12.600097, -2.578299, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(6313, -3149.833984, -8876.742187, 16.789199, 0.000000, 0.000000, 45.000000, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2993.780273, -8758.099609, 18.840805, 0.000000, 0.000000, -45.000000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2911.826660, -8806.596679, 14.057296, 0.000000, 0.000000, -67.500000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3037.848632, -8756.435546, 14.047698, 0.000000, 0.000000, -206.797195, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2996.039062, -8755.589843, 14.047698, 0.000000, 0.000000, -199.062194, -1, -1, -1, 500);
	CreateDynamicObject(1290, -3118.451171, -8985.741210, 19.230392, 0.000000, 0.000000, -157.500000, -1, -1, -1, 500);
	CreateDynamicObject(10380, -2917.137695, -8794.971679, 21.491500, 0.000000, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(1290, -3110.951171, -9003.241210, 19.905303, 0.000000, 0.000000, -157.500000, -1, -1, -1, 500);
	CreateDynamicObject(790, -3162.782226, -8912.507812, 0.806701, 0.000000, 0.000000, 56.250000, -1, -1, -1, 500);
	CreateDynamicObject(5001, -2890.364746, -8816.082031, 14.488906, 1.718899, -0.859399, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(16061, -3150.799316, -8962.286132, 7.177597, 0.000000, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(4828, -2956.416015, -8751.049804, 25.296005, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(1290, -3104.451171, -9018.241210, 20.430099, 0.000000, 0.000000, -157.500000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -2869.834960, -8840.500976, 16.358306, -30.080299, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -3006.349121, -8733.884765, 12.932403, 0.000000, 0.000000, 157.500000, -1, -1, -1, 500);
	CreateDynamicObject(790, -3124.823730, -9007.968750, -3.671401, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2985.685058, -8734.334960, 18.955795, 0.000000, 0.000000, -45.000000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2986.778808, -8728.691406, 14.047698, 0.000000, 0.000000, -199.062194, -1, -1, -1, 500);
	CreateDynamicObject(790, -3027.478027, -8726.039062, 6.602294, 0.000000, 0.000000, -33.750000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -3031.643066, -8723.389648, 12.095199, -0.859399, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(16061, -3126.248046, -9024.749023, 5.876495, 0.000000, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -3012.254882, -9066.430664, 15.440200, -0.859399, 0.000000, -180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -3050.807617, -9066.430664, 15.440200, -0.859399, 0.000000, -180.000000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -2849.334960, -8829.250976, 16.358306, -30.080299, 0.000000, 33.750000, -1, -1, -1, 500);
	CreateDynamicObject(8356, -3031.606445, -9070.278320, 14.535003, 0.859399, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2982.096679, -8715.115234, 14.047698, 0.000000, 0.000000, -197.343307, -1, -1, -1, 500);
	CreateDynamicObject(6313, -3018.446777, -8709.852539, 13.305603, 0.000000, -6.016098, 65.703796, -1, -1, -1, 500);
	CreateDynamicObject(16037, -3053.851562, -9070.058593, 22.745605, -0.859399, -5.156599, -427.500000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2891.678710, -8758.833984, 14.057296, 0.000000, 0.000000, -159.218795, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2946.167968, -8720.315429, 18.840805, 0.000000, 0.000000, -123.749900, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2924.708984, -8729.963867, 18.840805, 0.000000, 0.000000, -123.749900, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2974.075683, -8710.245117, 18.840805, 0.000000, 0.000000, -123.749900, -1, -1, -1, 500);
	CreateDynamicObject(7073, -2843.601562, -8818.080078, 7.186904, 0.000000, 0.000000, -33.750000, -1, -1, -1, 500);
	CreateDynamicObject(1290, -2910.870117, -8734.563476, 18.944702, 0.000000, 0.000000, -123.749900, -1, -1, -1, 500);
	CreateDynamicObject(4242, -2912.072753, -9049.225585, 14.575897, 0.000000, 0.859399, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8620, -2900.147460, -8742.212890, 25.284805, 0.000000, 0.000000, -67.500000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2944.423339, -8715.839843, 14.036605, 0.000000, 0.000000, -114.218803, -1, -1, -1, 500);
	CreateDynamicObject(8354, -2860.680175, -8781.393554, 12.942001, 0.000000, 0.000000, -157.500000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2916.844238, -8728.240234, 14.036605, 0.000000, 0.000000, -114.218803, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2964.051757, -8707.000000, 14.036605, 0.000000, 0.000000, -114.218803, -1, -1, -1, 500);
	CreateDynamicObject(16037, -3070.732910, -9076.898437, 22.870498, 0.000000, 5.156599, -247.500000, -1, -1, -1, 500);
	CreateDynamicObject(13562, -2977.453125, -8701.305664, 16.328903, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(7073, -2840.101562, -8805.580078, 7.186904, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4242, -2967.260742, -8694.153320, 12.817306, 0.000000, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -2940.294433, -8701.052734, 12.921203, 0.000000, 0.000000, 67.500000, -1, -1, -1, 500);
	CreateDynamicObject(5005, -2847.295410, -8768.591796, 16.343505, 0.000000, 0.000000, -67.500000, -1, -1, -1, 500);
	CreateDynamicObject(790, -3010.169433, -8681.232421, 7.125793, 0.000000, 0.000000, 11.250000, -1, -1, -1, 500);
	CreateDynamicObject(7304, -2852.882812, -8753.365234, 17.599700, 0.000000, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(5005, -2936.558593, -8685.905273, 16.347793, 0.000000, 0.000000, -21.640600, -1, -1, -1, 500);
	CreateDynamicObject(7304, -2933.179199, -8673.541015, 17.610305, 0.000000, 0.000000, 67.500000, -1, -1, -1, 500);
	CreateDynamicObject(790, -2835.600097, -8743.345703, -7.596496, 0.000000, 0.000000, -33.750000, -1, -1, -1, 500);
	CreateDynamicObject(790, -2936.600097, -8670.095703, -7.596496, 0.000000, 0.000000, -213.750000, -1, -1, -1, 500);
	CreateDynamicObject(790, -2962.100097, -8658.345703, -7.596496, 0.000000, 0.000000, -135.000000, -1, -1, -1, 500);
	CreateDynamicObject(7240, -2975.018066, -9137.285156, 7.661499, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(790, -2849.350097, -8703.595703, -7.596496, 0.000000, 0.000000, -33.750000, -1, -1, -1, 500);
	CreateDynamicObject(790, -2890.600097, -8672.095703, -7.596496, 0.000000, 0.000000, -33.750000, -1, -1, -1, 500);
	CreateDynamicObject(6313, -2955.599609, -8620.261718, 11.770797, -0.859399, -6.016098, 49.924598, -1, -1, -1, 500);
	CreateDynamicObject(16061, -2971.937011, -9171.463867, 10.893798, 0.000000, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(16037, -3007.327636, -9182.125000, 22.920501, 0.000000, 5.156599, -67.500000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -3031.150878, -9185.896484, 14.135101, 0.000000, 0.000000, -212.031097, -1, -1, -1, 500);
	CreateDynamicObject(16037, -3024.335449, -9189.142578, 23.045501, 0.000000, 5.156599, -427.500000, -1, -1, -1, 500);
	CreateDynamicObject(16061, -3074.006347, -9185.707031, 11.022796, 0.000000, 0.000000, -33.750000, -1, -1, -1, 500);
	CreateDynamicObject(13725, -3039.573242, -9203.972656, 26.423706, 0.000000, 0.000000, 191.250000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -3059.730957, -9205.365234, 13.185302, 0.000000, 0.000000, -33.750000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -3096.047851, -9233.458984, 14.060302, 0.000000, 0.000000, -390.312194, -1, -1, -1, 500);
	CreateDynamicObject(16061, -2966.854980, -9240.349609, 8.355392, 0.000000, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(16061, -3104.436035, -9241.055664, 8.397903, 0.000000, 0.000000, -33.750000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2971.303710, -9247.750000, 14.203002, 0.000000, 0.000000, 201.640502, -1, -1, -1, 500);
	CreateDynamicObject(790, -3051.931640, -9257.796875, 2.945495, 0.000000, 0.000000, -180.000000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3003.870117, -9260.188476, 14.266296, 0.000000, 0.000000, 203.359497, -1, -1, -1, 500);
	CreateDynamicObject(16776, -3070.694824, -9263.398437, 14.860107, 0.000000, 0.000000, -112.500000, -1, -1, -1, 500);
	CreateDynamicObject(7392, -3004.345214, -9275.387695, 22.829406, 0.000000, 0.000000, -22.500000, -1, -1, -1, 500);
	CreateDynamicObject(8355, -2979.408203, -9277.500976, 13.267807, 0.859399, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3078.450683, -9277.097656, 14.267807, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2960.191894, -9275.778320, 14.230102, 0.000000, 0.000000, 201.640502, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3112.352539, -9276.063476, 14.267807, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2994.687988, -9288.824218, 14.260803, 0.000000, 0.000000, 192.109405, -1, -1, -1, 500);
	CreateDynamicObject(3452, -3119.402832, -9278.687500, 18.876907, -24.064199, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(16061, -2952.037597, -9294.114257, 8.689605, 0.000000, 0.000000, 11.250000, -1, -1, -1, 500);
	CreateDynamicObject(4242, -3048.449218, -9309.183593, 13.109298, 0.000000, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3077.744628, -9307.582031, 14.267807, 0.000000, 0.000000, 2.578299, -1, -1, -1, 500);
	CreateDynamicObject(3873, -3005.687011, -9311.350585, 23.650604, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2955.269042, -9304.062500, 14.235504, 0.000000, 0.000000, 177.421600, -1, -1, -1, 500);
	CreateDynamicObject(8344, -3071.472167, -9313.992187, 13.152496, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(790, -3034.263183, -9316.090820, -13.304496, 0.000000, 0.000000, -337.500000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3112.369628, -9306.206054, 14.267807, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -3119.402832, -9307.988281, 18.876907, -24.064199, 0.000000, -90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3873, -3060.437011, -9322.350585, 23.650604, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -3012.090332, -9325.574218, 13.120193, 0.000000, 0.000000, 101.250000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3015.939453, -9333.465820, 14.235504, 0.000000, 0.000000, -67.500000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3045.138183, -9339.298828, 14.267807, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2962.223632, -9332.766601, 14.235504, 0.000000, 0.000000, 154.921707, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3106.957519, -9335.301757, 14.267807, 0.000000, 0.000000, 20.781099, -1, -1, -1, 500);
	CreateDynamicObject(3452, -2954.123046, -9336.521484, 18.573501, -24.064199, 0.000000, 67.500000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -3116.402832, -9335.238281, 18.876907, -24.064199, 0.000000, -67.500000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -2980.086425, -9355.328125, 14.235504, 0.000000, 0.000000, 128.047195, -1, -1, -1, 500);
	CreateDynamicObject(3452, -2968.623046, -9357.521484, 18.573501, -24.064199, 0.000000, 45.000000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3090.949707, -9360.097656, 14.267807, 0.000000, 0.000000, 45.000000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -3102.402832, -9357.488281, 18.876907, -24.064199, 0.000000, -45.000000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3006.546875, -9367.726562, 14.235504, 0.000000, 0.000000, 102.109397, -1, -1, -1, 500);
	CreateDynamicObject(3452, -2991.623046, -9370.771484, 18.573501, -24.064199, 0.000000, 22.500000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3035.526855, -9373.708007, 14.267807, 0.000000, 0.000000, 101.250000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -3065.408203, -9373.720703, 14.267807, 0.000000, 0.000000, 78.750000, -1, -1, -1, 500);
	CreateDynamicObject(16061, -3037.773925, -9380.352539, 6.739898, 0.000000, 0.000000, -78.750000, -1, -1, -1, 500);
	CreateDynamicObject(3452, -3083.152832, -9375.988281, 18.876907, -24.064199, 0.000000, -22.500000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -3032.31641, -8964.61133, 22.09780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -3029.11572, -8964.61133, 22.09780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -3030.71631, -8964.61133, 22.09780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -3033.92505, -8964.61133, 22.09780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -3035.51587, -8964.61133, 22.09780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
//End дрифт-трасса 12
//Start дрифт-трасса 13
	ObjGam[31] = CreateObject(5002, -221.68091, -8308.03613, 10.59810,   0.00000, 0.00000, 90.00000);

	CreateDynamicObject(3578, -175.08496, -7977.16211, 9.81900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -164.88281, -7977.16211, 9.81900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -154.61182, -7977.16211, 9.81900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(968, -181.57642, -7963.10449, 11.93180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(968, -181.82764, -7963.10547, 11.93180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -188.62842, -7957.38574, 10.60890,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4817, -197.27417, -8006.08936, 10.43090,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1263, -198.11694, -7962.82959, 11.95260,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(7371, -146.78345, -8012.76953, 10.58380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -181.59448, -7932.12598, 12.69820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(5006, -227.64893, -8023.72656, 15.17720,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -181.59619, -8052.79199, 16.89780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -181.59619, -8053.39160, 12.69780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1681, -86.42505, -8029.32178, 13.56200,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7371, -146.78345, -7880.44434, 10.58380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5002, -221.67407, -7882.63135, 10.60600,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4817, -197.27417, -8102.08984, 10.43710,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5002, -221.68555, -8095.28809, 10.60380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3534, -181.60938, -7842.10547, 14.09779,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -181.61353, -7841.50195, 10.58390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -182.44214, -7841.50195, 10.58390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1263, -183.29199, -7841.51270, 12.64190,   0.00000, 0.00000, 90.00010, -1, -1, -1, 500);
	CreateDynamicObject(1237, -183.28882, -7841.50195, 10.58390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -188.43848, -7841.51367, 9.82900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -198.51221, -7841.51367, 9.82900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -203.86060, -7841.50195, 10.58390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8177, -255.44507, -7864.08154, 12.04960,   0.00000, 0.00000, 103.04620, -1, -1, -1, 500);
	CreateDynamicObject(4828, -80.99194, -7864.45068, 26.14710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1683, -29.38672, -7924.34277, 16.49550,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5003, -122.72266, -8136.25635, 16.81840,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(7371, -146.78345, -8145.09424, 10.58380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5003, -38.91650, -7873.25586, 16.82720,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3453, -1.17944, -8018.53418, 16.28420,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(7369, -99.12671, -7826.05664, 13.67890,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7370, 9.42871, -8028.47559, 13.47400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -165.39624, -7798.56396, 9.49260,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7371, -14.22021, -8112.71289, 10.38070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -191.79346, -7776.52246, 12.13900,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -191.79346, -7776.52246, 11.67520,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -201.17139, -7776.52246, 12.13900,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -201.17139, -7776.52246, 11.67520,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(10385, 33.35303, -8040.53320, 10.52730,   0.00000, 0.00000, -123.74990, -1, -1, -1, 500);
	CreateDynamicObject(8171, 1.91870, -8109.35645, 10.38800,   0.00000, 0.00000, 0.00010, -1, -1, -1, 500);
	CreateDynamicObject(4817, -197.27417, -8198.06445, 10.45590,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4832, -79.96973, -8176.31055, 50.89240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5006, -227.67456, -8192.95020, 15.13850,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(968, -146.80762, -7760.11865, 8.48960,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(3689, 29.41846, -8092.45117, 3.29260,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -146.15747, -7756.34131, 9.69070,   3.43770, 0.00000, 348.74939, -1, -1, -1, 500);
	CreateDynamicObject(3287, -10.57007, -8150.03320, 9.65460,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(7981, 59.33594, -7952.87354, 15.66190,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -275.68799, -7776.34668, 11.71690,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -141.27344, -7750.31445, 10.60380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -144.66162, -7749.61035, 9.80320,   0.00000, 0.00000, 347.03061, -1, -1, -1, 500);
	CreateDynamicObject(3877, -12.12549, -8160.62061, 12.02870,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -143.03564, -7742.87500, 9.80320,   0.00000, 0.00000, 346.17111, -1, -1, -1, 500);
	CreateDynamicObject(7416, 8.54809, -8150.05762, 10.36640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -181.60620, -8232.04199, 16.87280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -181.60620, -8233.24219, 12.69780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(689, 60.26440, -7891.87500, 9.99400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -141.30127, -7736.15039, 9.80320,   0.00000, 0.00000, 345.31171, -1, -1, -1, 500);
	CreateDynamicObject(8171, 64.02222, -8076.41016, 10.64060,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(7371, 33.77710, -7836.23340, 10.38270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -139.41943, -7729.48389, 9.80320,   0.00000, 0.00000, 343.59280, -1, -1, -1, 500);
	CreateDynamicObject(7416, 85.81934, -7953.65527, 10.63070,   0.00000, 0.00000, 0.00010, -1, -1, -1, 500);
	CreateDynamicObject(1237, -188.71484, -8245.74805, 10.60090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -137.30908, -7722.87988, 9.80320,   0.00000, 0.00000, 341.87390, -1, -1, -1, 500);
	CreateDynamicObject(7022, -34.43018, -8213.71094, 12.87550,   0.00000, 0.00000, -270.00000, -1, -1, -1, 500);
	CreateDynamicObject(10757, -123.82275, -8249.73926, 12.12530,   6.87550, 1.71890, -112.50000, -1, -1, -1, 500);
	CreateDynamicObject(1263, -197.71460, -8253.09766, 11.98520,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3489, 31.64136, -7806.66699, 17.15850,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -134.93604, -7716.35547, 9.80320,   0.00000, 0.00000, 339.29568, -1, -1, -1, 500);
	CreateDynamicObject(8344, 34.30444, -8164.34619, 10.59050,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -131.30542, -7713.73828, 10.60530,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -10.69458, -8207.81152, 9.61670,   -2.86480, 0.00000, 78.75000, -1, -1, -1, 500);
	CreateDynamicObject(8171, 78.38745, -8100.39844, 10.56280,   0.00000, 0.00000, -12.96889, -1, -1, -1, 500);
	CreateDynamicObject(687, 72.80933, -7855.94629, 10.59960,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(968, 24.28613, -8181.40576, 8.34250,   0.00000, 0.00000, -96.91010, -1, -1, -1, 500);
	CreateDynamicObject(968, 24.34839, -8181.59863, 8.34250,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -132.34570, -7709.92676, 9.80320,   0.00000, 0.00000, 337.57681, -1, -1, -1, 500);
	CreateDynamicObject(3689, 106.48022, -7977.11963, 3.29260,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(7416, 85.81934, -7878.92773, 10.63820,   0.00000, 0.00000, 0.00010, -1, -1, -1, 500);
	CreateDynamicObject(8038, 52.47412, -8151.11328, 30.72260,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -4.19336, -8209.46973, 9.87140,   0.00000, 0.00000, 67.50000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -129.55933, -7703.57764, 9.80320,   0.00000, 0.00000, 335.85791, -1, -1, -1, 500);
	CreateDynamicObject(3287, 1.94458, -8212.40039, 9.87140,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, 30.05151, -8187.96289, 11.31860,   0.00000, 0.00000, -51.95280, -1, -1, -1, 500);
	CreateDynamicObject(1637, -136.12744, -8271.87012, 11.81390,   0.00000, 0.00000, -270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, -10.29346, -8225.63086, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -126.56836, -7697.44287, 9.80320,   0.00000, 0.00000, 333.27969, -1, -1, -1, 500);
	CreateDynamicObject(1422, -6.59033, -8225.63086, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, 7.37842, -8216.47266, 9.87140,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, -2.96582, -8225.63086, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, 89.45215, -8120.46777, 11.26590,   0.00000, 0.00000, 25.93770, -1, -1, -1, 500);
	CreateDynamicObject(1422, 0.63477, -8225.63086, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, 37.22876, -8196.01270, 11.31860,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -123.17310, -7691.39648, 9.80320,   0.00000, 0.00000, 329.84189, -1, -1, -1, 500);
	CreateDynamicObject(8185, 93.52075, -8123.90625, 11.14430,   0.00000, 0.00000, 167.03110, -1, -1, -1, 500);
	CreateDynamicObject(3287, 11.91430, -8221.52441, 9.87140,   0.00000, 0.00000, 33.75000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -13.66577, -8239.77539, 10.58140,   0.00000, 0.00000, 213.75011, -1, -1, -1, 500);
	CreateDynamicObject(7416, 110.17676, -7881.95264, 10.64700,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -119.56030, -7685.47803, 9.80320,   0.00000, 0.00000, 328.12311, -1, -1, -1, 500);
	CreateDynamicObject(7416, -78.29907, -7695.44336, 10.63000,   0.00000, -0.04300, -25.28460, -1, -1, -1, 500);
	CreateDynamicObject(8343, -114.56421, -7680.28711, 10.60930,   0.00000, 0.00000, -22.50000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -115.83276, -7679.63281, 9.80320,   0.00000, 0.00000, 327.26370, -1, -1, -1, 500);
	CreateDynamicObject(3287, -111.96216, -7673.90186, 9.80320,   0.00000, 0.00000, 325.54480, -1, -1, -1, 500);
	CreateDynamicObject(687, 92.77637, -7827.54736, 10.67460,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7416, 67.55957, -7786.15283, 10.57950,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -107.91211, -7668.26904, 9.80320,   0.00000, 0.00000, 323.82599, -1, -1, -1, 500);
	CreateDynamicObject(3287, -103.59546, -7662.87793, 9.80320,   0.00000, 0.00000, 320.38821, -1, -1, -1, 500);
	CreateDynamicObject(3287, -99.00049, -7657.67676, 9.80320,   0.00000, 0.00000, 317.80991, -1, -1, -1, 500);
	CreateDynamicObject(3287, -94.15283, -7652.67822, 9.80320,   0.00000, 0.00000, 315.23169, -1, -1, -1, 500);
	CreateDynamicObject(7416, -71.94946, -7657.94336, 10.61870,   0.00000, -0.04300, -46.71890, -1, -1, -1, 500);
	CreateDynamicObject(8343, -91.50659, -7650.62305, 10.61210,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -89.20679, -7647.80566, 9.80320,   0.00000, 0.00000, 314.37231, -1, -1, -1, 500);
	CreateDynamicObject(3287, -84.24414, -7642.95605, 9.80320,   0.00000, 0.00000, 314.37231, -1, -1, -1, 500);
	CreateDynamicObject(3287, -79.17456, -7638.20215, 9.80320,   0.00000, 0.00000, 312.65341, -1, -1, -1, 500);
	CreateDynamicObject(7983, 15.29663, -7685.50488, 33.52650,   0.00000, 0.00000, 186.09331, -1, -1, -1, 500);
	CreateDynamicObject(7983, 15.28810, -7685.49121, 34.02650,   0.00000, 0.00000, 186.09331, -1, -1, -1, 500);
	CreateDynamicObject(3287, -73.85083, -7633.69678, 9.80320,   0.00000, 0.00000, 309.21570, -1, -1, -1, 500);
	CreateDynamicObject(689, 110.50293, -7817.50146, 10.16400,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -68.33667, -7629.48926, 9.80320,   0.00000, 0.00000, 306.63739, -1, -1, -1, 500);
	CreateDynamicObject(8343, -63.23779, -7626.21582, 10.61240,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -62.74146, -7625.32471, 9.80320,   0.00000, 0.00000, 306.63739, -1, -1, -1, 500);
	CreateDynamicObject(968, -61.58545, -7623.47656, 9.87220,   0.00000, 0.00000, -58.82830, -1, -1, -1, 500);
	CreateDynamicObject(7416, 67.55957, -7694.15283, 10.57950,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(690, 110.59058, -7771.61572, 10.22840,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -30.73071, -7607.77930, 10.61390,   0.00000, 0.00000, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 4.52661, -7596.13281, 10.61540,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 41.33691, -7591.65430, 10.61700,   0.00000, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 78.04688, -7594.41406, 10.61850,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(10889, 87.58010, -7550.69580, 11.29120,   2.44940, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, 105.94775, -7570.35449, 10.61670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(10889, 123.58008, -7550.72070, 11.31870,   2.44940, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7416, 150.89600, -7786.15283, 10.64200,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(7416, 163.47241, -7632.40723, 10.59970,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7983, 174.52075, -7681.72656, 33.56860,   0.00000, 0.00000, 276.09341, -1, -1, -1, 500);
	CreateDynamicObject(7983, 174.51340, -7681.73242, 34.06860,   0.00000, 0.00000, 276.09341, -1, -1, -1, 500);
	CreateDynamicObject(7983, 174.52080, -7681.71631, 34.56860,   0.00000, 0.00000, 276.09341, -1, -1, -1, 500);
	CreateDynamicObject(968, 173.73633, -7587.56348, 9.73680,   0.00000, 0.00000, -82.57440, -1, -1, -1, 500);
	CreateDynamicObject(3287, 182.32690, -7588.55762, 9.75820,   1.71890, -0.85940, 262.81451, -1, -1, -1, 500);
	CreateDynamicObject(3287, 189.00195, -7590.00293, 9.80941,   0.00000, -0.85940, 255.93910, -1, -1, -1, 500);
	CreateDynamicObject(8343, 193.08813, -7594.38330, 10.62760,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, 195.47412, -7592.00781, 9.80941,   0.00000, -0.85940, 251.64200, -1, -1, -1, 500);
	CreateDynamicObject(3287, 201.84961, -7594.52051, 9.80941,   0.00000, -0.85940, 247.34480, -1, -1, -1, 500);
	CreateDynamicObject(1215, 205.66479, -7617.78125, 11.37200,   0.00000, 0.00000, 138.36040, -1, -1, -1, 500);
	CreateDynamicObject(3287, 207.95825, -7597.47412, 9.80941,   0.00000, -0.85940, 243.04770, -1, -1, -1, 500);
	CreateDynamicObject(3287, 213.82813, -7600.87891, 9.80941,   0.00000, -0.85940, 238.75050, -1, -1, -1, 500);
	CreateDynamicObject(3287, 219.35303, -7604.67871, 9.80941,   0.00000, -0.85940, 234.45340, -1, -1, -1, 500);
	CreateDynamicObject(3287, 224.60156, -7608.90430, 9.80941,   0.00000, 0.00000, 230.15620, -1, -1, -1, 500);
	CreateDynamicObject(7416, 183.19775, -7771.40283, 10.63700,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(3287, 229.75781, -7613.50439, 9.80941,   0.00000, 0.00000, 227.57790, -1, -1, -1, 500);
	CreateDynamicObject(8343, 230.71118, -7615.03857, 10.62910,   0.00000, 0.00000, -112.50000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 232.09912, -7627.64063, 11.38950,   0.00000, 0.00000, 115.86040, -1, -1, -1, 500);
	CreateDynamicObject(3287, 234.70508, -7618.35449, 9.80941,   0.00000, 0.00000, 224.99960, -1, -1, -1, 500);
	CreateDynamicObject(3287, 239.40527, -7623.37891, 9.80941,   0.00000, 0.00000, 222.42130, -1, -1, -1, 500);
	CreateDynamicObject(3287, 243.88013, -7628.61182, 9.80941,   0.00000, 0.00000, 219.84290, -1, -1, -1, 500);
	CreateDynamicObject(3287, 248.14697, -7634.08691, 9.80941,   0.00000, 0.00000, 217.26460, -1, -1, -1, 500);
	CreateDynamicObject(3287, 252.13892, -7639.72754, 9.80941,   0.00000, 0.00000, 214.68629, -1, -1, -1, 500);
	CreateDynamicObject(1215, 253.55737, -7645.93896, 11.36570,   0.00000, 0.00000, 93.36040, -1, -1, -1, 500);
	CreateDynamicObject(3287, 255.84790, -7645.60645, 9.80941,   0.00000, 0.00000, 211.24850, -1, -1, -1, 500);
	CreateDynamicObject(8343, 257.62402, -7648.58105, 10.63060,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, 259.23682, -7651.62354, 9.80941,   0.00000, 0.00000, 208.67020, -1, -1, -1, 500);
	CreateDynamicObject(3287, 262.37036, -7657.82373, 9.80941,   0.00000, 0.00000, 206.09190, -1, -1, -1, 500);
	CreateDynamicObject(3287, 265.20703, -7664.12744, 9.58440,   -2.57830, 0.00000, 203.51350, -1, -1, -1, 500);
	CreateDynamicObject(1215, 267.49048, -7670.50293, 11.38200,   0.00000, 0.00000, 82.11040, -1, -1, -1, 500);
	CreateDynamicObject(8343, 269.10010, -7688.73926, 10.63220,   0.00000, 0.00000, -157.50000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 272.16675, -7698.31152, 11.37320,   0.00000, 0.00000, 59.61040, -1, -1, -1, 500);
	CreateDynamicObject(7416, 130.39990, -7850.45264, 10.63200,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 267.05103, -7726.05322, 11.36800,   0.00000, 0.00000, 37.11040, -1, -1, -1, 500);
	CreateDynamicObject(8343, 264.42114, -7731.30176, 10.63370,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 252.75952, -7750.35205, 11.36800,   0.00000, 0.00000, 14.61040, -1, -1, -1, 500);
	CreateDynamicObject(3287, 251.30103, -7757.56836, 9.87580,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 243.74023, -7768.98633, 10.63520,   0.00000, 0.00000, -202.50000, -1, -1, -1, 500);
	CreateDynamicObject(3877, 252.62109, -7758.61670, 12.57900,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 221.81714, -7796.67334, 10.63670,   0.00000, 0.00000, -213.75000, -1, -1, -1, 500);
	CreateDynamicObject(3689, 213.60327, -7816.80078, 3.29260,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(3877, 288.38892, -7775.27393, 12.30100,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(8171, 213.90210, -7852.05469, 10.63620,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(3689, 183.53003, -7861.80957, 3.29260,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(7505, 244.17749, -7841.40820, 11.69390,   0.00000, 0.00000, -123.74990, -1, -1, -1, 500);
	CreateDynamicObject(7505, 156.87622, -7972.06152, 11.69230,   0.00000, 0.00000, -123.74990, -1, -1, -1, 500);
	CreateDynamicObject(8171, 137.38086, -7966.62451, 10.63830,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(8171, 58.14136, -8188.64844, 10.56910,   0.00000, 0.00000, -12.96889, -1, -1, -1, 500);
	CreateDynamicObject(3578, 45.70972, -8202.48730, 11.31860,   0.00000, 0.00000, -30.31230, -1, -1, -1, 500);
	CreateDynamicObject(3578, 55.55347, -8206.98828, 11.31860,   0.00000, 0.00000, -19.06220, -1, -1, -1, 500);
	CreateDynamicObject(3287, 15.36230, -8227.34961, 9.87140,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(3287, 17.61792, -8233.72266, 9.87140,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3287, 18.58960, -8240.44043, 9.87140,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 14.75317, -8239.04590, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 11.00317, -8239.04590, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 7.00806, -8239.04590, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 3.03491, -8239.04590, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, 18.23608, -8247.19238, 9.87140,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3287, 16.57935, -8253.74512, 9.87140,   0.00000, 0.00000, -22.50000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 0.56372, -8253.47656, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, 13.56958, -8259.59961, 9.87140,   0.00000, 0.00000, -40.70280, -1, -1, -1, 500);
	CreateDynamicObject(1422, -3.08472, -8253.47656, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, -6.73706, -8253.47656, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, -10.26392, -8253.47656, 10.99200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1682, -23.08423, -8248.46094, 17.11320,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, 8.79614, -8264.34375, 9.87140,   0.00000, 0.00000, -57.10940, -1, -1, -1, 500);
	CreateDynamicObject(8344, -7.26880, -8262.16797, 10.59610,   0.00000, 0.00000, -270.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, 2.92431, -8267.58301, 9.87140,   0.00000, 0.00000, -71.79720, -1, -1, -1, 500);
	CreateDynamicObject(3287, -3.58374, -8269.23730, 9.87140,   0.00000, 0.00000, -86.48490, -1, -1, -1, 500);
	CreateDynamicObject(968, -12.10132, -8265.96680, 9.26570,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(968, -12.23975, -8266.04980, 9.26570,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -10.37402, -8269.27344, 9.87140,   0.00000, 0.00000, -97.73490, -1, -1, -1, 500);
	CreateDynamicObject(3287, -17.17627, -8268.23047, 9.78010,   2.86480, 0.00000, -101.25000, -1, -1, -1, 500);
	CreateDynamicObject(10755, 100.72998, -8318.80664, 18.01720,   0.00000, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(3578, 6.72583, -8310.84863, 11.30560,   0.00000, 0.00000, 11.32730, -1, -1, -1, 500);
	CreateDynamicObject(3578, -3.55200, -8311.82422, 11.30560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -13.83179, -8311.82422, 11.30560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -77.97461, -8310.52734, 10.59470,   0.00000, 0.00000, -450.00000, -1, -1, -1, 500);
	CreateDynamicObject(6063, -56.91650, -8326.09766, 17.06660,   0.00000, 0.00000, 0.00010, -1, -1, -1, 500);
	CreateDynamicObject(7893, -96.47510, -8313.50781, 11.11700,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(7893, -96.47510, -8313.50781, 11.81700,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(7893, -96.47510, -8313.50781, 12.51700,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(7893, -96.47510, -8313.50781, 13.21700,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(7418, -97.42627, -8314.21289, 10.55160,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7022, -124.76733, -8318.63281, 12.95710,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7416, -55.05615, -8365.34766, 10.58100,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4242, -49.60059, -8381.45605, 10.57760,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8355.81641, 9.06540,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8360.89648, 9.11790,   -1.14590, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, -140.95898, -8349.75684, 11.09280,   0.00000, 0.00000, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(979, -140.95898, -8349.75684, 12.01780,   0.00000, 0.00000, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(979, -140.95898, -8349.75684, 12.94280,   0.00000, 0.00000, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8366.02148, 9.29670,   -2.86480, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8371.09668, 9.60170,   -4.01070, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.28149, -8355.88379, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3534, -181.60229, -8322.07422, 18.25020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3534, -181.60229, -8322.65625, 15.82900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3534, -181.60229, -8323.27539, 14.05400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -181.60522, -8323.90527, 10.57590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8376.14648, 10.00670,   -5.15660, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, 50.13525, -8417.15918, 12.42730,   0.00000, 0.00000, 0.12900, -1, -1, -1, 500);
	CreateDynamicObject(3330, -140.25684, -8364.67188, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -186.94580, -8323.92188, 9.81360,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8381.19824, 10.51670,   -6.30250, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -117.42188, -8382.99805, 10.58020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8386.19922, 11.11790,   -7.44850, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3620, -9.10009, -8423.49902, 23.67300,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.29517, -8373.47363, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -197.22046, -8323.91406, 9.81360,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -198.75952, -8323.90527, 10.57590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8391.17480, 11.81920,   -8.59440, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -199.58618, -8323.90527, 10.57590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1263, -199.05908, -8324.72949, 13.51500,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -200.40796, -8323.90527, 10.57590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -201.22974, -8323.90527, 10.57590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5005, -96.96631, -8403.92773, 14.14030,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -202.00854, -8323.90527, 10.57590,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.33545, -8379.06055, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8396.17480, 12.62420,   -9.74030, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, -203.17700, -8324.82617, 11.36060,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, -203.17700, -8324.82617, 12.28560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -203.17285, -8324.84277, 11.35450,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -203.17285, -8324.84277, 12.28450,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8401.12402, 13.50040,   -10.31320, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -140.25684, -8387.82227, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
//	CreateDynamicObject(5002, -221.68091, -8308.03613, 10.59810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8406.07324, 14.42540,   -10.88620, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1612, -30.34790, -8437.50195, 19.35610,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8410.97461, 15.38040,   -11.17270, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.21704, -8396.71582, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7191, -147.03638, -8394.15332, 12.54770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8415.92480, 16.37169,   -11.45920, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.23291, -8402.10352, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8420.88379, 17.35290,   -10.88620, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -140.25684, -8410.97266, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8425.84180, 18.28040,   -10.31320, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8430.81445, 19.15919,   -9.74030, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.16089, -8419.84180, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8435.78906, 19.98919,   -9.16730, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.22900, -8425.23535, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8440.75098, 20.76420,   -8.59440, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5005, -96.96631, -8451.35352, 16.14030,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5155, 22.02026, -8475.24512, 20.80799,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8445.77051, 21.49670,   -8.02140, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -140.25684, -8434.12305, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8450.79980, 22.17920,   -7.44850, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8455.82617, 22.81040,   -6.87550, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.21460, -8443.03223, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8460.87305, 23.39290,   -6.30250, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.28589, -8448.46289, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8465.92871, 23.92539,   -5.72960, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5005, -96.96631, -8479.62793, 18.14030,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -140.25684, -8457.27344, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8470.94629, 24.40289,   -5.15660, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8476.01074, 24.83410,   -4.58370, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -39.70093, -8507.42480, 12.42730,   0.00000, 0.00000, 90.12900, -1, -1, -1, 500);
	CreateDynamicObject(5005, -96.96631, -8489.30273, 20.14030,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -96.95654, -8489.13184, 25.71940,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -96.95654, -8489.13184, 27.94430,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.13550, -8466.07813, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8481.02930, 25.21039,   -4.01070, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8486.08301, 25.54160,   -3.43770, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.32080, -8471.54688, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5005, -96.96631, -8498.97852, 22.14030,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8491.13086, 25.81910,   -2.86480, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -140.25684, -8480.42383, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8496.19629, 26.04790,   -2.29180, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5005, -96.96631, -8508.66797, 24.11530,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8501.27344, 26.25160,   -2.29180, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.09717, -8489.29883, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8506.32422, 26.45160,   -2.29180, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.33398, -8494.68652, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1692, -90.41748, -8523.12012, 29.92730,   -59.30110, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8511.37402, 26.65550,   -2.29180, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -96.95654, -8524.98047, 27.94430,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -167.46533, -8482.99707, 10.58300,   0.00000, 0.00000, -1.71890, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8516.32324, 26.85180,   -2.29180, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -140.25684, -8503.57422, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, -146.98070, -8500.57813, 12.44770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -164.97510, -8487.55078, 10.56300,   0.00000, 0.00000, -1.71890, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.65210, -8521.32520, 27.03430,   -1.90510, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8522.69727, 27.06250,   -2.86480, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.02930, -8512.45313, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8527.76367, 27.29000,   -2.29180, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10827, -32.45386, -8557.57031, 30.96660,   0.00000, 0.00000, 180.00011, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.24512, -8517.84570, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8532.83203, 27.44130,   -1.14590, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, -92.25537, -8544.60449, 30.98400,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, -92.25537, -8544.60449, 31.90900,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, -92.25537, -8544.60449, 32.83400,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8537.92285, 27.51750,   -0.57300, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -140.25684, -8526.72461, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8543.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.08667, -8535.54883, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8548.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.23828, -8541.06250, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8553.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8558.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -140.25684, -8549.87500, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8563.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.14380, -8558.74512, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8568.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -77.35840, -8578.89453, 29.04970,   0.00000, 0.00000, 0.00010, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.33911, -8564.18848, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8573.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8578.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -140.25684, -8573.02539, 23.51620,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8583.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.10156, -8581.91016, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -96.04834, -8589.19141, 29.06670,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8588.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -140.14014, -8587.33008, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8593.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -117.50000, -8598.00000, 27.54250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -139.75879, -8596.17578, 23.51620,   0.00000, 0.00000, -87.42170, -1, -1, -1, 500);
	CreateDynamicObject(8344, -188.65649, -8588.01953, 10.57700,   0.00000, 0.00000, 157.50000, -1, -1, -1, 500);
	CreateDynamicObject(3666, -186.05298, -8595.73535, 10.12690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -139.29028, -8605.02148, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -138.33984, -8610.26367, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7191, -154.95581, -8611.57617, 12.52670,   0.00000, 0.00000, 159.21890, -1, -1, -1, 500);
	CreateDynamicObject(3330, -136.82031, -8619.10254, 23.51620,   0.00000, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -186.92969, -8619.11133, 10.58610,   0.00000, 0.00000, -1.71890, -1, -1, -1, 500);
	CreateDynamicObject(1232, -134.96753, -8627.66602, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -133.86108, -8633.04785, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -132.12207, -8641.80078, 23.51620,   0.00000, 0.00000, -78.75000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -91.21924, -8642.71680, 29.05910,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(968, -85.24365, -8647.52441, 28.29180,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(968, -85.16650, -8647.64941, 28.29180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -130.24683, -8650.54297, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -128.80298, -8655.78223, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7191, -167.67798, -8654.47656, 12.52670,   0.00000, 0.00000, 167.89059, -1, -1, -1, 500);
	CreateDynamicObject(3330, -125.07031, -8663.72461, 23.51620,   0.00000, 0.00000, -65.78110, -1, -1, -1, 500);
	CreateDynamicObject(6295, -58.17554, -8656.01660, 56.98990,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -121.51440, -8671.82227, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -118.07324, -8675.91211, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -54.72607, -8673.98828, 29.05750,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -111.73682, -8682.09668, 23.51620,   0.00000, 0.00000, -43.28110, -1, -1, -1, 500);
	CreateDynamicObject(968, -52.50757, -8677.94824, 26.30680,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(968, -52.31519, -8678.05469, 26.30680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -105.11816, -8688.10840, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -101.05493, -8691.23145, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -93.76270, -8696.49805, 23.51620,   0.00000, 0.00000, -34.60940, -1, -1, -1, 500);
	CreateDynamicObject(1232, -86.40845, -8701.30273, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7191, -174.65405, -8698.62598, 12.52670,   0.00000, 0.00000, 173.98390, -1, -1, -1, 500);
	CreateDynamicObject(1232, -81.84302, -8704.25586, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -74.16211, -8708.82227, 23.51620,   0.00000, 0.00000, -30.31230, -1, -1, -1, 500);
	CreateDynamicObject(8344, -214.93481, -8699.98828, 10.58410,   0.00000, 0.00000, 157.50000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -66.39795, -8712.95508, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -61.61133, -8714.99316, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 33.84863, -8680.50781, 35.20380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -52.84326, -8716.94531, 23.51620,   0.00000, 0.00000, -12.18680, -1, -1, -1, 500);
	CreateDynamicObject(16097, -5.34839, -8702.71094, 27.48940,   2.57830, 0.98840, 145.39059, -1, -1, -1, 500);
	CreateDynamicObject(1232, -44.16772, -8718.67285, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -179.61206, -8724.36914, 13.77430,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, -179.61206, -8724.36914, 13.29930,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, -179.61206, -8724.36914, 12.82430,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, -179.61206, -8724.36914, 12.34930,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, -179.61206, -8724.36914, 11.87430,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, -179.61206, -8724.36914, 11.39930,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, -179.61206, -8724.36914, 10.92430,   0.00000, 0.00000, 56.25000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -38.92334, -8719.54590, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, -30.06641, -8720.04395, 23.51620,   0.00000, 0.00000, -3.59240, -1, -1, -1, 500);
	CreateDynamicObject(10834, 86.03638, -8653.89844, 28.33760,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(10834, 86.05078, -8653.93066, 28.34250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, -21.17725, -8720.54590, 36.45400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, 32.84497, -8698.07324, 29.05490,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 25.09009, -8717.69531, 30.19520,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7191, -183.25464, -8751.02441, 12.50170,   0.00000, 0.00000, 178.28101, -1, -1, -1, 500);
	CreateDynamicObject(8171, -206.45752, -8756.49805, 10.58320,   0.00000, 0.00000, -1.71890, -1, -1, -1, 500);
	CreateDynamicObject(8650, 55.58545, -8717.69531, 30.19520,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, -185.24854, -8778.21875, 10.42600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16061, -166.73193, -8782.93848, 16.87939,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, 116.70630, -8678.67773, 29.86260,   0.00000, 0.00000, 171.32829, -1, -1, -1, 500);
	CreateDynamicObject(8650, 86.07837, -8717.69531, 30.19520,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4242, -81.88208, -8797.87793, 11.16130,   0.00000, -4.03940, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, 125.87476, -8680.07324, 29.86260,   0.00000, 0.00000, 171.32829, -1, -1, -1, 500);
	CreateDynamicObject(8171, -202.55908, -8800.17285, 10.57700,   0.00000, 0.00000, -1.71890, -1, -1, -1, 500);
	CreateDynamicObject(973, 135.07397, -8681.67383, 29.86260,   0.00000, 0.00000, 168.96490, -1, -1, -1, 500);
	CreateDynamicObject(11533, -11.57592, -8801.44531, 8.92090,   0.00000, -9.45380, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(3666, -186.28833, -8813.20801, 11.06560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 116.52832, -8718.60938, 30.19520,   0.00000, 0.00000, 86.56220, -1, -1, -1, 500);
	CreateDynamicObject(973, 144.17749, -8683.45117, 29.86260,   0.00000, 0.00000, 168.96490, -1, -1, -1, 500);
	CreateDynamicObject(8343, 129.16626, -8722.13281, 29.07240,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(16061, -166.73193, -8847.31348, 16.87939,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, 153.32397, -8685.23242, 29.86260,   0.00000, 0.00000, 168.96490, -1, -1, -1, 500);
	CreateDynamicObject(16097, 5.81982, -8833.58301, 27.85770,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 159.17651, -8680.39941, 35.20380,   0.00000, 0.00000, 33.75000, -1, -1, -1, 500);
	CreateDynamicObject(10834, -160.29321, -8864.64746, 11.78330,   0.00000, 0.00000, -271.71881, -1, -1, -1, 500);
	CreateDynamicObject(10834, -160.33813, -8865.18555, 11.77790,   0.00000, 0.00000, -91.71890, -1, -1, -1, 500);
	CreateDynamicObject(973, 162.32397, -8687.51465, 29.86260,   0.00000, 0.00000, 162.74249, -1, -1, -1, 500);
	CreateDynamicObject(8650, 146.29443, -8723.81445, 30.19520,   0.00000, 0.00000, 73.59340, -1, -1, -1, 500);
	CreateDynamicObject(973, 171.07397, -8690.61816, 29.86260,   0.00000, 0.00000, 158.14439, -1, -1, -1, 500);
	CreateDynamicObject(4242, 117.38403, -8797.87402, 18.18509,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -210.26685, -8894.31934, 10.59010,   0.00000, 0.00000, -1.50400, -1, -1, -1, 500);
	CreateDynamicObject(8343, 163.45581, -8731.87988, 29.07340,   0.00000, 0.00000, 258.75000, -1, -1, -1, 500);
	CreateDynamicObject(16061, -166.73193, -8912.06348, 16.87939,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16114, -46.91406, -8916.84375, 7.27580,   0.00000, 0.00000, 123.74990, -1, -1, -1, 500);
	CreateDynamicObject(973, 179.64966, -8694.07031, 29.86260,   0.00000, 0.00000, 157.97250, -1, -1, -1, 500);
	CreateDynamicObject(8650, 174.11206, -8735.61133, 30.19520,   0.00000, 1.71890, 60.62450, -1, -1, -1, 500);
	CreateDynamicObject(10487, 66.24219, -8884.19336, 36.46740,   5.58630, -12.24699, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, 188.20044, -8697.52832, 29.86260,   0.00000, 0.00000, 157.97250, -1, -1, -1, 500);
	CreateDynamicObject(4242, 152.13403, -8797.87402, 18.18760,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, -189.97266, -8935.58301, 11.03440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16192, 129.16528, -8848.05371, 41.44800,   0.00000, 0.00000, -81.40560, -1, -1, -1, 500);
	CreateDynamicObject(973, 196.69751, -8701.11719, 29.86260,   0.00000, 0.00000, 156.25360, -1, -1, -1, 500);
	CreateDynamicObject(8171, -206.80910, -8937.79688, 10.54570,   0.00000, 0.00000, -2.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, 205.01733, -8705.09277, 29.85140,   0.00000, -0.25780, 152.73860, -1, -1, -1, 500);
	CreateDynamicObject(8343, 196.90991, -8748.67773, 29.07560,   0.00000, 0.00000, 247.50000, -1, -1, -1, 500);
	CreateDynamicObject(4815, 110.90869, -8899.43848, 32.23440,   0.85940, -3.91040, 112.34530, -1, -1, -1, 500);
	CreateDynamicObject(973, 212.83179, -8710.14160, 29.84640,   0.00000, 0.00000, 141.64310, -1, -1, -1, 500);
	CreateDynamicObject(8343, 94.66211, -8914.85547, 32.46000,   2.97940, 5.74390, 0.00010, -1, -1, -1, 500);
	CreateDynamicObject(3330, 51.05176, -8944.99902, 38.26470,   0.00000, 0.00000, -89.14060, -1, -1, -1, 500);
	CreateDynamicObject(16112, 176.75659, -8831.42285, 32.06280,   0.00000, 0.00000, 147.10930, -1, -1, -1, 500);
	CreateDynamicObject(973, 219.80493, -8716.29199, 29.84640,   0.00000, 0.00000, 135.62700, -1, -1, -1, 500);
	CreateDynamicObject(981, 64.82617, -8946.39258, 34.73370,   0.00000, 6.01610, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, 225.95825, -8722.52539, 29.84640,   0.00000, 0.00000, 133.86501, -1, -1, -1, 500);
	CreateDynamicObject(8343, 220.11279, -8778.90918, 29.08030,   0.00000, 0.00000, 225.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, 232.28735, -8729.11621, 29.84640,   0.00000, 0.00000, 133.86501, -1, -1, -1, 500);
	CreateDynamicObject(16114, 173.02563, -8874.00488, 30.79510,   5.15660, 0.00000, 43.98590, -1, -1, -1, 500);
	CreateDynamicObject(3330, 51.42847, -8962.56348, 38.29210,   0.00000, 0.00000, -89.14060, -1, -1, -1, 500);
	CreateDynamicObject(973, 238.65991, -8735.75391, 29.84640,   0.00000, 0.00000, 133.86501, -1, -1, -1, 500);
	CreateDynamicObject(1232, 57.50073, -8962.84863, 36.36030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16112, 212.86157, -8823.12891, 28.71570,   0.00000, 0.00000, 327.89160, -1, -1, -1, 500);
	CreateDynamicObject(16112, 89.14233, -8950.03711, 22.13840,   0.00000, 0.00000, 12.49610, -1, -1, -1, 500);
	CreateDynamicObject(973, 244.76245, -8742.67578, 29.84640,   0.00000, 0.00000, 129.05209, -1, -1, -1, 500);
	CreateDynamicObject(1232, 72.28809, -8963.20703, 34.86390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, 250.21069, -8750.15430, 29.84640,   0.00000, 0.00000, 123.03600, -1, -1, -1, 500);
	CreateDynamicObject(16115, 128.41479, -8936.56641, 37.23110,   0.00000, -4.29720, 24.37360, -1, -1, -1, 500);
	CreateDynamicObject(973, 255.23853, -8757.90430, 29.84640,   0.00000, 0.00000, 123.03600, -1, -1, -1, 500);
	CreateDynamicObject(8343, 238.11206, -8810.90527, 29.08260,   0.00000, 0.00000, 213.75000, -1, -1, -1, 500);
	CreateDynamicObject(16112, 220.95728, -8853.37891, 29.09070,   0.00000, 0.00000, 90.70470, -1, -1, -1, 500);
	CreateDynamicObject(973, 260.28076, -8765.65430, 29.84640,   0.00000, 0.00000, 123.03600, -1, -1, -1, 500);
	CreateDynamicObject(3458, 171.39990, -8919.64355, 27.59560,   0.01430, 0.00000, 43.28110, -1, -1, -1, 500);
	CreateDynamicObject(973, 265.29712, -8773.37891, 29.84640,   0.00000, 0.00000, 123.03600, -1, -1, -1, 500);
	CreateDynamicObject(973, 269.86328, -8781.15430, 29.84640,   0.00000, 0.00000, 117.87930, -1, -1, -1, 500);
	CreateDynamicObject(8343, 241.85815, -8853.67383, 29.08480,   0.00000, 0.00000, 191.25000, -1, -1, -1, 500);
	CreateDynamicObject(973, 273.28369, -8789.67871, 29.84640,   0.00000, 0.00000, 105.84720, -1, -1, -1, 500);
	CreateDynamicObject(10351, 243.69165, -8536.72754, 30.08430,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(973, 275.22998, -8798.50391, 29.84640,   0.00000, 0.00000, 98.97170, -1, -1, -1, 500);
	CreateDynamicObject(8343, 188.78809, -8922.35742, 29.08280,   0.00000, 0.00000, 132.34441, -1, -1, -1, 500);
	CreateDynamicObject(973, 276.33691, -8806.35254, 29.84640,   0.00000, 0.00000, 96.87460, -1, -1, -1, 500);
	CreateDynamicObject(973, 277.10254, -8812.60449, 29.84640,   0.00000, 0.00000, 96.96050, -1, -1, -1, 500);
	CreateDynamicObject(3877, 277.87354, -8817.20605, 30.72550,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 229.29590, -8892.87988, 29.08010,   0.00000, 0.00000, 168.67270, -1, -1, -1, 500);
	CreateDynamicObject(8171, 198.40991, -8924.40234, 29.07960,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(10806, 230.83911, -8906.60938, 32.08480,   0.00000, 0.00000, 6.95280, -1, -1, -1, 500);
	CreateDynamicObject(10352, 301.28467, -8798.53418, 30.00160,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(891, 90.69775, -8988.63477, 29.08500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, 191.08545, -8961.12793, 28.34690,   0.00000, 0.00000, -58.82830, -1, -1, -1, 500);
	CreateDynamicObject(3287, 185.44629, -8964.95410, 28.34690,   0.00000, 0.00000, -47.57830, -1, -1, -1, 500);
	CreateDynamicObject(3287, 197.34839, -8958.47363, 28.34690,   0.00000, 0.00000, -70.07830, -1, -1, -1, 500);
	CreateDynamicObject(3287, 180.67993, -8969.77344, 28.24310,   3.43770, 0.00000, -36.32830, -1, -1, -1, 500);
	CreateDynamicObject(3287, 203.94775, -8957.10645, 28.05810,   -3.43770, 0.00000, -81.32830, -1, -1, -1, 500);
	CreateDynamicObject(3877, 191.34424, -8964.51367, 30.71790,   0.00000, 0.00000, 213.75000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 186.98218, -8967.19043, 27.54860,   0.01430, 0.00000, 32.03110, -1, -1, -1, 500);
	CreateDynamicObject(8171, 102.20996, -9005.20117, 29.06620,   0.00000, 0.00000, 303.75000, -1, -1, -1, 500);
	CreateDynamicObject(4242, 143.31812, -9023.07422, 12.18630,   0.00000, -3.39480, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16258, 84.89795, -9029.58398, 15.50280,   0.00000, 6.87550, 165.31219, -1, -1, -1, 500);
	CreateDynamicObject(8343, 46.77148, -9011.06836, 32.36760,   -2.86480, -5.72960, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(10353, 349.63989, -9058.03027, 28.98570,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 46.77148, -9019.06836, 31.97270,   -2.86480, -5.72960, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(10807, 63.56494, -9042.48828, 32.07750,   0.00000, 0.00000, 9.53120, -1, -1, -1, 500);
	CreateDynamicObject(4898, 35.82715, -9048.63281, 31.39760,   0.38670, -6.44580, 149.68770, -1, -1, -1, 500);
	CreateDynamicObject(978, -11.66772, -9005.82813, 38.83640,   0.00000, 0.00000, 121.99670, -1, -1, -1, 500);
	CreateDynamicObject(978, -11.66772, -9005.82813, 39.68640,   0.00000, 0.00000, 121.99670, -1, -1, -1, 500);
	CreateDynamicObject(978, -11.66772, -9005.82813, 40.56140,   0.00000, 0.00000, 121.99670, -1, -1, -1, 500);
	CreateDynamicObject(3287, -10.07861, -9010.00098, 35.86880,   -3.43770, 0.00000, -96.79820, -1, -1, -1, 500);
	CreateDynamicObject(3287, -16.94946, -9009.15137, 36.17000,   0.00000, 0.00000, -97.81230, -1, -1, -1, 500);
	CreateDynamicObject(981, 18.92456, -9067.79785, 32.98380,   0.00000, -6.01610, 174.84331, -1, -1, -1, 500);
	CreateDynamicObject(3287, -23.65259, -9008.77637, 36.18250,   0.55860, 0.04300, -80.46880, -1, -1, -1, 500);
	CreateDynamicObject(1237, 0.68799, -9061.73145, 34.50780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -21.59180, -9027.71289, 34.51650,   6.90410, 3.52370, -14.76509, -1, -1, -1, 500);
	CreateDynamicObject(3287, -30.43555, -9010.21094, 36.11250,   0.77350, 0.04300, -71.79720, -1, -1, -1, 500);
	CreateDynamicObject(1237, -2.57031, -9058.19922, 34.45100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -5.87866, -9054.72070, 34.62500,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10806, -26.96436, -9024.34375, 39.23610,   -2.86480, 0.00000, 179.90880, -1, -1, -1, 500);
	CreateDynamicObject(3287, -37.01807, -9012.48730, 36.00880,   1.33210, 0.04300, -68.35940, -1, -1, -1, 500);
	CreateDynamicObject(3458, -18.63501, -9051.74512, 33.22160,   2.85050, 0.04300, -1.71890, -1, -1, -1, 500);
	CreateDynamicObject(8421, 10.09741, -9093.13867, 36.57130,   0.00000, 0.00000, 82.70340, -1, -1, -1, 500);
	CreateDynamicObject(3287, -43.44238, -9015.16504, 35.85010,   1.33210, 0.04300, -64.92170, -1, -1, -1, 500);
	CreateDynamicObject(3287, -49.69629, -9018.17188, 35.66890,   2.19160, 0.04300, -62.34340, -1, -1, -1, 500);
	CreateDynamicObject(1237, -36.87280, -9054.47656, 34.63730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -55.80957, -9021.57910, 35.40390,   2.19160, 0.04300, -57.18670, -1, -1, -1, 500);
	CreateDynamicObject(1237, -40.24951, -9057.89648, 34.46610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -41.72314, -9057.15918, 34.50020,   2.86480, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(9907, -21.20630, -9077.28613, 98.13540,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -43.13525, -9061.72559, 34.27450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -61.37720, -9025.57324, 35.12140,   3.78150, 0.04300, -45.93680, -1, -1, -1, 500);
	CreateDynamicObject(16196, -81.37598, -9025.93848, 38.03840,   0.00000, 0.00000, -81.40560, -1, -1, -1, 500);
	CreateDynamicObject(3458, -44.72021, -9110.98242, 30.25550,   0.01430, 2.92210, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4242, -81.88208, -9048.67773, 3.63630,   3.43770, -4.03940, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4002, -31.03711, -9137.87695, 32.12570,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -84.55688, -9107.36914, 31.95880,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -84.55688, -9107.36914, 32.70880,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -84.55688, -9107.36914, 33.45880,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(9915, -24.04321, -9181.37793, 36.61370,   0.00000, -4.29720, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, -85.16089, -9112.09082, 31.99370,   0.00000, 2.75020, -96.01600, -1, -1, -1, 500);
	CreateDynamicObject(973, -85.16089, -9112.09082, 32.91860,   0.00000, 2.75020, -96.01600, -1, -1, -1, 500);
	CreateDynamicObject(973, -85.16089, -9112.09082, 33.84360,   0.00000, 2.75020, -96.01600, -1, -1, -1, 500);
	CreateDynamicObject(3458, -45.75269, -9163.78223, 27.59810,   0.01430, 2.79320, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -5.79663, -9200.78418, 27.06020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -65.84375, -9149.20605, 29.87990,   2.86480, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(17546, -95.50098, -9140.81055, 34.75120,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(17546, -95.50952, -9140.80273, 16.37620,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -42.86768, -9200.98438, 27.07530,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -45.36304, -9200.33887, 26.82070,   -2.79320, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -12.95800, -9229.62891, 25.21220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16061, -166.73193, -8976.56348, 16.87939,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -35.09424, -9229.63086, 25.21240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(9915, -24.04932, -9238.87695, 33.60750,   0.00000, -4.29720, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -12.97558, -9247.18750, 22.98190,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3689, -157.93262, -9082.95898, 18.40009,   0.00000, 0.00000, -82.18770, -1, -1, -1, 500);
	CreateDynamicObject(17546, -95.52197, -9187.76074, 34.75120,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -65.77222, -9220.67676, 24.73419,   4.01070, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -35.06885, -9247.14258, 22.97850,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -12.99829, -9266.29883, 21.25630,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, -191.00854, -8970.54883, 10.42600,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -35.11499, -9266.66113, 21.28349,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, -173.90625, -9120.44434, 10.32370,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, -173.49536, -9123.38379, 10.29810,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3666, -172.48804, -9130.86523, 11.07900,   0.00000, 0.00000, 11.25000, -1, -1, -1, 500);
	CreateDynamicObject(17546, -95.52930, -9234.71973, 34.75120,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -203.01514, -9030.92578, 10.56000,   0.00000, 0.00000, 7.81220, -1, -1, -1, 500);
	CreateDynamicObject(17546, -95.54272, -9234.71973, 12.30120,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3755, -141.13477, -9192.00684, 16.22370,   0.00000, 0.00000, -82.26510, -1, -1, -1, 500);
	CreateDynamicObject(1568, -12.95337, -9288.66113, 19.27849,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -159.16504, -9182.39941, 10.55870,   0.00000, 0.00000, 7.81220, -1, -1, -1, 500);
	CreateDynamicObject(1568, -35.10474, -9288.71094, 19.28230,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(9915, -24.04932, -9298.02539, 27.68250,   0.00000, -4.29720, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -184.21191, -9167.89941, 10.56000,   0.00000, 0.00000, 7.81220, -1, -1, -1, 500);
	CreateDynamicObject(8650, -85.69604, -9269.91016, 20.80990,   5.71530, 0.00000, 0.00010, -1, -1, -1, 500);
	CreateDynamicObject(8650, -85.69604, -9269.91016, 18.56989,   5.71530, 0.00000, 0.00010, -1, -1, -1, 500);
	CreateDynamicObject(1568, -12.90454, -9305.99707, 17.03140,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, -149.93140, -9231.61133, 11.82400,   0.00000, 0.00000, 154.84441, -1, -1, -1, 500);
	CreateDynamicObject(979, -149.93140, -9231.61133, 10.92400,   0.00000, 0.00000, 154.84441, -1, -1, -1, 500);
	CreateDynamicObject(8171, -65.85620, -9292.07617, 19.17039,   5.72960, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -35.05957, -9306.21777, 17.04800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -13.01001, -9325.38770, 15.32680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -35.10669, -9325.85352, 15.36190,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -171.16455, -9262.89941, 10.56120,   0.00000, 0.00000, 7.81220, -1, -1, -1, 500);
	CreateDynamicObject(5192, -127.87402, -9305.26855, 14.12620,   0.08590, 0.08590, -36.32830, -1, -1, -1, 500);
	CreateDynamicObject(17538, -115.62451, -9313.61426, 25.28699,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(9915, -24.05420, -9338.39844, 23.90750,   0.00000, -4.29720, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(981, -141.43457, -9312.97656, 11.48610,   0.00000, 0.00000, -81.11350, -1, -1, -1, 500);
	CreateDynamicObject(8171, -175.00000, -9303.00000, 10.55870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, -178.27393, -9313.89453, 10.22490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -35.05176, -9346.55371, 13.27020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -12.95434, -9346.48535, 13.26510,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10844, -129.79395, -9341.24805, 13.42760,   0.00000, 0.00000, -16.40660, -1, -1, -1, 500);
	CreateDynamicObject(11089, -147.05835, -9337.93262, 19.50000,   0.00000, 0.00000, -106.19170, -1, -1, -1, 500);
	CreateDynamicObject(3458, -65.89087, -9362.14355, 10.61670,   5.72960, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -65.89087, -9367.19434, 10.14790,   4.87010, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -35.09888, -9366.06348, 11.57450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -13.02954, -9365.75879, 11.55160,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -65.89087, -9372.26953, 9.75170,   4.01070, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(981, -148.94580, -9363.16895, 11.43610,   0.00000, 0.00000, -106.19180, -1, -1, -1, 500);
	CreateDynamicObject(3458, -65.89087, -9377.31934, 9.45040,   2.86480, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -65.89087, -9382.39453, 9.24670,   1.71890, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -65.89087, -9387.39453, 9.13420,   0.85940, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -65.89087, -9392.42480, 9.09670,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4199, -2.56006, -9394.91211, 9.65010,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4869, -160.03320, -9390.80469, 12.62210,   0.00000, 0.00000, 75.31230, -1, -1, -1, 500);
	CreateDynamicObject(10817, -17.80933, -9402.96777, -3.17050,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(4199, -2.56006, -9401.61133, 9.63510,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -180.78027, -9389.52441, 10.56250,   0.00000, 0.00000, -16.40660, -1, -1, -1, 500);
	CreateDynamicObject(9680, -153.31592, -9409.48730, 25.10280,   0.00000, 0.00000, 72.73400, -1, -1, -1, 500);
	CreateDynamicObject(4559, 21.57568, -9415.83398, 15.04600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4199, 18.43994, -9416.93555, 9.65130,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7416, 4.13769, -9429.49902, 10.61540,   0.00000, 0.00000, 0.00010, -1, -1, -1, 500);
	CreateDynamicObject(4199, 11.94629, -9443.57422, 9.65760,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5005, -93.56396, -9459.38574, 13.91120,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -193.93164, -9434.22559, 10.55750,   0.00000, 0.00000, -16.40660, -1, -1, -1, 500);
	CreateDynamicObject(8171, -65.91943, -9463.88672, 10.61700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5001, -158.61255, -9464.78418, 13.12600,   0.00000, 0.00000, -107.34320, -1, -1, -1, 500);
	CreateDynamicObject(5002, -140.15161, -9490.66992, 10.56170,   0.00000, 0.00000, 343.51599, -1, -1, -1, 500);
	CreateDynamicObject(8650, -139.48950, -9533.18066, 11.13450,   0.00000, 0.00000, -106.40660, -1, -1, -1, 500);
	CreateDynamicObject(8650, -110.26538, -9541.78027, 11.13450,   0.00000, 0.00000, -106.40660, -1, -1, -1, 500);
	CreateDynamicObject(3578, -93.61816, -9548.00781, 11.31470,   0.00000, 0.00000, 269.66489, -1, -1, -1, 500);
	CreateDynamicObject(981, -171.28687, -9540.19824, 11.43820,   0.00000, 0.00000, 255.31219, -1, -1, -1, 500);
	CreateDynamicObject(981, -103.12573, -9560.56152, 11.41320,   0.00000, 0.00000, 75.31220, -1, -1, -1, 500);
	CreateDynamicObject(3578, -87.66992, -9567.88379, 11.31470,   0.00000, -0.85940, 297.39890, -1, -1, -1, 500);
	CreateDynamicObject(10398, 1.61353, -9560.75781, 38.29100,   0.00000, 0.00000, 292.50000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -189.08301, -9551.24219, 9.01970,   0.00000, 0.00000, 13.60480, -1, -1, -1, 500);
	CreateDynamicObject(3458, -203.68164, -9547.65527, 9.02180,   0.00000, 0.00000, 45.07730, -1, -1, -1, 500);
	CreateDynamicObject(3458, -189.08301, -9556.50684, 9.01970,   0.00000, 0.00000, 13.60480, -1, -1, -1, 500);
	CreateDynamicObject(3578, -75.31982, -9584.53711, 11.31470,   0.00000, 0.00000, 320.75830, -1, -1, -1, 500);
	CreateDynamicObject(3458, -189.08301, -9561.76953, 9.01970,   0.00000, 0.00000, 13.60480, -1, -1, -1, 500);
	CreateDynamicObject(3458, -203.68164, -9554.88086, 9.02180,   0.00000, 0.00000, 45.07730, -1, -1, -1, 500);
	CreateDynamicObject(8171, -40.65527, -9589.83789, 10.61970,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -203.68164, -9562.12988, 9.02180,   0.00000, 0.00000, 45.07730, -1, -1, -1, 500);
	CreateDynamicObject(5001, -158.89819, -9586.95215, 12.79390,   0.00000, 0.00000, 163.51601, -1, -1, -1, 500);
	CreateDynamicObject(3458, -54.60327, -9602.44043, 9.02340,   0.00000, 0.00000, -44.92260, -1, -1, -1, 500);
	CreateDynamicObject(8171, -232.98047, -9566.89746, 10.55750,   0.00000, 0.00000, -16.40660, -1, -1, -1, 500);
	CreateDynamicObject(5001, -69.52539, -9631.38965, 12.79670,   0.00000, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -222.68115, -9592.14648, 10.54310,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -224.03931, -9592.29980, 9.79580,   0.00000, 0.00000, 80.46880, -1, -1, -1, 500);
	CreateDynamicObject(7240, -182.62573, -9614.52148, 2.19200,   0.00000, 0.00000, -281.25000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -223.07959, -9593.47168, 10.54310,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -237.23071, -9584.51367, 9.45410,   0.00000, 0.00000, 78.75000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -223.35352, -9594.77148, 10.54310,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -223.57764, -9596.09570, 10.54310,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -223.82666, -9597.47070, 10.54310,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(1237, -224.20020, -9598.79492, 10.54310,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -225.51636, -9602.40039, 9.79580,   0.00000, 0.00000, 83.04710, -1, -1, -1, 500);
	CreateDynamicObject(8650, 32.22949, -9642.06348, 11.50780,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -13.46338, -9655.26367, 9.09640,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -225.76636, -9612.52539, 9.79580,   0.00000, 0.00000, 94.29720, -1, -1, -1, 500);
	CreateDynamicObject(3578, -224.02124, -9622.54980, 9.79580,   0.00000, 0.00000, 105.54710, -1, -1, -1, 500);
	CreateDynamicObject(8650, -166.11011, -9651.08301, 9.46500,   0.00000, 0.00000, 179.95689, -1, -1, -1, 500);
	CreateDynamicObject(968, 7.71753, -9662.91699, 9.90030,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -166.11646, -9654.68457, 11.35130,   0.00000, 0.00000, 179.95689, -1, -1, -1, 500);
	CreateDynamicObject(8343, -214.57446, -9631.49316, 10.57650,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7416, 56.78174, -9649.10449, 10.61620,   0.00000, 0.00000, 202.50000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -220.34985, -9632.02539, 9.79580,   0.00000, 0.00000, 116.79720, -1, -1, -1, 500);
	CreateDynamicObject(3578, -215.12866, -9640.72559, 9.79580,   0.00000, 0.00000, 125.46880, -1, -1, -1, 500);
	CreateDynamicObject(8650, -158.31909, -9671.16992, 11.36160,   0.00000, 0.00000, -98.71470, -1, -1, -1, 500);
	CreateDynamicObject(3578, -208.87280, -9648.72559, 9.79580,   0.00000, 0.00000, 130.70270, -1, -1, -1, 500);
	CreateDynamicObject(3578, -160.35498, -9671.92773, 9.79580,   0.00000, 0.00000, 173.12440, -1, -1, -1, 500);
	CreateDynamicObject(3287, -22.04443, -9685.09375, 9.92020,   0.00000, 0.00000, 218.35640, -1, -1, -1, 500);
	CreateDynamicObject(3578, -164.51514, -9671.42090, 9.79580,   0.00000, 0.00000, 173.12440, -1, -1, -1, 500);
	CreateDynamicObject(3578, -201.67212, -9655.92383, 9.79580,   0.00000, 0.00000, 139.37440, -1, -1, -1, 500);
	CreateDynamicObject(3578, -174.51611, -9669.41992, 9.79580,   0.00000, 0.00000, 164.45270, -1, -1, -1, 500);
	CreateDynamicObject(3458, -36.16357, -9689.90234, 9.09000,   0.00000, 0.00000, 45.07730, -1, -1, -1, 500);
	CreateDynamicObject(3578, -193.32935, -9661.79004, 9.79580,   0.00000, 0.00000, 150.62440, -1, -1, -1, 500);
	CreateDynamicObject(3578, -184.10229, -9666.19043, 9.79580,   0.00000, 0.00000, 158.43660, -1, -1, -1, 500);
	CreateDynamicObject(8650, -34.12329, -9690.10938, 10.80690,   0.00000, 0.00000, -36.32830, -1, -1, -1, 500);
	CreateDynamicObject(3287, -18.93848, -9691.09473, 9.92020,   0.00000, 0.00000, 203.66859, -1, -1, -1, 500);
	CreateDynamicObject(1422, -33.70630, -9693.85352, 11.02900,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(1422, -30.43628, -9696.00293, 11.02900,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -36.63672, -9697.62695, 9.09000,   0.00000, 0.00000, 45.07730, -1, -1, -1, 500);
	CreateDynamicObject(1422, -27.14819, -9698.17773, 11.02900,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -17.12964, -9697.67676, 9.92020,   0.00000, 0.00000, 192.41859, -1, -1, -1, 500);
	CreateDynamicObject(3458, -33.16260, -9701.23730, 9.09130,   0.00000, 0.00000, 45.07730, -1, -1, -1, 500);
	CreateDynamicObject(3458, -35.41260, -9706.95117, 9.09500,   0.00000, 0.00000, 22.57730, -1, -1, -1, 500);
	CreateDynamicObject(3287, -16.64990, -9704.45703, 9.92020,   0.00000, 0.00000, 181.16859, -1, -1, -1, 500);
	CreateDynamicObject(8343, -225.52905, -9661.71777, 10.56520,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -32.34082, -9707.57617, 9.09250,   0.00000, 0.00000, 45.07730, -1, -1, -1, 500);
	CreateDynamicObject(1422, -49.37256, -9711.34863, 11.03400,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, -33.81226, -9710.28906, 11.03400,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -54.36304, -9712.62305, 10.80690,   0.00000, 0.00000, -47.57830, -1, -1, -1, 500);
	CreateDynamicObject(3458, -34.81201, -9712.25098, 9.09500,   0.00000, 0.00000, 22.57730, -1, -1, -1, 500);
	CreateDynamicObject(8343, -16.56738, -9710.70313, 10.62530,   0.00000, 0.00000, 202.50000, -1, -1, -1, 500);
	CreateDynamicObject(1422, -46.49219, -9714.24805, 11.03400,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -17.85913, -9711.06738, 9.92020,   0.00000, 0.00000, 165.62140, -1, -1, -1, 500);
	CreateDynamicObject(1422, -30.91382, -9713.13965, 11.03400,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, -43.58691, -9717.07227, 11.03400,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, -28.08521, -9715.88770, 11.03400,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -64.67627, -9718.51660, 9.09000,   0.00000, 0.00000, 45.07730, -1, -1, -1, 500);
	CreateDynamicObject(3458, -35.16064, -9717.97168, 9.09500,   0.00000, 0.00000, 22.57730, -1, -1, -1, 500);
	CreateDynamicObject(3287, -20.85669, -9717.05078, 9.92020,   0.00000, 0.00000, 149.13750, -1, -1, -1, 500);
	CreateDynamicObject(3287, -60.35815, -9721.81836, 9.91650,   0.00000, 0.00000, 61.87040, -1, -1, -1, 500);
	CreateDynamicObject(3458, -72.71509, -9722.46484, 9.09250,   0.00000, 0.00000, 22.57730, -1, -1, -1, 500);
	CreateDynamicObject(3287, -163.92285, -9706.48535, 9.82180,   0.00000, 0.00000, 257.10861, -1, -1, -1, 500);
	CreateDynamicObject(3287, -56.80029, -9723.72461, 9.92020,   0.00000, 0.00000, 61.87040, -1, -1, -1, 500);
	CreateDynamicObject(3287, -157.68408, -9709.07715, 9.82180,   0.00000, 0.00000, 244.13969, -1, -1, -1, 500);
	CreateDynamicObject(8343, -150.93970, -9711.36719, 10.55380,   0.00000, 0.00000, -93.43770, -1, -1, -1, 500);
	CreateDynamicObject(8343, -153.02417, -9711.36719, 10.55880,   0.00000, 0.00000, -93.43770, -1, -1, -1, 500);
	CreateDynamicObject(3287, -170.61670, -9705.30078, 9.82180,   0.00000, 0.00000, 268.35849, -1, -1, -1, 500);
	CreateDynamicObject(3287, -25.35840, -9722.07910, 9.92020,   0.00000, 0.00000, 134.44980, -1, -1, -1, 500);
	CreateDynamicObject(3287, -152.42334, -9713.17480, 9.82180,   0.00000, 0.00000, 227.73309, -1, -1, -1, 500);
	CreateDynamicObject(3287, -50.67041, -9726.58984, 9.92020,   0.00000, 0.00000, 73.12050, -1, -1, -1, 500);
	CreateDynamicObject(3287, -177.54858, -9705.10645, 9.73430,   2.75020, 0.00000, 268.35849, -1, -1, -1, 500);
	CreateDynamicObject(3287, -31.01099, -9725.73633, 9.92020,   0.00000, 0.00000, 118.90250, -1, -1, -1, 500);
	CreateDynamicObject(3458, -72.10327, -9727.76367, 9.09250,   0.00000, 0.00000, 22.57730, -1, -1, -1, 500);
	CreateDynamicObject(3287, -44.11572, -9728.08594, 9.92020,   0.00000, 0.00000, 88.66760, -1, -1, -1, 500);
	CreateDynamicObject(8650, -79.60010, -9728.67383, 10.80690,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -37.41138, -9727.77148, 9.92020,   0.00000, 0.00000, 103.35530, -1, -1, -1, 500);
	CreateDynamicObject(3287, -148.50952, -9718.60352, 9.82180,   0.00000, 0.00000, 211.24910, -1, -1, -1, 500);
	CreateDynamicObject(4601, 0.51953, -9720.70508, 50.03680,   0.00000, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -146.15479, -9724.91211, 9.82180,   0.00000, 0.00000, 196.63860, -1, -1, -1, 500);
	CreateDynamicObject(978, -92.82178, -9735.23828, 11.26590,   0.00000, 0.00000, -146.25000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -156.12280, -9747.03125, 10.42240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -145.39648, -9731.63281, 9.82180,   0.00000, 0.00000, 182.73300, -1, -1, -1, 500);
	CreateDynamicObject(5001, -134.04883, -9736.10156, 13.35930,   0.00000, 0.00000, 78.75000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -107.66260, -9741.33203, 9.02750,   0.00000, 0.00000, 34.00780, -1, -1, -1, 500);
	CreateDynamicObject(8650, -103.97656, -9745.54883, 10.80690,   0.00000, 0.00000, -43.10920, -1, -1, -1, 500);
	CreateDynamicObject(3287, -146.43140, -9738.29980, 9.82180,   0.00000, 0.00000, 167.26300, -1, -1, -1, 500);
	CreateDynamicObject(7586, -168.91162, -9732.33008, 16.93310,   0.00000, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -145.78735, -9745.02344, 9.79030,   0.00000, 0.00000, 239.76500, -1, -1, -1, 500);
	CreateDynamicObject(3287, -149.30640, -9744.33691, 9.82180,   0.00000, 0.00000, 149.99699, -1, -1, -1, 500);
	CreateDynamicObject(3578, -146.68384, -9745.74902, 9.79030,   0.00000, 0.00000, 239.76500, -1, -1, -1, 500);
	CreateDynamicObject(7416, 1.67114, -9751.53613, 10.61210,   0.00000, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(968, -49.59937, -9760.80469, 9.79620,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -55.86670, -9761.08398, 9.81490,   0.00000, 0.00000, 281.71381, -1, -1, -1, 500);
	CreateDynamicObject(968, -49.45142, -9760.82910, 9.79620,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -59.76514, -9761.89063, 9.82110,   0.00000, 0.00000, 281.71381, -1, -1, -1, 500);
	CreateDynamicObject(3287, -153.71069, -9749.45117, 9.82180,   0.00000, 0.00000, 135.30920, -1, -1, -1, 500);
	CreateDynamicObject(3287, -66.25220, -9763.70117, 9.82110,   0.00000, 0.00000, 296.40161, -1, -1, -1, 500);
	CreateDynamicObject(1422, -46.03247, -9764.26855, 11.03620,   0.00000, 0.00000, -33.75000, -1, -1, -1, 500);
	CreateDynamicObject(1422, -42.63208, -9766.09473, 11.03620,   0.00000, 0.00000, -22.42260, -1, -1, -1, 500);
	CreateDynamicObject(3287, -72.10376, -9767.10547, 9.82110,   0.00000, 0.00000, 310.22989, -1, -1, -1, 500);
	CreateDynamicObject(1422, -38.63501, -9766.99512, 11.03620,   0.00000, 0.00000, -2.50100, -1, -1, -1, 500);
	CreateDynamicObject(3287, -159.26904, -9753.27148, 9.82180,   0.00000, 0.00000, 120.62140, -1, -1, -1, 500);
	CreateDynamicObject(3287, -76.93042, -9771.80371, 9.82110,   0.00000, 0.00000, 324.91760, -1, -1, -1, 500);
	CreateDynamicObject(3287, -165.56250, -9755.47461, 9.82180,   0.00000, 0.00000, 105.07430, -1, -1, -1, 500);
	CreateDynamicObject(3287, -172.26831, -9755.95508, 9.59030,   -2.86480, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -80.35815, -9777.56445, 9.82110,   0.00000, 0.00000, 342.18359, -1, -1, -1, 500);
	CreateDynamicObject(8343, -83.52832, -9778.97656, 10.62570,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -81.95728, -9784.07031, 9.82110,   0.00000, 0.00000, 357.73071, -1, -1, -1, 500);
	CreateDynamicObject(7416, -89.29370, -9788.41211, 10.54330,   0.00000, 0.00000, 202.50000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -81.80591, -9790.83594, 9.82110,   0.00000, 0.00000, 11.63650, -1, -1, -1, 500);
	CreateDynamicObject(3287, -81.23999, -9793.57422, 9.81610,   0.00000, 0.00000, 11.63650, -1, -1, -1, 500);
	CreateDynamicObject(4572, -59.07642, -9793.89648, 40.73540,   0.00000, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -119.92188, -9792.76465, 10.87370,   0.00000, -0.85940, 278.85229, -1, -1, -1, 500);
	CreateDynamicObject(1223, -124.01001, -9800.16992, 16.87230,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(1223, -130.62158, -9803.11328, 16.87230,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -113.21655, -9812.09570, 10.62700,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -152.09351, -9812.36621, 10.55760,   0.00000, 0.00000, -19.06220, -1, -1, -1, 500);
	CreateDynamicObject(8344, -169.84741, -9811.91016, 10.56980,   0.00000, 0.00000, -416.25009, -1, -1, -1, 500);
	CreateDynamicObject(8650, -63.37500, -9840.15820, 11.43450,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(8650, -61.13159, -9845.55859, 11.43450,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(14560, -177.95923, -9821.47656, 14.03860,   0.00000, 0.00000, -19.44900, -1, -1, -1, 500);
	CreateDynamicObject(8650, -98.38013, -9847.92480, 10.62540,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -77.26611, -9856.99121, 10.61170,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(4600, -123.68921, -9870.17773, 5.38450,   0.00000, 0.00000, -247.50000, -1, -1, -1, 500);
	CreateDynamicObject(4242, -219.90161, -9826.37891, 10.54400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5001, -10.94287, -9906.38086, 13.42610,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -23.16797, -9924.42285, 10.61700,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -69.37622, -9921.51758, 10.71500,   0.00000, 0.00000, 108.90760, -1, -1, -1, 500);
	CreateDynamicObject(3458, -62.86279, -9924.54102, 9.03180,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -68.47974, -9924.01758, 10.71500,   0.00000, 0.00000, 108.90760, -1, -1, -1, 500);
	CreateDynamicObject(1435, -67.60815, -9926.44336, 10.71500,   0.00000, 0.00000, 108.90760, -1, -1, -1, 500);
	CreateDynamicObject(1223, -73.06201, -9926.00781, 10.54810,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -66.80737, -9928.81543, 10.71500,   0.00000, 0.00000, 108.90760, -1, -1, -1, 500);
	CreateDynamicObject(1223, -191.54526, -9887.26367, 10.43160,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -64.63501, -9934.19238, 10.71500,   0.00000, 0.00000, 110.62650, -1, -1, -1, 500);
	CreateDynamicObject(3458, -90.30688, -9930.34570, 9.03180,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -63.81323, -9936.34180, 10.71500,   0.00000, 0.00000, 110.62650, -1, -1, -1, 500);
	CreateDynamicObject(3287, -187.32886, -9890.82422, 9.76760,   2.75020, 0.00000, 231.17081, -1, -1, -1, 500);
	CreateDynamicObject(1435, -63.09106, -9938.46484, 10.71500,   0.00000, 0.00000, 110.62650, -1, -1, -1, 500);
	CreateDynamicObject(3287, -182.16040, -9895.39258, 9.83760,   0.00000, 0.00000, 227.73300, -1, -1, -1, 500);
	CreateDynamicObject(1435, -62.26245, -9940.71484, 10.71500,   0.00000, 0.00000, 110.62650, -1, -1, -1, 500);
	CreateDynamicObject(3287, -177.49536, -9900.48730, 9.83760,   0.00000, 0.00000, 220.85750, -1, -1, -1, 500);
	CreateDynamicObject(3287, -173.83203, -9906.25879, 9.83760,   0.00000, 0.00000, 209.60741, -1, -1, -1, 500);
	CreateDynamicObject(1435, -59.36108, -9946.49121, 10.71500,   0.00000, 0.00000, 118.43870, -1, -1, -1, 500);
	CreateDynamicObject(4847, 32.38428, -9945.07617, 1.31491,   0.00000, 0.00000, -247.50000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -58.31519, -9948.51758, 10.71500,   0.00000, 0.00000, 118.43870, -1, -1, -1, 500);
	CreateDynamicObject(4847, 73.11426, -9936.19531, 1.36121,   0.00000, 0.00000, -247.50000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -100.18262, -9940.00488, 9.03180,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -133.01660, -9928.48047, 10.65830,   0.00000, 0.00000, 78.51800, -1, -1, -1, 500);
	CreateDynamicObject(1435, -57.21948, -9950.51758, 10.71500,   0.00000, 0.00000, 118.43870, -1, -1, -1, 500);
	CreateDynamicObject(4847, 54.38428, -9944.37598, 1.33871,   0.00000, 0.00000, -247.50000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -133.43994, -9930.50391, 10.65830,   0.00000, 0.00000, 78.51800, -1, -1, -1, 500);
	CreateDynamicObject(1435, -56.12378, -9952.62012, 10.71500,   0.00000, 0.00000, 118.43870, -1, -1, -1, 500);
	CreateDynamicObject(3287, -171.81128, -9912.67480, 9.83760,   0.00000, 0.00000, 193.12360, -1, -1, -1, 500);
	CreateDynamicObject(8343, -170.54077, -9913.52148, 10.57230,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -133.88818, -9932.55273, 10.65830,   0.00000, 0.00000, 78.51800, -1, -1, -1, 500);
	CreateDynamicObject(1435, -134.33643, -9934.57031, 10.65830,   0.00000, 0.00000, 78.51800, -1, -1, -1, 500);
	CreateDynamicObject(1435, -52.69946, -9957.29492, 10.71500,   0.00000, 0.00000, 129.68871, -1, -1, -1, 500);
	CreateDynamicObject(3458, -67.63184, -9955.99219, 9.08870,   0.00000, 0.00000, -101.25000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -51.28003, -9958.96875, 10.71500,   0.00000, 0.00000, 129.68871, -1, -1, -1, 500);
	CreateDynamicObject(979, 15.04541, -9959.18555, 11.18220,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(979, 15.04541, -9959.18555, 12.00720,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -135.18311, -9937.80078, 10.65830,   0.00000, 0.00000, 69.06420, -1, -1, -1, 500);
	CreateDynamicObject(3287, -171.69116, -9919.38965, 9.83760,   0.00000, 0.00000, 176.63969, -1, -1, -1, 500);
	CreateDynamicObject(1435, -49.81079, -9960.66699, 10.71500,   0.00000, 0.00000, 129.68871, -1, -1, -1, 500);
	CreateDynamicObject(1435, -48.38354, -9962.36719, 10.71500,   0.00000, 0.00000, 133.98590, -1, -1, -1, 500);
	CreateDynamicObject(1435, -136.02979, -9939.72949, 10.65830,   0.00000, 0.00000, 63.90760, -1, -1, -1, 500);
	CreateDynamicObject(1223, -132.23413, -9942.45801, 10.53180,   0.00000, 0.00000, 168.75000, -1, -1, -1, 500);
	CreateDynamicObject(1223, -59.73804, -9964.00488, 10.58960,   0.00000, 0.00000, 112.50000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -136.97607, -9941.60254, 10.65830,   0.00000, 0.00000, 63.90760, -1, -1, -1, 500);
	CreateDynamicObject(3458, -128.51294, -9946.21484, 9.03180,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -137.87256, -9943.49512, 10.65830,   0.00000, 0.00000, 63.90760, -1, -1, -1, 500);
	CreateDynamicObject(3458, -53.84961, -9968.62988, 9.08250,   0.00000, 0.00000, -156.03880, -1, -1, -1, 500);
	CreateDynamicObject(3287, -173.44409, -9925.90039, 9.83760,   0.00000, 0.00000, 161.09250, -1, -1, -1, 500);
	CreateDynamicObject(1435, -138.79395, -9945.41309, 10.65830,   0.00000, 0.00000, 63.90760, -1, -1, -1, 500);
	CreateDynamicObject(3458, -53.84961, -9974.13184, 9.08250,   0.00000, 0.00000, -156.03880, -1, -1, -1, 500);
	CreateDynamicObject(1435, -140.22021, -9948.44043, 10.65830,   0.00000, 0.00000, 63.90760, -1, -1, -1, 500);
	CreateDynamicObject(7586, -194.84302, -9916.72754, 16.95810,   0.00000, 0.00000, 101.25000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -141.24121, -9950.25879, 10.65830,   0.00000, 0.00000, 59.61040, -1, -1, -1, 500);
	CreateDynamicObject(3287, -176.96826, -9931.57813, 9.83760,   0.00000, 0.00000, 143.74910, -1, -1, -1, 500);
	CreateDynamicObject(1435, -142.36182, -9951.85938, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 500);
	CreateDynamicObject(3458, -137.50415, -9955.45898, 9.03180,   0.00000, 0.00000, 22.50000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -143.53906, -9953.36035, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 500);
	CreateDynamicObject(3458, -115.65552, -9965.49902, 9.02930,   0.00000, 0.00000, -67.50000, -1, -1, -1, 500);
	CreateDynamicObject(1231, -193.51294, -9924.66211, 15.79020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1435, -144.60986, -9954.77930, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 500);
	CreateDynamicObject(1435, -146.42773, -9957.02051, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 500);
	CreateDynamicObject(3287, -181.85425, -9936.19727, 9.83760,   0.00000, 0.00000, 129.92081, -1, -1, -1, 500);
	CreateDynamicObject(1435, -147.52344, -9958.44043, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 500);
	CreateDynamicObject(1435, -148.61914, -9959.85938, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 500);
	CreateDynamicObject(1435, -149.76465, -9961.29199, 10.65830,   0.00000, 0.00000, 51.01600, -1, -1, -1, 500);
	CreateDynamicObject(8344, -32.77319, -9996.09473, 10.60180,   0.00000, 0.00000, -191.25000, -1, -1, -1, 500);
	CreateDynamicObject(3287, -187.67749, -9939.75781, 9.83760,   0.00000, 0.00000, 118.67080, -1, -1, -1, 500);
	CreateDynamicObject(1223, -108.61670, -9982.74609, 10.54560,   0.00000, 0.00000, 281.25000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -182.46362, -9947.33301, 10.55580,   0.00000, 0.00000, -19.06220, -1, -1, -1, 500);
	CreateDynamicObject(3458, -75.50562, -9995.60449, 9.08870,   0.00000, 0.00000, -101.25000, -1, -1, -1, 500);
	CreateDynamicObject(978, -155.71484, -9965.77734, 11.41260,   0.00000, 0.00000, 29.45280, -1, -1, -1, 500);
	CreateDynamicObject(3287, -194.06055, -9942.11719, 9.83760,   0.00000, 0.00000, 107.42080, -1, -1, -1, 500);
	CreateDynamicObject(9582, -48.47095, -10004.13672, 19.35380,   0.00000, 0.00000, 63.20280, -1, -1, -1, 500);
	CreateDynamicObject(978, -161.77124, -9969.20215, 11.41260,   0.00000, 0.00000, 29.45280, -1, -1, -1, 500);
	CreateDynamicObject(3287, -200.73657, -9943.32031, 9.59390,   -2.86480, 0.00000, 97.73490, -1, -1, -1, 500);
	CreateDynamicObject(978, -167.83228, -9972.62695, 11.41260,   0.00000, 0.00000, 29.45280, -1, -1, -1, 500);
	CreateDynamicObject(1223, -101.14038, -10010.57520, 10.59620,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -85.78931, -10019.38770, 9.08000,   0.00000, 0.00000, -38.04710, -1, -1, -1, 500);
	CreateDynamicObject(13562, 8.70386, -10027.07520, 7.99180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -88.95215, -10023.41113, 9.08000,   0.00000, 0.00000, -38.04710, -1, -1, -1, 500);
	CreateDynamicObject(3458, -67.31421, -10027.31152, 9.08870,   0.00000, 0.00000, -38.04710, -1, -1, -1, 500);
	CreateDynamicObject(5005, 4.17041, -10034.17871, 14.10450,   0.00000, 0.00000, -101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -39.36401, -10042.70996, 9.07120,   0.00000, 0.00000, -38.04710, -1, -1, -1, 500);
	CreateDynamicObject(3458, -54.78931, -10043.58398, 9.07120,   0.00000, 0.00000, -38.04710, -1, -1, -1, 500);
	CreateDynamicObject(1435, -38.14722, -10046.33203, 10.69980,   0.00000, 0.00000, 80.39150, -1, -1, -1, 500);
	CreateDynamicObject(1435, -38.52075, -10048.65234, 10.69980,   0.00000, 0.00000, 80.39150, -1, -1, -1, 500);
	CreateDynamicObject(3458, -39.36401, -10049.18359, 9.07120,   0.00000, 0.00000, -38.04710, -1, -1, -1, 500);
	CreateDynamicObject(1223, -42.64648, -10049.89844, 10.58750,   0.00000, 0.00000, 315.00009, -1, -1, -1, 500);
	CreateDynamicObject(1435, -38.96899, -10050.90137, 10.69980,   0.00000, 0.00000, 80.39150, -1, -1, -1, 500);
	CreateDynamicObject(1435, -39.31763, -10053.17578, 10.69980,   0.00000, 0.00000, 80.39150, -1, -1, -1, 500);
	CreateDynamicObject(1435, -39.74097, -10055.54883, 10.69980,   0.00000, 0.00000, 80.39150, -1, -1, -1, 500);
	CreateDynamicObject(3578, -41.22021, -10063.44629, 10.66810,   0.00000, 0.00000, -100.69130, -1, -1, -1, 500);
	CreateDynamicObject(8171, -22.52051, -10068.49121, 10.58780,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(7505, -197.69287, -10050.56055, 12.08270,   0.00000, 0.00000, -109.06220, -1, -1, -1, 500);
	CreateDynamicObject(5005, -1.90527, -10064.82813, 14.10450,   0.00000, 0.00000, -101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -43.19434, -10073.57227, 10.66810,   0.00000, 0.00000, -101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -45.22021, -10083.69824, 10.66810,   0.00000, 0.00000, -101.25000, -1, -1, -1, 500);
	CreateDynamicObject(4847, -124.39136, -10090.81152, 1.28290,   0.00000, 0.00000, -146.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -47.24023, -10093.80762, 10.66810,   0.00000, 0.00000, -101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -49.26758, -10103.91602, 10.66810,   0.00000, 0.00000, -101.25000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -227.10376, -10076.49219, 10.55490,   0.00000, 0.00000, -19.06220, -1, -1, -1, 500);
	CreateDynamicObject(3578, -51.29590, -10114.02246, 10.66810,   0.00000, 0.00000, -101.25000, -1, -1, -1, 500);
	CreateDynamicObject(18273, 45.57959, -10088.05957, 31.65850,   0.00000, 0.00000, -101.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -53.37451, -10124.13477, 10.75280,   0.00000, -0.85940, 258.14859, -1, -1, -1, 500);
	CreateDynamicObject(3578, -56.46484, -10133.97266, 10.90280,   0.00000, -0.85940, 246.89861, -1, -1, -1, 500);
	CreateDynamicObject(18271, -92.37524, -10138.45313, 32.25040,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8344, -68.10693, -10142.91309, 10.59010,   0.00000, 0.00000, -236.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -61.87207, -10142.69336, 11.05400,   0.00000, -0.85940, 229.55510, -1, -1, -1, 500);
	CreateDynamicObject(7505, -219.14868, -10112.66016, 12.08270,   0.00000, 0.00000, -109.06220, -1, -1, -1, 500);
	CreateDynamicObject(3877, -18.49170, -10146.64453, 12.17840,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(3877, -17.93115, -10146.75391, 12.17840,   0.00000, 0.00000, -11.25000, -1, -1, -1, 500);
	CreateDynamicObject(981, -24.08500, -10162.77930, 11.41370,   0.00000, 0.00000, -124.00000, -1, -1, -1, 500);
	CreateDynamicObject(4847, -80.84546, -10181.03809, 1.28410,   0.00000, 0.00000, -326.25000, -1, -1, -1, 500);
	CreateDynamicObject(4847, -50.96411, -10195.31738, 1.28660,   0.00000, 0.00000, -326.25000, -1, -1, -1, 500);
	CreateDynamicObject(7505, -131.86426, -10191.03027, 12.08310,   0.00000, 0.00000, -146.25000, -1, -1, -1, 500);
	CreateDynamicObject(3534, -260.35229, -10117.84473, 11.50600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3534, -260.35229, -10117.84473, 12.33100,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3534, -260.35229, -10117.84473, 13.15600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4847, -87.91528, -10210.33789, 1.28790,   0.00000, 0.00000, -326.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -262.40918, -10123.66895, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 500);
	CreateDynamicObject(4847, -46.80981, -10216.91797, 1.28790,   0.00000, 0.00000, -326.25000, -1, -1, -1, 500);
	CreateDynamicObject(4847, -51.80981, -10243.66797, 1.29661,   0.00000, 0.00000, -326.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -265.87842, -10133.51465, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 500);
	CreateDynamicObject(8171, -147.93188, -10225.26855, 10.56780,   0.00000, 0.00000, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(18269, -122.13477, -10243.71191, 31.90650,   0.00000, 0.00000, 77.89060, -1, -1, -1, 500);
	CreateDynamicObject(7505, -179.93945, -10223.15527, 12.08310,   0.00000, 0.00000, -146.25000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -269.28076, -10143.41309, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 500);
	CreateDynamicObject(3578, -272.65234, -10153.30957, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 500);
	CreateDynamicObject(3578, -276.07471, -10163.20508, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 500);
	CreateDynamicObject(18268, -219.89502, -10233.48438, 31.55600,   0.00000, 0.85940, 28.43870, -1, -1, -1, 500);
	CreateDynamicObject(8171, -265.55371, -10187.88965, 10.55240,   0.00000, 0.00000, -19.06220, -1, -1, -1, 500);
	CreateDynamicObject(1319, -169.82080, -10279.25000, 11.12110,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1319, -174.78711, -10277.37598, 11.12110,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1319, -179.67065, -10276.49219, 11.12110,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16302, -171.15332, -10282.84180, 14.54690,   4.29720, 0.85940, 50.80120, -1, -1, -1, 500);
	CreateDynamicObject(3578, -279.47510, -10173.17578, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 500);
	CreateDynamicObject(1319, -184.41235, -10276.55859, 11.12110,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, -282.84961, -10183.04883, 11.28040,   0.00000, 0.00000, 251.01500, -1, -1, -1, 500);
	CreateDynamicObject(16302, -177.79126, -10295.53613, 13.27020,   7.73490, 0.85940, -27.94880, -1, -1, -1, 500);
	CreateDynamicObject(16302, -190.17261, -10301.64258, 13.79690,   -6.01610, 5.15660, -4.58940, -1, -1, -1, 500);
	CreateDynamicObject(7505, -244.32227, -10265.43066, 12.08310,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, -207.10181, -10303.79199, 10.57430,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(8171, -263.46558, -10253.51563, 10.56170,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(4898, -232.92212, -10354.91602, 10.40490,   0.04300, 0.21490, 39.76600, -1, -1, -1, 500);
	CreateDynamicObject(8343, -194.09644, -10385.00391, 10.56370,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(4028, -226.44800, -10371.89258, 23.64509,   0.00000, 0.00000, 109.06220, -1, -1, -1, 500);
	CreateDynamicObject(7505, -234.78607, -10041.11816, 12.03510,   0.00000, 0.00000, 71.00000, -1, -1, -1, 500);
	CreateDynamicObject(968, -208.27930, -10401.82227, 9.33640,   0.00000, 0.00000, -71.87450, -1, -1, -1, 500);
	CreateDynamicObject(968, -208.30493, -10401.97852, 9.33640,   0.00000, 0.00000, -161.87450, -1, -1, -1, 500);
	CreateDynamicObject(8344, -239.33203, -10387.06641, 10.56620,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(968, -221.26221, -10406.27344, 9.33640,   0.00000, 0.00000, -71.87450, -1, -1, -1, 500);
	CreateDynamicObject(968, -221.13623, -10406.37500, 9.83640,   0.00000, 0.00000, 18.12550, -1, -1, -1, 500);
	CreateDynamicObject(982, -197.33720, -8414.17090, 11.21250,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -222.92458, -8414.16113, 11.21250,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -248.51427, -8414.14551, 11.21250,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, -264.22729, -8414.13477, 11.21250,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -270.54071, -8351.22266, 13.61490,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -270.54309, -8225.31641, 13.61490,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -270.53275, -8099.36426, 13.61490,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -270.52853, -7973.45215, 13.61490,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -270.51550, -7847.55908, 13.61490,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, -270.15979, -7782.86963, 11.17710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -282.93314, -10324.71094, 13.55690,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -282.93311, -10245.86816, 13.55690,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, -207.61693, -9962.13281, 11.11880,   0.00000, 0.00000, -19.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, -203.44582, -9950.08008, 11.11880,   0.00000, 0.00000, -19.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, -199.27866, -9937.99512, 11.11880,   0.00000, 0.00000, -19.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -150.89235, -9738.40234, 10.42240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -149.76819, -9728.45605, 10.42240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -154.65834, -9719.80469, 10.42240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -162.71274, -9713.83984, 10.42240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1568, -165.22466, -9750.99805, 10.42240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -212.58311, -9794.58691, 13.11060,   0.00000, 0.00000, -129.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -219.54803, -9846.51172, 13.11060,   0.00000, 0.00000, -75.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -128.07419, -9943.25195, 10.47730,   0.00000, 0.00000, -69.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -123.84316, -9954.29492, 10.47730,   0.00000, 0.00000, -15.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -73.53104, -9933.34863, 10.47730,   0.00000, 0.00000, 112.60000, -1, -1, -1, 500);
	CreateDynamicObject(987, -69.36620, -9982.45703, 10.47730,   0.00000, 0.00000, 143.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -235.21381, -9698.69922, 13.11060,   0.00000, 0.00000, -22.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -242.46928, -9695.49707, 10.46420,   0.00000, 0.00000, 143.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -251.96576, -9688.29883, 10.46420,   0.00000, 0.00000, 133.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -260.09723, -9679.54688, 10.46420,   0.00000, 0.00000, 123.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -269.35117, -9657.32715, 11.18840,   0.00000, 0.00000, 14.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -270.42740, -9632.28711, 11.18840,   0.00000, 0.00000, -9.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -250.70764, -9559.28711, 13.11060,   0.00000, 0.00000, -106.64000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -214.63646, -9438.63086, 13.11060,   0.00000, 0.00000, -106.64000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -132.96724, -9511.59766, 13.10060,   0.00000, 0.00000, 51.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -159.75317, -9526.31836, 10.40550,   0.00000, 0.00000, -21.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -241.54593, -9422.27441, 13.11060,   0.00000, 0.00000, 44.00000, -1, -1, -1, 500);
	CreateDynamicObject(10844, -203.19893, -9325.25684, 13.42760,   0.00000, 0.00000, -16.40660, -1, -1, -1, 500);
	CreateDynamicObject(11089, -189.39154, -9325.28906, 19.50000,   0.00000, 0.00000, 73.74000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -196.22644, -9220.55078, 13.11060,   0.00000, 0.00000, -82.14000, -1, -1, -1, 500);
	CreateDynamicObject(981, -196.55806, -9357.00391, 11.43610,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(981, -188.62781, -9300.58887, 11.43610,   0.00000, 0.00000, 89.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -213.42914, -9095.91895, 13.11060,   0.00000, 0.00000, -82.14000, -1, -1, -1, 500);
	CreateDynamicObject(982, -223.37021, -9021.06250, 11.17650,   0.00000, 0.00000, 7.78000, -1, -1, -1, 500);
	CreateDynamicObject(982, -225.98576, -8995.61621, 11.17650,   0.00000, 0.00000, 4.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -227.32407, -8970.06934, 11.17650,   0.00000, 0.00000, 2.00000, -1, -1, -1, 500);
	CreateDynamicObject(983, -229.32327, -8954.49902, 11.17650,   0.00000, 0.00000, 29.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -229.60742, -8888.80176, 13.11060,   0.00000, 0.00000, -91.50000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -226.31186, -8763.07129, 13.11060,   0.00000, 0.00000, -91.50000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -206.58394, -8624.98828, 13.11060,   0.00000, 0.00000, -91.74000, -1, -1, -1, 500);
	CreateDynamicObject(984, -224.10144, -8693.80371, 11.17510,   0.00000, 0.00000, -1.76000, -1, -1, -1, 500);
	CreateDynamicObject(984, -217.52136, -8687.62500, 11.17510,   0.00000, 0.00000, 88.30000, -1, -1, -1, 500);
	CreateDynamicObject(984, -214.52809, -8687.71191, 11.17510,   0.00000, 0.00000, 88.30000, -1, -1, -1, 500);
	CreateDynamicObject(984, -204.18941, -8556.11328, 11.14930,   0.00000, 0.00000, -1.70000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -187.06917, -8487.30859, 13.11060,   0.00000, 0.00000, -91.74000, -1, -1, -1, 500);
	CreateDynamicObject(984, -197.60669, -8549.95020, 11.14930,   0.00000, 0.00000, 88.16000, -1, -1, -1, 500);
	CreateDynamicObject(984, -195.01190, -8550.02637, 11.14930,   0.00000, 0.00000, 88.16000, -1, -1, -1, 500);
	CreateDynamicObject(984, -184.71390, -8420.55566, 11.21250,   0.00000, 0.00000, -1.56000, -1, -1, -1, 500);
	CreateDynamicObject(8843, -190.31149, -8348.62402, 10.63280,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(8843, -190.30630, -8368.16016, 10.63280,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(8843, -190.29840, -8390.54199, 10.63280,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(8843, -173.50140, -8309.53418, 10.63280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8843, -157.32162, -8309.53418, 10.63280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8843, -172.80148, -8221.20508, 10.63280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8843, -158.24370, -8221.20508, 10.63280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8843, -173.20113, -8095.64893, 10.63280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8843, -157.11900, -8095.64893, 10.63280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16092, -172.95869, -7969.82129, 10.57740,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16092, -157.81619, -7969.82129, 10.57740,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -173.02090, -7970.79688, 18.04820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -176.02699, -7970.79688, 18.04820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -170.03191, -7970.79688, 18.04820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -157.88220, -7970.79688, 18.04820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -160.88640, -7970.79688, 18.04820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, -154.88139, -7970.79688, 18.04820,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -194.36925, -10278.04199, 11.35550,   0.00000, 0.00000, 38.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -201.88889, -10285.73730, 11.35550,   0.00000, 0.00000, 54.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -206.18884, -10295.35840, 11.35550,   0.00000, 0.00000, 78.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -206.30544, -10306.51367, 11.35550,   0.00000, 0.00000, 101.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -201.85785, -10316.42969, 11.35550,   0.00000, 0.00000, 127.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -194.13443, -10325.19238, 11.35550,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -185.94543, -10333.46289, 11.35550,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -177.62881, -10341.82520, 11.35550,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -169.98466, -10350.62109, 11.35550,   0.00000, 0.00000, 129.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -161.60759, -10368.43359, 11.17670,   0.00000, 0.00000, 18.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -158.80266, -10395.00488, 11.17670,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -167.23653, -10420.24219, 11.17670,   0.00000, 0.00000, -31.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -185.53198, -10439.22461, 11.17670,   0.00000, 0.00000, -57.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -210.27292, -10448.57227, 11.17670,   0.00000, 0.00000, -81.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -236.68385, -10446.89355, 11.17670,   0.00000, 0.00000, -106.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -259.99799, -10434.26367, 11.17670,   0.00000, 0.00000, -130.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -275.92401, -10413.18359, 11.17670,   0.00000, 0.00000, -155.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -282.50671, -10387.30859, 11.17670,   0.00000, 0.00000, -176.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -184.66251, -7771.77441, 11.38920,   0.00000, 0.00000, -97.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -182.25221, -7752.90234, 11.21790,   0.00000, 0.00000, -8.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -178.95288, -7733.86523, 11.38920,   0.00000, 0.00000, -101.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -174.17117, -7715.21973, 11.21790,   0.00000, 0.00000, -16.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -168.01826, -7696.84521, 11.38920,   0.00000, 0.00000, -110.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -160.09610, -7679.19971, 11.21790,   0.00000, 0.00000, -25.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -151.08893, -7662.47754, 11.38920,   0.00000, 0.00000, -124.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -140.26682, -7646.76025, 11.21790,   0.00000, 0.00000, -35.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -128.29749, -7631.24023, 11.38920,   0.00000, 0.00000, -132.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -115.13449, -7617.74707, 11.21790,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -101.30943, -7604.63623, 11.38920,   0.00000, 0.00000, -140.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -86.35761, -7593.40625, 11.21790,   0.00000, 0.00000, -55.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -70.54841, -7582.68750, 11.38920,   0.00000, 0.00000, -147.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -54.11820, -7574.33594, 11.21790,   0.00000, 0.00000, -65.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, -36.71959, -7566.61230, 11.38920,   0.00000, 0.00000, -157.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, -18.47830, -7560.68115, 11.21790,   0.00000, 0.00000, -73.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 0.27510, -7555.86719, 11.38920,   0.00000, 0.00000, -168.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 19.00566, -7552.77637, 11.21790,   0.00000, 0.00000, -82.00000, -1, -1, -1, 500);
	CreateDynamicObject(978, 38.20190, -7550.66797, 11.38920,   0.00000, 0.00000, -176.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 190.03548, -7553.96387, 11.25630,   0.00000, 0.00000, 77.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 216.12904, -7562.25391, 11.25630,   0.00000, 0.00000, 68.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 240.46071, -7574.63428, 11.25630,   0.00000, 0.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 261.56329, -7591.51514, 11.25630,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 279.63159, -7612.00049, 11.25630,   0.00000, 0.00000, 38.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 293.33948, -7635.40430, 11.25630,   0.00000, 0.00000, 23.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 302.87805, -7660.82422, 11.25630,   0.00000, 0.00000, 18.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 307.22144, -7687.24658, 11.25630,   0.00000, 0.00000, 1.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 306.78787, -7714.34912, 11.25630,   0.00000, 0.00000, -3.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 301.51627, -7740.67773, 11.25630,   0.00000, 0.00000, -20.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 291.63034, -7765.87402, 11.25630,   0.00000, 0.00000, -23.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -184.39622, -7766.40967, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -180.45010, -7739.25635, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -178.17807, -7728.36426, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -170.37885, -7702.12793, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -166.05643, -7691.44336, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -154.37675, -7666.93408, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -148.27019, -7657.70996, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -132.43652, -7635.45361, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -124.80443, -7627.12646, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -105.75685, -7608.02832, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -97.43671, -7600.99463, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -75.32433, -7585.60059, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -66.16747, -7579.72412, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -41.94448, -7568.54102, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -31.60202, -7564.32568, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -5.45395, -7556.71924, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 5.64367, -7554.48193, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 32.60518, -7550.66992, 16.50990,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 176.38556, -7550.71680, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 203.41791, -7557.01270, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 228.92487, -7567.20557, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 252.05467, -7581.75830, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 271.32861, -7601.10352, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 288.06274, -7622.73633, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 298.81369, -7647.86328, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 307.11444, -7673.70898, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 307.58069, -7700.81543, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 306.20093, -7727.93896, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, 296.98697, -7753.45020, 16.51120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -188.17336, -10274.72754, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -198.48392, -10281.64063, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -204.67003, -10290.26367, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -206.90436, -10300.87402, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -204.80284, -10311.75391, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -198.05515, -10320.77539, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -189.89670, -10329.12012, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -181.57579, -10337.37109, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -173.48044, -10345.92676, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -166.10907, -10355.06543, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -157.32486, -10381.47559, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -160.20348, -10408.56934, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -174.18536, -10431.87598, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -196.88620, -10446.62695, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -223.68282, -10450.73340, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -249.72200, -10443.14160, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -270.26361, -10425.46680, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(711, -281.70615, -10400.90723, 16.45680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -177.88777, -9821.63574, 10.42740,   0.00000, 0.00000, -20.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -166.67856, -9825.69629, 10.42740,   0.00000, 0.00000, -20.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -155.46432, -9829.76660, 10.42740,   0.00000, 0.00000, -20.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -144.25182, -9833.84277, 10.42740,   0.00000, 0.00000, -20.00000, -1, -1, -1, 500);
	CreateDynamicObject(7983, 15.27810, -7685.50098, 34.52650,   0.00000, 0.00000, 186.09331, -1, -1, -1, 500);
	CreateDynamicObject(7983, 15.26810, -7685.51123, 35.02650,   0.00000, 0.00000, 186.09331, -1, -1, -1, 500);
	CreateDynamicObject(7983, 174.51080, -7681.70654, 35.06860,   0.00000, 0.00000, 276.09341, -1, -1, -1, 500);
	CreateDynamicObject(987, -12.67770, -8161.56201, 10.43630,   0.00000, 0.00000, 99.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 5.64663, -7773.55176, 10.44960,   0.00000, 0.00000, -84.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -55.01406, -10040.45117, 10.57620,   0.00000, 0.00000, 5.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, -51.16256, -10051.83496, 10.57620,   0.00000, 0.00000, 109.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -244.41844, -10248.45898, 13.55690,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -244.40089, -10279.59863, 13.55690,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, -192.34550, -10231.47852, 13.55690,   0.00000, 0.00000, 213.75999, -1, -1, -1, 500);
	CreateDynamicObject(8150, -86.33410, -9274.60059, 21.59340,   0.00000, 5.73000, -90.00000, -1, -1, -1, 500);
//End дрифт-трасса 13
//Start дрифт-трасса 14
	ObjGam[32] = CreateObject(8355, 3099.72949, -8963.65430, 32.98700,   0.00000, 0.00000, 90.00000);

	CreateDynamicObject(8650, 2939.55078, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2923.35083, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2909.08496, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2961.42871, -8963.60449, 32.98700,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 2918.75952, -8999.64355, 26.87620,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2970.01904, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(16599, 2965.42017, -8984.01172, 32.49700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2893.13257, -8983.10352, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2919.81055, -9003.32324, 17.58740,   341.99899, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2948.31934, -9003.33691, 8.32900,   341.99899, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 2975.69824, -8952.82031, 1.34970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2878.60059, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, 2877.36621, -8955.30078, 22.65680,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2981.16748, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2893.05005, -9003.30664, 26.27730,   341.99899, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, 2877.36621, -8975.83008, 22.65680,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(656, 2875.63452, -8994.51465, 37.56910,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16599, 2877.54053, -8984.01270, 32.49700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10308, 2942.17773, -8982.36426, -23.44090,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 2975.69824, -8929.23145, 1.34970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2871.22852, -8970.90234, 3.02050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2871.22754, -8940.42383, 3.02050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2944.24609, -9023.60449, 8.88290,   341.99899, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3000.41504, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2950.92603, -9023.60547, 7.09290,   348.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 2975.69824, -8904.79590, 1.34970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2957.75684, -9023.60547, 6.01110,   354.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2964.66309, -9023.60547, 5.64910,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(18228, 2915.96997, -8896.30957, -9.10840,   0.00000, 0.00000, 237.99699, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2870.81055, -8956.89063, -16.34210,   90.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2871.22852, -9001.40918, 3.02050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8565, 2852.74023, -8941.54883, 25.29990,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7910, 2862.32935, -8920.72461, 11.74960,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8565, 2852.74023, -8941.50000, 14.16749,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2848.14844, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3011.54980, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 2875.76172, -9023.57227, 29.34600,   13.99699, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 2870.92505, -9023.57227, 30.32700,   10.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8555, 2890.78809, -8885.48633, 7.43730,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 3013.80176, -8938.50586, 5.67410,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 2865.99487, -9023.57227, 31.01430,   6.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 2975.69824, -8878.05957, 1.34970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 2861.10278, -9023.57227, 31.33930,   2.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5309, 2842.22510, -8994.47559, 33.88220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2870.81055, -9015.90430, -16.34210,   90.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(7910, 2844.07959, -8920.84961, 11.73730,   0.00000, 0.00000, 179.99500, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2850.82324, -8910.45020, 1.90240,   359.99500, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16599, 2831.77832, -8943.41797, 32.49700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3030.87061, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, 2832.88770, -8932.98633, 32.13410,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2850.82324, -8903.54395, 2.34400,   3.99700, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2831.31836, -8954.58887, 8.01560,   0.00000, 180.50000, 269.99799, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2870.83594, -9027.21582, -16.34210,   90.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2850.82324, -8896.71289, 3.29550,   7.99700, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2823.21680, -8963.67969, 32.98700,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, 2832.88770, -8911.92969, 23.53180,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3042.00195, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2831.31836, -8978.79004, -16.34210,   90.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3041.97339, -8956.62305, 4.12970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 2975.69824, -8851.13477, 1.34970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3041.97339, -8988.07617, 4.12970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 2814.62598, -8941.26855, 31.29740,   3.99900, 0.00000, 179.99500, -1, -1, -1, 500);
	CreateDynamicObject(3458, 2814.62695, -8936.33398, 30.77240,   8.00000, 0.00000, 179.99500, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2831.31836, -9018.27734, 7.49060,   0.00000, 180.50000, 269.99500, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3041.97339, -8925.32227, 4.12970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, 2832.88770, -8890.70313, 19.82100,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2850.82324, -9048.74805, 1.90240,   359.99500, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2831.31836, -9029.66211, 7.41560,   0.00000, 180.50000, 269.99500, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3041.97339, -9021.84082, 4.12970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2831.31836, -9018.32617, -16.34210,   90.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5309, 2842.22559, -9052.33594, 33.88220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5309, 2842.22559, -9052.33594, 23.92420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5309, 2842.22559, -9052.33594, 14.09150,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5309, 2842.20068, -9052.28613, 12.14210,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3061.23682, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2831.24316, -9029.83789, -16.34210,   90.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3041.97339, -8893.77930, 4.12970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4571, 2889.37354, -9074.30664, -25.14710,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2871.28516, -8833.43359, 17.21710,   348.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3072.46460, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3082.50928, -8963.80859, 22.66980,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2850.82373, -9085.44141, 2.81530,   5.99200, 0.00000, 179.99500, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2850.82324, -8830.22168, 17.49670,   11.99699, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2789.64502, -9023.61426, 32.93700,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7011, 2958.22046, -9101.89258, 50.46860,   0.00000, 0.00000, 14.99600, -1, -1, -1, 500);
	CreateDynamicObject(3458, 2774.24463, -8941.26953, 31.29740,   4.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2850.82324, -9092.27246, 3.80620,   11.99199, 0.00000, 179.99500, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2831.31812, -8848.12695, -16.34210,   90.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 2774.23193, -8936.33301, 30.77240,   7.99800, 0.00000, 179.99500, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3091.61670, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(5309, 2796.55273, -9052.36035, 33.88220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5644, 3086.41113, -8947.96484, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18228, 3087.98926, -8988.53125, -6.24090,   0.00000, 0.00000, 237.99699, -1, -1, -1, 500);
	CreateDynamicObject(5767, 2788.63696, -8874.56836, 45.54060,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5309, 2767.59131, -8994.47461, 33.88220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5644, 3086.41113, -8924.58594, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 500);
//	CreateDynamicObject(8355, 3099.72949, -8963.65430, 32.98700,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2765.68726, -8914.19824, 27.77710,   0.00000, 12.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 3062.98120, -8853.35742, 5.64910,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3102.85156, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5644, 3086.64038, -9018.31152, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2831.24414, -9095.22656, -16.26710,   90.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 3069.88770, -8853.35742, 6.01110,   6.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8555, 3093.06250, -8892.95703, -5.61810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 3076.71826, -8853.35742, 7.09290,   12.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(5644, 3086.64063, -9041.69727, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8565, 2809.81250, -8820.30762, 29.16900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2751.95020, -8912.75391, 27.77710,   0.00000, 12.00000, 78.00000, -1, -1, -1, 500);
	CreateDynamicObject(5309, 2768.08691, -9052.33594, 23.92420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8391, 2853.86279, -8788.55273, 25.63130,   0.00000, 0.00000, 179.99500, -1, -1, -1, 500);
	CreateDynamicObject(8355, 3083.39844, -8853.35742, 8.88290,   17.99600, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(5644, 3111.78613, -8948.02148, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5644, 3111.78711, -8971.48828, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4571, 2889.37402, -9133.79688, -25.13710,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8390, 2947.22070, -8783.34668, 41.80550,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(5644, 3111.72095, -8994.88965, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3122.07666, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2747.72510, -9023.61426, 32.96200,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5644, 3111.72168, -9018.31250, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4007, 2742.12793, -8976.66309, -20.61450,   0.00000, 0.00000, 358.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2738.81348, -8908.48633, 27.77710,   0.00000, 12.00000, 66.00000, -1, -1, -1, 500);
	CreateDynamicObject(4007, 2737.57397, -8959.31250, -27.53010,   0.00000, 0.00000, 357.99500, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3133.27954, -8983.10254, 34.10230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4002, 2757.98877, -8847.00000, 9.15060,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2831.31836, -8782.13770, -16.34210,   90.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 2739.16016, -9046.01074, 31.29740,   3.99400, 0.00000, 359.98901, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2726.85132, -8901.58008, 27.77710,   0.00000, 12.00000, 54.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 2739.11719, -9050.87793, 30.79740,   7.99800, 0.00000, 359.98401, -1, -1, -1, 500);
	CreateDynamicObject(5644, 3137.06543, -8971.48828, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5309, 2768.33105, -9097.36523, 27.97860,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4007, 2728.97046, -8941.28711, -31.74690,   0.00000, 0.00000, 63.99500, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2850.82324, -9157.17969, 17.52170,   11.99699, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(5644, 3137.06543, -8994.89063, -14.35250,   0.00000, 90.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4242, 2731.43604, -8876.90430, 23.64580,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8555, 3136.26465, -8892.98145, 2.64690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3152.56714, -8944.07129, 34.10230,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2716.58643, -8892.33789, 27.77710,   0.00000, 12.00000, 42.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2831.24414, -9160.82129, -16.26710,   90.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7011, 3102.51563, -9101.89258, 50.46860,   0.00000, 0.00000, 14.99600, -1, -1, -1, 500);
	CreateDynamicObject(8390, 3069.83032, -8783.34277, 32.02240,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2708.46777, -8881.16211, 27.77710,   0.00000, 12.00000, 30.00000, -1, -1, -1, 500);
	CreateDynamicObject(8565, 2809.81152, -9164.38965, 29.26900,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3167.28223, -8928.99316, 34.10230,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18450, 3169.54297, -8956.06250, 45.16960,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(7910, 3170.02368, -8962.86914, 52.04710,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(7910, 3170.02441, -8962.86914, 52.04710,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5309, 2693.00439, -8994.47461, 33.88220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2765.68750, -8782.05469, 27.77710,   0.00000, 11.99699, 269.99500, -1, -1, -1, 500);
	CreateDynamicObject(3458, 3151.88965, -8853.28223, 29.34490,   13.99699, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2702.84961, -8868.54395, 27.77710,   0.00000, 12.00000, 18.00000, -1, -1, -1, 500);
	CreateDynamicObject(4007, 2696.91748, -8918.71289, -34.61440,   0.00000, 0.00000, 43.99000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 2698.79053, -9046.01074, 31.29740,   3.99900, 0.00000, 359.99500, -1, -1, -1, 500);
	CreateDynamicObject(3458, 2698.79102, -9050.87793, 30.79740,   8.00000, 0.00000, 359.98901, -1, -1, -1, 500);
	CreateDynamicObject(3458, 3156.69482, -8853.28223, 30.36330,   10.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2751.95020, -8783.49902, 27.77710,   0.00000, 12.00000, 282.00000, -1, -1, -1, 500);
	CreateDynamicObject(10357, 3156.05444, -8905.41211, 133.89510,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2699.97754, -8855.03320, 27.77710,   0.00000, 12.00000, 6.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 3161.56909, -8853.28223, 31.03830,   6.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3187.55981, -8938.48828, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2738.81348, -8787.76758, 27.77710,   0.00000, 12.00000, 294.00000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 3166.46875, -8853.28223, 31.36330,   2.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2699.97754, -8841.22070, 27.77710,   0.00000, 12.00000, 354.00000, -1, -1, -1, 500);
	CreateDynamicObject(10945, 2926.44141, -9217.83398, 79.77890,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7910, 3170.02441, -8853.37207, 52.04710,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7910, 3170.02441, -8853.37207, 52.04710,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2726.85132, -8794.67383, 27.77710,   0.00000, 12.00000, 306.00000, -1, -1, -1, 500);
	CreateDynamicObject(6863, 3181.88965, -9037.65039, 35.50460,   0.00000, 0.00000, 1.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2702.84961, -8827.70898, 27.77710,   0.00000, 12.00000, 342.00000, -1, -1, -1, 500);
	CreateDynamicObject(18450, 3169.54395, -8847.57617, 45.16960,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2716.58643, -8803.91602, 27.77710,   0.00000, 12.00000, 318.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2708.46777, -8815.09082, 27.77710,   0.00000, 12.00000, 330.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2690.15381, -9073.04883, 27.80810,   0.00000, 11.99699, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(5309, 2670.07910, -9016.79102, 33.88220,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2676.41699, -9074.49316, 27.80810,   0.00000, 11.99199, 281.99701, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3209.54053, -8938.48730, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2796.49072, -9205.19238, 27.78310,   0.00000, 11.99199, 89.99500, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3199.95654, -8881.35352, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10676, 2726.82056, -9154.54883, 23.73340,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10948, 2889.79565, -9242.55078, 34.47680,   0.00000, 0.00000, 92.00000, -1, -1, -1, 500);
	CreateDynamicObject(6994, 3197.09692, -8849.02930, 27.91050,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(4242, 2731.36230, -9170.89648, 23.73340,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4563, 3165.94922, -8903.07129, -128.82860,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2663.28027, -9078.76172, 27.80810,   0.00000, 11.99699, 294.00000, -1, -1, -1, 500);
	CreateDynamicObject(10676, 2714.67480, -9165.49805, 23.73340,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3231.52100, -8938.48730, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3226.81543, -8881.35352, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 3237.93848, -8963.58008, 32.98700,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(4563, 3168.64844, -8803.86133, -79.31530,   0.00000, 0.00000, 179.99500, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3255.24023, -8938.48730, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 3237.93774, -8853.35742, 32.96200,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(6994, 3238.25513, -8849.02930, 27.91050,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3252.27173, -8881.35352, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3277.55859, -8938.48730, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3276.15869, -8881.35352, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6994, 3279.29639, -8849.02930, 27.91050,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3303.01709, -8938.48730, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 3303.01758, -8881.35352, 32.94440,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16304, 3316.39600, -8934.70117, 36.27430,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16304, 3316.39648, -8880.31543, 36.27430,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8343, 3330.76318, -8940.65625, 33.02260,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8344, 3330.51782, -8892.84082, 32.97690,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(10676, 2699.35083, -9154.54883, 23.73340,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2651.31787, -9085.66797, 27.80810,   0.00000, 11.99699, 306.00000, -1, -1, -1, 500);
	CreateDynamicObject(10676, 2671.99219, -9154.52539, 23.73340,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10871, 2699.12744, -9143.31543, 157.42830,   0.00000, 0.00000, 120.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2641.05322, -9094.91016, 27.80810,   0.00000, 11.99699, 318.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2690.15430, -9205.19238, 27.80810,   0.00000, 11.99199, 89.99500, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2632.93433, -9106.08496, 27.80810,   0.00000, 11.99699, 330.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2676.41699, -9203.74805, 27.80810,   0.00000, 11.99699, 78.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2627.31616, -9118.70313, 27.80810,   0.00000, 11.99699, 342.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2663.28027, -9199.48047, 27.80810,   0.00000, 11.99699, 66.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2624.44434, -9132.21484, 27.80810,   0.00000, 11.99699, 354.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2651.31787, -9192.57422, 27.80810,   0.00000, 11.99699, 54.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2624.44434, -9146.02734, 27.80810,   0.00000, 11.99699, 6.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2641.05322, -9183.33203, 27.80810,   0.00000, 11.99699, 42.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2627.31616, -9159.53809, 27.80810,   0.00000, 11.99699, 18.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2632.93457, -9172.15625, 27.80810,   0.00000, 11.99199, 29.99800, -1, -1, -1, 500);
	CreateDynamicObject(7910, 3161.11621, -8962.86914, 44.93020,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 3160.54834, -8962.80469, 42.44930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 3160.54834, -8961.19531, 42.44930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 3160.54834, -8959.61328, 42.44930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 3160.54834, -8964.39941, 42.44930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1262, 3160.54834, -8966.00488, 42.44930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2752.45825, -9107.82813, 23.67260,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2759.45435, -9107.82227, 23.67260,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, 2738.05811, -9178.15723, 26.61060,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, 2827.52368, -9120.76758, 26.61060,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, 2948.82739, -8983.15527, 35.98890,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, 3271.73853, -8906.49512, 31.38660,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, 3271.73853, -8906.49512, 38.38660,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, 3271.73853, -8906.49512, 45.38660,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 3197.11523, -8906.64453, 36.65420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 3185.17114, -8906.66211, 36.65420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 3197.11523, -8906.64453, 42.65420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 3185.17114, -8906.66211, 42.65420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2829.43311, -8850.35547, 23.55040,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2829.43896, -8862.29102, 23.55040,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2829.44165, -8874.22949, 23.55040,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2829.44214, -8881.91406, 23.55040,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2819.99463, -8881.84863, 23.55040,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2782.98169, -8831.58984, 23.55610,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2794.91675, -8831.57227, 23.55610,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2770.85547, -8862.00586, 23.55610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2782.76245, -8862.01074, 23.55610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2731.87085, -8861.89844, 23.55610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2719.92896, -8861.90332, 23.55610,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2720.02759, -8849.99023, 23.55610,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2720.00952, -8838.05957, 23.55610,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2720.01685, -8831.52148, 23.55610,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2731.92700, -8831.58984, 23.55610,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 2743.84668, -8831.59375, 23.55610,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2770.30396, -8983.72266, 34.08230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2800.78589, -8983.71289, 34.09230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2831.26611, -8983.72266, 34.08230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 2861.74707, -8983.71289, 34.09230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 3099.72949, -8963.65430, 32.95700,   0.00000, 180.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2961.42871, -8963.60449, 32.95700,   0.00000, 180.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8355, 2823.21680, -8963.67969, 32.95700,   0.00000, 180.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3104.56665, -8833.49219, -8.12900,   90.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3038.53198, -8833.49219, -8.12900,   90.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2972.50293, -8833.49219, -8.12900,   90.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2906.47949, -8833.49219, -8.12900,   90.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2938.43066, -9043.51270, -11.26690,   90.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3004.44531, -9043.51270, -11.26690,   90.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3070.47998, -9043.51270, -11.26690,   90.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3136.51489, -9043.51270, -11.26690,   90.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3073.41992, -8907.33398, 0.18700,   8.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3073.41992, -8973.36230, 0.18700,   8.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3073.41992, -9039.39063, 0.18700,   8.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2954.21265, -8969.51074, 0.18700,   8.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2954.21265, -8903.48145, 0.18700,   8.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2954.21265, -8837.45117, 0.18700,   8.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2871.33276, -8812.15430, -9.57903,   90.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2874.77271, -8814.42676, -9.57900,   90.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2879.59961, -9014.28613, -10.97570,   90.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2879.59961, -8948.24316, -10.97570,   90.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2913.48022, -9002.72656, -10.97570,   90.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3155.97949, -9009.62988, -7.10690,   90.00000, 0.00000, 271.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3154.84937, -8943.60938, -7.06690,   90.00000, 0.00000, 271.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3188.06445, -9022.23145, 33.01560,   0.00000, 0.00000, 1.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3189.04517, -8938.88086, 33.03560,   0.00000, 0.00000, 181.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3065.58887, -8873.46289, -34.36260,   90.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 2962.08569, -9003.50488, -34.33730,   90.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3254.64575, -8940.87012, 33.02560,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3320.65137, -8938.17188, 33.02560,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3305.18237, -8875.35254, 33.00560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3239.17822, -8874.07617, 33.01560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4012, 3202.34082, -8869.97949, 33.00560,   -0.10000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7910, 3161.11719, -8962.87207, 44.94020,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8150, 3211.44214, -8983.12891, 35.97260,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3280.74292, -8982.78223, 33.58700,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3293.29126, -8984.56836, 33.58700,   0.00000, 0.00000, 74.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3305.80225, -8986.77051, 33.58700,   0.00000, 0.00000, 86.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3318.54663, -8986.57324, 33.58700,   0.00000, 0.00000, 96.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3330.89941, -8983.72168, 33.58700,   0.00000, 0.00000, 110.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3342.43604, -8978.34375, 33.58700,   0.00000, 0.00000, 120.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3352.56982, -8970.71289, 33.58700,   0.00000, 0.00000, 134.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3361.11353, -8961.24316, 33.58700,   0.00000, 0.00000, 142.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3367.66040, -8950.37012, 33.58700,   0.00000, 0.00000, 156.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3371.59668, -8938.28027, 33.58700,   0.00000, 0.00000, 168.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3372.91309, -8919.23242, 33.68020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3372.67285, -8893.64941, 33.68020,   0.00000, 0.00000, 1.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3370.49023, -8874.79297, 33.58700,   0.00000, 0.00000, 198.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3365.52832, -8863.07617, 33.58700,   0.00000, 0.00000, 208.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3358.43945, -8852.53223, 33.58700,   0.00000, 0.00000, 220.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3349.35010, -8843.61914, 33.58700,   0.00000, 0.00000, 51.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3338.66333, -8836.69238, 33.58700,   0.00000, 0.00000, 63.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3326.85620, -8831.92676, 33.58700,   0.00000, 0.00000, 73.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3314.33716, -8829.72461, 33.58700,   0.00000, 0.00000, 87.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3301.60864, -8830.17480, 33.58700,   0.00000, 0.00000, 97.00000, -1, -1, -1, 500);
	CreateDynamicObject(984, 3283.07544, -8834.23047, 33.58700,   0.00000, 0.00000, 95.00000, -1, -1, -1, 500);
	CreateDynamicObject(983, 3292.35718, -8832.31348, 33.60960,   0.00000, 0.00000, 115.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3263.90210, -8834.80371, 33.60530,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3238.32178, -8834.82129, 33.60530,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3212.73340, -8834.82813, 33.60530,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 3187.18652, -8833.95605, 33.60530,   0.00000, 0.00000, 86.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2667.15063, -9058.04199, 32.24230,   0.00000, 0.00000, 108.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2655.88867, -9062.43066, 32.30230,   0.00000, 0.00000, 114.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2640.72388, -9071.13477, 32.30230,   0.00000, 0.00000, 126.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2627.61499, -9082.96875, 32.30230,   0.00000, 0.00000, 138.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2617.44678, -9096.99707, 32.30230,   0.00000, 0.00000, 150.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2610.16699, -9113.37305, 32.30230,   0.00000, 0.00000, 162.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2606.54199, -9130.59082, 32.30230,   0.00000, 0.00000, 174.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2606.56201, -9147.95410, 32.30230,   0.00000, 0.00000, 6.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2610.22241, -9165.14258, 32.30230,   0.00000, 0.00000, 18.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2617.43652, -9181.31055, 32.30230,   0.00000, 0.00000, 30.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2627.69458, -9195.42383, 32.30230,   0.00000, 0.00000, 42.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2640.86499, -9207.20020, 32.30230,   0.00000, 0.00000, 54.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2656.03711, -9215.94824, 32.30230,   0.00000, 0.00000, 66.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2672.64160, -9221.35840, 32.30230,   0.00000, 0.00000, 78.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2691.83667, -9223.17285, 32.30230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2717.41650, -9223.17578, 32.30230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2743.00317, -9223.17871, 32.30230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2768.59814, -9223.18945, 32.30230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2794.18140, -9223.20605, 32.30230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2819.74414, -9223.90137, 32.30230,   0.00000, 0.00000, 86.90000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2818.91479, -8763.32129, 32.27230,   0.00000, 0.00000, 93.30000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2793.36401, -8764.06738, 32.27230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2767.78320, -8764.08691, 32.27230,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2749.43115, -8765.64648, 32.27230,   0.00000, 0.00000, 102.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2731.30054, -8771.45703, 32.27230,   0.00000, 0.00000, 114.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2715.98853, -8780.36426, 32.27230,   0.00000, 0.00000, 126.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2703.36255, -8791.73730, 32.27230,   0.00000, 0.00000, 138.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2692.83252, -8806.19434, 32.27230,   0.00000, 0.00000, -30.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2685.90918, -8821.64258, 32.27230,   0.00000, 0.00000, -18.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2682.11426, -8839.43652, 32.27230,   0.00000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2682.10767, -8856.98047, 32.27230,   0.00000, 0.00000, 6.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2685.84790, -8874.41309, 32.27230,   0.00000, 0.00000, 18.00000, -1, -1, -1, 500);
	CreateDynamicObject(982, 2693.00317, -8890.36523, 32.27230,   0.00000, 0.00000, 30.00000, -1, -1, -1, 500);
//End дрифт-трасса 14
//Start 4-й город
	ObjGam[33] = CreateObject(5004, 6029.56348, -1455.78967, 7.74550,   0.00000, 0.00000, -0.00004);

	CreateDynamicObject(5191, 2984.96289, -790.16357, 4.24690,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(8386, 3088.87744, -820.11884, 5.78780,   0.00000, 0.00000, 101.24995, -1, -1, -1, 500);
	CreateDynamicObject(5191, 3154.24341, -909.71875, 2.26027,   0.00000, 0.00000, -333.20245, -1, -1, -1, 500);
	CreateDynamicObject(8386, 3213.94116, -990.87720, 4.94248,   0.00000, 0.00000, 279.53113, -1, -1, -1, 500);
	CreateDynamicObject(5191, 3317.37085, -1022.25073, 3.39372,   0.00000, 0.00000, -630.07678, -1, -1, -1, 500);
	CreateDynamicObject(8386, 3416.60693, -1005.66846, 6.07045,   0.00000, 0.00000, 342.73392, -1, -1, -1, 500);
	CreateDynamicObject(5191, 3491.45313, -927.36322, 4.52512,   0.00000, 0.00000, -926.95178, -1, -1, -1, 500);
	CreateDynamicObject(8386, 3557.20386, -855.51361, 5.87925,   0.00000, 0.00000, -191.24986, -1, -1, -1, 500);
	CreateDynamicObject(5191, 3666.02344, -833.72137, 2.50615,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3751.25952, -820.23767, 27.19295,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3751.25977, -698.25037, 27.18153,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3793.30981, -653.32166, 27.19192,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3915.92041, -653.30695, 27.18049,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3751.28125, -841.56976, 27.17832,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3751.25195, -941.23383, 27.18870,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4036.54980, -653.29370, 27.16585,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3751.25439, -1063.41785, 27.17407,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3063.32544, -792.85571, -0.94609,   0.00000, 0.00000, 77.96789, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3091.65894, -807.77448, -1.16315,   0.00000, 0.00000, 70.07820, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3116.25977, -837.90796, -2.44215,   0.00000, 0.00000, 63.12535, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3186.62427, -973.07538, -2.93007,   0.00000, 0.00000, -118.67054, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3210.66528, -1003.17761, -1.82864,   0.00000, 0.00000, -111.79488, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3238.80762, -1018.99768, -1.79835,   0.00000, 0.00000, -104.05978, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3387.96240, -1021.46619, -1.81706,   0.00000, 0.00000, -55.77691, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3426.85303, -1014.40814, -0.83393,   0.00000, 0.00000, -48.90147, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3452.91504, -996.13641, -0.64056,   0.00000, 0.00000, -40.22976, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3521.99341, -868.86121, -0.85703,   0.00000, 0.00000, -214.99570, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3546.58618, -848.21814, -0.86080,   0.00000, 0.00000, -221.87135, -1, -1, -1, 500);
	CreateDynamicObject(3330, 3584.14111, -836.97424, -2.06356,   0.00000, 0.00000, -229.68346, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3751.28442, -1185.38696, 27.18445,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3751.30127, -1308.96277, 27.16982,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3751.33447, -1433.36731, 27.15522,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3751.35229, -1553.93591, 27.14056,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3751.36255, -1674.57190, 27.12593,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3796.11597, -1716.67224, 27.11131,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4159.03613, -653.28314, 27.10443,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4283.95801, -653.24847, 27.06801,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4043.25464, -1716.67737, 27.10705,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 3854.23218, -840.18982, 8.05738,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4165.89307, -1716.67236, 27.14241,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4207.99023, -1671.74097, 27.15279,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4207.97217, -1547.93982, 27.13816,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4207.98730, -1424.41846, 27.12353,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4328.84326, -695.35211, 27.07838,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4328.85645, -817.98669, 27.09195,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4328.88135, -943.57965, 27.08052,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4328.89014, -1066.82178, 27.09409,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4328.89795, -1190.04590, 27.08267,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4328.90234, -1313.13086, 27.07125,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4286.71729, -1357.88440, 27.08162,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(5004, 3964.00366, -840.15582, 8.03903,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4073.46191, -840.13794, 7.99562,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4184.13672, -840.13391, 7.97723,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4255.04736, -840.20874, 7.95885,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5004, 3852.05835, -1081.73535, 8.06400,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(5004, 3959.03833, -1081.83521, 8.04563,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4066.98828, -1081.84485, 8.04447,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4176.54980, -1081.85205, 7.97610,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4238.49854, -1081.87341, 7.95773,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4239.71387, -1219.71021, 7.95659,   0.00000, 0.00000, -630.00006, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4128.22803, -1219.71521, 7.96321,   0.00000, 0.00000, -629.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4015.96631, -1219.70581, 8.04483,   0.00000, 0.00000, -629.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 3906.00952, -1219.71985, 8.02644,   0.00000, 0.00000, -629.99976, -1, -1, -1, 500);
	CreateDynamicObject(5004, 3844.85254, -1219.71375, 8.05806,   0.00000, 0.00000, -629.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 3845.59375, -1502.35278, 8.03192,   0.00000, 0.00000, -809.99982, -1, -1, -1, 500);
	CreateDynamicObject(5004, 3951.47534, -1502.36218, 8.03854,   0.00000, 0.00000, -809.99969, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4058.78149, -1502.33496, 8.02016,   0.00000, 0.00000, -809.99969, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4109.36572, -1502.32251, 8.02677,   0.00000, 0.00000, -809.99969, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4045.06421, -1622.05139, 8.02677,   0.00000, 0.00000, -1440.00134, -1, -1, -1, 500);
	CreateDynamicObject(5004, 3916.47754, -1623.25110, 8.02563,   0.00000, 0.00000, -1260.00024, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4400.77539, -1673.02966, 27.41316,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4400.77979, -1551.93457, 27.42672,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4442.85205, -1507.10718, 27.44030,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4566.05127, -1507.09094, 27.42888,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4445.66797, -1715.02637, 27.39853,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4538.56836, -1633.30200, 8.27759,   0.00000, 0.00000, -1079.99976, -1, -1, -1, 500);
	CreateDynamicObject(5004, 4538.60303, -1577.99976, 8.28421,   0.00000, 0.00000, -1079.99976, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4660.81787, -1507.13928, 27.43926,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4705.70996, -1549.17126, 27.44963,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4705.71143, -1669.98523, 27.41321,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4568.07568, -1715.01672, 27.40888,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4663.52588, -1714.94714, 27.41925,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7479, 3987.49585, -673.57581, 8.37805,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7432, 3827.50562, -763.57220, 8.38513,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(6990, 3827.50537, -908.19055, 8.42589,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4055.00220, -693.58356, 8.37506,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(7479, 4076.79883, -763.40051, 8.36842,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6990, 4183.35400, -723.57111, 8.38798,   0.00000, 0.00000, -179.99977, -1, -1, -1, 500);
	CreateDynamicObject(7479, 4298.04736, -803.58624, 8.30549,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4095.57715, -693.57642, 8.38167,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(6990, 4168.00391, -929.62567, 8.32736,   0.00000, 0.00000, -989.99939, -1, -1, -1, 500);
	CreateDynamicObject(6990, 4147.99756, -958.94019, 8.39573,   0.00000, 0.00000, -810.00018, -1, -1, -1, 500);
	CreateDynamicObject(6990, 4228.02686, -1026.20801, 8.35236,   0.00000, 0.00000, -1169.99951, -1, -1, -1, 500);
	CreateDynamicObject(6990, 4248.03516, -996.90100, 8.32711,   0.00000, 0.00000, -269.99963, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4278.02881, -862.41510, 8.29605,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4278.04053, -931.66760, 8.33000,   0.00000, 0.00000, -449.99948, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4147.36816, -783.41949, 8.36443,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(7478, 4223.49463, -1160.91040, 8.29259,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(6990, 4248.04980, -1125.41333, 8.32623,   0.00000, 0.00000, -269.99963, -1, -1, -1, 500);
	CreateDynamicObject(7476, 4068.01611, -1174.92957, 8.35386,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7434, 4128.03955, -1336.20020, 8.35420,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(6990, 4039.53369, -1330.85022, 8.41334,   0.00000, 0.00000, -449.99942, -1, -1, -1, 500);
	CreateDynamicObject(6990, 4128.01807, -1450.80713, 8.37397,   0.00000, 0.00000, -629.99951, -1, -1, -1, 500);
	CreateDynamicObject(6990, 3892.15527, -863.55286, 8.40500,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(6990, 3936.81885, -878.89410, 8.41000,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3966.80518, -835.61267, 8.40074,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(5184, 3921.29810, -1716.67017, 27.11117,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3483, 3933.23804, -666.47229, 15.27587,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3887.42578, -664.61316, 9.41301,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3485, 3902.95459, -666.48364, 15.26216,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3486, 3963.51245, -666.46234, 15.30088,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3484, 3993.79272, -666.58789, 14.93313,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 4024.00781, -666.46320, 15.24753,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3486, 4054.20239, -666.46680, 15.26125,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3487, 4079.84326, -666.47833, 14.93313,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3483, 4105.46631, -666.47284, 15.27481,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3487, 4131.06494, -666.47705, 14.92171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3486, 4156.65283, -666.47253, 15.24983,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3483, 4186.93701, -666.45734, 15.24981,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3484, 4217.22461, -666.58575, 14.88528,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 4247.51855, -666.45972, 15.14968,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5476, 3765.46484, -884.00562, 15.33341,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(10991, 3943.57568, -933.05060, 16.55198,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(10998, 3823.38599, -860.73248, 20.03519,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(11001, 3898.99707, -831.50079, 20.13560,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11002, 3810.25757, -808.60559, 14.25393,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3988, 3940.64136, -838.65070, 16.72987,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(10990, 3855.23218, -794.05432, 24.11644,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4059, 3923.46362, -721.03595, 12.82318,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(4123, 3833.56201, -939.16534, 19.66671,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(5134, 3813.61963, -772.09680, 11.99835,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(5410, 4180.71973, -738.21716, 11.55698,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(6103, 3951.26636, -739.26965, 14.39147,   0.00000, 0.00000, -180.00006, -1, -1, -1, 500);
	CreateDynamicObject(6104, 4129.97168, -715.18518, 12.15611,   0.00000, 0.00000, 180.00015, -1, -1, -1, 500);
	CreateDynamicObject(6151, 4124.17676, -754.16217, 14.69988,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(6908, 4157.67139, -886.33167, 13.93889,   0.00000, 0.00000, -450.00006, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4118.00000, -862.50659, 8.33282,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(7650, 4101.24219, -821.76703, 17.86873,   0.00000, 0.00000, 0.00019, -1, -1, -1, 500);
	CreateDynamicObject(7658, 4041.22681, -723.60297, 8.17032,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(9301, 4047.46411, -768.32922, 12.36289,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10951, 3998.35254, -823.42352, 21.12626,   0.00000, 0.00000, -269.99957, -1, -1, -1, 500);
	CreateDynamicObject(11092, 3751.48730, -815.19879, 10.94584,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(11456, 3753.67896, -768.18079, 11.76555,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(11497, 3761.99658, -799.44238, 7.98113,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(12964, 3854.94214, -707.18158, 8.27714,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(13363, 3804.27002, -716.13049, 9.03700,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18266, 3760.49390, -707.88788, 12.80658,   0.00000, 0.00000, -269.14044, -1, -1, -1, 500);
	CreateDynamicObject(5309, 3830.01758, -674.31586, 11.57752,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3768.89478, -678.01660, 10.42158,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3753.37988, -678.01837, 10.42158,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(12859, 3786.91577, -644.58020, 8.30640,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(12861, 3744.89771, -648.58667, 8.30453,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(17521, 3857.43628, -865.57507, 11.72010,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(4006, 4001.26367, -889.74438, 27.85074,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(4681, 4076.87964, -884.23669, 18.31563,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(6990, 4088.03613, -1019.44189, 8.41298,   0.00000, 0.00000, -990.00037, -1, -1, -1, 500);
	CreateDynamicObject(8441, 3899.30591, -1034.06018, 8.38537,   0.00000, 0.00000, -900.00018, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3966.81128, -983.45563, 8.38283,   0.00000, 0.00000, -90.00008, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4026.72827, -1034.07336, 8.38283,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(6990, 3827.51807, -1048.75537, 8.43251,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3797.51172, -978.14984, 8.40872,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(6100, 3996.64624, -947.58160, 32.58284,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(9907, 3998.29053, -995.64941, 98.15076,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(9919, 4077.94214, -931.62744, 55.85923,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(8555, 4068.05273, -1004.09747, 31.69581,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(6205, 4158.25537, -976.06372, 16.26590,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(6990, 3936.82471, -1108.72144, 8.41413,   0.00000, 0.00000, -269.99963, -1, -1, -1, 500);
	CreateDynamicObject(6990, 3827.48853, -1138.06018, 8.43070,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3879.77832, -1123.38599, 8.40120,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(4586, 4068.40137, -1075.85730, 70.29888,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(5882, 3929.91846, -1078.53320, 63.19531,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8710, 4062.74341, -1150.38574, 8.24978,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(8411, 3996.82715, -1084.09229, 10.86709,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(7596, 3762.84863, -962.01666, 12.75714,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3748.34229, -903.28870, 10.41837,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3748.34180, -887.75873, 10.42261,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(7419, 3854.01147, -1069.72510, 1.98739,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4005, 4174.76318, -820.21521, 21.21170,   0.00000, 0.00000, -719.99939, -1, -1, -1, 500);
	CreateDynamicObject(4857, 3760.82104, -789.34210, 10.68719,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(5189, 3819.50562, -1009.05530, 13.82646,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6907, 3865.14111, -974.02679, 8.19493,   0.00000, 0.00000, -180.00006, -1, -1, -1, 500);
	CreateDynamicObject(8397, 4100.54248, -968.94061, 18.78226,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(10377, 4152.92285, -1171.58740, 26.24575,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4017, 3935.33203, -922.87787, 21.91736,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10606, 4227.89795, -1046.88684, 17.00450,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3781.27637, -761.35089, 12.83294,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3797.24438, -747.27985, 12.98138,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3773.69971, -783.19330, 12.98138,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3781.27173, -808.95044, 12.98138,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3827.81177, -739.70044, 12.98138,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3857.16357, -747.27686, 12.98138,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3767.17798, -837.34906, 12.98138,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3728.68408, -829.85425, 12.98138,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3807.53735, -829.74298, 12.98138,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3847.15308, -837.36072, 12.98138,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3881.28418, -753.52826, 12.98138,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3873.72314, -713.24133, 12.97430,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3873.74512, -783.08478, 12.98138,   0.00000, 0.00000, -179.99977, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3881.29321, -813.91455, 12.98138,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3873.65161, -853.23212, 12.96472,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3887.82080, -689.73218, 12.97430,   0.00000, 0.00000, -269.99976, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3927.15503, -697.34338, 12.97430,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3967.78735, -689.76056, 12.97430,   0.00000, 0.00000, -629.99963, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4007.29858, -697.34326, 12.97430,   0.00000, 0.00000, -809.99969, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4054.26514, -689.78052, 12.96349,   0.00000, 0.00000, -989.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4094.63452, -697.37476, 12.97011,   0.00000, 0.00000, -1170.00000, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4125.94189, -689.79895, 12.96980,   0.00000, 0.00000, -1350.00000, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4168.40332, -697.36310, 12.94516,   0.00000, 0.00000, -1530.00012, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4208.22607, -689.78674, 12.94516,   0.00000, 0.00000, -1710.00061, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4248.23584, -697.35229, 12.90174,   0.00000, 0.00000, -1890.00110, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3793.74268, -848.06097, 12.98307,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3801.28613, -880.73773, 12.97527,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3793.73120, -912.74426, 12.98307,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3801.26807, -950.39929, 12.99716,   0.00000, 0.00000, -359.99979, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3793.76147, -987.07550, 12.99716,   0.00000, 0.00000, -539.99963, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3801.25537, -1018.98602, 12.98189,   0.00000, 0.00000, -719.99963, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3793.73169, -1048.59900, 12.98969,   0.00000, 0.00000, -899.99994, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3801.27954, -1078.41052, 12.98969,   0.00000, 0.00000, -1079.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3793.73120, -1108.00403, 12.98969,   0.00000, 0.00000, -1260.00012, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3801.27979, -1138.21863, 12.98789,   0.00000, 0.00000, -1440.00049, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3892.28369, -889.75952, 12.96472,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3867.12012, -836.95093, 11.58359,   0.00000, 0.00000, -90.00008, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3774.38843, -823.18982, 11.73234,   0.00000, 0.00000, 180.00009, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3800.69873, -843.90802, 11.73234,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3827.73584, -889.74969, 12.98307,   0.00000, 0.00000, 89.99994, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3857.21973, -897.35400, 12.98307,   0.00000, 0.00000, -90.00008, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3921.14844, -897.35651, 12.96472,   0.00000, 0.00000, -90.00008, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3952.11670, -889.75934, 12.96472,   0.00000, 0.00000, -269.99994, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3947.02881, -1030.26758, 12.98162,   0.00000, 0.00000, -629.99963, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3916.40381, -1037.83667, 12.98162,   0.00000, 0.00000, -809.99982, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3887.14355, -1030.22791, 12.83318,   0.00000, 0.00000, -989.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3857.15723, -1037.86328, 12.98969,   0.00000, 0.00000, -1169.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3827.82251, -1030.27283, 12.98969,   0.00000, 0.00000, -1349.99976, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.02515, -1002.52502, 12.97126,   0.00000, 0.00000, -1259.99951, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.59326, -969.06024, 12.97126,   0.00000, 0.00000, -1439.99963, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.02539, -933.92920, 12.96447,   0.00000, 0.00000, -1259.99951, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.61914, -903.73920, 12.95667,   0.00000, 0.00000, -1439.99963, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3962.99805, -876.01495, 12.98363,   0.00000, 0.00000, -1259.99939, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.55249, -845.32080, 12.98918,   0.00000, 0.00000, -1439.99939, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.02222, -814.57556, 12.98918,   0.00000, 0.00000, -1619.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3977.05518, -787.22107, 12.96467,   0.00000, 0.00000, -1890.00073, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4027.18604, -779.58435, 12.96467,   0.00000, 0.00000, -2070.00098, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4076.49756, -787.23871, 12.96467,   0.00000, 0.00000, -2250.00146, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4126.97266, -779.60388, 12.96467,   0.00000, 0.00000, -2070.00098, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4176.93994, -787.22412, 12.95287,   0.00000, 0.00000, -2610.00220, -1, -1, -1, 500);
	CreateDynamicObject(7520, 4046.34399, -836.37787, 8.49059,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3336, 2940.21313, -797.32678, 10.11699,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4201.82813, -723.88849, 12.94516,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4194.21045, -763.31665, 12.94516,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4201.79688, -803.67236, 12.88161,   0.00000, 0.00000, -2880.00293, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4194.20850, -843.06610, 12.88161,   0.00000, 0.00000, -3060.00366, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4201.82764, -885.26172, 12.88454,   0.00000, 0.00000, -3240.00415, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4194.15186, -924.66602, 12.88454,   0.00000, 0.00000, -3420.00464, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4201.81494, -959.80530, 12.87674,   0.00000, 0.00000, -3600.00513, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4194.21680, -1001.19324, 12.90954,   0.00000, 0.00000, -3780.00562, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4201.84766, -1041.13574, 12.90954,   0.00000, 0.00000, -3960.00610, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4194.23242, -1080.56140, 12.88884,   0.00000, 0.00000, -4140.00684, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4201.85693, -1124.90137, 12.88104,   0.00000, 0.00000, -4320.00732, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3977.42871, -1030.98975, 11.73257,   0.00000, 0.00000, -270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3956.24292, -1037.69226, 11.73257,   0.00000, 0.00000, -449.99994, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.04395, -1063.76746, 12.97132,   0.00000, 0.00000, -1259.99951, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.63062, -1104.19812, 12.97132,   0.00000, 0.00000, -1079.99951, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3942.39990, -1119.57080, 12.97132,   0.00000, 0.00000, -989.99945, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3907.51733, -1127.19543, 12.98964,   0.00000, 0.00000, -1169.99951, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3870.75146, -1119.59595, 12.98964,   0.00000, 0.00000, -1349.99976, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3837.12354, -1127.20984, 12.98789,   0.00000, 0.00000, -1529.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4007.65308, -1030.29163, 12.96347,   0.00000, 0.00000, -629.99963, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4041.16797, -1037.88428, 12.97126,   0.00000, 0.00000, -809.99957, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4078.32642, -1030.28223, 12.97016,   0.00000, 0.00000, -989.99957, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4107.38379, -1037.54126, 11.72112,   0.00000, 0.00000, -90.00014, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4121.79297, -1225.19165, 12.95011,   0.00000, 0.00000, -1440.00012, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4121.78467, -1185.28625, 12.95011,   0.00000, 0.00000, -1439.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4121.80420, -1145.28247, 12.95011,   0.00000, 0.00000, -1439.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4121.76709, -1105.29150, 12.95011,   0.00000, 0.00000, -1439.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4121.86377, -1065.02979, 12.97016,   0.00000, 0.00000, -1439.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4121.87109, -1024.42969, 12.97017,   0.00000, 0.00000, -1439.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4121.78613, -985.08948, 12.82172,   0.00000, 0.00000, -1439.99988, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3956.37671, -897.01794, 11.71543,   0.00000, 0.00000, -449.99994, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3808.11060, -1030.60791, 11.63215,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3807.94214, -890.17676, 11.73403,   0.00000, 0.00000, -269.99997, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3867.11572, -746.95502, 11.73234,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4201.37305, -704.04572, 11.69612,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4201.63574, -793.87482, 11.63256,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4201.32959, -704.16071, 11.69612,   0.00000, 0.00000, 359.99994, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4187.60059, -947.52637, 11.70388,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3873.90186, -882.64307, 11.71567,   0.00000, 0.00000, -180.00006, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4194.26953, -772.73608, 11.59308,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4177.59131, -948.06256, 12.80448,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4138.29688, -940.49420, 12.80448,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(4048, 4178.14355, -1038.99268, 20.17624,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4112, 4136.21143, -1055.95569, 18.69790,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4176, 4175.62061, -1089.21118, 13.69839,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(6909, 4097.49805, -1233.17310, 12.95932,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1676, 4088.85596, -1233.18811, 9.78693,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1676, 4088.87476, -1238.31335, 9.78693,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1676, 4088.85938, -1228.16760, 9.78693,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1676, 4099.56738, -1228.21436, 9.78693,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1676, 4099.55371, -1233.24561, 9.80232,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1676, 4099.55078, -1238.23267, 9.78693,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(6990, 3827.49634, -1229.98010, 8.42657,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(6990, 3936.84082, -1200.66956, 8.41334,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3966.85864, -1286.65125, 8.38203,   0.00000, 0.00000, -269.99963, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3797.50244, -1334.96338, 8.39526,   0.00000, 0.00000, -269.99963, -1, -1, -1, 500);
	CreateDynamicObject(6990, 3827.49658, -1521.27551, 8.40043,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(6990, 3936.87988, -1491.96326, 8.40705,   0.00000, 0.00000, -269.99976, -1, -1, -1, 500);
	CreateDynamicObject(7479, 3777.52588, -1567.13843, 8.34129,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(6099, 3990.74072, -1161.88599, 25.00212,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(4718, 3863.17065, -1185.16345, 28.75268,   0.00000, 0.00000, -629.99963, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3966.87939, -1597.11035, 8.37574,   0.00000, 0.00000, -629.99921, -1, -1, -1, 500);
	CreateDynamicObject(6990, 4039.55640, -1480.16089, 8.41366,   0.00000, 0.00000, -449.99942, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4009.53882, -1409.86597, 8.37460,   0.00000, 0.00000, -269.99963, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4093.94531, -1465.49683, 8.36398,   0.00000, 0.00000, -539.99933, -1, -1, -1, 500);
	CreateDynamicObject(7479, 4048.08765, -1697.14880, 8.34924,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4158.03467, -1555.97498, 8.36398,   0.00000, 0.00000, -809.99933, -1, -1, -1, 500);
	CreateDynamicObject(7479, 4258.04932, -1226.96863, 8.27485,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(7479, 3989.58472, -1515.94336, 8.35616,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4158.05225, -1617.62573, 8.36397,   0.00000, 0.00000, -1170.00024, -1, -1, -1, 500);
	CreateDynamicObject(5297, 4134.50781, -1625.93884, 13.89685,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5112, 4262.52832, -1625.94080, 14.54192,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5296, 4394.33594, -1625.93384, 13.93507,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4064.40601, -1625.93079, 8.35736,   0.00000, 0.00000, -359.99957, -1, -1, -1, 500);
	CreateDynamicObject(5191, 4410.00879, -1336.82166, 2.52380,   0.00000, 0.00000, -449.99973, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4348.27979, -1336.97144, 8.30163,   0.00000, 0.00000, -1259.99963, -1, -1, -1, 500);
	CreateDynamicObject(3330, 4242.64111, -1625.92932, 8.70732,   0.00000, 0.00000, -90.00008, -1, -1, -1, 500);
	CreateDynamicObject(3330, 4318.14355, -1625.84741, 8.51741,   0.00000, 0.00000, -90.00008, -1, -1, -1, 500);
	CreateDynamicObject(5725, 3812.30518, -1255.37573, 17.52062,   0.00000, 0.00000, -270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5787, 4037.12720, -1284.54407, 13.23715,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(6369, 4232.14014, -1108.75024, 23.29412,   0.00000, 0.00000, -118.51601, -1, -1, -1, 500);
	CreateDynamicObject(8431, 3765.88599, -1024.12378, 16.98505,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(9834, 4197.36230, -1278.22095, 25.08370,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6490, 4047.78101, -1546.06299, 15.78669,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(10965, 4083.35669, -1416.98730, 20.60529,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(10966, 4163.12842, -1377.51660, 21.75232,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7507, 3760.84229, -1093.11792, 10.54873,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(12847, 4076.45752, -1344.99268, 12.46750,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(12941, 4035.07910, -1341.68201, 8.27145,   0.00000, 0.00000, -539.99945, -1, -1, -1, 500);
	CreateDynamicObject(13198, 4070.65112, -1285.38013, 13.43240,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5131, 4119.06396, -1520.06458, 14.41674,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5129, 4114.39551, -1519.56311, 13.10182,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(17523, 3773.99927, -1144.56995, 10.72570,   0.00000, 0.00000, -359.99921, -1, -1, -1, 500);
	CreateDynamicObject(16673, 3768.70410, -1161.23621, 12.14697,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3454, 3778.51489, -1516.15674, 12.48611,   0.00000, 0.00000, -809.99957, -1, -1, -1, 500);
	CreateDynamicObject(3457, 3774.96313, -1580.89307, 11.24568,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3584, 3988.27832, -1289.60449, 12.66097,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3623, 4063.89136, -1651.62085, 12.57439,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(6134, 4288.43555, -728.57367, 12.38878,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(6138, 4292.59570, -796.08319, 13.68694,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(11002, 4252.58154, -1264.94409, 14.15315,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(4558, 4316.97021, -869.23291, 14.30418,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(8409, 4305.59326, -930.03943, 10.83505,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(13190, 4095.08252, -1651.97803, 11.78310,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(11543, 3770.53394, -1651.50903, 15.70063,   0.00000, 0.00000, 90.00011, -1, -1, -1, 500);
	CreateDynamicObject(4199, 4227.54443, -1348.69214, 10.21128,   0.00000, 0.00000, -359.99939, -1, -1, -1, 500);
	CreateDynamicObject(4199, 4227.55518, -1325.34094, 10.21128,   0.00000, 0.00000, -359.99939, -1, -1, -1, 500);
	CreateDynamicObject(10610, 4238.34326, -1186.16772, 18.41353,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(4564, 4008.38013, -1222.86157, 117.48840,   0.00000, 0.00000, -90.00008, -1, -1, -1, 500);
	CreateDynamicObject(6874, 4307.80615, -1314.91724, 8.19692,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(9950, 4309.54541, -1240.45557, 20.12099,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10049, 4315.89697, -1139.82996, 23.06161,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3998, 4320.45801, -984.25232, 14.47710,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3584, 3988.29468, -1357.97949, 12.73597,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3584, 3988.30933, -1424.00708, 12.72968,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6925, 4032.63965, -1377.57068, 10.93742,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(8546, 4128.05566, -1282.44702, 11.59132,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(11010, 4123.66260, -1313.36047, 14.15977,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3755, 4169.75732, -1516.02637, 13.82978,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(8255, 4073.83008, -1707.18542, 12.75301,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3566, 4050.96338, -1573.55359, 10.62477,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3568, 4060.26782, -1573.50085, 10.64977,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3569, 4069.01587, -1573.51807, 10.64977,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(16385, 4131.46582, -1649.57214, 7.98872,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4199, 4142.21094, -1580.89233, 10.37363,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(4199, 4142.19629, -1596.43384, 10.37363,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(3566, 4121.83936, -1608.24292, 10.62477,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3566, 4121.63672, -1600.26074, 10.64977,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3568, 4121.62158, -1592.60681, 10.64977,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3569, 4121.67334, -1584.87048, 10.64977,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3566, 4121.63232, -1577.15771, 10.62477,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3568, 4121.68701, -1569.24255, 10.62477,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8410, 4305.68945, -930.00159, 9.68314,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(4199, 4341.81543, -930.62036, 10.26019,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5130, 4292.18701, -860.92639, 10.31188,   0.00000, 0.00000, 134.99997, -1, -1, -1, 500);
	CreateDynamicObject(8613, 4079.64185, -1491.16370, 12.63257,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(5309, 4208.77051, -1514.17163, 11.44873,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(7496, 4179.01172, -1447.51941, 11.74195,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(8060, 4191.46387, -1715.38477, 13.18460,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3574, 4219.96387, -1661.23853, 10.93667,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5259, 4027.20850, -1593.19507, 9.98667,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5262, 4041.08472, -1592.43384, 11.21881,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(3625, 4173.70605, -1581.68823, 10.77133,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(12956, 4205.75928, -1599.48962, 11.56178,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(3570, 4217.50537, -1644.35901, 9.61792,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3566, 4210.46045, -1681.77673, 10.63360,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3742.05054, -1266.12598, 10.39948,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3742.05273, -1297.69727, 10.39949,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3742.04297, -1329.27942, 10.39949,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3742.06030, -1360.84253, 10.39949,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3742.05811, -1392.42712, 10.38488,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3742.04590, -1424.02185, 10.38488,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3742.04077, -1455.50354, 10.38489,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3742.02905, -1486.96765, 10.38488,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3742.03687, -1518.53687, 10.37022,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3742.03491, -1550.04614, 10.37023,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3742.02490, -1581.48364, 10.37101,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3742.02393, -1612.97571, 10.37022,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(5309, 3988.08984, -1499.45911, 11.54133,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(9243, 3987.87036, -1578.78455, 13.33283,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(9244, 3988.35718, -1616.84265, 13.62424,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3907.28052, -1506.65479, 8.36912,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3906.29565, -1215.33752, 8.38750,   0.00000, 0.00000, -359.99951, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3861.13867, -1677.13916, 8.36283,   0.00000, 0.00000, -719.99945, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3916.17896, -1677.15479, 8.35621,   0.00000, 0.00000, -719.99945, -1, -1, -1, 500);
	CreateDynamicObject(3577, 4202.72705, -1553.70251, 8.98785,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(5740, 3900.48828, -1245.36157, -2.18332,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(6990, 3936.87061, -1389.20007, 8.41333,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(6990, 3827.49561, -1418.53638, 8.40654,   0.00000, 0.00000, -449.99973, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3874.23804, -1403.87109, 8.36912,   0.00000, 0.00000, -359.99957, -1, -1, -1, 500);
	CreateDynamicObject(5033, 3857.67236, -1436.22278, 21.75248,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(8390, 3882.97656, -1343.88379, 27.66489,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(4028, 3944.12891, -1452.26611, 21.65520,   0.00000, 0.00000, -89.99985, -1, -1, -1, 500);
	CreateDynamicObject(11008, 3902.04517, -1465.78955, 15.11375,   0.00000, 0.00000, -90.00008, -1, -1, -1, 500);
	CreateDynamicObject(12964, 3841.42505, -1273.68274, 8.26058,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(12850, 3811.46826, -1709.16956, 8.18670,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(12849, 3870.03589, -1701.64551, 11.49412,   0.00000, 0.00000, 180.00014, -1, -1, -1, 500);
	CreateDynamicObject(11317, 3922.30615, -1170.32031, 13.49690,   0.00000, 0.00000, -539.99945, -1, -1, -1, 500);
	CreateDynamicObject(8839, 3827.73999, -1591.86853, 13.09417,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(8435, 3936.73486, -1599.00684, 12.27180,   0.00000, 0.00000, -629.99951, -1, -1, -1, 500);
	CreateDynamicObject(3851, 3940.32910, -1174.55054, 10.29243,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3851, 3940.30884, -1161.42139, 10.29244,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3851, 3940.32202, -1192.34338, 10.29062,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3851, 3940.32275, -1148.26721, 10.29062,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3851, 3922.28857, -1142.59778, 10.29244,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3851, 3916.60669, -1148.27673, 10.29244,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3851, 3916.60547, -1161.41431, 10.29062,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(16779, 3931.43677, -1189.83118, 12.39970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16779, 3931.43262, -1182.34644, 12.39971,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16779, 3931.45776, -1174.81116, 12.39970,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16779, 3931.44458, -1167.31567, 12.39967,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16779, 3931.44873, -1159.81006, 12.39971,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16779, 3931.45874, -1152.32617, 12.39789,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16779, 3920.95288, -1152.34387, 12.39788,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16779, 3920.95752, -1159.80298, 12.39790,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3457, 3774.98242, -1452.25720, 11.35179,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3457, 3774.94995, -1325.56470, 11.35179,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3744.13989, -1151.28406, 10.41411,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3454, 3778.49194, -1388.34167, 12.54998,   0.00000, 0.00000, -809.99945, -1, -1, -1, 500);
	CreateDynamicObject(3454, 3778.53027, -1264.71863, 12.56458,   0.00000, 0.00000, -809.99945, -1, -1, -1, 500);
	CreateDynamicObject(2395, 3758.66333, -816.60321, 8.31334,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(2395, 3758.66577, -816.86127, 9.68513,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(5708, 3909.46802, -1615.53540, 18.58427,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8432, 3927.35840, -1546.63440, 12.31314,   0.00000, 0.00000, -630.00031, -1, -1, -1, 500);
	CreateDynamicObject(12923, 3883.87964, -1599.67432, 13.18853,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(12962, 3864.06616, -1568.67456, 8.25945,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(11449, 3874.65918, -1526.13196, 10.70752,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(8242, 3926.81934, -1708.18225, 12.61179,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3574, 4124.78613, -1439.54382, 10.95284,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3573, 4107.97852, -1438.24658, 10.95284,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3336, 3710.61108, -826.34833, 8.39309,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3886.51514, -1204.08325, 9.56640,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3891.77490, -1204.09155, 9.56640,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3897.02881, -1204.10706, 9.56640,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3902.31396, -1204.10034, 9.56640,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3907.57056, -1204.10620, 9.56458,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3912.83691, -1204.09631, 9.56458,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3918.11133, -1204.10559, 9.56458,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3923.36743, -1204.10620, 9.56640,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3928.63184, -1204.10364, 9.56640,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3933.88623, -1204.09778, 9.56640,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3939.15771, -1204.10193, 9.56640,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3941.81592, -1201.52832, 9.56458,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1633, 3947.56567, -1316.19629, 41.41048,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3941.78638, -1138.18762, 9.56458,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3939.19556, -1135.47925, 9.56458,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3933.92944, -1135.48755, 9.56640,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3928.64941, -1135.49817, 9.56639,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3923.36646, -1135.49915, 9.56640,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3918.10425, -1135.50403, 9.56640,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3912.83960, -1135.51099, 9.56640,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3907.57568, -1135.51233, 9.56640,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3902.31665, -1135.50781, 9.56639,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3897.04614, -1135.50549, 9.57234,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3891.78394, -1135.50281, 9.57234,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3886.52490, -1135.48962, 9.57234,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.88940, -1138.16919, 9.57234,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.89209, -1143.44446, 9.57234,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.89014, -1148.70410, 9.57234,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.89551, -1153.98022, 9.56640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.89819, -1159.25305, 9.56640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.90112, -1164.54590, 9.56640,   0.00000, 0.00000, -629.99933, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.91284, -1169.82959, 9.56640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.91431, -1175.11621, 9.56640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.90869, -1180.39075, 9.56640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.91699, -1185.65698, 9.56640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.92285, -1190.93164, 9.56640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.91797, -1196.19983, 9.56640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3883.91992, -1201.45520, 9.56640,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5269, 4026.88062, -1613.22607, 10.57020,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(10230, 4287.17432, -1506.58777, 6.81867,   0.00000, 0.00000, -449.99948, -1, -1, -1, 500);
	CreateDynamicObject(10140, 4286.12891, -1521.29834, 6.96583,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(10229, 4285.75244, -1506.36267, 5.70208,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(10231, 4285.67480, -1505.67920, 8.18685,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(925, 4188.59912, -1545.42407, 9.31725,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7102, 4016.72046, -1646.77649, 11.61391,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3256, 4079.31885, -1649.64099, 8.24886,   0.00000, 0.00000, 90.00004, -1, -1, -1, 500);
	CreateDynamicObject(929, 4122.16553, -1546.00647, 9.22223,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(3258, 4117.95654, -1642.98108, 8.26115,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3259, 4143.17139, -1560.71777, 8.23663,   0.00000, 0.00000, -359.99991, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4281.82715, -703.89044, 12.90174,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4274.25342, -743.33026, 12.90174,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4281.86768, -773.90002, 12.90174,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4274.24121, -813.28290, 12.90174,   0.00000, 0.00000, -179.99977, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4281.84717, -843.76331, 12.88449,   0.00000, 0.00000, 0.00019, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4274.26807, -880.59692, 12.88449,   0.00000, 0.00000, -179.99966, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4281.81445, -912.13879, 12.88449,   0.00000, 0.00000, -359.99945, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4274.22949, -951.93018, 12.90930,   0.00000, 0.00000, -539.99933, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4281.85156, -982.52423, 12.90930,   0.00000, 0.00000, -719.99945, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4274.23877, -1026.66418, 12.90149,   0.00000, 0.00000, -899.99939, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4281.87354, -1071.08008, 12.88342,   0.00000, 0.00000, -1079.99963, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4274.24609, -1110.40686, 12.88342,   0.00000, 0.00000, -1259.99951, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4281.82910, -1150.18298, 12.88342,   0.00000, 0.00000, -1439.99939, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4274.22949, -1189.86902, 12.87110,   0.00000, 0.00000, -1619.99976, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4281.84863, -1227.31519, 12.87110,   0.00000, 0.00000, -1800.00024, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4274.26465, -1266.66846, 12.87110,   0.00000, 0.00000, -1980.00073, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4281.85400, -1307.22705, 12.87110,   0.00000, 0.00000, -2160.00122, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4256.58447, -1136.25891, 12.88884,   0.00000, 0.00000, -1349.99890, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4218.36230, -1143.86304, 12.88884,   0.00000, 0.00000, -1529.99902, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4201.81396, -1210.62817, 12.88884,   0.00000, 0.00000, -1800.00024, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4201.81885, -1169.80017, 12.88884,   0.00000, 0.00000, -1800.00024, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3793.68481, -1167.70313, 12.98789,   0.00000, 0.00000, -1620.00037, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3801.31177, -1202.90942, 12.97595,   0.00000, 0.00000, -1800.00085, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3793.69873, -1244.30176, 12.98375,   0.00000, 0.00000, -1620.00061, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3801.28418, -1284.87585, 12.98375,   0.00000, 0.00000, -1800.00110, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3793.69995, -1325.34753, 12.98370,   0.00000, 0.00000, -1980.00146, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3801.27295, -1365.87769, 12.98370,   0.00000, 0.00000, -2160.00171, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3793.70117, -1402.40967, 12.96372,   0.00000, 0.00000, -2340.00195, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3801.34668, -1443.46545, 12.96372,   0.00000, 0.00000, -2520.00244, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3793.69653, -1485.64221, 12.95761,   0.00000, 0.00000, -2700.00293, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3801.30029, -1526.17224, 12.95761,   0.00000, 0.00000, -2880.00342, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3793.72168, -1565.61572, 12.95761,   0.00000, 0.00000, -3060.00415, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3801.29443, -1607.37671, 12.93754,   0.00000, 0.00000, -3240.00439, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3793.73291, -1646.86926, 12.93754,   0.00000, 0.00000, -3420.00464, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3807.83154, -1673.31165, 12.93754,   0.00000, 0.00000, -3510.00488, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3850.16699, -1680.95410, 12.95127,   0.00000, 0.00000, -3690.00537, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3891.46021, -1673.38806, 12.95086,   0.00000, 0.00000, -3870.00586, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3936.02808, -1680.96777, 12.93899,   0.00000, 0.00000, -4050.00635, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3981.76270, -1673.38757, 12.93899,   0.00000, 0.00000, -4230.00684, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4027.76318, -1680.95532, 12.94549,   0.00000, 0.00000, -4410.00732, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4068.35986, -1673.33826, 12.94549,   0.00000, 0.00000, -4590.00781, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4107.80615, -1680.98950, 12.94549,   0.00000, 0.00000, -4770.00830, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4147.79102, -1673.38269, 12.94549,   0.00000, 0.00000, -4950.00879, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.01318, -1143.90613, 12.97052,   0.00000, 0.00000, -4860.00879, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.61963, -1181.10791, 12.97052,   0.00000, 0.00000, -5040.00928, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3962.99463, -1225.67151, 12.96271,   0.00000, 0.00000, -5220.00977, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.63110, -1267.64075, 12.97047,   0.00000, 0.00000, -5400.01025, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.06421, -1314.39941, 12.97047,   0.00000, 0.00000, -5580.01074, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.67212, -1354.87109, 12.97052,   0.00000, 0.00000, -5760.01123, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.06226, -1393.48523, 12.97052,   0.00000, 0.00000, -5940.01172, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.67065, -1434.86389, 12.97052,   0.00000, 0.00000, -6120.01221, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.08203, -1477.00964, 12.96423,   0.00000, 0.00000, -6300.01270, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.70605, -1515.49414, 12.96423,   0.00000, 0.00000, -6480.01318, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.07080, -1556.68408, 12.96240,   0.00000, 0.00000, -6660.01367, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.65747, -1598.05823, 12.96418,   0.00000, 0.00000, -6840.01416, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.09595, -1640.01331, 12.93899,   0.00000, 0.00000, -7020.01465, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3947.13965, -1502.85791, 12.96423,   0.00000, 0.00000, -7110.01514, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3906.49487, -1510.41223, 12.96423,   0.00000, 0.00000, -7290.01563, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3865.78540, -1502.81860, 12.95761,   0.00000, 0.00000, -7470.01611, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3827.15674, -1510.40491, 12.95761,   0.00000, 0.00000, -7650.01660, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3817.23975, -1407.63440, 12.96372,   0.00000, 0.00000, -7650.01660, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3867.34790, -1400.08203, 12.96372,   0.00000, 0.00000, -7830.01709, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3916.52710, -1407.63513, 12.97052,   0.00000, 0.00000, -8010.01758, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4034.22852, -1251.12854, 12.80167,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4087.48438, -1258.76282, 12.80947,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4013.36450, -1275.85254, 12.82208,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4005.67139, -1315.86438, 12.97052,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4013.33643, -1355.87268, 12.82208,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4005.76343, -1395.16223, 12.82208,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4013.32593, -1435.18811, 12.82241,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4005.71924, -1475.20691, 12.97085,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4013.30615, -1515.05664, 12.97085,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4005.78833, -1555.61768, 12.95241,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4013.35645, -1596.18701, 12.95242,   0.00000, 0.00000, -359.99985, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4019.74854, -1629.71887, 12.95241,   0.00000, 0.00000, -449.99979, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4063.68188, -1622.13306, 12.94580,   0.00000, 0.00000, -629.99976, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4029.88037, -1461.71375, 12.97085,   0.00000, 0.00000, -629.99976, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4138.37305, -1461.69116, 12.93115,   0.00000, 0.00000, -629.99976, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4084.26318, -1469.27820, 12.95241,   0.00000, 0.00000, -809.99994, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4154.19287, -1445.86475, 12.93115,   0.00000, 0.00000, -899.99994, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4161.78662, -1416.47644, 12.93115,   0.00000, 0.00000, -1079.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4137.68750, -1379.97888, 12.80981,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4101.84814, -1346.52185, 12.80202,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4094.15771, -1284.55981, 12.80167,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4079.21509, -1319.96606, 12.82208,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4029.77539, -1312.38220, 12.82208,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4101.81885, -1629.68372, 12.98672,   0.00000, 0.00000, -809.99969, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4136.34033, -1622.17053, 17.16686,   0.00000, 0.00000, -989.99963, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4172.77637, -1629.67688, 22.10638,   0.00000, 0.00000, -1169.99963, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4210.72705, -1622.17297, 23.81007,   0.00000, 0.00000, -1349.99976, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4251.73389, -1629.69238, 24.50770,   0.00000, 0.00000, -1529.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4290.67090, -1622.16418, 24.54406,   0.00000, 0.00000, -1710.00049, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4324.55322, -1629.69800, 24.03193,   0.00000, 0.00000, -1890.00085, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4357.75000, -1622.17322, 22.63608,   0.00000, 0.00000, -2070.00146, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4390.75635, -1629.67664, 19.93453,   0.00000, 0.00000, -2250.00195, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4423.86816, -1622.17017, 13.84664,   0.00000, 0.00000, -2430.00220, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3807.62793, -1119.94983, 11.59819,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3807.93848, -1211.60046, 11.58627,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3807.91211, -1400.15332, 11.56624,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3807.90869, -1502.77710, 11.56013,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3963.08667, -1666.64771, 11.68995,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3956.41553, -1510.32690, 11.71519,   0.00000, 0.00000, 269.99994, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3956.43799, -1407.39551, 11.72147,   0.00000, 0.00000, 269.99994, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4020.04810, -1461.94788, 11.72181,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4147.61426, -1468.96753, 11.68211,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4267.51025, -1014.94745, 11.66050,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4208.51758, -1008.02612, 11.66050,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4267.61084, -1143.60632, 11.63437,   0.00000, 0.00000, -449.99982, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4208.47021, -1136.45190, 11.63979,   0.00000, 0.00000, -629.99988, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4208.41455, -1228.39026, 11.63979,   0.00000, 0.00000, -629.99988, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3956.36523, -1126.64551, 11.57384,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1315, 3956.37915, -1218.87134, 11.57304,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1315, 4128.39697, -940.73865, 11.55544,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(624, 3913.69165, -658.63330, 7.49852,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4043.89453, -652.36285, 7.29760,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4117.00879, -652.50720, 7.38617,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4145.80518, -651.92487, 7.33619,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 4188.82031, -1183.72522, 8.07893,   0.00000, 0.00000, 78.75002, -1, -1, -1, 500);
	CreateDynamicObject(620, 4188.74219, -1154.92773, 8.40193,   0.00000, 0.00000, 78.75002, -1, -1, -1, 500);
	CreateDynamicObject(620, 4188.56934, -1213.24976, 8.14311,   0.00000, 0.00000, 78.75002, -1, -1, -1, 500);
	CreateDynamicObject(716, 3955.81396, -1134.24817, 8.48646,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 3955.82983, -1203.98547, 8.46626,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 3808.61230, -1134.24927, 8.49240,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(716, 3808.62329, -1203.96399, 8.49240,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 3955.82813, -1022.68481, 8.49240,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 3955.86279, -1044.97131, 8.47402,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 3955.85767, -1112.05029, 8.47402,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 3955.86035, -1226.22839, 8.45484,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 3915.03076, -1659.63843, 8.25971,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 3932.59424, -1659.54138, 8.18148,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1346, 3888.19189, -702.86816, 9.80718,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1211, 4078.93335, -1249.71179, 8.81779,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4258.47803, -660.40363, 7.21104,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1346, 4288.73975, -701.90948, 9.54657,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1346, 4250.52197, -1127.67932, 9.55373,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(13295, 4187.57617, -1672.18518, 14.74509,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4451.47900, -1625.92529, 8.61196,   0.00000, 0.00000, -359.99957, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.34424, -1631.01514, 8.51858,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.31348, -1643.03247, 8.51196,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.31348, -1655.03320, 8.51196,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.31201, -1667.04553, 8.51196,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.33691, -1608.96509, 8.51859,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.33496, -1596.94897, 8.51859,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.34424, -1584.94629, 8.51858,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.33545, -1572.94446, 8.51859,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.33252, -1560.93689, 8.51859,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.51318, -1666.87146, 8.51859,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.49756, -1654.86902, 8.51859,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.48389, -1642.85278, 8.51859,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.41016, -1572.81799, 8.51859,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.41064, -1560.81860, 8.51859,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.42871, -1548.80359, 8.51859,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.42188, -1536.79675, 8.51859,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.40332, -1524.94043, 8.51859,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4492.26611, -1622.05896, 10.81754,   0.00000, 90.24079, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4492.27148, -1624.57971, 10.81754,   0.00000, 90.24079, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4492.25781, -1627.12585, 10.81753,   0.00000, 90.24079, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4492.24805, -1629.67773, 10.79253,   0.00000, 90.24079, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3268, 4610.80322, -1647.62732, 8.51859,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(3268, 4569.03125, -1647.60925, 8.51196,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3268, 4527.90234, -1647.61426, 8.51196,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3279, 4499.12695, -1707.70190, 8.41258,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3279, 4677.05176, -1706.87476, 8.36921,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3279, 4676.53906, -1520.71667, 8.44420,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3279, 4499.72754, -1520.16565, 8.46920,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(16093, 4614.72900, -1571.12671, 12.54943,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3749, 4453.21924, -1625.91394, 14.29225,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(7894, 4266.29492, -1231.74011, 8.78289,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(16638, 4613.75781, -1571.18799, 10.78437,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3271, 4524.22803, -1636.18933, 8.25620,   0.00000, 0.00000, -168.74997, -1, -1, -1, 500);
	CreateDynamicObject(8247, 4527.69922, -1580.29016, 12.44637,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(16098, 4573.13525, -1580.30786, 13.23213,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3881, 4446.31055, -1638.21069, 10.36353,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(16641, 4557.82471, -1538.55554, 10.09844,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4501.49414, -1581.73792, 22.70806,   0.00000, 0.00000, 44.99999, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4500.21484, -1666.24756, 22.70144,   0.00000, 0.00000, 134.99997, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4634.22412, -1665.96021, 22.70806,   0.00000, 0.00000, 224.99995, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4635.01953, -1581.00171, 22.70806,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(18248, 4534.56055, -1626.17517, 16.43512,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(10771, 4752.26758, -1616.47766, 5.13847,   0.00000, 0.00000, -449.99942, -1, -1, -1, 500);
	CreateDynamicObject(11145, 4752.29639, -1553.59839, 3.93600,   0.00000, 0.00000, -449.99960, -1, -1, -1, 500);
	CreateDynamicObject(11146, 4752.84082, -1607.47693, 11.97416,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(687, 4532.48975, -1560.46338, 8.53834,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(687, 4543.36426, -1557.19958, 8.53834,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(687, 4515.32568, -1556.39783, 8.53834,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(725, 4535.85352, -1555.88013, 7.38715,   0.00000, 0.00000, 56.25002, -1, -1, -1, 500);
	CreateDynamicObject(725, 4570.80762, -1555.66394, 7.56215,   0.00000, 0.00000, 56.25002, -1, -1, -1, 500);
	CreateDynamicObject(687, 4575.77197, -1563.46082, 8.53834,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(687, 4606.48145, -1558.30005, 8.53834,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(687, 4631.11475, -1558.45166, 8.53834,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(10770, 4744.72021, -1619.71106, 38.37095,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(11237, 4744.72070, -1619.71606, 38.36878,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(11149, 4747.09131, -1610.39758, 11.67743,   0.00000, 0.00000, -449.99948, -1, -1, -1, 500);
	CreateDynamicObject(8832, 2885.49292, -795.24554, 4.91135,   0.00000, 352.26508, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8832, 2885.49268, -790.35565, 4.89913,   0.00000, 352.26508, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4116.10840, -1687.30261, 9.53510,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4110.87354, -1687.30688, 9.53511,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4105.62598, -1687.29883, 9.53356,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4100.37549, -1687.30652, 9.53511,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4095.09790, -1687.30737, 9.53511,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4089.82666, -1687.29810, 9.53511,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4058.33862, -1687.33911, 9.52735,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4053.07373, -1687.33948, 9.52735,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4047.79785, -1687.33252, 9.52735,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4042.52222, -1687.31873, 9.52735,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4037.26074, -1687.32751, 9.52735,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4032.00244, -1687.34106, 9.52735,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3836.20410, -1495.94946, 9.54026,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3830.92847, -1495.95142, 9.54026,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3825.65503, -1495.95532, 9.54026,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3820.39258, -1495.96130, 9.54026,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3815.12964, -1495.95789, 9.54026,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3812.43433, -1493.36560, 9.54026,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3812.43799, -1488.08154, 9.54026,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3812.43750, -1482.80200, 9.54026,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3812.44873, -1477.53296, 9.54026,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3812.45923, -1472.26404, 9.54026,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3812.47095, -1466.99683, 9.54026,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3812.45923, -1461.74036, 9.54026,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3812.45728, -1456.48157, 9.54026,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3812.45630, -1451.23047, 9.54026,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3812.45630, -1445.98462, 9.54026,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3812.46240, -1440.72339, 9.54026,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 4267.06543, -1022.42944, 8.21048,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 4267.08545, -1126.98816, 8.39674,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 4267.04102, -1075.04834, 8.40450,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(624, 4010.31689, -651.61383, 7.54001,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10676, 4314.14551, -1061.21497, 9.15787,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3267, 4498.98682, -1707.65527, 24.05115,   0.00000, 0.00000, 90.00010, -1, -1, -1, 500);
	CreateDynamicObject(3267, 4499.71631, -1520.18445, 24.10777,   0.00000, 0.00000, 90.00010, -1, -1, -1, 500);
	CreateDynamicObject(3267, 4676.36328, -1520.72900, 24.08277,   0.00000, 0.00000, 90.00010, -1, -1, -1, 500);
	CreateDynamicObject(3267, 4676.94189, -1706.88208, 24.00777,   0.00000, 0.00000, 90.00010, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.31445, -1679.05969, 8.51571,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.31885, -1691.05872, 8.51571,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.32031, -1703.03931, 8.51571,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.32715, -1548.93835, 8.51859,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.26074, -1536.94470, 8.55749,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.27393, -1524.95374, 8.55749,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.25439, -1512.94995, 8.56069,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8149, 4570.97021, -1513.16418, 9.49710,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(8149, 4563.80859, -1714.68323, 9.47708,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4492.21289, -1714.84802, 8.51571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.57227, -1714.91272, 8.53644,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.56982, -1702.92029, 8.53644,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.57129, -1690.92175, 8.53644,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.52881, -1678.88416, 8.53644,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.42285, -1584.83044, 8.51859,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.41357, -1596.82764, 8.51859,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.42773, -1608.83630, 8.51859,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.43896, -1620.84485, 8.51859,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8149, 4613.06543, -1513.16406, 9.48249,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(987, 4684.50195, -1513.01807, 8.56682,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(8149, 4605.83691, -1714.66833, 9.46246,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4684.62695, -1622.20923, 10.85436,   0.00000, 90.24079, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4684.62988, -1624.72534, 10.85434,   0.00000, 90.24079, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4684.63477, -1627.23010, 10.85435,   0.00000, 90.24079, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4684.63525, -1629.68225, 10.82934,   0.00000, 90.24079, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(687, 4562.12305, -1661.61670, 8.53834,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(687, 4572.43018, -1665.13367, 8.53834,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(687, 4584.77783, -1663.81836, 8.53835,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(687, 4621.92041, -1664.57813, 8.53834,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(687, 4603.03516, -1660.92859, 8.53172,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(4874, 4620.37207, -1688.55164, 12.25068,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(7981, 4642.95801, -1571.34497, 13.51693,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8251, 4590.15771, -1540.20923, 12.47389,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1682, 4640.81396, -1566.82690, 24.97116,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8251, 4556.06592, -1540.21558, 12.47388,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(16096, 4675.56738, -1533.90039, 10.47565,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16096, 4498.99170, -1532.16504, 10.46632,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5192, 4550.41016, -1644.95313, 12.06977,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(10831, 4461.34912, -1567.32141, 13.44223,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3637, 4042.41260, -1713.65125, 16.27226,   0.00000, 0.00000, -449.99960, -1, -1, -1, 500);
	CreateDynamicObject(8251, 4706.37598, -1532.85486, 12.49463,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3798, 4697.27783, -1527.40344, 8.56336,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 4700.78613, -1524.09021, 8.56336,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 4715.74512, -1529.99597, 8.44862,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10814, 4631.62598, -1526.24500, 12.50324,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 4696.34717, -1532.16516, 8.56336,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 4696.90332, -1537.65356, 8.56336,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 4716.41016, -1541.69434, 8.56336,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 4709.20898, -1524.16150, 8.44862,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4716.23145, -1539.67883, 8.68335,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4716.84814, -1538.19214, 8.68335,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4716.27197, -1536.83398, 8.68335,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4717.10205, -1537.15942, 8.68335,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4716.11328, -1533.22449, 8.68335,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4717.11670, -1535.15027, 8.68335,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4712.12451, -1524.00330, 8.68335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4711.97656, -1522.85718, 8.68335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4713.56348, -1522.44226, 8.68335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4713.53076, -1523.69250, 8.68335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4703.40039, -1522.19543, 8.68335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4705.10693, -1522.11157, 8.68335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4702.77441, -1523.78784, 8.68335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4704.23047, -1523.29712, 8.68335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4705.56982, -1523.56140, 8.68335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4705.64746, -1524.53699, 8.68335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2358, 4704.01416, -1524.47192, 8.68335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 3808.65430, -1414.75708, 8.45256,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 3808.64722, -1495.23889, 8.46032,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 3988.73120, -1398.50549, 8.46694,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 3987.97144, -1383.79578, 8.46694,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 3988.29565, -1332.61450, 8.47323,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 3987.84888, -1315.44653, 8.47323,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(624, 4026.59985, -795.54852, 7.46947,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4026.60767, -805.32715, 7.46947,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 4267.03711, -1150.96033, 8.39674,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 4267.05273, -1220.38550, 8.39674,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(624, 3923.93530, -1546.11157, 7.43740,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(624, 3922.30371, -1559.30994, 7.51240,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(624, 3929.59741, -1556.56274, 7.41240,   0.00000, 0.00000, 78.75003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4289.20703, -892.09930, 8.40316,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4333.43896, -914.94580, 9.47167,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4328.18018, -914.93457, 9.47167,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4322.90967, -914.92261, 9.47167,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4333.36865, -946.34814, 9.47487,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4328.10840, -946.35040, 9.47487,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4322.84082, -946.34955, 9.47487,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(7529, 4337.53467, -661.86829, 10.82960,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(8068, 4330.83984, -731.77228, 14.92009,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4289.16162, -1016.41687, 8.40530,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 4289.20068, -1230.16980, 8.39387,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 4289.19141, -1250.04309, 8.38499,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(620, 3827.77197, -1112.09204, 8.63311,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 3875.60767, -1112.23376, 8.45811,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 3850.05664, -1111.88367, 8.55811,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 3827.43896, -1045.89966, 8.55781,   0.00000, 0.00000, 11.25003, -1, -1, -1, 500);
	CreateDynamicObject(620, 3872.38843, -1045.86511, 8.53281,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 3848.10156, -1045.80994, 8.55781,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 3955.74805, -1495.72766, 8.46694,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3922.89673, -1437.60876, 9.54688,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3922.89966, -1442.87000, 9.54688,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3922.90283, -1448.14368, 9.54688,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3922.89990, -1453.40881, 9.54688,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3922.89478, -1458.67078, 9.54688,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3922.88477, -1463.93762, 9.54688,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3922.87769, -1469.20923, 9.54688,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3922.88306, -1474.47168, 9.54688,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3922.87280, -1479.74988, 9.54688,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3922.90894, -1485.02771, 9.54688,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3922.91577, -1490.29553, 9.54688,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(620, 3861.22632, -956.19153, 8.06554,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(725, 4614.26660, -1557.46411, 7.58715,   0.00000, 0.00000, 56.25002, -1, -1, -1, 500);
	CreateDynamicObject(1332, 4249.00342, -1070.22974, 9.26541,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1333, 4248.97754, -1067.48633, 9.12479,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(11148, 4752.28467, -1607.49011, 12.56324,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(11147, 4752.29248, -1555.76953, 4.75400,   0.00000, 0.00000, -449.99948, -1, -1, -1, 500);
	CreateDynamicObject(3277, 4744.77979, -1649.90222, 20.71386,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3267, 4744.78857, -1649.91687, 20.77430,   0.00000, 0.00000, 90.00010, -1, -1, -1, 500);
	CreateDynamicObject(3277, 4744.73145, -1580.80725, 17.70012,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3267, 4744.65430, -1580.79285, 17.75288,   0.00000, 0.00000, 90.00010, -1, -1, -1, 500);
	CreateDynamicObject(12940, 3771.84058, -1222.53137, 12.18811,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(4113, 3936.97656, -998.44977, 44.22697,   0.00000, 0.00000, 101.24995, -1, -1, -1, 500);
	CreateDynamicObject(620, 3896.91504, -948.72424, 7.83392,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(8260, 3899.83276, -992.94000, 11.95584,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 3893.86377, -957.89917, 8.13392,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1332, 3890.79468, -968.72888, 9.31107,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1358, 3896.01538, -968.51294, 9.45192,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1415, 3908.27197, -969.11102, 8.41408,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(16776, 3857.30371, -1017.88593, 17.50516,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 3797.82080, -738.30817, 8.84907,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 3917.81201, -688.34186, 8.84199,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1344, 3827.46240, -935.55518, 9.09997,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1344, 3827.42212, -938.78961, 9.09997,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3858.26929, -918.22070, 8.26801,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(13591, 3849.34741, -920.07910, 8.70403,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 4203.20605, -763.91644, 8.73785,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1211, 4283.24561, -870.83295, 8.75218,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1211, 4272.74561, -1051.92749, 8.77698,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1211, 4228.30029, -1226.52039, 8.75652,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1211, 4047.73193, -1682.37109, 8.82736,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1211, 3802.69531, -1376.00488, 8.82361,   0.00000, 0.00000, 258.75000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 3802.72144, -1556.26208, 8.82530,   0.00000, 0.00000, 258.75000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 3961.60840, -1200.51697, 8.83821,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 3802.73486, -1093.74646, 8.83238,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1211, 3802.70044, -923.15894, 8.85076,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1211, 4115.21484, -688.34497, 8.83494,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 4056.46265, -788.64203, 8.83235,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 4079.21460, -1470.72778, 8.81354,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 4163.21777, -1455.81641, 8.79884,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1267, 3938.71265, -1201.44043, 24.20713,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1260, 4308.08350, -1048.36841, 21.80109,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4730, 3938.55298, -1200.61328, 29.55859,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(4729, 4308.50342, -1048.19641, 27.88050,   0.00000, 0.00000, 199.92172, -1, -1, -1, 500);
	CreateDynamicObject(1259, 4331.71387, -701.82941, 23.40487,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1267, 3998.86963, -1645.19666, 24.12399,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(4730, 3998.16211, -1644.75085, 29.47325,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(621, 4034.08789, -659.31012, 7.97282,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(740, 4171.89746, -1065.65515, 8.48115,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(740, 4172.04834, -1035.25061, 8.48778,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(740, 3901.88843, -958.98395, 8.89405,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(740, 3853.63696, -959.04309, 8.77567,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 4257.59717, -652.36523, 7.64997,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 4255.81201, -1100.55615, 8.02773,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(740, 4009.01636, -886.82483, 8.57570,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 4058.89771, -798.08545, 7.98341,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 3845.87964, -953.87024, 8.10179,   0.00000, 0.00000, 56.25002, -1, -1, -1, 500);
	CreateDynamicObject(1346, 3977.63110, -1126.64185, 9.63568,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(740, 4077.90283, -1048.01892, 8.73114,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(740, 4092.13867, -1048.31812, 8.63114,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4723.27588, -1548.41943, 22.75629,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4723.32617, -1605.80420, 22.75629,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4723.31055, -1669.90710, 22.71987,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4723.22559, -1577.96387, 22.75629,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4723.36035, -1636.08154, 22.71987,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(3625, 4713.58252, -1718.02283, 11.06557,   0.00000, 0.00000, 0.00013, -1, -1, -1, 500);
	CreateDynamicObject(3573, 4715.12451, -1700.59705, 11.22813,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3575, 4715.52686, -1682.85498, 11.22813,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 3952.26270, -652.21191, 8.10118,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1267, 4265.57617, -705.74188, 24.26026,   0.00000, 0.00000, -224.99982, -1, -1, -1, 500);
	CreateDynamicObject(7913, 4331.64941, -703.54242, 29.39646,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(4239, 4266.29639, -706.19684, 29.60082,   0.00000, 0.00000, 134.99998, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4635.03613, -1731.32886, 22.72592,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4542.40381, -1731.29382, 22.72591,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4589.17480, -1490.03748, 22.74592,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4479.32520, -1490.99329, 22.74592,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4470.56543, -1610.16602, 22.70144,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(1278, 4470.65479, -1641.47986, 22.70144,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(3279, 4463.05811, -1640.67322, 8.58758,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(16096, 4444.34912, -1613.27209, 10.45274,   0.00000, 0.00000, 89.99994, -1, -1, -1, 500);
	CreateDynamicObject(866, 4639.97217, -1611.11902, 8.59077,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(866, 4647.60352, -1602.66565, 8.54077,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(866, 4633.29932, -1575.04199, 8.59077,   0.00000, 0.00000, 11.25003, -1, -1, -1, 500);
	CreateDynamicObject(866, 4645.75781, -1589.37903, 8.61577,   0.00000, 0.00000, 11.25003, -1, -1, -1, 500);
	CreateDynamicObject(866, 4643.07617, -1645.96887, 8.56577,   0.00000, 0.00000, 11.25003, -1, -1, -1, 500);
	CreateDynamicObject(866, 4652.31445, -1634.79443, 8.56577,   0.00000, 0.00000, 11.25003, -1, -1, -1, 500);
	CreateDynamicObject(866, 4634.73291, -1633.70789, 8.51577,   0.00000, 0.00000, 11.25003, -1, -1, -1, 500);
	CreateDynamicObject(866, 4635.88770, -1612.55444, 8.56577,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(866, 4653.80518, -1638.27161, 8.56577,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(866, 4608.67480, -1664.54187, 8.53415,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(866, 4626.48242, -1666.28027, 8.51577,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(866, 4528.38379, -1660.57080, 8.56577,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(866, 4501.85156, -1652.21973, 8.50915,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(866, 4503.83008, -1648.40588, 8.55915,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(866, 4621.73145, -1556.51233, 8.61577,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(866, 4529.77686, -1564.20276, 8.59077,   0.00000, 0.00000, 337.50000, -1, -1, -1, 500);
	CreateDynamicObject(866, 4572.71875, -1560.82922, 8.54077,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(866, 4500.81250, -1592.66711, 8.59077,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1348, 4578.74121, -1530.60645, 9.24860,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4209.48975, -1151.21631, 8.39674,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 4209.32471, -1220.75012, 8.39674,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(11417, 4106.75928, -1242.31348, 13.31877,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(3867, 4300.01660, -1329.31079, 9.84022,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(3867, 4316.76709, -1329.31104, 9.83145,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(710, 3881.65405, -1656.23096, 23.83389,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(710, 3925.49707, -1551.79370, 23.73458,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1299, 3899.27563, -747.06396, 8.74761,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1299, 3914.70044, -741.19348, 8.69651,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1344, 4169.18164, -725.78406, 9.01206,   0.00000, 0.00000, -269.99969, -1, -1, -1, 500);
	CreateDynamicObject(1344, 4169.23828, -721.77222, 9.01206,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1440, 4130.04639, -823.08252, 8.70572,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1415, 4090.59814, -839.85034, 8.34569,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1372, 4090.62549, -844.29437, 8.35989,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1440, 3947.13672, -1581.97644, 8.74203,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3941.60547, -1577.81860, 8.27417,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4194.65967, -1647.35742, 9.70655,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(910, 3754.12573, -698.85870, 9.57826,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1440, 3744.84546, -698.79071, 8.80322,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3594, 3739.92310, -804.25513, 8.89131,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3736.29419, -701.32263, 8.28639,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1440, 3740.44458, -1167.97461, 8.77075,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3743.23145, -1168.42004, 8.25289,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(710, 3851.29810, -857.97131, 23.72842,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 3855.84937, -869.41370, 7.95892,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(710, 3854.40625, -850.48267, 23.67842,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 3894.19238, -873.31714, 8.08392,   0.00000, 0.00000, 281.25000, -1, -1, -1, 500);
	CreateDynamicObject(620, 3901.25195, -872.37555, 7.98392,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1334, 3940.73462, -847.16296, 9.38624,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3923.43262, -814.03198, 8.24966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1372, 3939.41992, -836.71143, 8.40331,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3593, 3914.38184, -842.82507, 8.73357,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3594, 3920.02222, -842.50360, 8.85458,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4031.81689, -1727.07166, 9.49820,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4037.10059, -1727.08301, 9.49820,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4042.37598, -1727.07336, 9.49820,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4047.64282, -1727.07251, 9.49820,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4052.91187, -1727.06091, 9.49820,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4058.18799, -1727.06519, 9.49820,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4092.84912, -1727.04260, 9.49820,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4098.10840, -1727.02673, 9.49820,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4103.37646, -1727.04041, 9.51177,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4108.65869, -1727.03406, 9.50856,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4113.92383, -1727.04102, 9.50856,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 4119.20068, -1727.03662, 9.50856,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1267, 3841.27368, -1658.27722, 24.43127,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(4730, 3840.48828, -1657.80872, 29.80806,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(710, 3864.53540, -1629.71826, 23.75296,   0.00000, 0.00000, 202.49997, -1, -1, -1, 500);
	CreateDynamicObject(620, 3873.83130, -1628.30237, 7.58345,   0.00000, 0.00000, 112.49998, -1, -1, -1, 500);
	CreateDynamicObject(620, 3844.00391, -1478.46619, 7.90846,   0.00000, 0.00000, 168.75000, -1, -1, -1, 500);
	CreateDynamicObject(620, 3844.16040, -1469.46753, 7.98346,   0.00000, 0.00000, 168.75000, -1, -1, -1, 500);
	CreateDynamicObject(620, 3843.92822, -1460.66577, 8.18346,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(620, 3843.24023, -1451.94922, 7.88346,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(621, 3834.58691, -1491.38684, 7.41971,   0.00000, 0.00000, 236.24998, -1, -1, -1, 500);
	CreateDynamicObject(3287, 4097.77148, -1722.34900, 12.87519,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3287, 4104.36572, -1722.33240, 12.92685,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(3287, 4111.01172, -1722.33215, 13.00185,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3643, 4099.44824, -1702.56360, 14.06593,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3257, 4109.16553, -1700.28406, 8.21329,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4244.74316, -1035.49219, 11.17239,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4238.08643, -1035.44836, 11.17239,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4231.33008, -1035.47070, 11.17239,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4224.71045, -1035.44043, 11.17239,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4218.04346, -1035.45300, 11.17239,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4211.36133, -1035.52136, 11.17239,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(630, 3926.29077, -1196.96643, 9.29259,   0.00000, 0.00000, 11.25003, -1, -1, -1, 500);
	CreateDynamicObject(630, 3939.58691, -1197.02979, 9.26760,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(630, 3939.16675, -1143.68005, 9.26578,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(630, 3917.49146, -1143.32983, 9.29259,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(630, 3917.64160, -1166.30994, 9.26760,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1299, 3838.98804, -819.37421, 8.74761,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3834.24194, -805.07153, 8.26801,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(710, 4071.15039, -664.41003, 23.76980,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4179.96289, -868.36865, 7.32609,   0.00000, 0.00000, 44.99999, -1, -1, -1, 500);
	CreateDynamicObject(647, 3890.41040, -871.54401, 9.67368,   0.00000, 0.00000, 134.99998, -1, -1, -1, 500);
	CreateDynamicObject(800, 3905.83643, -873.61975, 10.03563,   0.00000, 0.00000, 44.99995, -1, -1, -1, 500);
	CreateDynamicObject(800, 3852.57446, -865.66180, 9.86063,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(800, 4253.34619, -1104.12463, 10.07161,   0.00000, 0.00000, 78.75002, -1, -1, -1, 500);
	CreateDynamicObject(800, 4252.54541, -1110.24878, 10.02163,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(800, 4253.19922, -1116.01318, 9.92160,   0.00000, 0.00000, 78.74997, -1, -1, -1, 500);
	CreateDynamicObject(1440, 4225.67725, -1073.01501, 8.67959,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 4219.73584, -1075.69897, 8.18673,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1372, 4229.90332, -1060.96265, 8.34377,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1372, 4227.49072, -1060.99097, 8.34377,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(800, 4253.08057, -1098.55005, 9.97160,   0.00000, 0.00000, 78.75002, -1, -1, -1, 500);
	CreateDynamicObject(800, 4252.67920, -1092.05103, 10.07160,   0.00000, 0.00000, -11.25001, -1, -1, -1, 500);
	CreateDynamicObject(647, 3814.94653, -1493.21313, 9.59822,   0.00000, 0.00000, 168.75002, -1, -1, -1, 500);
	CreateDynamicObject(647, 3815.06519, -1488.51709, 9.52322,   0.00000, 0.00000, 168.75002, -1, -1, -1, 500);
	CreateDynamicObject(647, 3814.89551, -1483.66199, 9.59822,   0.00000, 0.00000, 67.50001, -1, -1, -1, 500);
	CreateDynamicObject(647, 3815.03369, -1479.23218, 9.57322,   0.00000, 0.00000, 202.50003, -1, -1, -1, 500);
	CreateDynamicObject(647, 3815.07983, -1474.79028, 9.62322,   0.00000, 0.00000, 191.25006, -1, -1, -1, 500);
	CreateDynamicObject(647, 3814.96021, -1470.17688, 9.44822,   0.00000, 0.00000, 202.50003, -1, -1, -1, 500);
	CreateDynamicObject(621, 3814.71777, -1465.36841, 8.09471,   0.00000, 0.00000, 236.24998, -1, -1, -1, 500);
	CreateDynamicObject(621, 3814.80786, -1458.08875, 8.04471,   0.00000, 0.00000, 236.24998, -1, -1, -1, 500);
	CreateDynamicObject(800, 4253.39600, -1085.89844, 10.27160,   0.00000, 0.00000, 101.24995, -1, -1, -1, 500);
	CreateDynamicObject(800, 4257.58105, -1094.74219, 9.84660,   0.00000, 0.00000, 258.75000, -1, -1, -1, 500);
	CreateDynamicObject(800, 4257.33789, -1089.28784, 10.02936,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(620, 4256.62598, -1106.64172, 7.89488,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(800, 4176.48193, -868.44415, 9.95549,   0.00000, 0.00000, 135.00005, -1, -1, -1, 500);
	CreateDynamicObject(800, 4180.05322, -872.25958, 10.00548,   0.00000, 0.00000, 337.50000, -1, -1, -1, 500);
	CreateDynamicObject(800, 4171.74805, -865.02002, 10.13051,   0.00000, 0.00000, 33.74998, -1, -1, -1, 500);
	CreateDynamicObject(800, 3853.11304, -854.95386, 10.16063,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(800, 3853.34473, -872.40961, 9.86063,   0.00000, 0.00000, 168.75002, -1, -1, -1, 500);
	CreateDynamicObject(621, 4251.96631, -1080.50781, 8.00614,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 4252.18457, -1120.84644, 8.14488,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(800, 3878.72266, -1627.77551, 10.18518,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(800, 3885.33301, -1627.55542, 10.18520,   0.00000, 0.00000, 179.99986, -1, -1, -1, 500);
	CreateDynamicObject(800, 3891.64282, -1627.65491, 10.26020,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(800, 3898.52710, -1627.88330, 10.18517,   0.00000, 0.00000, 168.75006, -1, -1, -1, 500);
	CreateDynamicObject(800, 3823.28589, -879.85272, 10.23566,   0.00000, 0.00000, -11.25001, -1, -1, -1, 500);
	CreateDynamicObject(647, 3818.56250, -878.71790, 9.64868,   0.00000, 0.00000, 258.75006, -1, -1, -1, 500);
	CreateDynamicObject(620, 3828.24365, -881.36926, 8.20891,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(800, 4023.95557, -796.87512, 10.14887,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(800, 4024.10352, -803.27496, 10.04888,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(647, 4023.27100, -814.70587, 9.66191,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(800, 4024.07935, -809.17554, 9.92388,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(647, 4167.37695, -862.63989, 9.61853,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 4175.04150, -864.42993, 7.86502,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 4179.89697, -864.78113, 8.15376,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(800, 4184.06299, -970.46271, 10.12935,   0.00000, 0.00000, 78.74995, -1, -1, -1, 500);
	CreateDynamicObject(647, 4183.06738, -964.81616, 9.64240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(800, 4052.36548, -1051.11084, 10.14772,   0.00000, 0.00000, -281.24979, -1, -1, -1, 500);
	CreateDynamicObject(800, 4058.81934, -1050.17566, 10.32274,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(647, 4063.52026, -1050.77966, 9.71077,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(800, 3930.28735, -1470.23083, 10.26682,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(800, 3930.48608, -1477.06738, 10.24182,   0.00000, 0.00000, -438.74957, -1, -1, -1, 500);
	CreateDynamicObject(647, 3932.92725, -1482.58350, 9.70484,   0.00000, 0.00000, 67.50006, -1, -1, -1, 500);
	CreateDynamicObject(800, 3991.86011, -1551.94897, 10.16679,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(800, 3984.62109, -1552.03662, 10.19179,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(647, 3988.19214, -1548.44373, 9.72984,   0.00000, 0.00000, 337.50000, -1, -1, -1, 500);
	CreateDynamicObject(647, 3869.81128, -1628.93762, 9.59822,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(3258, 4107.21143, -1698.30139, 21.63668,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(647, 3850.28760, -1664.91345, 9.66693,   0.00000, 0.00000, 67.50001, -1, -1, -1, 500);
	CreateDynamicObject(647, 3850.31836, -1660.49780, 9.64193,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(647, 3850.33008, -1656.03418, 9.74193,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(647, 3850.59497, -1651.50952, 9.71693,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(647, 3850.61572, -1647.05444, 9.59193,   0.00000, 0.00000, 337.50000, -1, -1, -1, 500);
	CreateDynamicObject(647, 3850.41235, -1642.84558, 9.66693,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(647, 3850.39307, -1638.29944, 9.46693,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(647, 3850.49390, -1633.86157, 9.64193,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(647, 3850.45288, -1629.38940, 9.69193,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1332, 3945.53369, -725.37518, 9.27834,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1332, 3945.57129, -729.78381, 9.27834,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1334, 4116.24463, -757.65076, 9.31782,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1332, 4112.55322, -757.72406, 9.24268,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1440, 4164.78174, -749.44592, 8.72296,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3765.73193, -887.27979, 8.28535,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(800, 3817.37158, -977.76300, 10.09227,   0.00000, 0.00000, 258.75000, -1, -1, -1, 500);
	CreateDynamicObject(647, 3812.66431, -977.15277, 9.68030,   0.00000, 0.00000, 258.75000, -1, -1, -1, 500);
	CreateDynamicObject(620, 3848.25049, -1626.88110, 7.95846,   0.00000, 0.00000, 168.74994, -1, -1, -1, 500);
	CreateDynamicObject(800, 4078.31543, -953.48810, 10.04887,   0.00000, 0.00000, 258.75000, -1, -1, -1, 500);
	CreateDynamicObject(647, 4083.35767, -954.06012, 9.63691,   0.00000, 0.00000, 213.75000, -1, -1, -1, 500);
	CreateDynamicObject(620, 4198.59326, -651.75964, 8.08885,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 4206.17969, -652.14032, 8.07745,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3737.68213, -697.08929, 9.58307,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3737.68311, -691.82269, 9.58307,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 3737.67041, -686.54517, 9.58307,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(647, 3891.04614, -1662.50354, 9.93705,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(647, 3890.63379, -1658.21814, 9.97749,   0.00000, 0.00000, 157.49997, -1, -1, -1, 500);
	CreateDynamicObject(643, 3921.28760, -1165.11914, 8.73791,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1633, 3849.20508, -1052.81409, 25.60331,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3630, 4467.75244, -1571.72876, 10.01121,   0.00000, 0.00000, -90.00008, -1, -1, -1, 500);
	CreateDynamicObject(12930, 4459.32910, -1561.08386, 9.37382,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(18260, 4453.28174, -1577.54639, 10.09178,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3568, 4463.94385, -1537.68640, 10.92111,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3566, 4457.61768, -1537.77039, 10.89611,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 3850.71802, -769.22449, 10.91982,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1340, 3951.28442, -1262.74048, 9.38841,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(647, 3875.32935, -992.84326, 9.61436,   0.00000, 0.00000, 11.25003, -1, -1, -1, 500);
	CreateDynamicObject(647, 3877.47876, -992.91443, 9.63030,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 4089.38232, -651.22504, 8.25020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1597, 3865.48462, -993.14722, 10.86481,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(647, 3897.96167, -871.80585, 9.64868,   0.00000, 0.00000, 258.75000, -1, -1, -1, 500);
	CreateDynamicObject(1300, 3786.85327, -761.29468, 8.80818,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1300, 3848.41333, -1028.22461, 8.79148,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1300, 4245.22510, -1020.96228, 8.71134,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3625, 4282.90381, -1366.13159, 10.73719,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3566, 4245.02002, -1321.40308, 10.56243,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3568, 4245.03662, -1328.96021, 10.56243,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3577, 4235.44971, -1360.30054, 8.90631,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3633, 4234.16846, -1310.44275, 8.64077,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1684, 4266.57080, -1370.01501, 9.68868,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1684, 4251.25293, -1369.99426, 9.68868,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1372, 3762.20605, -1110.31653, 8.39616,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1372, 3766.06543, -1110.32886, 8.39616,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3772.83350, -1109.76282, 8.26751,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 3945.03369, -1663.55688, 8.46712,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(621, 3953.30566, -1663.41467, 8.46585,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1440, 3743.46826, -1017.02716, 8.78537,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1372, 3745.55859, -1249.70239, 8.40654,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1372, 3742.53345, -1249.69629, 8.40654,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3754.92456, -1206.66687, 8.27789,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1332, 3755.27734, -1235.78809, 9.31433,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1344, 3774.83154, -1644.07166, 9.02633,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1344, 3774.85425, -1641.29102, 9.02633,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1299, 3752.66235, -1665.68982, 8.69898,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(13591, 3762.31348, -1663.19519, 8.63039,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3761.30298, -1707.96350, 8.21937,   0.00000, 0.00000, 337.50000, -1, -1, -1, 500);
	CreateDynamicObject(1440, 3764.15308, -1708.69995, 8.73723,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(1372, 3886.00952, -1715.32837, 8.33326,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3766.81421, -1709.89148, 8.21937,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(1372, 3886.01660, -1712.46045, 8.33326,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(1431, 4003.43848, -1727.78906, 8.74685,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(925, 4027.23242, -1728.26221, 9.26115,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18260, 4125.78369, -1729.31824, 9.83279,   0.00000, 0.00000, -539.99957, -1, -1, -1, 500);
	CreateDynamicObject(931, 4024.18750, -1728.26147, 9.26115,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(931, 4021.03809, -1728.26526, 9.26115,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1271, 4007.60693, -1727.74622, 8.54924,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1348, 4013.75732, -1727.90173, 8.90177,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3572, 4139.68799, -1729.02429, 9.58408,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3630, 4159.56592, -1729.32129, 9.75222,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3796, 4066.17065, -1729.26086, 8.20483,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3799, 4071.62109, -1729.14258, 8.08105,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 4083.64941, -1728.86462, 8.22079,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3633, 4160.65527, -1703.55994, 8.73595,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3576, 4159.69873, -1707.37329, 9.75382,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3577, 4189.40381, -1552.62537, 8.98785,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(5269, 4188.89893, -1517.63782, 10.53939,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(931, 4188.61768, -1540.84180, 9.29225,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3571, 4189.20801, -1493.99207, 9.60328,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1344, 3757.51660, -698.81653, 9.09232,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(8650, 3887.41968, -668.33734, 9.41301,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(6150, 4330.82324, -788.46515, 13.82975,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1299, 4330.24854, -754.64966, 8.64000,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(1332, 4335.73047, -768.99646, 9.22183,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1333, 4332.21338, -769.01361, 9.08120,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1334, 4328.40430, -768.96393, 9.29697,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 4341.87207, -947.61603, 8.17717,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(647, 4249.92676, -1022.98511, 9.60964,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(647, 4249.87793, -1026.82605, 9.71740,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(647, 4249.85889, -1030.81189, 9.71740,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(647, 4249.93506, -1035.08618, 9.69240,   0.00000, 0.00000, 213.75000, -1, -1, -1, 500);
	CreateDynamicObject(647, 4250.01758, -1038.89001, 9.61740,   0.00000, 0.00000, 67.50001, -1, -1, -1, 500);
	CreateDynamicObject(1449, 4338.54248, -946.62561, 8.71936,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1346, 3944.12769, -882.46747, 9.62441,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1267, 3921.90503, -880.53925, 24.26310,   0.00000, 0.00000, 168.75002, -1, -1, -1, 500);
	CreateDynamicObject(4239, 3922.83325, -880.52850, 29.63647,   0.00000, 0.00000, 168.75006, -1, -1, -1, 500);
	CreateDynamicObject(620, 3983.18481, -652.92883, 8.27529,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 4123.23340, -663.91797, 8.16387,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4199, 3839.10522, -640.37909, 10.37158,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1299, 3855.60864, -644.34186, 8.75353,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3575, 3741.30200, -1726.69653, 10.88481,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3574, 3757.89502, -1729.46985, 10.88481,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3566, 3737.23779, -1705.34790, 10.60674,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3571, 3744.17017, -725.47595, 9.64666,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(3796, 3774.41284, -721.38458, 8.27930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 3795.73828, -714.26880, 8.13053,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5262, 3814.75269, -640.81671, 11.21677,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3765.13306, -751.93555, 8.27497,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3566, 3748.55151, -745.40173, 10.66234,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3594, 3758.01270, -751.56036, 8.87990,   0.00000, 0.00000, 93.43774, -1, -1, -1, 500);
	CreateDynamicObject(3800, 3743.41992, -720.10773, 8.29527,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 3740.85303, -720.29309, 8.29527,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 3897.65430, -635.84521, 10.87895,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 3916.87964, -635.84338, 10.87574,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 3936.23413, -635.83997, 10.87574,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 3955.49097, -635.82996, 10.87574,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 3974.82031, -635.83490, 10.87574,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 3994.21045, -635.83875, 10.86431,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4013.54492, -635.82733, 10.86111,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4033.00171, -635.83771, 10.86111,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4052.35107, -635.83447, 10.86111,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4071.74561, -635.83447, 10.86111,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4091.29126, -635.83411, 10.86111,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4110.89844, -635.82977, 10.84969,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4130.43457, -635.82092, 10.84969,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4149.99512, -635.82581, 10.84969,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4169.59766, -635.81647, 10.84969,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4189.21582, -635.80182, 10.84969,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4208.81738, -635.80609, 10.84969,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4228.34521, -635.79449, 10.83826,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4247.82813, -635.79633, 10.83826,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4267.17383, -635.78485, 10.83826,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4286.74707, -635.77625, 10.84863,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4306.19824, -635.77301, 10.84863,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4325.72363, -635.78204, 10.84864,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3924.99927, -792.43707, 8.24966,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1449, 3932.37109, -793.44287, 8.79506,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1340, 3894.61621, -791.51971, 9.41934,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1342, 3900.98779, -791.51440, 9.30045,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1341, 3953.93896, -792.19867, 9.27599,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(647, 3983.89575, -1263.85034, 9.66111,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(800, 3989.28149, -1262.10266, 10.24808,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(647, 3994.03784, -1263.91516, 9.66113,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4346.36865, -1045.30298, 10.83934,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4346.35986, -1064.86646, 10.83934,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4346.37012, -1025.71301, 10.84255,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7952, 4334.72510, -1241.62549, 8.91919,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4334.79102, -1285.59644, 10.82508,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4334.80469, -1262.35254, 10.82761,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4334.79248, -1240.03589, 10.83650,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4334.73291, -1218.89307, 10.83650,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4334.77393, -1196.57312, 10.83650,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4345.06299, -1279.34692, 8.58979,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4345.08936, -1268.68640, 8.58979,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4345.09277, -1255.16663, 8.58979,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4345.11279, -1245.28662, 8.60121,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4345.11914, -1234.82874, 8.60121,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4345.13525, -1224.99500, 8.60121,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4345.15430, -1212.60352, 8.60121,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4345.17773, -1202.85205, 8.60121,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4336.23828, -1207.53345, 8.60121,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4336.21436, -1229.91113, 8.60121,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4336.23633, -1249.96057, 8.60121,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4336.23096, -1273.89258, 8.60441,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3799, 4700.47021, -1533.69702, 8.42362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7952, 4346.82520, -1252.52881, 8.93277,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7952, 4346.81592, -1240.44287, 8.93598,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7952, 4346.82813, -1160.54297, 8.94740,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7952, 4346.81543, -1148.19531, 8.94420,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7952, 4346.83398, -1122.14453, 8.95562,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.49609, -1099.50964, 8.40530,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.47900, -1078.17651, 8.40530,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.49609, -1012.23749, 8.40530,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.43945, -1297.70947, 8.38245,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(7953, 3859.64722, -1734.58264, 8.88533,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 3836.97510, -1734.42822, 8.42251,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 3859.48242, -1734.43237, 8.42252,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 3881.84277, -1734.42444, 8.42238,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 3902.48438, -1734.43787, 8.42238,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 3921.41724, -1734.44104, 8.42238,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 3799.11401, -1734.44836, 8.42252,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3798, 3769.58545, -1733.45557, 8.23966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 3773.30298, -1733.80078, 8.23966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 3770.82178, -1729.52039, 8.09992,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 3775.01221, -1729.53101, 8.23966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 3777.51294, -1731.70984, 8.23966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 3777.23486, -1730.18872, 8.23966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 3777.35669, -1734.43628, 8.23966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3565, 3787.08203, -1733.45972, 9.59106,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3798, 3738.15308, -1631.45850, 8.23966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 3742.82471, -1635.53198, 8.23966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 3739.14233, -1637.44226, 8.23966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 3742.05591, -1633.05066, 8.23966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 3740.79663, -1641.27307, 8.23966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 3740.08008, -1644.28003, 8.23966,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7953, 4346.78223, -841.29651, 8.84098,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7953, 4346.73193, -711.84973, 8.85240,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.66211, -906.41980, 8.39173,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.59961, -863.72601, 8.40316,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.60498, -841.36157, 8.40315,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.62939, -819.09460, 8.40316,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.62939, -798.42151, 8.40316,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.62256, -775.95142, 8.40316,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.54980, -734.28339, 8.38959,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.61914, -711.78821, 8.38959,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.61621, -689.67615, 8.38959,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.59717, -669.00305, 8.38958,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.59131, -650.73804, 8.38959,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.59668, -635.32074, 8.38959,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1597, 4346.85742, -643.11560, 10.77795,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1364, 4337.92285, -635.27911, 8.90469,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1364, 4343.09180, -635.26251, 8.90469,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3573, 4209.00537, -1386.34180, 10.88241,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3576, 4207.63672, -1401.22217, 9.73339,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3566, 3749.34229, -660.44434, 10.68630,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3568, 3749.27368, -666.67346, 10.69773,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3738.71851, -666.28748, 9.01214,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3738.72778, -660.41864, 9.01214,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(6189, 3871.37158, -568.09619, -6.19096,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3855.51587, -506.34076, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3887.21533, -506.23788, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3887.22656, -535.45117, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3887.21802, -554.45044, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3855.49512, -554.45233, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3855.52173, -522.80389, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3855.57202, -535.45483, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3887.20557, -522.81201, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3855.52710, -568.10431, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3887.17139, -568.09277, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3855.53101, -585.34558, 8.74253,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3887.26196, -585.33374, 8.74253,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3887.19897, -620.65125, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3855.51782, -620.64398, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1259, 3865.09253, -637.35370, 23.63198,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(738, 3855.57373, -603.02551, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3887.21411, -602.96326, 8.74254,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3855.92358, -529.33881, 10.95350,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3855.85474, -514.46014, 10.95350,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3855.87476, -544.78967, 10.95350,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3855.85327, -561.10419, 10.95350,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3855.83789, -576.54523, 10.95350,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3855.84937, -594.13525, 10.95350,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3855.83301, -611.84778, 10.95350,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3886.51074, -514.43781, 10.95350,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3886.60327, -529.34106, 10.95350,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3886.87695, -544.79858, 10.95350,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3886.64941, -561.05609, 10.95350,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3886.91724, -576.50165, 10.95350,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3886.73975, -594.12964, 10.95350,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 3886.80420, -611.88367, 10.95350,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3524, 3860.75757, -507.81851, 11.20220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3524, 3882.98584, -507.87720, 11.20220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7073, 3849.66895, -770.59265, 27.67142,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(7023, 4488.02197, -1598.93738, 8.34168,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(8493, 3900.68408, -560.55237, 16.98842,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.68066, -518.28864, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.69043, -526.45526, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.59790, -531.90765, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.74976, -540.07635, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.64185, -549.52612, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.63867, -557.67828, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.61963, -564.51617, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.60571, -572.66223, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.67651, -580.79761, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.64771, -590.28278, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.55493, -598.45374, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.53516, -607.97260, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.77148, -608.41840, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.80615, -598.19104, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.82715, -589.82581, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.81689, -580.74548, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.82739, -572.89044, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.83130, -564.26025, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.76660, -557.91779, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.80615, -549.50317, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.79150, -540.70880, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.77905, -532.31158, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.75171, -526.43646, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.74243, -518.53595, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3524, 3859.42383, -633.35431, 11.20220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3524, 3884.27319, -633.35358, 11.20220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1341, 3886.60010, -511.91089, 9.31944,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(2600, 3857.66382, -504.57089, 9.06413,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1216, 3856.03784, -510.14148, 8.88386,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3855.53027, -616.15881, 8.71821,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3886.75854, -616.14758, 8.71821,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3738.20679, -745.83124, 9.04550,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3738.22119, -735.58264, 9.05175,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3568, 3748.55835, -738.43909, 10.68734,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3568, 3748.56689, -731.57562, 10.66234,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3789.15820, -1736.29456, 8.97115,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3778.87988, -1736.29797, 8.97115,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3768.60010, -1736.29028, 8.97115,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3758.33691, -1736.27747, 8.97115,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3748.05933, -1736.26050, 8.97115,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3738.65454, -1736.25012, 8.97115,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3733.25806, -1730.82642, 8.97435,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3733.27539, -1720.55554, 8.97115,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3733.28467, -1710.27979, 8.97435,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3733.28955, -1700.00977, 8.97115,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3733.29785, -1693.12305, 8.97115,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3733.31079, -1684.39307, 8.97115,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3566, 3744.48828, -1705.48279, 10.63174,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(718, 3808.97974, -1518.27979, 8.21617,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(718, 3846.52002, -1518.27405, 8.21617,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3258, 4107.20068, -1702.31799, 21.64576,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3258, 4107.20654, -1706.28210, 21.69571,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3258, 4107.10889, -1694.28333, 21.67071,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3637, 4045.70459, -1700.58240, 16.28951,   0.00000, 0.00000, -629.99951, -1, -1, -1, 500);
	CreateDynamicObject(3578, 3738.21729, -728.08563, 9.05175,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(2855, 3921.32251, -1165.09387, 9.13799,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 4598.81055, -1533.34753, 8.38825,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 4599.88574, -1538.23132, 8.55299,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 4600.66016, -1545.54407, 8.55299,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 4340.49170, -635.34497, 8.75989,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 4579.61182, -1544.33923, 8.54261,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3866.87524, -732.90625, 8.68468,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3818.11084, -732.88507, 8.70968,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3842.48828, -732.85199, 8.70968,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3808.17773, -1442.53516, 8.69197,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3808.17383, -1452.59436, 8.69197,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3808.16724, -1462.55518, 8.69197,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3808.17407, -1472.58142, 8.69197,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4288.70166, -1100.98633, 8.63696,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4288.70605, -1110.97620, 8.63696,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4288.70947, -1120.82764, 8.63696,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4288.71143, -1130.27930, 8.62553,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4288.70068, -1150.20007, 8.62553,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4288.71680, -1160.96838, 8.62553,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4288.70850, -1170.98596, 8.62553,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4288.72119, -1180.85461, 8.62553,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3758.23706, -1217.57202, 8.72731,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3758.22949, -1225.45667, 8.72731,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3733.20850, -1217.57410, 8.72731,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3733.22559, -1225.46460, 8.72731,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3745.53125, -1225.30493, 8.72731,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3745.52930, -1217.56311, 8.72731,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3733.22168, -1233.17700, 8.72731,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3745.54272, -1233.18250, 8.72731,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3745.58594, -1209.83411, 8.72731,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3733.22070, -1209.83130, 8.72731,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3733.17432, -1202.12793, 8.82137,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3733.22095, -1241.03320, 8.73051,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3732.79541, -1206.01904, 8.70299,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3732.83252, -1213.69958, 8.70299,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3732.79736, -1221.63306, 8.70299,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3732.84131, -1229.34192, 8.70299,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 3732.85718, -1237.09692, 8.70299,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(738, 3765.58838, -1379.17957, 8.70129,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3765.57056, -1397.52856, 8.69809,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3765.55566, -1273.92798, 8.71269,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3765.53174, -1255.54248, 8.71589,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3765.58789, -1507.00256, 8.69197,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3765.59106, -1525.35156, 8.69197,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3895.13965, -642.92664, 8.72335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7952, 3940.02466, -642.91901, 9.01702,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(7952, 4025.10132, -642.92682, 9.02738,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(7952, 4112.58838, -642.94507, 8.96596,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(7952, 4205.14502, -642.92664, 8.96596,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(738, 3919.17383, -642.88330, 8.72656,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3941.51172, -642.90924, 8.72335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3962.61719, -642.92450, 8.72335,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3982.94824, -642.89703, 8.70872,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4004.12402, -642.88782, 8.70872,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4026.55371, -642.88831, 8.70872,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4047.70679, -642.91833, 8.70872,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4069.25757, -642.91638, 8.70872,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4091.78125, -642.90869, 8.70872,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4114.15625, -642.90466, 8.64730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4135.22266, -642.95856, 8.64730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4159.23926, -642.92267, 8.64730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4184.26807, -642.87915, 8.64730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4206.58008, -642.92267, 8.64730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4227.79834, -642.90521, 8.61087,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4250.30469, -642.91785, 8.61087,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 3808.16943, -1305.19897, 8.71811,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3808.15137, -1315.84106, 8.71811,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3808.15112, -1325.86584, 8.71811,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 3808.64990, -1355.56958, 8.47870,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 3808.64795, -1365.58765, 8.45256,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 3808.62354, -1375.43213, 8.45256,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(738, 3846.87061, -1665.92834, 8.68569,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3846.90381, -1600.79944, 8.69859,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3846.89941, -1576.95728, 8.69197,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3846.89697, -1546.51624, 8.69197,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(718, 3808.98242, -1547.89282, 8.21617,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(738, 4288.69434, -871.42822, 8.63481,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4288.68896, -851.04614, 8.63481,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 4289.15771, -970.94836, 8.39173,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4289.20068, -1075.68713, 8.40530,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 4289.18652, -1056.77478, 8.40530,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 4289.14697, -1037.19714, 8.40530,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4346.33594, -998.34052, 10.85078,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4346.33057, -978.76892, 10.85078,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4346.33301, -959.44727, 10.85078,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.46777, -948.11096, 8.39173,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(738, 3808.17188, -1152.93811, 8.72405,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3808.17383, -1162.95593, 8.72405,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3808.17847, -1172.94604, 8.72405,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3808.17749, -1182.91809, 8.72405,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3956.15137, -1153.85181, 8.71811,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3956.16577, -1163.87842, 8.70568,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3956.17871, -1174.54639, 8.70568,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3956.18701, -1185.17676, 8.69792,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3956.18115, -1063.90295, 8.70568,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3956.16309, -1093.89233, 8.70568,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3847.99438, -1414.51013, 8.69197,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 3863.00269, -1414.51074, 8.69197,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4268.82568, -683.09052, 8.61087,   0.00000, 0.00000, 258.75000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4278.29883, -686.10376, 8.61087,   0.00000, 0.00000, 236.25006, -1, -1, -1, 500);
	CreateDynamicObject(738, 4285.81982, -693.74335, 8.62124,   0.00000, 0.00000, 213.75000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4330.17139, -1201.41260, 8.62553,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4330.15674, -1214.27466, 8.62553,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4330.14795, -1223.45483, 8.62553,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4330.13135, -1236.17139, 8.62553,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4330.08496, -1243.87585, 8.62553,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4330.10107, -1256.66809, 8.62553,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4330.11816, -1268.01538, 8.61411,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4330.11621, -1280.66858, 8.61411,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 3955.83472, -973.59241, 8.47402,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(3594, 3742.66724, -1031.50171, 8.87243,   0.00000, 0.00000, 184.37445, -1, -1, -1, 500);
	CreateDynamicObject(1294, 2956.53076, -786.55304, 14.63221,   0.00000, 0.00000, -269.99997, -1, -1, -1, 500);
	CreateDynamicObject(1294, 2977.47729, -794.05713, 14.63221,   0.00000, 0.00000, -449.99988, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3000.88892, -786.54706, 14.63221,   0.00000, 0.00000, -629.99976, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3024.82056, -794.05872, 14.63221,   0.00000, 0.00000, -809.99969, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3061.67139, -783.54010, 15.79803,   0.00000, 0.00000, -281.24994, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3078.52368, -789.03796, 15.97775,   0.00000, 0.00000, -301.17151, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3093.33984, -798.02979, 15.82784,   0.00000, 0.00000, -312.34448, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3106.13403, -809.66016, 15.44457,   0.00000, 0.00000, -321.87552, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3117.24219, -823.39600, 14.90023,   0.00000, 0.00000, -327.03226, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3127.01685, -838.63586, 14.12167,   0.00000, 0.00000, -331.32956, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3133.21021, -876.06238, 12.64558,   0.00000, 0.00000, -873.20288, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3150.34741, -893.39136, 12.64559,   0.00000, 0.00000, -1053.20313, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3154.56909, -918.34772, 12.64559,   0.00000, 0.00000, -1233.20300, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3170.41431, -933.09326, 12.64559,   0.00000, 0.00000, -1413.20300, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3176.28687, -971.15717, 13.30426,   0.00000, 0.00000, -868.90588, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3185.59473, -986.64917, 14.06399,   0.00000, 0.00000, -862.89008, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3196.22021, -1000.64111, 14.62485,   0.00000, 0.00000, -854.29602, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3208.58447, -1012.66504, 14.98242,   0.00000, 0.00000, -843.12384, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3223.08105, -1022.11450, 15.13721,   0.00000, 0.00000, -830.23279, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3239.88672, -1028.25183, 14.97048,   0.00000, 0.00000, -816.48236, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3277.83569, -1025.81812, 13.77904,   0.00000, 0.00000, -1530.00012, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3300.98486, -1018.33972, 13.77904,   0.00000, 0.00000, -1710.00061, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3325.21387, -1025.88757, 13.77904,   0.00000, 0.00000, -1890.00110, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3345.53174, -1018.39771, 13.77904,   0.00000, 0.00000, -2070.00171, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3382.04346, -1030.40186, 14.44114,   0.00000, 0.00000, -2245.70508, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3400.04883, -1029.07446, 15.07663,   0.00000, 0.00000, -2239.68921, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3417.33936, -1025.88660, 15.72502,   0.00000, 0.00000, -2231.09546, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3433.64771, -1020.24176, 16.13668,   0.00000, 0.00000, -2219.92310, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3448.60571, -1011.57404, 16.21526,   0.00000, 0.00000, -2207.03198, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3461.66016, -999.33643, 16.10116,   0.00000, 0.00000, -2193.28174, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3476.74121, -964.23999, 14.91043,   0.00000, 0.00000, -2187.26587, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3480.61035, -940.12646, 14.91043,   0.00000, 0.00000, -2367.26636, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3498.23657, -921.96576, 14.91043,   0.00000, 0.00000, -2547.26685, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3500.72900, -900.51581, 14.91043,   0.00000, 0.00000, -2727.26733, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3513.06006, -866.58795, 15.88465,   0.00000, 0.00000, -2729.76782, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3524.52246, -853.17426, 16.07285,   0.00000, 0.00000, -2753.83105, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3538.50000, -842.92389, 15.94391,   0.00000, 0.00000, -2765.00317, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3554.16260, -835.53906, 15.53565,   0.00000, 0.00000, -2773.59717, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3571.09351, -830.57623, 14.99328,   0.00000, 0.00000, -2779.61304, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3588.89966, -827.32690, 14.23389,   0.00000, 0.00000, -2783.91016, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3626.51563, -837.32550, 12.88268,   0.00000, 0.00000, -2970.86328, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3649.71094, -829.82190, 12.89165,   0.00000, 0.00000, -3150.86377, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3673.89795, -837.33160, 12.87744,   0.00000, 0.00000, -3330.86426, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3694.14771, -829.81763, 12.88495,   0.00000, 0.00000, -3510.86475, -1, -1, -1, 500);
	CreateDynamicObject(3593, 3748.75122, -921.02747, 8.76606,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3594, 3750.63110, -1095.53137, 9.04241,   0.00000, 0.00000, 105.62444, -1, -1, -1, 500);
	CreateDynamicObject(1369, 4346.70605, -648.85913, 8.81744,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(6990, 4168.02051, -768.67059, 8.40588,   0.00000, 0.00000, -269.99957, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4198.03809, -850.71191, 8.31443,   0.00000, 0.00000, -269.99994, -1, -1, -1, 500);
	CreateDynamicObject(4141, 4237.87207, -740.06482, 19.13676,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(14675, 4235.87842, -737.92938, 19.20546,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(14674, 4237.78613, -737.30988, 13.26131,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4241.52490, -719.51288, 8.22178,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4244.57324, -719.45325, 8.22178,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4216.22119, -751.58331, 8.21659,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4216.14795, -748.53271, 8.21659,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4256.72559, -718.42816, 8.58682,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4250.93408, -718.38757, 8.58682,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4236.10205, -718.38940, 8.61296,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4231.01953, -718.37488, 8.61296,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4225.99561, -718.36908, 8.61296,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1300, 4220.17188, -721.09680, 8.58152,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4257.27002, -704.26550, 8.61115,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(738, 4247.30518, -704.24146, 8.61115,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4237.77490, -704.26849, 8.63728,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(738, 4227.76123, -704.22205, 8.62953,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(738, 4217.96533, -704.21887, 8.62953,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 4209.17236, -715.13763, 8.39787,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4209.15918, -725.15723, 8.40563,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4209.17236, -735.19885, 8.40562,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4209.10986, -745.20728, 8.40563,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4209.14258, -755.04865, 8.40563,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4209.15674, -764.95343, 8.40563,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4217.98340, -774.16956, 8.62953,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4227.78320, -774.16357, 8.62953,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4237.79688, -774.18280, 8.63728,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4247.28174, -774.21985, 8.61115,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(738, 4257.32813, -774.19324, 8.61115,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4266.93213, -762.42670, 8.38725,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(716, 4266.90674, -752.41992, 8.38725,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(716, 4266.93945, -742.54370, 8.38725,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(716, 4266.91504, -732.45959, 8.37949,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(716, 4266.93359, -722.50830, 8.37949,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4214.63623, -756.66711, 8.61296,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4214.66699, -743.07867, 8.61296,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4214.69482, -738.70422, 8.61296,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4214.69629, -734.52905, 8.61296,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4214.69141, -730.20782, 8.61296,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1300, 4215.94678, -761.20959, 8.58152,   0.00000, 0.00000, 134.99998, -1, -1, -1, 500);
	CreateDynamicObject(3471, 4246.33789, -718.56030, 9.38501,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3471, 4239.94482, -718.57019, 9.43383,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3471, 4214.80420, -746.85303, 9.45363,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(3471, 4214.82275, -753.02521, 9.45363,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(5811, 4333.38574, -686.48138, 12.22152,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(14467, 4237.50439, -738.17023, 10.79429,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4258.22168, -794.87555, 10.84629,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4238.10400, -794.87085, 10.83967,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 4217.85791, -794.86591, 10.83967,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4222.06885, -762.52728, 8.61296,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4229.46289, -762.54071, 8.61296,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4245.10840, -718.55365, 10.84593,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4241.09619, -718.57678, 10.82093,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4214.91650, -748.06085, 10.81574,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(1232, 4214.91602, -751.99371, 10.81574,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(1231, 4248.22852, -794.57794, 10.92362,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(1231, 4228.05469, -794.57111, 10.94200,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(1281, 4222.75879, -783.91370, 9.01199,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1281, 4232.86963, -783.86853, 9.01199,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1281, 4242.47314, -783.96954, 8.99361,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1281, 4252.22119, -783.95154, 8.99361,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1440, 3732.25464, -1311.55103, 8.80612,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3735.08667, -1365.38342, 8.31326,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3730.70142, -1438.43164, 8.27561,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 3730.78198, -1554.13525, 8.28400,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1440, 3734.13843, -1556.32251, 8.77686,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1440, 3735.36353, -1627.00708, 8.76223,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(7953, 4267.16797, -943.11060, 8.87506,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7953, 4208.89795, -943.10828, 8.87394,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7952, 4267.12793, -840.90472, 8.93756,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7952, 4208.87549, -840.89337, 8.93756,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7662, 4221.20703, -1000.63312, 8.93644,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(700, 4267.00293, -861.54462, 8.71363,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4267.02686, -839.33862, 8.71362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4267.00000, -818.05078, 8.71363,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4266.86035, -797.95190, 8.71362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4267.08008, -882.69684, 8.71362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4266.87549, -900.65723, 8.71362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4267.06348, -921.27350, 8.71362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4266.93213, -943.70154, 8.71362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4266.97314, -966.33228, 8.71362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4267.04834, -986.40210, 8.71250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4208.82617, -986.51361, 8.73088,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4208.80566, -965.93121, 8.73088,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4208.81201, -943.75494, 8.73200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4208.87793, -921.15332, 8.73200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4208.82373, -900.59277, 8.73200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4208.72656, -882.61438, 8.71362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4208.80615, -861.34906, 8.71362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4208.70410, -839.18378, 8.71362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4208.77344, -817.93823, 8.71362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4208.61279, -797.77020, 8.73200,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4264.00684, -1000.52411, 8.71250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4211.91602, -1000.63538, 8.71250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4229.99707, -1000.57758, 8.71250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(700, 4246.08252, -1000.67175, 8.71250,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(9931, 4237.53564, -849.66547, 24.68981,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(673, 4249.46924, -900.64197, 8.24386,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(673, 4249.45361, -882.69055, 8.24387,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(673, 4225.67529, -882.69287, 8.24386,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(673, 4225.66943, -900.65430, 8.24386,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(673, 4249.48535, -921.28424, 8.24386,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(673, 4225.65771, -921.13354, 8.24386,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(673, 4249.47021, -943.60376, 8.24386,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(673, 4225.65527, -943.67535, 8.26224,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(673, 4249.45361, -966.42206, 8.24386,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(673, 4225.66992, -966.43433, 8.26112,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4265.39063, -891.74603, 8.59458,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4265.36670, -909.30225, 8.59458,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4265.33643, -933.57727, 8.59458,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4265.31494, -953.78516, 8.59458,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4210.62354, -953.74860, 8.59458,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4210.65723, -933.25720, 8.59458,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4210.68701, -908.87000, 8.59458,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 4210.71777, -891.48456, 8.59458,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(12814, 4223.38232, -977.35120, 8.23671,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(12814, 4253.24023, -977.35944, 8.21171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(12814, 4223.41211, -927.62164, 8.23122,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(12814, 4253.29834, -927.62921, 8.21284,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(12814, 4223.40137, -877.68195, 8.23122,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(12814, 4253.34229, -877.65729, 8.21284,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(12814, 4253.35059, -827.71112, 8.21284,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(12814, 4223.40137, -827.70850, 8.23122,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4644.22217, -1386.38330, -1.16373,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4644.23779, -1287.74927, -1.14729,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4789.51807, -1183.10010, -1.16936,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4888.73584, -1183.14893, -1.13463,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4910.42139, -1183.12219, -1.15908,   0.00000, 0.00000, -269.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4932.10791, -1183.13452, -1.15828,   0.00000, 0.00000, -269.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4953.12305, -1183.12927, -1.15486,   0.00000, 0.00000, -269.99994, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.47168, -1326.13562, 8.38245,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.48730, -1348.33008, 8.39283,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4975.56152, -1183.14478, -1.15860,   0.00000, 0.00000, -269.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4953.06104, -1386.30200, -1.21188,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4953.07910, -1287.74670, -1.20214,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4997.27393, -1183.18030, -1.16921,   0.00000, 0.00000, -269.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5138.93066, -1386.15198, -1.23050,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5138.96777, -1287.73767, -1.19578,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4507.79883, -1336.96240, 8.27972,   0.00000, 0.00000, -1259.99963, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4589.09424, -1336.95740, 8.25472,   0.00000, 0.00000, -1259.99963, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4670.36084, -1336.97229, 8.24617,   0.00000, 0.00000, -1259.99963, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4751.63867, -1336.98328, 8.24617,   0.00000, 0.00000, -1259.99976, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5002.38623, -1337.08337, 8.18795,   0.00000, 0.00000, -1259.99963, -1, -1, -1, 500);
	CreateDynamicObject(17472, 4461.87109, -1297.91223, 0.12958,   0.00000, 9.45380, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(17472, 4461.99561, -1365.57336, -3.13136,   0.00000, 353.12451, 84.84344, -1, -1, -1, 500);
	CreateDynamicObject(17472, 4462.40674, -1325.41833, -10.16986,   0.00000, 0.00000, 80.54618, -1, -1, -1, 500);
	CreateDynamicObject(17472, 4461.00098, -1353.79761, -10.58849,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4841.21729, -1102.50293, 11.30600,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(716, 4346.48682, -1375.75317, 8.39283,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(17472, 4469.10205, -1385.26123, -10.79509,   0.00000, 0.85944, -76.09434, -1, -1, -1, 500);
	CreateDynamicObject(17472, 4805.11865, -1001.45660, -1.86738,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(17472, 4852.09814, -1001.71552, 2.48950,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(17472, 4890.62549, -1013.93774, 1.45058,   0.00000, 0.00000, 191.25006, -1, -1, -1, 500);
	CreateDynamicObject(17472, 4945.03027, -1001.26050, 2.77525,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(17472, 4989.97266, -1001.59363, -1.76907,   0.00000, 16.32930, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5083.67529, -1337.07849, 8.18795,   0.00000, 0.00000, -1259.99963, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5164.97168, -1337.09692, 8.16295,   0.00000, 0.00000, -1259.99963, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5246.23291, -1337.07324, 8.16295,   0.00000, 0.00000, -1259.99963, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5266.04883, -1219.15576, -1.26105,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5266.00244, -1446.60828, -1.23605,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5265.92969, -1760.51306, -1.25133,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(4867, 6166.19336, -1481.09753, 8.05708,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5469.38086, -1898.81970, -1.21660,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4847, 6453.98584, -1696.16443, -1.15687,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5003, 6184.81738, -1718.27734, 14.28909,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5719.41357, -1899.02820, -1.14014,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6351.54541, -1729.89502, 7.83724,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5995.38281, -1899.47729, -1.19128,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(4866, 6320.70703, -1218.20349, 8.07917,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5002, 6332.69385, -1481.18335, 8.07442,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(4847, 6454.02051, -1406.14099, -1.17214,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(4847, 6454.07080, -1230.27441, -1.18742,   0.00000, 0.00000, 90.00011, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5471.05273, -1015.27802, -1.26070,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5748.42773, -1015.24738, -1.25026,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5993.61328, -1015.32623, -1.21735,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(4847, 6250.39551, -1899.18665, -1.15242,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(4847, 6249.32031, -1015.10553, -1.19917,   0.00000, 0.00000, -179.99971, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6355.97900, -1403.77551, 7.77165,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6355.85645, -1204.73157, 7.82052,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(4865, 6167.86523, -1216.43433, 8.01904,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6029.55957, -1119.64783, 7.72565,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6029.57275, -1231.57043, 7.75727,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6029.56934, -1343.26501, 7.73888,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1259, 6101.87793, -1278.09387, 11.85335,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1259, 6089.57324, -1626.21863, 11.21101,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
//	CreateDynamicObject(5004, 6029.56348, -1455.78967, 7.74550,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6029.57813, -1568.32813, 7.76936,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6029.58154, -1680.79004, 7.77597,   0.00000, 0.00000, -359.99979, -1, -1, -1, 500);
	CreateDynamicObject(5004, 6006.13330, -1795.90247, 7.75759,   0.00000, 0.00000, -539.99939, -1, -1, -1, 500);
	CreateDynamicObject(12814, 6173.12256, -1838.54211, 8.02433,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5807.14453, -1118.91724, 7.69951,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5807.22168, -1231.38452, 7.70612,   0.00000, 0.00000, -359.99957, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5807.24316, -1343.84119, 7.71274,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5807.30615, -1456.31702, 7.71936,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5807.31250, -1568.79712, 7.72597,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5807.29688, -1681.30811, 7.73258,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5783.90234, -1795.88025, 7.74983,   0.00000, 0.00000, -179.99960, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5644.00439, -1120.00049, 7.77337,   0.00000, 0.00000, -359.99966, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5644.01074, -1232.29663, 7.72223,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5644.02734, -1344.81860, 7.75385,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5644.02881, -1457.33789, 7.73547,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5643.95605, -1569.77625, 7.74208,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5643.92334, -1682.29968, 7.77370,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5620.52246, -1797.04480, 7.73144,   0.00000, 0.00000, -179.99977, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5455.00195, -1119.78027, 7.69723,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5454.99512, -1232.25427, 7.69609,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5454.96680, -1344.78943, 7.70271,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5454.95166, -1569.62622, 7.71594,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5454.92480, -1682.06372, 7.72256,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5435.43408, -1796.50757, 7.73806,   0.00000, 0.00000, -539.99951, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4841.88281, -1108.69690, 10.13100,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6403.71045, -1766.65039, 11.42314,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4931.43896, -1102.48035, 11.30951,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4918.89697, -1102.51086, 11.31325,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4853.81152, -1102.51440, 11.33348,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4871.55762, -1102.47510, 11.30903,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4900.97461, -1102.50293, 11.30984,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4841.24707, -1121.71814, 11.33348,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4853.78613, -1121.70813, 11.33348,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4870.90332, -1116.23657, 11.33348,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4901.68213, -1121.70984, 16.25902,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4841.89404, -1119.95959, 10.12127,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4841.86182, -1129.86035, 10.13100,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4913.73242, -1121.71936, 16.28820,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4931.41309, -1116.27112, 11.31325,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4841.19873, -1135.93958, 11.33348,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4918.91260, -1135.86890, 11.31325,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4930.17725, -1135.89868, 11.31325,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4901.11621, -1148.48303, 11.30984,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4846.66748, -1104.39075, 5.10882,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4846.66016, -1119.13733, 5.10878,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4846.66162, -1133.85168, 5.10878,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4871.56348, -1102.49573, 16.21096,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4870.91650, -1116.22876, 16.22237,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4853.77148, -1121.70520, 16.17770,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4841.24170, -1102.52405, 16.24023,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4853.80078, -1102.50183, 16.24174,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4841.26025, -1121.72339, 16.23178,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4841.88281, -1108.68591, 14.10754,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4841.88281, -1119.95630, 14.10162,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4841.86475, -1129.85632, 14.09694,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4871.14893, -1133.83875, 5.10932,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4871.15576, -1119.09595, 5.10932,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4871.14160, -1104.37756, 5.10932,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4895.65234, -1104.36426, 5.08854,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4895.67041, -1133.79370, 5.08854,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4895.65234, -1119.09204, 5.08854,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4920.19629, -1104.36804, 5.08854,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4920.18359, -1133.78772, 5.08855,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4920.18213, -1119.07947, 5.08855,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4877.24414, -1148.53760, 5.11013,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4895.68359, -1148.51892, 5.08513,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4932.46729, -1109.28015, 5.08481,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4932.47266, -1128.85571, 5.08481,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4841.21191, -1135.94507, 16.23608,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4900.98047, -1102.52307, 16.24731,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4918.91162, -1102.52332, 16.22591,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4931.42236, -1102.52551, 16.23110,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4901.68701, -1116.23853, 16.24506,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4913.68457, -1116.23596, 16.23749,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4930.16357, -1135.88489, 16.12966,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4918.90381, -1135.85632, 16.23203,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4847.46240, -1103.02051, 10.16236,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4858.72852, -1103.02673, 10.16287,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4865.82275, -1103.03479, 10.16287,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4877.87402, -1103.04199, 10.13787,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4894.71240, -1103.02893, 10.14209,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4908.16553, -1103.02490, 10.14209,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4915.25195, -1103.04919, 10.14208,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4925.16943, -1103.03271, 10.14208,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4887.80371, -1103.00220, 8.12958,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4884.75391, -1103.07996, 8.12958,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4886.32178, -1103.06677, 12.60804,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4877.88330, -1103.04199, 12.60805,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4894.74609, -1103.02942, 12.61753,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(5040, 4318.86084, -1359.19409, 11.53243,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1369, 4318.80664, -1363.04175, 8.94568,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3593, 4318.22314, -1362.63782, 8.63398,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 4291.48291, -1375.71741, 8.39283,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(716, 4291.46484, -1348.29639, 8.39283,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4848.82764, -1135.36707, 10.16232,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4855.90430, -1135.39160, 10.16232,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4864.36523, -1135.38367, 10.16287,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4870.88086, -1141.58960, 10.16287,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4877.15430, -1147.81958, 10.16367,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4896.21777, -1147.83997, 10.13868,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4886.36084, -1147.83167, 8.15116,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4886.31152, -1147.89880, 8.15116,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4883.32568, -1147.90588, 8.15116,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4889.33740, -1147.83411, 8.15116,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4848.83057, -1135.36633, 14.16100,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4901.67432, -1141.77051, 10.13868,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4908.58789, -1135.28931, 10.14209,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4924.12744, -1135.25830, 10.14209,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4930.82520, -1129.65820, 10.13835,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4930.82813, -1118.36731, 10.13835,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4930.81006, -1108.49316, 10.13835,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4908.18896, -1103.02515, 14.11010,   0.00000, 0.00000, 269.99988, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4915.26465, -1103.04944, 14.10471,   0.00000, 0.00000, 269.99994, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4925.17529, -1103.02673, 14.09326,   0.00000, 0.00000, 269.99994, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4865.80762, -1103.06006, 14.13356,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4858.73975, -1103.01904, 14.13785,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4847.47900, -1103.01477, 14.13736,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4877.88086, -1103.09180, 15.88890,   0.00000, 0.00000, -89.99979, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4859.37158, -1102.50781, 11.33985,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4842.36621, -1102.49316, 11.31485,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4842.35742, -1102.51501, 16.23992,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4870.29688, -1102.48303, 11.29036,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4870.29150, -1102.50391, 16.21367,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4841.23486, -1116.25598, 11.36481,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4841.22314, -1116.26526, 16.24007,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4841.25488, -1103.73145, 11.31485,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4841.23828, -1103.72388, 16.23984,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4841.21143, -1134.76965, 11.36481,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4841.20361, -1134.77869, 16.27905,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4842.49902, -1135.91968, 11.36481,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4842.49756, -1135.93213, 16.20352,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4931.42432, -1121.71826, 11.34084,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4913.70410, -1116.24817, 11.34458,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4913.72754, -1121.71240, 11.34458,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4931.39697, -1116.28320, 16.24721,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4931.40234, -1121.73059, 16.24928,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4901.69775, -1116.23926, 11.34458,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4901.68164, -1121.71570, 11.34458,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4870.91895, -1121.70215, 11.34457,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4870.92920, -1121.69470, 16.26533,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4853.80957, -1116.24854, 11.36481,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4853.78809, -1116.23560, 16.28979,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4853.77051, -1136.03528, 16.25876,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4853.79541, -1136.04077, 11.36481,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4859.37988, -1102.50366, 16.28144,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4870.25244, -1135.93579, 11.36535,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4870.24561, -1135.93884, 16.26277,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4859.38672, -1136.03918, 11.36481,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4859.38477, -1136.02588, 16.25779,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4871.54492, -1148.42957, 11.31616,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4870.33203, -1147.18115, 11.29116,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4870.34473, -1148.49133, 11.29116,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4882.70801, -1148.46692, 11.36616,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4889.96924, -1148.46899, 11.34116,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6403.76367, -1603.38306, 11.42314,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6403.83203, -1440.46008, 11.43255,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6403.90820, -1277.55286, 11.42989,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6403.99463, -1148.73938, 11.42973,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4902.25879, -1148.49573, 11.31616,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4902.25098, -1147.19385, 11.31616,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4902.28467, -1135.88818, 11.29457,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4902.26904, -1135.87463, 16.17059,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4931.43945, -1135.89587, 11.31584,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4913.70068, -1135.87000, 11.31958,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4913.70020, -1135.86560, 16.22190,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4931.41797, -1135.87451, 16.12511,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4913.67432, -1102.50549, 11.31957,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4902.25928, -1102.48096, 11.31957,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4902.24951, -1102.50134, 16.23472,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4913.65967, -1102.52588, 16.23329,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4930.16064, -1102.48083, 11.31957,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4930.16162, -1102.50171, 16.23727,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4884.13916, -1102.51965, 11.34457,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4888.41553, -1102.50073, 11.34457,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4931.45459, -1134.62476, 11.31958,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4931.42969, -1134.62964, 16.12887,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4931.42139, -1103.70459, 11.31957,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4931.40967, -1103.69849, 16.22886,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4894.74805, -1103.04248, 15.89647,   0.00000, 0.00000, -89.99979, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4886.33203, -1103.06726, 15.88333,   0.00000, 0.00000, -89.99979, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4884.14014, -1102.51575, 16.25465,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4888.39941, -1102.49524, 16.25722,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4930.81006, -1109.87512, 14.09143,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4930.82520, -1129.64783, 14.11484,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4930.78564, -1118.35852, 14.11709,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4924.14502, -1135.28845, 14.10527,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4908.58301, -1135.26404, 14.11162,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4864.36963, -1135.40454, 14.13787,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4855.87451, -1135.41638, 14.13191,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4886.32227, -1090.52710, 5.08513,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4870.32227, -1147.18152, 16.18556,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4870.34375, -1148.47925, 16.17933,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4871.54346, -1148.44202, 16.18806,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4882.71338, -1148.45435, 16.31686,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4889.95752, -1148.47693, 16.28232,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4901.11914, -1148.49548, 16.23144,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4902.24561, -1148.48218, 16.22195,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4902.24414, -1147.21448, 16.22545,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4870.90088, -1141.55408, 14.10654,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4877.15967, -1147.81677, 14.16367,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4896.21240, -1147.84070, 14.13867,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4901.67480, -1141.79395, 14.13866,   0.00000, 0.00000, 359.99994, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4887.73877, -1147.83850, 12.61751,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4887.74365, -1147.83850, 16.55762,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4852.80518, -1129.33936, 18.94487,   180.09125, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4852.81787, -1109.20337, 18.95319,   180.09125, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4852.80713, -1123.34583, 18.94955,   180.09125, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4877.36816, -1109.20154, 18.98021,   180.09125, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4901.87988, -1109.18274, 19.03026,   180.09125, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4919.83350, -1109.18970, 19.05581,   180.09125, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4877.31592, -1129.33582, 18.99287,   180.09125, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4901.82275, -1129.33972, 19.03655,   180.09125, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4919.89551, -1129.33630, 19.06130,   180.09125, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4877.33008, -1123.39661, 18.99844,   180.09125, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4901.80615, -1123.40515, 19.03070,   180.09125, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4919.86768, -1123.38989, 19.04995,   180.09125, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4876.97998, -1136.92236, 19.02128,   180.09125, 0.00000, -359.99973, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4895.56006, -1136.90991, 19.03426,   180.09125, 0.00000, -359.99973, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4886.42920, -1136.92627, 19.03263,   180.09125, 0.00000, -359.99973, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4852.82129, -1109.21936, 19.06448,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4877.35645, -1109.20422, 19.08184,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4901.88477, -1109.18677, 19.08817,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4919.81104, -1109.15820, 19.09361,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4919.83398, -1129.34497, 19.11733,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4895.33691, -1129.33057, 19.10662,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4919.82764, -1119.27893, 19.10654,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4870.91211, -1129.35547, 19.12269,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4852.82227, -1129.36206, 19.11409,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4895.64063, -1119.26050, 19.11013,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4871.86621, -1119.21948, 19.09487,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4852.86328, -1119.24170, 19.08794,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4876.98584, -1136.91516, 19.10416,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4895.54443, -1136.89490, 19.09011,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(8947, 4886.31836, -1136.91492, 19.09079,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(8135, 4861.76660, -1309.89783, 8.26984,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4915.65625, -1135.26624, 10.14209,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3851, 4915.65674, -1135.24487, 14.09210,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4918.89941, -1116.25000, 11.34458,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4918.90039, -1121.71094, 11.34458,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4918.89063, -1121.69739, 16.23795,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4918.88867, -1116.23743, 16.25401,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4859.37793, -1116.24878, 11.36481,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4859.39063, -1121.68933, 11.36535,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4859.39355, -1121.67676, 16.28037,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3529, 4859.38428, -1116.23621, 16.25841,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3409, 4871.85840, -1094.75525, 7.89491,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3409, 4871.91943, -1090.11975, 7.89491,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3409, 4872.03516, -1085.57813, 7.89491,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3409, 4900.71973, -1094.68567, 7.92071,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3409, 4900.68994, -1090.06482, 7.89572,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3409, 4900.56201, -1085.47815, 7.92071,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4823.07861, -1035.28613, 7.16075,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4848.10596, -1049.06519, 7.14548,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(624, 4917.82520, -1035.31445, 7.25025,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(634, 4883.89697, -1021.91113, 8.12350,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(634, 4932.44580, -1015.40833, 7.84818,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(634, 4892.27783, -1017.97498, 7.79850,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 4986.19434, -1023.03558, 3.49775,   0.00000, 0.00000, 281.25000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4809.69043, -1139.00903, 4.93139,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(624, 4951.52734, -1156.43835, 6.96090,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(1281, 4877.45996, -1090.49646, 8.91406,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1646, 4891.62500, -1086.15833, 8.40110,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4901.74805, -1131.91260, 10.34257,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4901.76172, -1125.76636, 10.34256,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4902.31689, -1121.70068, 8.12958,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4918.29541, -1121.65076, 8.12958,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4906.03564, -1121.69226, 11.56758,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4914.56006, -1121.68506, 11.57000,   89.99998, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4910.20215, -1121.69006, 11.56800,   89.99998, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4911.02148, -1121.69116, 14.15724,   89.99998, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4905.29834, -1121.69641, 17.29652,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4918.92139, -1125.83569, 10.34257,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4918.91602, -1131.90198, 10.34257,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4918.92139, -1131.92310, 14.65112,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4918.92676, -1125.81873, 14.63904,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4913.75684, -1125.80054, 10.34257,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4913.76270, -1125.79565, 14.60238,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4913.77881, -1131.76563, 10.34257,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4913.78711, -1131.75720, 14.60283,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4901.75391, -1131.90735, 14.75111,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4901.76758, -1125.75684, 14.73699,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4918.89941, -1112.17969, 10.34257,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4918.88965, -1106.64697, 10.34256,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4918.90479, -1112.19250, 14.65112,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4918.89551, -1106.65759, 14.64757,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4913.74902, -1112.10156, 10.34256,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4913.75293, -1106.50562, 10.34256,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4913.74512, -1106.50110, 14.75111,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4913.73633, -1112.14429, 14.75111,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4901.72461, -1112.19983, 10.34256,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4901.72852, -1106.49866, 10.34257,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4901.71973, -1112.18628, 14.75111,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4901.70947, -1106.50806, 14.74025,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4906.02344, -1116.22351, 11.64257,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4910.20947, -1116.22668, 11.64256,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4902.31445, -1116.26587, 8.12958,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4914.54785, -1116.22815, 11.66757,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4918.28174, -1116.21289, 8.12958,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4916.29736, -1116.22241, 14.16957,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4903.84033, -1116.22388, 14.17322,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4909.57666, -1116.21497, 17.17323,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4853.81836, -1112.14746, 10.36280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4853.82031, -1106.60461, 10.36284,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4853.82031, -1106.59558, 14.77139,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4853.82471, -1112.13245, 14.77362,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4853.82178, -1125.83142, 10.36280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4853.82324, -1132.06238, 10.36280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4853.82910, -1132.05005, 14.51361,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4853.83594, -1125.83521, 14.52135,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4859.31836, -1125.69971, 10.36280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4859.31201, -1132.21472, 10.36280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4859.31543, -1132.21350, 14.75225,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4859.32471, -1125.68555, 14.75842,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4859.31348, -1112.33545, 10.36284,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4859.30225, -1106.57434, 10.36284,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4859.29492, -1112.32092, 14.62568,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4859.28369, -1106.58325, 14.62297,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4870.75928, -1132.66370, 10.36335,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4870.76807, -1125.79834, 10.36335,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4870.74951, -1125.81165, 14.68075,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4870.74072, -1132.65356, 14.68910,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4870.76367, -1112.35608, 10.36335,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4870.76465, -1106.23889, 10.36335,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4870.76611, -1106.23730, 14.77190,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4870.77002, -1112.36597, 14.76546,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4866.57275, -1116.26965, 11.61333,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4870.29395, -1116.24146, 8.14981,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4862.16748, -1116.26501, 11.62836,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4854.42090, -1116.28333, 8.14981,   0.00000, 0.00000, -0.00010, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4916.28711, -1121.69189, 14.15388,   89.99998, 0.00000, -269.99994, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4856.58350, -1116.27686, 14.19315,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4858.12354, -1121.71497, 11.61300,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4854.39795, -1121.72632, 8.14981,   0.00000, 0.00000, -359.99973, -1, -1, -1, 500);
	CreateDynamicObject(1523, 4870.31787, -1121.69690, 8.15036,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4866.58984, -1121.72583, 11.58834,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4862.22266, -1121.72119, 11.58834,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4868.05127, -1121.72705, 14.17910,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4856.56445, -1121.72815, 14.20031,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4862.33936, -1121.72864, 17.34400,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4858.13525, -1116.25867, 10.36280,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4868.75879, -1116.26501, 14.20192,   89.99998, 0.00000, 89.99994, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4863.03711, -1116.25916, 17.11311,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(16501, 4903.84424, -1121.68701, 14.19378,   89.99998, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1736, 4871.15527, -1109.79639, 12.42872,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1786, 4886.05225, -1106.32153, 8.68019,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1828, 4886.02441, -1109.55090, 8.13980,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1829, 4912.07227, -1115.35339, 8.60662,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(2028, 4903.29102, -1109.01270, 8.22542,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(2132, 4870.21582, -1111.31934, 8.16183,   0.00000, 0.00000, 269.99994, -1, -1, -1, 500);
	CreateDynamicObject(2131, 4870.19336, -1104.38550, 8.16183,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(2296, 4902.06982, -1109.97241, 8.14001,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(2232, 4902.03564, -1110.10901, 9.21509,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(2232, 4902.05127, -1107.89075, 9.18996,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(14446, 4911.89404, -1108.95776, 8.72974,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(14391, 4869.77002, -1128.35583, 9.12295,   0.00000, 0.00000, -899.99976, -1, -1, -1, 500);
	CreateDynamicObject(2836, 4903.91504, -1108.48022, 8.14166,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(2630, 4906.45801, -1132.64807, 8.13676,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(2629, 4908.60840, -1123.08545, 8.14383,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2628, 4906.52246, -1122.95447, 8.13613,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(2627, 4908.33496, -1132.63403, 8.14290,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(2526, 4918.33789, -1107.57312, 8.14295,   0.00000, 0.00000, -269.99994, -1, -1, -1, 500);
	CreateDynamicObject(2525, 4914.37451, -1112.12891, 8.14209,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(2524, 4914.35400, -1110.91858, 8.14209,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(2517, 4915.36035, -1106.54163, 8.13427,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(2452, 4902.14893, -1128.48621, 8.13511,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(2361, 4867.13770, -1115.57629, 8.15565,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(2340, 4870.19336, -1107.36328, 8.16183,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(643, 4864.81396, -1104.29114, 8.63334,   0.00000, 0.00000, 337.50000, -1, -1, -1, 500);
	CreateDynamicObject(2340, 4870.20410, -1106.36511, 8.16183,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1723, 4882.79199, -1113.93445, 8.16092,   0.00000, 0.00000, 157.50005, -1, -1, -1, 500);
	CreateDynamicObject(1723, 4887.04834, -1114.07971, 8.14013,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1723, 4891.20654, -1113.15161, 8.14013,   0.00000, 0.00000, 202.50003, -1, -1, -1, 500);
	CreateDynamicObject(11631, 4864.92139, -1122.48352, 9.40877,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(2605, 4906.75195, -1115.54883, 8.51131,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1714, 4906.54443, -1114.66614, 8.11566,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(1743, 4903.24219, -1112.86438, 8.16005,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1742, 4901.68408, -1106.04260, 8.13758,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(2024, 4885.62842, -1107.02466, 8.16144,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1819, 4885.33252, -1112.42688, 8.14188,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(14455, 4870.97656, -1107.61218, 9.83463,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(2532, 4863.75098, -1115.68604, 8.16218,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(2340, 4870.19531, -1108.36511, 8.16183,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(2340, 4870.21143, -1110.35168, 8.16183,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(14780, 4907.72852, -1127.73035, 9.00888,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(937, 4860.04053, -1110.09729, 8.63758,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1808, 4859.73779, -1107.87695, 8.15771,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(2103, 4902.10986, -1129.81335, 8.14110,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(2149, 4870.27881, -1106.40137, 9.36644,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(16151, 4900.61230, -1109.41394, 8.55462,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(2229, 4883.99316, -1106.18652, 8.14209,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2229, 4888.75391, -1106.19775, 8.14209,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2596, 4870.35889, -1109.27502, 10.42682,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(2133, 4870.20361, -1109.33411, 8.16183,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(2141, 4870.20703, -1113.31213, 8.17597,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(2817, 4916.93994, -1110.71826, 8.14166,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(626, 4872.11377, -1105.02393, 10.21146,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(626, 4872.12354, -1114.36194, 10.21146,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(626, 4900.31250, -1105.01440, 10.21146,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(626, 4900.42432, -1114.36487, 10.21146,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(633, 4860.20654, -1104.83167, 9.15678,   0.00000, 0.00000, 236.25006, -1, -1, -1, 500);
	CreateDynamicObject(631, 4860.27832, -1115.39990, 9.03803,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(632, 4860.75000, -1133.88879, 8.60990,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(626, 4869.39209, -1133.18738, 10.16146,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(1714, 4865.14404, -1123.27563, 8.16144,   0.00000, 0.00000, 157.50005, -1, -1, -1, 500);
	CreateDynamicObject(2104, 4871.91455, -1128.47583, 8.16014,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(2841, 4864.51807, -1129.11609, 8.16286,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2566, 4861.93555, -1130.17883, 8.56769,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(2200, 4859.55225, -1125.51074, 8.16206,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(633, 4902.41455, -1104.06763, 9.13600,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(631, 4913.12549, -1104.05237, 9.04225,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4297.70801, -1340.73633, 12.82266,   0.00000, 0.00000, -2250.00146, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4339.30371, -1333.16602, 12.74163,   0.00000, 0.00000, -2430.00171, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4370.06104, -1340.70654, 12.90912,   0.00000, 0.00000, -2610.00220, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4411.40381, -1333.20581, 12.90912,   0.00000, 0.00000, -2790.00293, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4452.62207, -1340.73035, 12.90912,   0.00000, 0.00000, -2970.00342, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4498.77197, -1333.14441, 12.81972,   0.00000, 0.00000, -3150.00391, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4539.27637, -1340.75427, 12.86816,   0.00000, 0.00000, -3330.00439, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4580.13477, -1333.17419, 12.84316,   0.00000, 0.00000, -3510.00488, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4619.76270, -1340.76135, 12.84316,   0.00000, 0.00000, -3690.00537, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4651.30811, -1333.13757, 12.83460,   0.00000, 0.00000, -3870.00586, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4691.78613, -1340.76221, 12.83460,   0.00000, 0.00000, -4050.00635, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4732.64844, -1333.17664, 12.83460,   0.00000, 0.00000, -4230.00684, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4773.08105, -1340.76196, 12.83460,   0.00000, 0.00000, -4410.00732, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4813.34473, -1333.27563, 12.82703,   0.00000, 0.00000, -4590.00781, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4861.10889, -1340.89612, 12.82703,   0.00000, 0.00000, -4410.00732, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4892.30908, -1333.31079, 12.81923,   0.00000, 0.00000, -4590.00781, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4921.15332, -1340.85095, 12.82703,   0.00000, 0.00000, -4770.00830, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4961.59229, -1333.26428, 12.82703,   0.00000, 0.00000, -4950.00879, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4893.21729, -1278.80420, 12.82703,   0.00000, 0.00000, -4590.00781, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4862.26953, -1293.15747, 12.82703,   0.00000, 0.00000, -4545.00781, -1, -1, -1, 500);
	CreateDynamicObject(1294, 4924.74463, -1292.67798, 12.82703,   0.00000, 0.00000, -4635.00830, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5003.08740, -1340.91003, 12.77639,   0.00000, 0.00000, -4770.00830, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5043.33545, -1333.27307, 12.77339,   0.00000, 0.00000, -4950.00879, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5084.41992, -1340.89490, 12.77639,   0.00000, 0.00000, -5130.00928, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5124.60889, -1333.30701, 12.74896,   0.00000, 0.00000, -5310.00977, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5165.73730, -1340.87512, 12.75139,   0.00000, 0.00000, -5490.01025, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5205.86523, -1333.28235, 12.75139,   0.00000, 0.00000, -5670.01123, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5246.93701, -1340.89282, 12.75139,   0.00000, 0.00000, -5850.01172, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5286.68262, -1333.28125, 12.75139,   0.00000, 0.00000, -6030.01221, -1, -1, -1, 500);
	CreateDynamicObject(621, 4493.98389, -1323.10461, 7.92175,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(622, 4559.25586, -1350.99756, 8.17292,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4522.96826, -1351.82239, 7.31638,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4535.27051, -1348.57581, 7.34138,   0.00000, 0.00000, 78.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 4535.84277, -1324.07178, 8.05697,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 4582.49365, -1323.59521, 7.84675,   0.00000, 0.00000, 281.25003, -1, -1, -1, 500);
	CreateDynamicObject(621, 4590.74072, -1355.62036, 7.88031,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(621, 4603.30322, -1358.66040, 7.68991,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(622, 4630.44824, -1359.32166, 7.57293,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(648, 4609.78027, -1323.18445, 7.14621,   0.00000, 0.00000, 56.25002, -1, -1, -1, 500);
	CreateDynamicObject(624, 4659.55469, -1350.53149, 7.16638,   0.00000, 0.00000, 78.74997, -1, -1, -1, 500);
	CreateDynamicObject(624, 4655.93555, -1322.03430, 7.20782,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(624, 4671.17676, -1323.24390, 7.20782,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(624, 4731.68555, -1355.64124, 7.31638,   0.00000, 0.00000, 78.74997, -1, -1, -1, 500);
	CreateDynamicObject(624, 4749.47803, -1320.41418, 7.30782,   0.00000, 0.00000, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4805.92285, -1353.27087, 7.29138,   0.00000, 0.00000, 78.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 4706.17627, -1357.87061, 8.00531,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 4757.71436, -1355.88013, 8.00531,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(621, 4782.61475, -1318.21558, 8.02175,   0.00000, 0.00000, 281.25003, -1, -1, -1, 500);
	CreateDynamicObject(621, 4713.18115, -1319.70142, 8.02175,   0.00000, 0.00000, 303.75003, -1, -1, -1, 500);
	CreateDynamicObject(648, 4833.86816, -1321.94116, 7.34135,   0.00000, 0.00000, 56.25002, -1, -1, -1, 500);
	CreateDynamicObject(622, 4876.14063, -1321.83936, 7.90951,   0.00000, 0.00000, 168.75002, -1, -1, -1, 500);
	CreateDynamicObject(652, 4689.51660, -1320.09314, 7.95697,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 4764.03955, -1324.91101, 7.45696,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 4764.33105, -1350.17700, 7.84052,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(652, 4772.99756, -1352.99365, 7.69052,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(652, 4744.42529, -1350.43188, 7.69052,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(652, 4912.65723, -1352.52209, 7.39237,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(652, 4929.39648, -1352.75464, 7.64237,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(652, 4912.80420, -1320.78638, 7.15210,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(621, 4893.86865, -1304.39111, 4.21400,   0.00000, 0.00000, 303.75003, -1, -1, -1, 500);
	CreateDynamicObject(621, 4895.49512, -1350.76062, 7.45716,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(621, 4922.52441, -1364.69580, 5.08393,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(624, 4903.71777, -1320.23999, 6.92797,   0.00000, 0.00000, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(624, 4945.98389, -1322.12561, 6.42797,   0.00000, 0.00000, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(624, 5031.01123, -1321.69165, 6.68433,   0.00000, 0.00000, -56.25000, -1, -1, -1, 500);
	CreateDynamicObject(624, 5061.78662, -1352.33704, 7.06823,   0.00000, 0.00000, -236.24991, -1, -1, -1, 500);
	CreateDynamicObject(624, 5053.59717, -1347.79028, 7.16823,   0.00000, 0.00000, -236.24991, -1, -1, -1, 500);
	CreateDynamicObject(624, 5037.21045, -1347.56909, 6.66823,   0.00000, 0.00000, -236.24991, -1, -1, -1, 500);
	CreateDynamicObject(624, 5166.19287, -1325.62415, 6.65933,   0.00000, 0.00000, -449.99973, -1, -1, -1, 500);
	CreateDynamicObject(624, 5140.89209, -1325.48608, 6.93433,   0.00000, 0.00000, -449.99973, -1, -1, -1, 500);
	CreateDynamicObject(624, 5130.82275, -1348.51575, 6.99960,   0.00000, 0.00000, -596.24963, -1, -1, -1, 500);
	CreateDynamicObject(621, 5006.06934, -1321.20459, 7.44826,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(621, 4991.92041, -1317.83997, 7.49826,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(621, 5009.03516, -1354.90796, 7.60716,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 5111.48242, -1348.91785, 7.50716,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 5105.44922, -1318.45813, 7.67326,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5029.05078, -1352.31079, 7.62874,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(652, 5046.04395, -1351.23816, 7.74237,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(652, 5078.26563, -1350.92163, 7.79237,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(652, 5089.93555, -1354.50793, 7.81737,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(652, 5083.22900, -1358.10767, 7.71737,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(652, 5121.34717, -1350.93701, 7.76737,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(652, 5092.64844, -1319.49280, 7.83347,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(652, 5018.99756, -1319.03662, 7.68347,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(652, 5047.28516, -1324.47534, 7.80847,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(648, 5157.92871, -1349.33191, 7.31299,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(648, 5071.43213, -1324.59973, 7.09771,   0.00000, 0.00000, 45.00006, -1, -1, -1, 500);
	CreateDynamicObject(622, 4978.39160, -1322.44531, 7.26587,   0.00000, 0.00000, 168.75002, -1, -1, -1, 500);
	CreateDynamicObject(624, 5132.37061, -1320.14661, 7.10933,   0.00000, 0.00000, -449.99973, -1, -1, -1, 500);
	CreateDynamicObject(624, 5119.11670, -1320.17090, 7.08433,   0.00000, 0.00000, -449.99973, -1, -1, -1, 500);
	CreateDynamicObject(621, 5145.14307, -1314.14490, 6.97326,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5143.99463, -1354.84375, 6.93854,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(621, 5175.08936, -1352.26733, 7.18854,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(652, 5190.92383, -1322.85779, 7.65847,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(652, 5208.57471, -1348.87988, 7.37375,   0.00000, 0.00000, -224.99982, -1, -1, -1, 500);
	CreateDynamicObject(17472, 5303.05664, -1027.13867, -4.98793,   0.00000, 0.00000, 281.25003, -1, -1, -1, 500);
	CreateDynamicObject(17472, 5271.19287, -1049.92676, -3.29949,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(17472, 6415.34521, -1030.99109, -0.88355,   0.00000, 0.00000, 101.25002, -1, -1, -1, 500);
	CreateDynamicObject(17472, 6443.16064, -1063.96362, -2.33834,   0.00000, 0.00000, 191.25000, -1, -1, -1, 500);
	CreateDynamicObject(17472, 6439.28418, -1862.04651, -0.86330,   0.00000, 0.00000, 16.40666, -1, -1, -1, 500);
	CreateDynamicObject(17472, 6422.20166, -1891.55347, -5.16131,   0.00000, 0.00000, 83.90665, -1, -1, -1, 500);
	CreateDynamicObject(716, 4269.46875, -1336.51990, 8.39283,   0.00000, 0.00000, 33.75008, -1, -1, -1, 500);
	CreateDynamicObject(716, 4266.87158, -1315.75757, 8.39283,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(716, 4266.92920, -1295.81201, 8.37723,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(624, 4942.07813, -1066.85449, 7.24651,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5657.88428, -1655.10107, 8.14995,   0.00000, 0.00000, -899.99963, -1, -1, -1, 500);
	CreateDynamicObject(8441, 5456.75732, -1516.77661, 8.05421,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5524.24805, -1208.02563, 8.08047,   0.00000, 0.00000, -1349.99988, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5494.25146, -1442.15894, 8.11208,   0.00000, 0.00000, -989.99957, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5524.26807, -1567.43823, 8.07151,   0.00000, 0.00000, -1530.00012, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5524.28955, -1574.51013, 8.07895,   0.00000, 0.00000, -1530.00012, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5579.74268, -1625.08801, 8.14635,   0.00000, 0.00000, -1620.00037, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5554.24561, -1313.14990, 8.11460,   0.00000, 0.00000, -1169.99951, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5583.20850, -1516.78125, 8.07928,   0.00000, 0.00000, -1440.00000, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5648.55078, -1486.79089, 8.10397,   0.00000, 0.00000, -1079.99963, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5633.86963, -1408.81091, 8.08329,   0.00000, 0.00000, -1529.99988, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5619.22852, -1328.48987, 8.12234,   0.00000, 0.00000, -1259.99951, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5741.65137, -1268.48401, 8.11688,   0.00000, 0.00000, -1439.99951, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5726.99609, -1198.18896, 8.10775,   0.00000, 0.00000, -1529.99988, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5838.00146, -1655.06494, 8.13558,   0.00000, 0.00000, -1259.99951, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5763.12695, -1625.06860, 8.11090,   0.00000, 0.00000, -1620.00037, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5993.71924, -1502.08630, 8.13786,   0.00000, 0.00000, -1349.99976, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5890.65527, -1486.79468, 8.11947,   0.00000, 0.00000, -1439.99963, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5786.76514, -1516.78442, 8.06317,   0.00000, 0.00000, -1620.00012, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5727.67334, -1516.79333, 8.07927,   0.00000, 0.00000, -1620.00012, -1, -1, -1, 500);
	CreateDynamicObject(7479, 5895.99219, -1408.46301, 8.04050,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5816.54883, -1298.45911, 8.06057,   0.00000, 0.00000, -1620.00012, -1, -1, -1, 500);
	CreateDynamicObject(7479, 5319.30859, -1636.07129, 8.06095,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5309.32617, -1322.39612, 8.10398,   0.00000, 0.00000, -989.99957, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5369.32227, -1531.43359, 8.07007,   0.00000, 0.00000, -1169.99939, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5339.32813, -1426.48438, 8.05716,   0.00000, 0.00000, -1530.00012, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5339.30615, -1217.75757, 8.05054,   0.00000, 0.00000, -1530.00012, -1, -1, -1, 500);
	CreateDynamicObject(7479, 5449.28857, -1127.53162, 8.07385,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5509.57520, -1177.53979, 8.13413,   0.00000, 0.00000, -899.99939, -1, -1, -1, 500);
	CreateDynamicObject(8441, 5659.50391, -1147.52368, 8.10775,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(7479, 6043.71191, -1257.50574, 8.06664,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5963.07471, -1147.48962, 8.08786,   0.00000, 0.00000, -1620.00012, -1, -1, -1, 500);
	CreateDynamicObject(5191, 5727.15527, -1002.11487, 2.35775,   0.00000, 0.00000, -899.99988, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5727.01953, -1096.88208, 8.11058,   0.00000, 0.00000, -1529.99988, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5433.27930, -1776.04175, 8.10657,   0.00000, 0.00000, -1259.99963, -1, -1, -1, 500);
	CreateDynamicObject(4847, 3164.75317, -1913.95581, 0.70690,   0.00000, 0.00000, -539.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 3164.74902, -2012.41394, 0.71663,   0.00000, 0.00000, -720.00012, -1, -1, -1, 500);
	CreateDynamicObject(4847, 3514.65796, -1914.05652, 0.71663,   0.00000, 0.00000, -539.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 3866.33569, -1913.99548, 0.70135,   0.00000, 0.00000, -539.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4216.64014, -1913.85339, 0.71108,   0.00000, 0.00000, -539.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4567.40381, -1914.24719, 0.69882,   0.00000, 0.00000, -539.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4917.05518, -1914.34619, 0.70854,   0.00000, 0.00000, -539.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5265.48584, -1914.23560, 0.71218,   0.00000, 0.00000, -539.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5472.46729, -1914.42310, 0.71024,   0.00000, 0.00000, -540.00006, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5719.44336, -1914.53467, 0.70480,   0.00000, 0.00000, -540.00018, -1, -1, -1, 500);
	CreateDynamicObject(4847, 3045.39038, -1914.49487, 0.74163,   0.00000, 0.00000, -539.99994, -1, -1, -1, 500);
	CreateDynamicObject(4847, 3044.62427, -2012.09888, 0.77635,   0.00000, 0.00000, -720.00000, -1, -1, -1, 500);
	CreateDynamicObject(4847, 3515.79688, -2012.53101, 0.62835,   0.00000, 0.00000, -719.99976, -1, -1, -1, 500);
	CreateDynamicObject(4847, 3866.92358, -2012.28430, 0.66698,   0.00000, 0.00000, -719.99976, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4216.76074, -2011.73218, 0.67081,   0.00000, 0.00000, -719.99976, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4567.39404, -2011.53625, 0.68053,   0.00000, 0.00000, -719.99976, -1, -1, -1, 500);
	CreateDynamicObject(4847, 4917.04932, -2011.44873, 0.71827,   0.00000, 0.00000, -1080.00000, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5265.54004, -2010.85413, 0.72190,   0.00000, 0.00000, -1079.99988, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5472.41602, -2010.35034, 0.71452,   0.00000, 0.00000, -1079.99988, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5719.36816, -2010.57544, 0.66453,   0.00000, 0.00000, -1079.99988, -1, -1, -1, 500);
	CreateDynamicObject(8054, 2979.95947, -1964.29053, 10.92027,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8054, 3194.29907, -1964.25330, 10.89527,   0.00000, 0.00000, -270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8054, 3412.39673, -1964.28345, 10.83555,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(8054, 3631.99561, -1964.31189, 10.83555,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(8054, 3916.89624, -1964.31116, 10.84527,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(8054, 4135.77490, -1964.29529, 10.82027,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(8054, 4355.69775, -1964.31274, 10.83000,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(8054, 4575.44287, -1964.31750, 10.81774,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(8441, 3966.85986, -1744.62366, 8.35873,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(7052, 4017.50488, -1677.14465, 8.36283,   0.00000, 0.00000, -719.99945, -1, -1, -1, 500);
	CreateDynamicObject(7052, 3966.86426, -1616.57751, 8.40044,   0.00000, 0.00000, -629.99921, -1, -1, -1, 500);
	CreateDynamicObject(5191, 3966.72534, -1798.15710, 2.56812,   0.00000, 0.00000, -359.99973, -1, -1, -1, 500);
	CreateDynamicObject(5191, 3966.73853, -1879.62354, 2.62293,   0.00000, 0.00000, -720.00000, -1, -1, -1, 500);
	CreateDynamicObject(8832, 3962.49951, -1956.90576, 6.89988,   0.00000, 1.71887, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8832, 3966.18359, -1956.91162, 6.90599,   0.00000, 1.71887, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8054, 3830.33179, -1964.31311, 10.82027,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(8054, 4773.29883, -1964.33838, 10.82747,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(8054, 4993.00635, -1964.34363, 10.82746,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(8054, 5176.34424, -1964.33362, 10.83109,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(8054, 5396.22949, -1964.32983, 10.83109,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5447.92529, -1816.85547, 8.10026,   0.00000, 0.00000, -1890.00073, -1, -1, -1, 500);
	CreateDynamicObject(1894, 3958.50195, -1914.94434, 8.34841,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1894, 3975.17432, -1940.19934, 8.30663,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1346, 3977.53027, -1687.73828, 9.60439,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1540, 2873.37427, -1957.77417, 14.88139,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1540, 3681.51025, -1957.79041, 14.72166,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1540, 5224.94971, -1957.81104, 14.70299,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1540, 4186.01025, -1957.80298, 14.35298,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, 2959.54224, -1984.12854, 9.02814,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 3138.62573, -1984.12659, 9.01771,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 3317.69214, -1984.13269, 9.02100,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(9623, 2879.64868, -1973.51746, 12.92530,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(9623, 2879.64380, -1955.42871, 12.91768,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 2959.53613, -1944.42224, 9.03197,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 3496.84692, -1984.11938, 9.03718,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 3675.86035, -1984.12024, 9.04368,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 3854.88965, -1984.12012, 9.05394,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 4033.98218, -1984.11755, 9.04366,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 4213.12354, -1984.11462, 9.04454,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 4392.27637, -1984.11389, 9.04420,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 4571.43604, -1984.13696, 9.04295,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 4750.58887, -1984.14429, 9.03592,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 4929.76807, -1984.14490, 9.01705,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 5108.89307, -1984.15564, 9.02895,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 5287.97168, -1984.14819, 9.03193,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 5428.20557, -1984.15015, 9.05409,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 3138.72559, -1944.43433, 9.04089,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 3317.84058, -1944.42712, 9.04723,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 3496.71826, -1944.42041, 9.03196,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 3675.83276, -1944.42822, 9.03196,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 3855.06519, -1944.42725, 9.04168,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 4213.06934, -1944.46545, 9.05572,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 4392.19971, -1944.44666, 9.06423,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 4571.39941, -1944.44043, 9.06415,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 4750.47900, -1944.43372, 9.06418,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 4929.71289, -1944.44202, 9.04888,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 5108.98730, -1944.44092, 9.04888,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 5288.19922, -1944.43787, 9.05254,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4013.90405, -1902.17419, 28.82759,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4056.05566, -1857.53601, 28.83797,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(5184, 4100.83057, -1899.66541, 28.84834,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, 5378.03516, -1944.30957, 9.98068,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, 5378.04004, -1944.30432, 10.70567,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, 3944.84106, -1944.30823, 9.89834,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1237, 3944.85229, -1944.30945, 10.54361,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1894, 3952.90576, -1945.90930, 7.96699,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1290, 2888.52197, -1964.39465, 15.95695,   0.00000, 0.00000, 281.25000, -1, -1, -1, 500);
	CreateDynamicObject(1290, 2925.24927, -1964.41064, 15.88168,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 2962.44434, -1964.41663, 15.88936,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 2999.49097, -1964.41174, 15.83616,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3063.12109, -1964.41016, 15.86351,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3100.10864, -1964.35876, 15.84232,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3137.33228, -1964.35852, 15.83270,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3174.38843, -1964.34363, 15.81402,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3211.24219, -1964.34607, 15.81471,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3278.97339, -1964.35583, 15.79009,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3316.07227, -1964.38599, 15.77246,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3353.22412, -1964.38013, 15.76228,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3390.46704, -1964.39172, 15.76340,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3427.66797, -1964.37769, 15.77691,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3497.97241, -1964.37415, 15.76868,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3535.01831, -1964.40369, 15.76191,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3572.17285, -1964.42236, 15.78040,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3609.41797, -1964.42017, 15.76524,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3646.38965, -1964.40210, 15.72129,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3713.10278, -1964.39880, 15.71469,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3750.11279, -1964.40161, 15.67936,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3787.29272, -1964.42603, 15.77697,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3824.48315, -1964.40112, 15.75593,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3861.43945, -1964.40137, 15.73465,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3898.63184, -1964.40076, 15.74028,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 3935.74585, -1964.39624, 15.77283,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4002.49341, -1964.42273, 15.73651,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4039.54395, -1964.40149, 15.75133,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4076.77441, -1964.40112, 15.70000,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4113.91895, -1964.40088, 15.73154,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4150.83887, -1964.40125, 15.71973,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4221.37842, -1964.37646, 15.69798,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4258.50781, -1964.41541, 15.73469,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4295.65625, -1964.40234, 15.74372,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4332.66455, -1964.41565, 15.75969,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4369.53955, -1964.40747, 15.73585,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4440.87158, -1964.42834, 15.79630,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4477.88916, -1964.40100, 15.69557,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4515.13916, -1964.41016, 15.68626,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4552.14502, -1964.41089, 15.72921,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4588.95605, -1964.41406, 15.72753,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4667.51465, -1964.44861, 15.79369,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4704.64355, -1964.42126, 15.74115,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4741.78662, -1964.41235, 15.72856,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4778.82666, -1964.41479, 15.68216,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4858.30566, -1964.44739, 15.73073,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4895.42529, -1964.42383, 15.67376,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4932.54199, -1964.43140, 15.72051,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4969.63916, -1964.44580, 15.73211,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5006.67822, -1964.43750, 15.66927,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5078.62793, -1964.44202, 15.74844,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5115.72070, -1964.43542, 15.76078,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5152.82275, -1964.44995, 15.77430,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5190.20068, -1964.41846, 15.73732,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5261.96875, -1964.44263, 15.75259,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5299.01270, -1964.41797, 15.75327,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5336.21484, -1964.41809, 15.71466,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5373.22461, -1964.42932, 15.69816,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5410.14160, -1964.45044, 15.75444,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3568, 3988.75903, -1702.20471, 10.59201,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3577, 3998.21362, -1723.94800, 8.98175,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3633, 3999.10962, -1716.11353, 8.67819,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(12930, 3996.26343, -1704.23743, 9.08360,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(18260, 3945.75171, -1716.23718, 9.77658,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1211, 3972.05762, -1707.43823, 8.82266,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1342, 3956.44678, -1715.68469, 9.28708,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1448, 3935.85620, -1708.86865, 8.32077,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1442, 3917.27222, -1708.80542, 8.85187,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2670, 3927.04004, -1718.09998, 8.32041,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.63843, -1692.28613, 12.85654,   0.00000, 0.00000, -4320.00732, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.05298, -1732.20569, 12.90654,   0.00000, 0.00000, -4500.00781, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.62427, -1778.23950, 12.90344,   0.00000, 0.00000, -4680.00830, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.11450, -1820.88037, 12.93324,   0.00000, 0.00000, -4860.00879, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3970.60181, -1857.53320, 13.03383,   0.00000, 0.00000, -5040.00928, -1, -1, -1, 500);
	CreateDynamicObject(1294, 3963.12061, -1898.01160, 12.93324,   0.00000, 0.00000, -5220.00977, -1, -1, -1, 500);
	CreateDynamicObject(11387, 4024.05518, -1903.60168, 13.06267,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11388, 4014.67017, -1887.58484, 16.49082,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11389, 4014.73926, -1887.55859, 12.86217,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11390, 4014.69971, -1887.48987, 14.12287,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11391, 4006.68921, -1895.79834, 11.24490,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11392, 4012.17651, -1886.52673, 9.97517,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(11393, 4019.33545, -1892.89966, 11.48019,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11326, 4007.26318, -1933.35657, 12.28968,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4084, 4010.14063, -1903.84729, 12.99846,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(4084, 4023.68604, -1883.97632, 13.12677,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(9171, 4099.82520, -1900.20728, 12.97292,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16360, 4047.91357, -1863.68445, 10.11379,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(17064, 4067.48950, -1864.13586, 9.86535,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(1894, 4013.21045, -1859.09949, 8.81552,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1894, 4000.04224, -1859.08850, 8.80515,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1894, 3996.78662, -1864.04102, 8.80517,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1894, 3996.78809, -1897.42297, 8.80516,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1894, 3996.78589, -1910.82117, 8.79478,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1894, 4024.52881, -1941.02344, 8.79480,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1894, 4039.70215, -1941.02917, 8.83015,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1676, 4103.49609, -1902.32019, 11.49680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1676, 4103.49023, -1891.52698, 11.49640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1676, 4100.62451, -1902.31702, 11.49285,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1676, 4100.61426, -1891.50098, 11.49640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11417, 4079.77661, -1938.08032, 14.71438,   0.00000, 0.00000, 135.00005, -1, -1, -1, 500);
	CreateDynamicObject(11417, 4043.56250, -1937.97607, 14.83937,   0.00000, 0.00000, 135.00005, -1, -1, -1, 500);
	CreateDynamicObject(18260, 4030.54590, -1931.62012, 11.46797,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(1271, 4104.62012, -1921.98096, 10.31553,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1431, 4112.10107, -1922.11438, 10.51314,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1271, 4106.74561, -1921.85608, 10.31553,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(1271, 4030.02295, -1859.06628, 10.30515,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(1271, 4038.65356, -1859.26453, 10.30515,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1271, 4037.24951, -1859.46094, 10.30515,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3568, 4071.42163, -1887.83557, 12.32915,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3630, 4063.03442, -1857.83740, 11.45815,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3633, 4092.17163, -1871.36536, 10.65553,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3632, 4092.51074, -1862.89160, 10.65553,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3632, 4092.64307, -1865.74866, 10.65553,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(930, 4051.86548, -1864.93359, 10.56467,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1299, 4077.83765, -1923.93176, 10.42139,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1332, 4116.18555, -1921.55957, 11.02822,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1338, 4020.06006, -1870.39966, 10.66646,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1344, 4005.07104, -1870.33545, 10.76337,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1415, 4008.44263, -1870.40564, 10.02086,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1441, 4027.75879, -1913.48987, 10.59643,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2673, 4048.97656, -1871.23145, 10.04298,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2674, 4088.76025, -1911.97302, 9.98727,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2670, 4028.91943, -1873.24988, 10.04720,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2676, 4051.16724, -1916.01147, 10.04810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3594, 4016.39648, -1908.64050, 10.52596,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3593, 4074.15625, -1857.81726, 10.42570,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(12957, 4000.13184, -1931.20959, 10.83337,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4080.97144, -1906.75061, 16.21822,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1290, 4081.09961, -1879.77820, 16.24322,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(620, 2904.50830, -1987.38379, 8.33719,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(621, 2929.08740, -1988.37939, 7.82807,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(622, 2944.54492, -1988.67908, 8.62828,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(648, 3000.86377, -1985.91418, 8.79072,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(648, 2951.36768, -1941.01978, 9.03512,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 2909.09668, -1933.04480, 6.75754,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 2900.63721, -1916.18066, 2.40271,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(652, 2918.09741, -1940.34570, 8.97229,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(620, 2944.09326, -2008.01965, 3.23532,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3029.59912, -1996.32129, 5.41114,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 2975.34277, -1990.92395, 7.13562,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 2980.33496, -2011.78687, 1.79372,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3008.39673, -1913.54297, 2.44090,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3044.86108, -1930.02869, 6.16385,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3138.86597, -1934.78174, 7.24455,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3090.37256, -1922.75146, 4.07415,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3220.84253, -1920.66992, 3.37059,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3265.66162, -1938.23962, 8.35474,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3251.15796, -1928.93652, 4.73987,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3243.09473, -1941.79712, 8.71902,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3335.80884, -1986.43127, 8.19619,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3324.97437, -2007.13818, 2.73854,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3372.55713, -1923.29370, 4.14496,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3450.67310, -1933.13464, 5.93941,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3510.49023, -1987.95337, 6.90810,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3590.21069, -2004.82800, 3.17927,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3568.15576, -1988.58276, 7.21874,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3636.54517, -1935.57495, 7.45112,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3625.72827, -1917.51746, 2.95637,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3756.82397, -1929.74133, 5.80778,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3723.11182, -1990.65088, 6.70213,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3696.23877, -1992.32959, 6.41536,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3741.32129, -1998.03833, 4.72324,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3798.60107, -1929.52759, 5.23833,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3823.97388, -1939.91199, 9.28414,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3866.26978, -1989.53992, 7.33794,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3848.52588, -2003.59534, 3.38533,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 3878.23535, -1932.79089, 7.05365,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4066.71313, -1990.27112, 6.65356,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4100.37744, -2003.07593, 3.85264,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4208.87305, -2004.56250, 3.58836,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4159.35400, -1928.63977, 6.09722,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4220.45117, -1929.23303, 5.92891,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4238.50000, -1937.49377, 8.67290,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4266.00049, -1987.72864, 7.45378,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4250.34424, -1991.35559, 6.81269,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4333.62354, -1931.02686, 6.24097,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4408.57959, -1990.27966, 6.85215,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4381.62891, -1995.42798, 5.42405,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4507.09717, -1990.55859, 6.72856,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4485.87451, -2010.74548, 2.03551,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4459.46338, -1995.24329, 5.13922,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4443.79736, -1936.57178, 8.40772,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4456.96484, -1924.37122, 4.82096,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4478.32275, -1936.64172, 8.27869,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4497.91455, -1923.90894, 4.23758,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4489.84180, -1939.92554, 9.03160,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4547.06592, -1989.72351, 7.03647,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4728.69385, -1937.65149, 8.33383,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4712.68896, -1925.79578, 4.32068,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4701.12061, -1940.25989, 8.78160,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4721.96191, -1990.89722, 6.63249,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4713.17529, -1992.66101, 6.05180,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4835.20215, -1985.79944, 8.06633,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5023.06885, -1986.03589, 8.29010,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4960.97949, -1932.93030, 7.21761,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 4990.31396, -1935.65955, 7.86461,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5028.46680, -1936.91980, 8.24026,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5131.67139, -1986.03394, 8.48090,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5115.25537, -1989.42798, 6.94310,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5142.83105, -1929.32910, 5.59198,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5150.29102, -1936.13818, 7.85941,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5115.46338, -1932.06006, 6.47856,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5336.81934, -1986.43201, 7.47447,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5319.96582, -1990.61548, 6.57326,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5346.51221, -2019.39685, 0.26530,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5292.88623, -1926.23376, 4.50677,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(622, 3102.98633, -1989.48645, 8.31071,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 3168.25464, -1989.03308, 8.39475,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 3471.04810, -1987.92249, 8.75676,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 3776.20703, -1989.94214, 8.04612,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 4039.95337, -1988.72302, 8.51988,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 4354.12158, -1989.71594, 7.80638,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 4663.86523, -1993.51685, 6.55890,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 4983.48340, -1988.17529, 8.05056,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 5289.62695, -1989.07434, 7.42703,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 5088.45020, -1939.73022, 9.07224,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 4802.82764, -1941.13037, 9.42019,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 4448.59375, -1939.27759, 9.21444,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 3491.62573, -1937.05420, 8.66253,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 3518.19507, -1917.01721, 3.27270,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 3108.06812, -1935.64746, 7.97799,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(622, 3067.47876, -1909.57532, 1.82217,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(648, 3374.18481, -1996.98303, 5.17185,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(648, 3454.96191, -2000.86475, 4.54283,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(648, 3575.53662, -1935.55396, 7.16609,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(648, 3859.40430, -1942.22095, 8.71698,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(648, 4567.32617, -1936.11401, 7.25902,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(648, 4689.49512, -1986.93640, 8.35177,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(648, 4977.98291, -1928.36865, 4.91513,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(648, 5202.75684, -1988.21179, 7.03562,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(621, 3011.91528, -1929.78296, 5.64313,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3212.31250, -1987.18848, 8.06601,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3219.11426, -2003.42334, 3.60571,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3195.08496, -1991.11011, 7.00252,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3309.77344, -1933.49023, 6.87838,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3331.96216, -1930.03748, 5.99875,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3342.02466, -1936.43311, 8.07893,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3191.78247, -1938.80603, 8.60094,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3203.78955, -1920.85938, 3.99892,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3199.57153, -1929.75623, 6.12664,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3165.92700, -1930.71082, 6.16930,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3129.32788, -1918.35315, 3.34846,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3313.20508, -1989.38599, 6.80665,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3302.97534, -1998.34143, 4.60166,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3414.33423, -1988.33423, 7.58117,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3416.63428, -1997.88965, 4.54362,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3402.01465, -1994.61646, 5.49139,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3395.31152, -2001.11230, 3.95202,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3417.60498, -1924.42676, 4.47784,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3414.79199, -1939.49084, 8.63567,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3563.93384, -1926.12939, 4.53841,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3669.92017, -1989.54065, 6.95258,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3657.01563, -2015.33142, 1.13524,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3646.39380, -1995.78589, 4.64065,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3940.09790, -1986.27893, 8.03169,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4008.32446, -1996.59729, 4.44324,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 3990.13574, -1990.63342, 7.06310,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4162.71240, -1995.38672, 5.26025,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4143.98096, -2000.51184, 3.96009,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4154.59375, -2001.20398, 3.83289,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4160.96729, -2019.33960, 0.18893,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4255.33350, -1935.13171, 6.96891,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4354.59277, -1928.17371, 5.64534,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4311.44238, -1927.98206, 5.29827,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4319.35156, -1939.37488, 8.88012,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4536.96826, -1993.83752, 5.73438,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4526.81396, -2010.97351, 1.59634,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4564.73193, -1907.88391, 1.10181,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4611.85156, -1936.56946, 8.05252,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4724.60205, -2007.10620, 2.62024,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4820.39844, -2008.80444, 2.02447,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4817.25244, -2016.75439, 0.69908,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4798.56543, -2000.34583, 3.45295,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4953.17578, -2012.27612, 1.13603,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4831.52197, -1912.15491, 1.22344,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4873.02539, -1915.15552, 1.95420,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4884.42578, -1925.31116, 4.58434,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 4922.94287, -1908.28406, 0.91954,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5148.11426, -2011.55237, 1.10873,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5166.36279, -1996.02563, 4.47472,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5187.92139, -1997.85876, 4.11508,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5199.20947, -1922.34534, 3.77684,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(652, 3084.57153, -1987.86328, 7.93047,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 3080.07251, -1994.40942, 6.04612,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 3257.68286, -1987.33289, 8.20993,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 3277.27588, -2002.48547, 3.96777,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 3525.80493, -1930.98718, 6.47014,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 3529.57080, -1939.72571, 9.07088,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 3559.38281, -1940.97473, 9.32088,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 3697.71387, -1940.44885, 9.30561,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 3878.53149, -1985.95374, 9.27123,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 4601.36963, -1985.14490, 8.50989,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 4604.04297, -2000.55579, 4.64725,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 4577.81250, -1986.07239, 8.78063,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 4676.55176, -1940.83545, 9.55307,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 4756.81396, -1940.65881, 9.06279,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 4785.77637, -1938.52478, 8.77957,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 4924.29932, -1985.94714, 8.83012,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 4961.49365, -1988.25354, 7.57827,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 4972.24072, -2000.13367, 4.18136,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 5218.10547, -1939.19031, 8.56643,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1267, 3029.16992, -1942.54224, 25.03722,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1267, 3966.71753, -1986.97974, 24.56712,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1267, 5042.42480, -1941.76184, 25.53887,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(4730, 3029.73291, -1942.31604, 30.42766,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(8293, 3966.88403, -1987.84534, 29.95701,   0.00000, 0.00000, 135.00005, -1, -1, -1, 500);
	CreateDynamicObject(8310, 5042.35205, -1940.91162, 30.94526,   0.00000, 0.00000, 205.93777, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5434.06250, -1945.12573, 8.92754,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5487.28613, -1945.15430, 8.95088,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5451.74121, -1765.66223, 12.58875,   0.00000, 0.00000, -5760.01074, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5444.11377, -1797.58350, 12.61370,   0.00000, 0.00000, -5940.01172, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5451.07617, -1756.48096, 11.36627,   0.00000, 0.00000, -359.99997, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5349.72559, -1513.65601, 11.32822,   0.00000, 0.00000, -270.00009, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5328.91699, -1340.41772, 11.36212,   0.00000, 0.00000, -90.00014, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5513.88086, -1519.95654, 11.37642,   0.00000, 0.00000, -90.00014, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5534.63379, -1513.63464, 11.37642,   0.00000, 0.00000, 89.99982, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5513.82324, -1459.89551, 11.39523,   0.00000, 0.00000, 269.99979, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5534.63574, -1295.46582, 11.42274,   0.00000, 0.00000, 89.99982, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5527.34033, -1157.92737, 11.39227,   0.00000, 0.00000, -0.00021, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5630.75781, -1506.37537, 11.36803,   0.00000, 0.00000, -180.00012, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5637.01172, -1308.87439, 11.43049,   0.00000, 0.00000, -0.00015, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5675.73486, -1635.49658, 11.44834,   0.00000, 0.00000, -0.00015, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5855.82227, -1635.44690, 11.41104,   0.00000, 0.00000, -0.00015, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5872.86523, -1506.38306, 11.40262,   0.00000, 0.00000, 179.99986, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5723.75928, -1288.10010, 11.42502,   0.00000, 0.00000, 179.99986, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5730.08984, -1157.93250, 11.44714,   0.00000, 0.00000, -0.00010, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5723.78711, -1137.11682, 11.41717,   0.00000, 0.00000, -180.00017, -1, -1, -1, 500);
	CreateDynamicObject(1315, 6013.29688, -1519.85620, 11.42101,   0.00000, 0.00000, -90.00008, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5463.11768, -1749.86047, 12.60595,   0.00000, 0.00000, -6570.01367, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5493.44092, -1742.27161, 12.58875,   0.00000, 0.00000, -6750.01416, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5433.42627, -1742.22266, 12.66375,   0.00000, 0.00000, -6750.01416, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5403.74756, -1749.85107, 12.61375,   0.00000, 0.00000, -6930.01465, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5373.50879, -1742.29614, 12.58875,   0.00000, 0.00000, -7110.01514, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5339.54297, -1745.78894, 12.63220,   0.00000, 0.00000, -7335.01563, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5343.09033, -1716.33789, 12.58220,   0.00000, 0.00000, -7560.01611, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5335.56982, -1685.73535, 12.60720,   0.00000, 0.00000, -7740.01709, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5343.07959, -1656.38538, 12.60720,   0.00000, 0.00000, -7920.01758, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5335.54443, -1625.78625, 12.63220,   0.00000, 0.00000, -8100.01807, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5343.15283, -1596.29211, 12.60226,   0.00000, 0.00000, -8280.01855, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5335.51025, -1565.73816, 12.52726,   0.00000, 0.00000, -8460.01855, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5343.10986, -1536.45874, 12.57726,   0.00000, 0.00000, -8640.01953, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5335.53613, -1506.59424, 12.57726,   0.00000, 0.00000, -8820.01953, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5343.10889, -1476.38599, 12.55226,   0.00000, 0.00000, -9000.02051, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5335.58203, -1445.49280, 12.57060,   0.00000, 0.00000, -9180.02051, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5343.09473, -1415.62524, 12.62060,   0.00000, 0.00000, -9360.02148, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5335.50781, -1386.84045, 12.58616,   0.00000, 0.00000, -9540.02148, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5343.09033, -1358.05884, 12.63616,   0.00000, 0.00000, -9720.02246, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5335.53369, -1326.86829, 12.61116,   0.00000, 0.00000, -9900.02344, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5343.07666, -1298.04004, 12.61116,   0.00000, 0.00000, -10080.02344, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5335.51465, -1267.41870, 12.61116,   0.00000, 0.00000, -10260.02441, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5343.08887, -1237.38831, 12.56099,   0.00000, 0.00000, -10440.02441, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5335.50537, -1206.75574, 12.53897,   0.00000, 0.00000, -10620.02539, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5343.06787, -1177.35840, 12.62010,   0.00000, 0.00000, -10800.02539, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5339.56104, -1147.80469, 12.67010,   0.00000, 0.00000, -11025.02637, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5369.01367, -1151.30066, 12.62010,   0.00000, 0.00000, -10890.02539, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5399.59424, -1143.73853, 12.67010,   0.00000, 0.00000, -11070.02637, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5428.95068, -1151.30920, 12.64510,   0.00000, 0.00000, -11250.02637, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5465.30811, -1143.75354, 12.69131,   0.00000, 0.00000, -11430.02734, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5494.59912, -1151.30798, 12.61631,   0.00000, 0.00000, -11610.02734, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5524.50586, -1143.75684, 12.61632,   0.00000, 0.00000, -11790.02832, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5554.59131, -1151.35925, 12.69131,   0.00000, 0.00000, -11970.02930, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5587.26318, -1143.72852, 12.65400,   0.00000, 0.00000, -12150.02930, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5616.67334, -1151.32202, 12.70400,   0.00000, 0.00000, -12330.03027, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5647.31396, -1143.74670, 12.70400,   0.00000, 0.00000, -12510.03027, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5676.61963, -1151.30115, 12.70400,   0.00000, 0.00000, -12690.03125, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5707.11182, -1143.75293, 12.70400,   0.00000, 0.00000, -12870.03125, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5737.26123, -1151.31775, 12.65400,   0.00000, 0.00000, -13050.03223, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5765.31738, -1143.73438, 12.59123,   0.00000, 0.00000, -13230.03223, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5796.01318, -1151.29736, 12.65674,   0.00000, 0.00000, -13410.03320, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5825.36279, -1143.72754, 12.63174,   0.00000, 0.00000, -13590.03320, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5855.96777, -1151.28198, 12.60674,   0.00000, 0.00000, -13770.03418, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5885.41113, -1143.67017, 12.65674,   0.00000, 0.00000, -13950.03418, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5915.95361, -1151.28003, 12.63174,   0.00000, 0.00000, -14130.03516, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5954.04932, -1143.71216, 12.67629,   0.00000, 0.00000, -14310.03418, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5990.81201, -1151.28784, 12.57629,   0.00000, 0.00000, -14490.03516, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6023.46191, -1147.78857, 12.66289,   0.00000, 0.00000, -14715.03613, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6019.92432, -1177.18945, 12.66289,   0.00000, 0.00000, -14940.03613, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6027.49756, -1207.85486, 12.66289,   0.00000, 0.00000, -15120.03711, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6019.95605, -1237.27490, 12.61289,   0.00000, 0.00000, -15300.03711, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6027.52246, -1267.80176, 12.66290,   0.00000, 0.00000, -15480.03809, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6019.89746, -1297.20837, 12.66289,   0.00000, 0.00000, -15660.03809, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6027.50293, -1326.84070, 12.65677,   0.00000, 0.00000, -15840.03906, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6019.93896, -1357.05139, 12.66457,   0.00000, 0.00000, -16020.03906, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6027.49561, -1386.99780, 12.66457,   0.00000, 0.00000, -16200.04004, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6019.91211, -1414.65198, 12.67114,   0.00000, 0.00000, -16380.04004, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6027.49072, -1447.73962, 12.69505,   0.00000, 0.00000, -16560.04102, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6019.93359, -1477.12158, 12.69505,   0.00000, 0.00000, -16740.04102, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6027.50098, -1507.04187, 12.69505,   0.00000, 0.00000, -16920.04297, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6019.93896, -1536.77417, 12.74217,   0.00000, 0.00000, -17100.04297, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6027.49365, -1567.13879, 12.74217,   0.00000, 0.00000, -17280.04297, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6019.95020, -1597.44971, 12.73438,   0.00000, 0.00000, -17460.04297, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6027.51953, -1625.43469, 12.71722,   0.00000, 0.00000, -17640.04492, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5994.03027, -1621.25464, 12.71722,   0.00000, 0.00000, -17910.04492, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5963.57861, -1628.87622, 12.71722,   0.00000, 0.00000, -18090.04492, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5934.15039, -1621.29492, 12.71722,   0.00000, 0.00000, -18270.04492, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5903.45313, -1628.89771, 12.71722,   0.00000, 0.00000, -18450.04688, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5873.91748, -1621.23865, 12.71722,   0.00000, 0.00000, -18630.04688, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5842.39404, -1628.87500, 12.69277,   0.00000, 0.00000, -18810.04688, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5813.66895, -1621.28210, 12.69277,   0.00000, 0.00000, -18990.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5783.01904, -1628.86426, 12.69277,   0.00000, 0.00000, -19170.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5753.53027, -1621.28796, 12.67433,   0.00000, 0.00000, -19350.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5722.68262, -1628.86938, 12.67131,   0.00000, 0.00000, -19530.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5693.53809, -1621.31580, 12.70714,   0.00000, 0.00000, -19710.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5662.17725, -1628.96082, 12.70714,   0.00000, 0.00000, -19890.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5633.53955, -1621.28711, 12.70714,   0.00000, 0.00000, -20070.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5594.11084, -1628.96338, 12.73479,   0.00000, 0.00000, -20250.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5560.78516, -1621.31458, 12.72699,   0.00000, 0.00000, -20430.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5528.08398, -1594.20923, 12.66451,   0.00000, 0.00000, -20880.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5520.44971, -1563.50635, 12.66739,   0.00000, 0.00000, -21060.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5528.04492, -1533.68335, 12.56739,   0.00000, 0.00000, -21240.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5520.43604, -1501.98315, 12.66927,   0.00000, 0.00000, -21420.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5528.05859, -1472.33521, 12.66927,   0.00000, 0.00000, -21600.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5520.43506, -1441.99487, 12.66927,   0.00000, 0.00000, -21780.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5528.03809, -1407.86841, 12.66928,   0.00000, 0.00000, -21960.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5520.47559, -1377.60168, 12.66927,   0.00000, 0.00000, -22140.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5528.03223, -1348.21021, 12.67179,   0.00000, 0.00000, -22320.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5520.44824, -1317.66345, 12.67179,   0.00000, 0.00000, -22500.05859, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5528.09375, -1288.28894, 12.66398,   0.00000, 0.00000, -22680.05859, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5520.48730, -1257.60852, 12.67179,   0.00000, 0.00000, -22860.05859, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5528.06299, -1228.99084, 12.66891,   0.00000, 0.00000, -23040.05859, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5520.47754, -1197.23706, 12.69131,   0.00000, 0.00000, -23220.06055, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5528.01611, -1167.84082, 12.69131,   0.00000, 0.00000, -23400.06055, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5676.35889, -1665.40833, 12.70714,   0.00000, 0.00000, -20160.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5668.81641, -1693.89209, 12.74272,   0.00000, 0.00000, -20340.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5676.31250, -1723.98560, 12.74272,   0.00000, 0.00000, -20160.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5651.46729, -1749.73608, 12.74272,   0.00000, 0.00000, -20250.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5682.91797, -1742.14941, 12.74272,   0.00000, 0.00000, -20430.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5712.43066, -1749.74670, 12.74272,   0.00000, 0.00000, -20610.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5742.99121, -1742.15100, 12.74272,   0.00000, 0.00000, -20790.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5772.41602, -1749.72644, 12.74272,   0.00000, 0.00000, -20970.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5803.05713, -1742.14612, 12.74272,   0.00000, 0.00000, -21150.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5832.32568, -1749.74976, 12.74272,   0.00000, 0.00000, -21330.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5848.74805, -1733.35303, 12.74272,   0.00000, 0.00000, -21420.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5856.31348, -1703.99780, 12.74272,   0.00000, 0.00000, -21600.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5848.89014, -1674.79370, 12.69277,   0.00000, 0.00000, -21780.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5856.47754, -1645.31555, 12.69277,   0.00000, 0.00000, -21960.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5359.03223, -1520.61145, 12.53414,   0.00000, 0.00000, -18810.04688, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5384.55957, -1512.98376, 12.65046,   0.00000, 0.00000, -18990.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5413.97559, -1520.58899, 12.65046,   0.00000, 0.00000, -19170.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5444.55322, -1512.98950, 12.65046,   0.00000, 0.00000, -19350.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5473.93262, -1520.57092, 12.65046,   0.00000, 0.00000, -19530.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5504.38818, -1512.99500, 12.65046,   0.00000, 0.00000, -19710.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5542.72021, -1520.56958, 12.60046,   0.00000, 0.00000, -19890.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5574.99121, -1513.00635, 12.66772,   0.00000, 0.00000, -20070.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5607.98779, -1520.57056, 12.66772,   0.00000, 0.00000, -20250.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5644.14307, -1512.99512, 12.66116,   0.00000, 0.00000, -20430.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5672.96777, -1520.59497, 12.66115,   0.00000, 0.00000, -20250.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5708.71533, -1512.98804, 12.66771,   0.00000, 0.00000, -20430.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5738.65283, -1520.58423, 12.66771,   0.00000, 0.00000, -20610.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5768.52832, -1513.02917, 12.65161,   0.00000, 0.00000, -20790.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5801.12744, -1520.58862, 12.65161,   0.00000, 0.00000, -20970.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5835.63135, -1512.99451, 12.67666,   0.00000, 0.00000, -21150.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5865.80127, -1520.55652, 12.66885,   0.00000, 0.00000, -21330.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5895.58545, -1512.98059, 12.67666,   0.00000, 0.00000, -21510.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5924.95850, -1520.55945, 12.67666,   0.00000, 0.00000, -21690.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5953.51660, -1512.98547, 12.67666,   0.00000, 0.00000, -21870.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5983.44043, -1520.52917, 12.69505,   0.00000, 0.00000, -22050.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6013.40576, -1512.99329, 12.69505,   0.00000, 0.00000, -22230.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5637.65332, -1487.12024, 12.66116,   0.00000, 0.00000, -21600.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5630.07178, -1456.48572, 12.66116,   0.00000, 0.00000, -21780.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5637.65674, -1428.38489, 12.66815,   0.00000, 0.00000, -21960.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5630.02637, -1397.80054, 12.67173,   0.00000, 0.00000, -22140.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5637.64258, -1358.84949, 12.67173,   0.00000, 0.00000, -22320.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5630.08154, -1328.22778, 12.67953,   0.00000, 0.00000, -22500.05859, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5544.01611, -1302.29810, 12.67179,   0.00000, 0.00000, -21690.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5574.90918, -1294.71375, 12.67953,   0.00000, 0.00000, -21870.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5604.24658, -1302.27844, 12.67953,   0.00000, 0.00000, -22050.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5634.19238, -1294.71277, 12.67953,   0.00000, 0.00000, -22230.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5664.23486, -1302.32397, 12.67953,   0.00000, 0.00000, -22410.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5696.64941, -1294.62219, 12.67406,   0.00000, 0.00000, -22590.05859, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5726.62891, -1302.25452, 12.67406,   0.00000, 0.00000, -22770.05859, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5756.65039, -1294.65906, 12.67406,   0.00000, 0.00000, -22950.05859, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5785.94336, -1302.28735, 12.67406,   0.00000, 0.00000, -23130.06055, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5817.54492, -1294.67590, 12.64900,   0.00000, 0.00000, -23310.06055, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5837.30566, -1302.27124, 12.64900,   0.00000, 0.00000, -23490.06055, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5865.82178, -1294.67444, 12.63675,   0.00000, 0.00000, -23670.06055, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5872.14551, -1318.14709, 12.63675,   0.00000, 0.00000, -23940.06250, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5879.76709, -1348.81299, 12.63675,   0.00000, 0.00000, -24120.06250, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5872.18701, -1378.21997, 12.63675,   0.00000, 0.00000, -24300.06250, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5879.81348, -1408.79590, 12.63675,   0.00000, 0.00000, -24480.06250, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5872.18555, -1438.19128, 12.63675,   0.00000, 0.00000, -24660.06445, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5879.76904, -1467.16040, 12.67666,   0.00000, 0.00000, -24840.06445, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5872.22266, -1496.47717, 12.67666,   0.00000, 0.00000, -25020.06445, -1, -1, -1, 500);
	CreateDynamicObject(5184, 5713.81592, -918.06641, 26.87955,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(5184, 5734.90430, -918.08734, 26.88994,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(5184, 5591.95947, -918.07068, 26.94312,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(5184, 5851.99658, -918.04822, 26.87534,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(5184, 5547.16650, -875.89459, 26.96351,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(5184, 5547.15723, -753.60339, 26.95209,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(5184, 6008.98340, -875.29895, 26.89251,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(5184, 6008.97412, -751.14972, 26.87789,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(5184, 5839.40674, -618.44153, 26.91327,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(5184, 5714.36230, -618.46149, 26.94865,   0.00000, 0.00000, -179.99971, -1, -1, -1, 500);
	CreateDynamicObject(5184, 5589.28467, -618.44128, 26.95105,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5704.99854, -816.51520, 7.75294,   0.00000, 0.00000, -539.99945, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5719.75244, -706.69360, 7.68455,   0.00000, 0.00000, -719.99945, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5723.26367, -1127.20752, 12.69865,   0.00000, 0.00000, -13140.03223, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5730.80322, -1095.88171, 12.69901,   0.00000, 0.00000, -13320.03223, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5723.24756, -1063.63965, 12.69901,   0.00000, 0.00000, -13500.03320, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5730.78809, -1031.10046, 12.67401,   0.00000, 0.00000, -13680.03320, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5723.22754, -1001.27985, 12.69901,   0.00000, 0.00000, -13860.03418, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5730.76855, -970.16742, 12.67401,   0.00000, 0.00000, -14040.03516, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5723.28760, -940.11292, 12.79901,   0.00000, 0.00000, -13860.03418, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5784.45801, -1147.50439, 8.13671,   0.00000, 0.00000, -1620.00012, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5864.56445, -1147.51099, 8.06171,   0.00000, 0.00000, -1620.00012, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5945.85596, -1147.50903, 8.05510,   0.00000, 0.00000, -1620.00012, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5445.30273, -1507.68835, 6.86870,   0.00000, 0.00000, -359.99979, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5411.96289, -1507.70813, 6.89370,   0.00000, 0.00000, -359.99979, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5348.48242, -1435.88696, 6.94370,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5348.47217, -1402.66455, 6.95432,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5348.48389, -1369.26807, 6.95433,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5348.49707, -1335.85510, 6.96208,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5348.49561, -1302.44995, 6.96208,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5348.49512, -1269.05505, 6.97271,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5348.49756, -1235.64648, 6.97271,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5348.49951, -1202.21423, 6.97385,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5348.50488, -1186.82849, 6.94885,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5353.47559, -1156.61267, 6.94884,   0.00000, 0.00000, -539.99957, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5386.89111, -1156.62170, 6.94885,   0.00000, 0.00000, -539.99957, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5453.51904, -1156.63171, 6.95660,   0.00000, 0.00000, -539.99957, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5484.89209, -1156.63770, 6.95660,   0.00000, 0.00000, -539.99957, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5515.09521, -1161.61475, 6.97499,   0.00000, 0.00000, -629.99951, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5515.09375, -1195.00366, 6.97499,   0.00000, 0.00000, -629.99951, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5515.09766, -1228.39490, 6.97385,   0.00000, 0.00000, -629.99951, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5515.09229, -1261.77979, 6.97385,   0.00000, 0.00000, -629.99951, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5515.09912, -1295.14417, 6.98046,   0.00000, 0.00000, -629.99951, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5515.08984, -1328.51746, 6.98046,   0.00000, 0.00000, -629.99951, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5515.08643, -1361.94849, 6.98046,   0.00000, 0.00000, -629.99951, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5515.08594, -1395.36389, 6.98046,   0.00000, 0.00000, -629.99951, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5515.07813, -1417.52954, 6.95546,   0.00000, 0.00000, -629.99951, -1, -1, -1, 500);
	CreateDynamicObject(9582, 5398.31982, -1780.06812, 16.61722,   0.00000, 0.00000, 165.31221, -1, -1, -1, 500);
	CreateDynamicObject(4193, 5376.49805, -1636.48828, 22.21952,   0.00000, 0.00000, -89.99985, -1, -1, -1, 500);
	CreateDynamicObject(4563, 5673.82031, -1476.90808, 93.94204,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4570, 5838.12012, -1485.40991, 54.99005,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4585, 5757.76123, -1489.77405, 96.39271,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(4587, 5845.83447, -1336.71765, 66.69139,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(4601, 5856.78906, -1317.12720, 47.28410,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(5740, 5759.01221, -1319.64233, -2.53754,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(5767, 5682.03027, -1329.76575, 55.68515,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6342, 5746.60010, -1816.95044, 28.10882,   0.00000, 0.00000, -593.67120, -1, -1, -1, 500);
	CreateDynamicObject(7696, 5602.12207, -1436.30554, 13.41292,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8392, 5584.80518, -1436.27100, 37.53465,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8419, 5687.91992, -1223.11511, 19.72283,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8555, 5756.96289, -1226.46265, 31.37357,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(10945, 5950.36182, -1414.40295, 95.31929,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(10948, 5782.68115, -1693.08289, 70.20464,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3781, 5845.79834, -1336.70105, 29.55939,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3781, 5845.74365, -1336.71277, 56.86054,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3781, 5845.75195, -1336.65381, 84.13594,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3781, 5845.75439, -1336.63770, 111.30096,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3671, 5793.01953, -1815.15271, 29.85847,   0.00000, 0.00000, 126.32832, -1, -1, -1, 500);
	CreateDynamicObject(3671, 5779.57715, -1819.49292, 29.86232,   0.00000, 0.00000, 120.31220, -1, -1, -1, 500);
	CreateDynamicObject(3671, 5766.75098, -1822.18628, 29.86742,   0.00000, 0.00000, 114.29614, -1, -1, -1, 500);
	CreateDynamicObject(3671, 5753.93750, -1823.45081, 29.86781,   0.00000, 0.00000, 108.28008, -1, -1, -1, 500);
	CreateDynamicObject(3671, 5740.86426, -1823.44946, 29.86791,   0.00000, 0.00000, 102.26403, -1, -1, -1, 500);
	CreateDynamicObject(3671, 5727.92578, -1822.09204, 29.87868,   0.00000, 0.00000, 96.24797, -1, -1, -1, 500);
	CreateDynamicObject(3671, 5715.17725, -1819.38733, 29.87422,   0.00000, 0.00000, 90.15456, -1, -1, -1, 500);
	CreateDynamicObject(3671, 5702.30664, -1815.21216, 29.87247,   0.00000, 0.00000, 84.13851, -1, -1, -1, 500);
	CreateDynamicObject(3980, 5430.94043, -1571.54065, 17.84529,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4552, 5601.55566, -1591.58850, 20.02319,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5716, 5569.24121, -1270.64258, 21.18972,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6863, 5741.84961, -1552.15222, 52.84692,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(6866, 5959.09033, -1219.99292, 19.38831,   0.00000, 0.00000, -269.99969, -1, -1, -1, 500);
	CreateDynamicObject(8079, 5835.32617, -1190.06067, 21.22537,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(9834, 5977.23145, -1296.30713, 24.90346,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(4002, 5429.34863, -1576.88025, 51.24857,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3851, 5842.72607, -1324.66150, 9.84712,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3851, 5842.72119, -1318.99670, 9.84711,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5309, 5841.99219, -1543.19739, 11.22873,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5732, 5564.23926, -1182.33923, 15.61567,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(18265, 5543.23828, -1235.51111, 9.26574,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(4004, 5543.88916, -1486.87537, 20.04426,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(18203, 5598.50879, -1331.84448, 11.57445,   0.00000, 0.00000, -89.99985, -1, -1, -1, 500);
	CreateDynamicObject(17536, 5661.10010, -1554.59399, 19.94141,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4117, 5552.23242, -1344.91821, 18.45113,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4176, 5616.01318, -1276.45093, 13.44452,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6977, 5369.22070, -1114.66980, 7.61764,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(5810, 5622.25049, -1194.56445, 13.02274,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5017, 5619.00684, -1248.48975, 11.33689,   0.00000, 0.00000, 90.00004, -1, -1, -1, 500);
	CreateDynamicObject(5731, 5591.71484, -1227.32263, 10.84357,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(5142, 5825.40479, -1117.80139, 14.23388,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(5709, 5881.86523, -1122.89832, 16.87259,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4593, 5401.90869, -1726.81006, 8.06060,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(5792, 5616.82520, -1547.93799, 20.60127,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1260, 5627.21680, -1540.48560, 24.62450,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(6157, 5563.30225, -1543.92676, 18.59832,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(7984, 5931.42236, -1571.08545, 22.31035,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(10954, 5432.17285, -1256.35168, 27.31896,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(10955, 5432.16992, -1256.35156, 27.26158,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8411, 5846.25879, -1595.04370, 10.59743,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(9169, 5993.53467, -1574.90173, 11.07150,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1676, 5992.48242, -1583.65259, 9.59143,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1676, 5990.18506, -1583.63306, 9.59143,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1676, 5992.50049, -1572.77979, 9.59143,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1676, 5990.21240, -1572.80798, 9.58460,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16082, 5644.74268, -1335.78638, 12.29823,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(7479, 5412.30518, -1346.84204, 8.05710,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5348.49707, -1465.50769, 6.93594,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5378.70264, -1507.71155, 6.88594,   0.00000, 0.00000, -359.99979, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5504.55762, -1452.99939, 12.66927,   0.00000, 0.00000, -21870.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5473.96582, -1460.64258, 12.66927,   0.00000, 0.00000, -22050.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5442.64648, -1452.99182, 12.65335,   0.00000, 0.00000, -22230.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5428.48828, -1426.55530, 12.65335,   0.00000, 0.00000, -22140.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5436.10791, -1397.22498, 12.65335,   0.00000, 0.00000, -22320.05664, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5428.49121, -1366.51184, 12.65335,   0.00000, 0.00000, -22500.05859, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5436.06152, -1337.17883, 12.65335,   0.00000, 0.00000, -22680.05859, -1, -1, -1, 500);
	CreateDynamicObject(3776, 5481.56787, -1361.03455, 16.71773,   0.00000, 0.00000, 180.85947, -1, -1, -1, 500);
	CreateDynamicObject(3566, 5455.31885, -1357.91406, 10.30071,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3569, 5455.30469, -1362.32214, 10.30071,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5348.49658, -1498.92346, 6.93595,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5348.50244, -1502.74707, 6.91094,   0.00000, 0.00000, -449.99966, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5454.95605, -1457.13647, 7.70157,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5478.72656, -1507.67761, 6.88594,   0.00000, 0.00000, -359.99979, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5510.15430, -1507.66675, 6.88594,   0.00000, 0.00000, -359.99979, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5515.11621, -1477.42737, 6.91208,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5515.11768, -1470.86523, 6.88708,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(3755, 5459.69336, -1484.99548, 13.58536,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(8059, 5378.42236, -1484.21814, 11.32467,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(10378, 5772.63086, -1405.54077, 7.88253,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10368, 5688.76904, -1398.79187, 28.47988,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8034, 6365.78369, -1234.64404, 12.67973,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3998, 5702.47510, -1602.53162, 14.23085,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3483, 5312.13379, -1172.75745, 14.98277,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3484, 5312.26025, -1202.98315, 14.65466,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3485, 5312.10254, -1233.26465, 14.96906,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3486, 5312.10400, -1263.55151, 15.00778,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3487, 5312.11328, -1310.11279, 14.72966,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3488, 5312.12500, -1289.14319, 14.56402,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(6053, 5434.89111, -1117.16968, 14.55462,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5819, 5486.85645, -1130.03674, 7.89900,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5299.61914, -1318.94287, 8.06984,   0.00000, 0.00000, -539.99957, -1, -1, -1, 500);
	CreateDynamicObject(3485, 5312.20654, -1369.23206, 15.01906,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3486, 5312.20459, -1399.49194, 15.00754,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3484, 5312.35547, -1429.74182, 14.70466,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3483, 5312.24219, -1459.99121, 15.02819,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3486, 5312.23340, -1592.15515, 15.00777,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(6977, 5305.80811, -1516.56689, 7.75319,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3607, 5314.78711, -1631.60754, 13.89625,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3488, 5312.24414, -1566.51111, 14.61402,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5299.69727, -1605.59436, 7.65457,   0.00000, 0.00000, -539.99957, -1, -1, -1, 500);
	CreateDynamicObject(3483, 5312.15967, -1673.98999, 15.02418,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5299.99658, -1473.47522, 8.02957,   0.00000, 0.00000, -539.99957, -1, -1, -1, 500);
	CreateDynamicObject(5475, 5554.23926, -1121.17761, 14.43557,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(6038, 5655.07080, -1113.23059, 15.93406,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(6044, 5657.48389, -1132.58801, 15.40805,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(6047, 5763.77783, -1119.57825, 16.04811,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6043, 5766.19873, -1132.26270, 15.49226,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3487, 5312.16357, -1720.55420, 14.66439,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3488, 5312.18311, -1699.59180, 14.52563,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5299.69727, -1729.41345, 8.03939,   0.00000, 0.00000, -539.99957, -1, -1, -1, 500);
	CreateDynamicObject(4007, 5850.10352, -1416.53552, 29.55796,   0.00000, 0.00000, -674.99969, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6321.30957, -1066.02905, 11.50569,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6164.62158, -1065.96960, 11.52056,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6034.30566, -1274.66187, 11.57056,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(7069, 6023.70020, -1354.70056, 8.06962,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6034.27734, -1453.66016, 11.52477,   0.00000, 0.00000, -269.99997, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6034.36475, -1148.59497, 11.58502,   0.00000, 0.00000, -269.99997, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6117.08203, -1065.91504, 11.51155,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6034.25391, -1616.59326, 11.50374,   0.00000, 0.00000, -269.99997, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6034.15332, -1766.56128, 11.47911,   0.00000, 0.00000, -449.99982, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6116.85498, -1849.26550, 11.49348,   0.00000, 0.00000, -539.99976, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6273.45752, -1849.36682, 11.47314,   0.00000, 0.00000, -719.99963, -1, -1, -1, 500);
	CreateDynamicObject(5005, 6321.00928, -1849.33618, 11.47314,   0.00000, 0.00000, -719.99963, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5687.18701, -1715.95715, 8.14333,   0.00000, 0.00000, -1440.00037, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5554.27393, -1639.75195, 8.14220,   0.00000, 0.00000, -1169.99976, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5538.96045, -1716.04175, 8.13444,   0.00000, 0.00000, -1079.99988, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5612.08008, -1745.98340, 8.05313,   0.00000, 0.00000, -1620.00037, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5762.05322, -1745.93286, 8.13522,   0.00000, 0.00000, -1620.00037, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5622.65234, -1742.24121, 12.64157,   0.00000, 0.00000, -20430.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5593.24951, -1749.81396, 12.69162,   0.00000, 0.00000, -20610.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5563.96387, -1742.26526, 12.69163,   0.00000, 0.00000, -20790.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5529.36182, -1749.83875, 12.69163,   0.00000, 0.00000, -20970.05273, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5520.40527, -1625.01379, 12.69939,   0.00000, 0.00000, -21060.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5528.10156, -1654.71765, 12.69939,   0.00000, 0.00000, -21240.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5520.47070, -1684.15991, 12.69939,   0.00000, 0.00000, -21420.05469, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5528.07568, -1716.36755, 12.69163,   0.00000, 0.00000, -21600.05469, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5867.34912, -1715.91357, 8.16833,   0.00000, 0.00000, -1440.00037, -1, -1, -1, 500);
	CreateDynamicObject(7479, 5913.71484, -1765.91968, 8.09760,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5993.73584, -1610.37756, 8.14448,   0.00000, 0.00000, -1349.99976, -1, -1, -1, 500);
	CreateDynamicObject(7052, 6023.72168, -1692.03650, 8.13817,   0.00000, 0.00000, -1710.00000, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5943.27783, -1625.05603, 8.09880,   0.00000, 0.00000, -1620.00037, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6019.92383, -1661.72083, 12.72633,   0.00000, 0.00000, -17820.04492, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6027.52930, -1692.96985, 12.72661,   0.00000, 0.00000, -18000.04492, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6019.91357, -1725.23340, 12.72661,   0.00000, 0.00000, -18180.04492, -1, -1, -1, 500);
	CreateDynamicObject(1294, 6013.57666, -1749.77112, 12.69385,   0.00000, 0.00000, -18450.04688, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5863.00244, -1742.11304, 12.72552,   0.00000, 0.00000, -18630.04688, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5891.68848, -1749.75537, 12.72552,   0.00000, 0.00000, -18810.04688, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5922.28223, -1742.14539, 12.72552,   0.00000, 0.00000, -18990.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5953.39307, -1749.72083, 12.69385,   0.00000, 0.00000, -19170.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5984.09912, -1742.15491, 12.69385,   0.00000, 0.00000, -19350.04883, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5521.34619, -1735.41052, 11.36759,   0.00000, 0.00000, -539.99988, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5534.73291, -1621.97791, 11.40969,   0.00000, 0.00000, -629.99988, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5669.47656, -1735.47888, 11.45147,   0.00000, 0.00000, -539.99976, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5849.56152, -1735.47510, 11.47648,   0.00000, 0.00000, -539.99976, -1, -1, -1, 500);
	CreateDynamicObject(1315, 6013.31250, -1628.12708, 11.45262,   0.00000, 0.00000, -449.99982, -1, -1, -1, 500);
	CreateDynamicObject(4023, 5478.51709, -1715.73486, 19.69081,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6288, 5419.18994, -1658.28931, 13.23071,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(7528, 5519.54980, -1818.62891, 7.89552,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5426, 5620.77490, -1787.73401, 10.24239,   0.00000, 0.00000, -1080.00134, -1, -1, -1, 500);
	CreateDynamicObject(8534, 5582.48633, -1697.62146, 16.97596,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8534, 5615.02246, -1673.68689, 16.95094,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(17553, 5475.46191, -1659.41797, 22.78195,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5451.68652, -1827.61157, 12.68090,   0.00000, 0.00000, -6120.01221, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5444.13770, -1863.79858, 13.35340,   0.00000, 0.00000, -6300.01270, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5451.70898, -1899.16504, 15.67842,   0.00000, 0.00000, -6480.01318, -1, -1, -1, 500);
	CreateDynamicObject(3336, 3972.48657, -1916.65247, 8.32303,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(3336, 3961.24365, -1743.79285, 8.34322,   0.00000, 0.00000, 90.00010, -1, -1, -1, 500);
	CreateDynamicObject(3336, 5453.55615, -1914.54968, 11.17885,   0.00000, 0.00000, 270.00018, -1, -1, -1, 500);
	CreateDynamicObject(3336, 5442.31201, -1843.19165, 8.12884,   0.00000, 0.00000, 90.00021, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5483.52295, -1760.19177, 6.87243,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5483.52344, -1773.26587, 6.84743,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5483.54102, -1806.68835, 6.84743,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5806.27295, -1435.94653, 10.92486,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5782.98291, -1435.92395, 10.97486,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5783.01465, -1420.96277, 10.97486,   0.00000, 0.00000, 56.25002, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5806.27686, -1420.97546, 10.97486,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5762.30078, -1435.91528, 10.97486,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5762.27002, -1420.97437, 10.97486,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5739.01367, -1435.94128, 10.97486,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5739.01611, -1420.94983, 10.97486,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5739.00732, -1390.05884, 10.99986,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5739.00195, -1375.09448, 10.99986,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5762.28369, -1390.08020, 10.99986,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5762.28125, -1375.08252, 10.99986,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5783.00000, -1390.06042, 10.99986,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5783.00293, -1375.07861, 10.99986,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5806.26807, -1375.06458, 10.99986,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5806.27490, -1390.06592, 10.99986,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(8841, 5378.44629, -1422.21289, 11.16219,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8841, 5479.86523, -1422.16992, 11.16219,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8841, 5378.46094, -1388.78369, 11.25557,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8841, 5479.89111, -1388.78748, 11.26333,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8841, 5706.23633, -1722.70203, 11.28430,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8841, 5706.25244, -1685.54700, 11.33431,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8841, 5706.29492, -1648.53638, 11.23429,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(987, 6034.25537, -1357.75281, 8.74824,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1894, 6037.85742, -1356.32361, 7.77326,   0.00000, 0.00000, -539.99951, -1, -1, -1, 500);
	CreateDynamicObject(987, 6046.24268, -1357.74878, 8.75458,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1894, 6063.08252, -1371.99109, 7.74826,   0.00000, 0.00000, -719.99957, -1, -1, -1, 500);
	CreateDynamicObject(987, 6046.07617, -1370.60168, 8.76701,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(987, 6058.08203, -1370.60059, 8.74200,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(987, 6067.08740, -1370.61145, 8.74201,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(987, 6055.23730, -1357.73230, 8.74201,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(4828, 6067.08545, -1410.87793, 21.98407,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(4828, 6067.43457, -1318.27502, 22.00249,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(5006, 6062.11279, -1711.13538, 13.12876,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(5006, 6122.58057, -1710.65906, 13.12313,   0.00000, 0.00000, -359.99973, -1, -1, -1, 500);
	CreateDynamicObject(7981, 6369.82813, -1157.00623, 12.87751,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(8253, 6368.80225, -1296.89514, 11.90696,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(8253, 6368.80664, -1332.18909, 11.93196,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(9241, 6369.37305, -1401.33911, 9.70832,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10763, 6355.73291, -1444.70996, 40.70982,   0.00000, 0.00000, 44.99999, -1, -1, -1, 500);
	CreateDynamicObject(1682, 6367.10889, -1157.16833, 24.20674,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1681, 6368.75586, -1296.80640, 10.23220,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1681, 6368.83496, -1332.19214, 10.23225,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(8253, 6368.82275, -1367.22583, 11.93196,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3489, 6070.75977, -1584.95203, 14.25514,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1683, 6122.18408, -1583.61780, 13.95734,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(8038, 6086.81543, -1111.09485, 27.95030,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(3489, 6070.75146, -1530.88318, 14.61936,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1683, 6122.02979, -1529.46558, 13.95970,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3489, 6070.72266, -1477.11633, 14.67270,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1683, 6122.02295, -1475.71277, 13.95970,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(8249, 6368.73975, -1491.10754, 11.90221,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(8249, 6368.81641, -1526.85815, 11.92720,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(8249, 6368.83203, -1562.49084, 11.92721,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3663, 6141.82910, -1581.21484, 10.08785,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3663, 6091.15088, -1504.02319, 10.08785,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3663, 6102.62744, -1447.96106, 10.03785,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(7979, 6054.69824, -1147.73962, 10.97199,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(12956, 6102.96875, -1630.82983, 11.35698,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(3625, 6054.50391, -1620.93445, 10.52028,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(16098, 6063.11133, -1804.63037, 12.88050,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3489, 6070.68652, -1245.08655, 14.54550,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3489, 6070.68457, -1190.83044, 14.60727,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3663, 6052.15820, -1217.75049, 10.04742,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3663, 6052.00879, -1270.37537, 10.02242,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1681, 6368.85693, -1367.32813, 10.23219,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3881, 6074.34424, -1355.80298, 9.82482,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3882, 6073.79297, -1355.68713, 8.96105,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3881, 6073.39746, -1372.64795, 9.82482,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8550, 6115.53662, -1318.18286, 12.21713,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3882, 6073.80908, -1372.85901, 8.93605,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8550, 6115.68799, -1410.78833, 12.23016,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3689, 6369.26563, -1752.80371, 15.78315,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6195.78027, -1750.57935, 8.56840,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6226.75000, -1790.42212, 8.57469,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6257.63672, -1750.56909, 8.56840,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6295.08447, -1750.54761, 8.58530,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6158.34326, -1750.59082, 8.56840,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6158.36719, -1649.80847, 8.56840,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6195.76123, -1649.82507, 8.56840,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6257.63623, -1649.83789, 8.56840,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6295.05713, -1649.80286, 8.57755,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6257.63574, -1539.23218, 8.57076,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6295.10889, -1539.23792, 8.58810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6195.80029, -1539.24988, 8.57076,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6158.36768, -1539.25269, 8.57076,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6158.36475, -1416.20996, 8.57076,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6195.61035, -1416.20679, 8.57076,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6257.75781, -1416.71130, 8.57076,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6295.09814, -1416.70264, 8.58810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6226.76123, -1827.80823, 8.58530,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6257.75244, -1332.91162, 8.59285,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6295.03320, -1332.90637, 8.59285,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6195.65137, -1332.87292, 8.53273,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6158.41748, -1332.86218, 8.53273,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6158.41553, -1236.69324, 8.53273,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6195.68359, -1236.65833, 8.53273,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6257.79150, -1236.66553, 8.53273,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6295.03174, -1236.63574, 8.53273,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6158.40820, -1129.23425, 8.53273,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6195.68262, -1129.22009, 8.53273,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6257.76025, -1129.22510, 8.53273,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6295.01855, -1129.23120, 8.54286,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6276.37451, -1129.26038, 8.59285,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3666, 6177.01465, -1129.23279, 8.53273,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3664, 6276.48584, -1089.36938, 15.85808,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3664, 6177.13721, -1089.34753, 15.77294,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1290, 6356.14551, -1544.51416, 14.07284,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 6356.19434, -1508.99121, 14.09784,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 6355.85498, -1349.77405, 14.02761,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 6355.88379, -1314.49512, 14.05260,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(10764, 6177.10352, -1078.87964, 11.35342,   0.00000, 0.00000, 44.99999, -1, -1, -1, 500);
	CreateDynamicObject(10764, 6276.42871, -1078.91992, 11.41354,   0.00000, 0.00000, 44.99999, -1, -1, -1, 500);
	CreateDynamicObject(9241, 6369.31885, -1606.45251, 9.78332,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(9241, 6369.50781, -1641.70471, 9.72275,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1290, 6095.64404, -1217.95410, 13.96510,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 6073.78174, -1364.03821, 13.89662,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 6356.38232, -1682.19568, 8.09787,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1372, 6387.76074, -1684.46497, 8.20152,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1372, 6387.73828, -1686.53284, 8.20152,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(10814, 6321.59131, -1795.45251, 12.05627,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18260, 6117.04541, -1733.89514, 9.62791,   0.00000, 0.00000, 18.12546, -1, -1, -1, 500);
	CreateDynamicObject(3568, 6360.56641, -1842.67200, 10.48524,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3569, 6360.59082, -1834.53491, 10.48524,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3566, 6368.12793, -1669.15942, 10.46024,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(6289, 5324.95801, -1753.37866, 10.33733,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(10838, 6037.24561, -1364.14404, 24.35069,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(10757, 6036.61377, -1364.99146, 28.04378,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(17472, 5306.92383, -1893.06238, 2.39254,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(17472, 5334.21533, -1919.09387, 4.93919,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5996.96729, -1914.47253, 0.68501,   0.00000, 0.00000, -540.00018, -1, -1, -1, 500);
	CreateDynamicObject(4847, 5996.59521, -2010.47888, 0.69474,   0.00000, 0.00000, -719.99988, -1, -1, -1, 500);
	CreateDynamicObject(4847, 6251.97021, -1914.61951, 0.68590,   0.00000, 0.00000, -540.00018, -1, -1, -1, 500);
	CreateDynamicObject(4847, 6251.94287, -2010.75427, 0.67063,   0.00000, 0.00000, -720.00012, -1, -1, -1, 500);
	CreateDynamicObject(3997, 5749.39453, -1789.33557, 7.85639,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(17472, 6433.64355, -1945.52844, 0.33439,   0.00000, 0.00000, -84.84328, -1, -1, -1, 500);
	CreateDynamicObject(17472, 6422.79053, -1983.67932, 0.05449,   0.00000, 0.00000, -264.84320, -1, -1, -1, 500);
	CreateDynamicObject(17472, 6432.44873, -2024.46497, -6.44998,   0.00000, 0.00000, -456.09317, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5803.64160, -1419.79578, 8.38008,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5785.64844, -1419.80884, 8.35509,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5794.77539, -1419.79370, 8.35509,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5803.66748, -1391.45984, 8.35509,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5794.63574, -1391.44861, 8.35509,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5785.61523, -1391.43420, 8.34847,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5759.64746, -1419.82324, 8.38958,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5741.70703, -1419.80225, 8.38958,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5750.61621, -1419.80750, 8.38958,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5759.68848, -1391.40503, 8.34847,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5741.58936, -1391.38867, 8.38958,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5750.64063, -1391.41760, 8.38958,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(3660, 5767.94434, -1473.26611, 10.60680,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3660, 5748.63330, -1473.25598, 10.62291,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1346, 5643.22461, -1349.58154, 9.51241,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5768.32275, -1341.06506, 8.40297,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5775.14258, -1365.95386, 8.31703,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5727.78223, -1350.21362, 8.35814,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 5535.37305, -1309.33472, 8.18224,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 5535.43018, -1338.98389, 8.17449,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 5715.99951, -1287.13464, 8.18224,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(716, 5716.10791, -1158.64941, 8.20177,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 5658.13770, -1158.65894, 8.20177,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 5657.99951, -1287.15930, 8.20177,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(717, 5870.22607, -1262.52478, 24.98279,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(717, 5891.13574, -1262.51355, 28.88197,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(717, 5905.00830, -1262.57532, 32.80147,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(717, 5915.46875, -1273.90149, 32.86357,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(717, 5915.43262, -1288.06165, 40.76370,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(717, 5915.44141, -1307.13257, 56.48588,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(652, 5794.64795, -1428.67285, 7.97429,   357.42169, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(652, 5750.57373, -1382.56763, 8.07685,   357.42169, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(652, 5794.37158, -1382.59839, 8.03574,   357.42169, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(652, 5750.94238, -1428.63342, 8.04236,   357.42169, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(717, 5850.10693, -1262.52441, 21.03198,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(740, 5604.43652, -1567.88611, -13.47125,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(740, 5623.48242, -1567.84326, -13.44625,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(740, 5642.30713, -1567.91577, -13.62126,   0.00000, 0.00000, 258.75000, -1, -1, -1, 500);
	CreateDynamicObject(716, 5622.75928, -1465.70203, 8.16386,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(716, 5622.76953, -1448.36340, 8.16386,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(716, 5622.77051, -1429.34924, 8.17448,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(716, 5622.75586, -1409.23425, 8.17448,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(716, 5864.65039, -1505.70898, 8.14775,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(716, 5864.88818, -1309.79456, 8.14113,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(716, 5887.03125, -1505.70300, 8.16614,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(716, 6012.38477, -1505.64355, 8.17389,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(716, 6012.84424, -1158.67566, 8.15405,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(716, 5738.08887, -1287.13696, 8.18224,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(716, 5918.53955, -1505.65564, 8.16614,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 5951.08057, -1505.67505, 8.16614,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 5983.94580, -1505.61035, 8.16614,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 5556.59180, -1505.68115, 8.15611,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 5569.94287, -1505.68433, 8.15610,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(620, 5764.58301, -1177.59961, 7.67376,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5750.29785, -1178.23608, 7.47491,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(620, 5805.06934, -1219.63660, 7.48266,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(620, 5796.56396, -1219.20715, 7.60766,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5822.67920, -1219.37939, 7.13266,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(620, 5813.37500, -1219.37134, 7.40766,   0.00000, 0.00000, 292.50000, -1, -1, -1, 500);
	CreateDynamicObject(716, 5512.91260, -1527.77661, 8.16272,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(716, 5512.97754, -1734.92456, 8.19433,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(716, 5512.91260, -1693.16345, 8.19434,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(716, 5512.95850, -1652.99487, 8.19433,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(716, 5512.94238, -1613.88831, 8.16272,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(737, 5454.74121, -1527.42603, 8.38684,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5444.78271, -1527.42981, 8.38684,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5434.68799, -1527.45544, 8.38684,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5424.73828, -1527.43713, 8.31184,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5414.76514, -1527.43103, 8.38684,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5404.86035, -1527.43982, 8.38684,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 5512.90723, -1574.29138, 8.16272,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(716, 5350.21826, -1527.74231, 8.14434,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(4605, 5848.97559, -1357.31006, 2.46788,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(624, 5766.86621, -1353.20447, 6.96160,   0.00000, 0.00000, -449.99973, -1, -1, -1, 500);
	CreateDynamicObject(624, 5754.76660, -1349.47180, 6.97771,   0.00000, 0.00000, -449.99973, -1, -1, -1, 500);
	CreateDynamicObject(624, 5758.11279, -1357.38489, 6.95270,   0.00000, 0.00000, -472.49966, -1, -1, -1, 500);
	CreateDynamicObject(624, 5612.71436, -1348.80872, 6.90157,   0.00000, 0.00000, -472.49966, -1, -1, -1, 500);
	CreateDynamicObject(624, 5609.85010, -1361.05859, 6.05157,   0.00000, 0.00000, -506.24963, -1, -1, -1, 500);
	CreateDynamicObject(624, 5598.95850, -1359.48022, 6.55157,   0.00000, 0.00000, -528.74957, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5613.70996, -1346.53821, 8.42094,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5554.89209, -1379.94397, 8.43633,   0.00000, 0.00000, -191.24986, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5553.54297, -1427.25928, 8.42570,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5549.82910, -1485.56641, 7.98834,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5299.60938, -1537.78760, 8.05582,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5829.12598, -1348.31213, 7.97337,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5880.57324, -1548.41785, 7.98660,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5880.07617, -1538.53479, 8.41620,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5960.59912, -1614.76599, 9.26994,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5965.87793, -1614.75867, 9.26994,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5971.14697, -1614.74426, 9.26994,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5973.76709, -1530.09265, 9.27769,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5960.53076, -1527.52441, 9.27769,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5965.80664, -1527.51953, 9.27769,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5971.06299, -1527.51379, 9.27769,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5904.59814, -1527.47668, 9.27769,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5899.33789, -1527.47852, 9.26994,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5894.06299, -1527.48608, 9.26994,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5888.78809, -1527.48877, 9.26994,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5886.15137, -1530.16492, 9.26994,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5886.16602, -1535.43298, 9.23430,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5886.15576, -1540.69617, 9.24494,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5886.15430, -1545.95325, 9.23430,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5886.15967, -1551.21362, 9.23430,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5886.14990, -1556.47070, 9.23430,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5886.16602, -1561.74109, 9.23430,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5886.15186, -1566.99683, 9.23431,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5886.14307, -1572.26624, 9.23430,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5902.60596, -1614.60498, 9.26994,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5897.34521, -1614.61548, 9.26994,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5892.09668, -1614.60632, 9.26994,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5886.82568, -1614.60120, 9.26994,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1684, 5898.37354, -1539.97095, 9.58585,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1684, 5898.33496, -1553.27319, 9.58585,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(850, 5975.03174, -1532.86487, 8.11523,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1358, 5902.86816, -1611.14844, 9.19952,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5972.40625, -1611.84570, 8.02999,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1440, 5962.37256, -1599.51868, 8.52285,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1441, 5978.35254, -1553.11011, 8.65538,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1449, 5959.80811, -1607.95789, 8.51763,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(2674, 5996.86426, -1585.57605, 8.02547,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3594, 5976.15625, -1607.17712, 8.63491,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5962.37256, -1536.92578, 9.06643,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5962.39990, -1539.60352, 9.06643,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1448, 5973.05518, -1578.39221, 8.07111,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1450, 5973.19824, -1586.03967, 8.60400,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(7662, 6012.79932, -1480.82825, 8.72421,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7662, 5999.92822, -1434.86902, 8.72421,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(7662, 5999.92773, -1393.52917, 8.72421,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(7662, 6012.86768, -1348.02466, 8.71760,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(737, 6013.10889, -1472.42847, 8.41640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 6013.09717, -1455.45288, 8.41640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 6013.08887, -1373.39038, 8.40978,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 6013.08105, -1356.43140, 8.40978,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 6013.07178, -1434.80933, 8.41640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 6013.07764, -1489.24817, 8.41640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 6013.11719, -1393.50562, 8.40978,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 6013.09424, -1339.73450, 8.40978,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5991.54492, -1434.85632, 8.41640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5974.52148, -1434.86743, 8.41640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5957.85742, -1434.89465, 8.41640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5991.48438, -1393.51770, 8.40978,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5974.48975, -1393.49170, 8.40978,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5958.04736, -1393.48486, 8.40202,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 5887.04590, -1475.78772, 8.16614,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(716, 5887.06348, -1445.80420, 8.16614,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(7662, 5886.99365, -1431.23877, 8.71645,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5886.81348, -1422.99048, 8.40864,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5886.82373, -1439.30957, 8.40864,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5886.81641, -1405.62158, 8.40864,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5886.86426, -1389.21240, 8.40203,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 5864.64697, -1445.81458, 8.16614,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(716, 5887.07031, -1379.91370, 8.15952,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(716, 5864.63525, -1379.96094, 8.15952,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(10381, 5763.94043, -1603.05090, 18.68547,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 6012.85742, -1178.48523, 8.18567,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(716, 6012.81934, -1198.44812, 8.18567,   0.00000, 0.00000, -269.99994, -1, -1, -1, 500);
	CreateDynamicObject(716, 6012.85352, -1218.42358, 8.18567,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(716, 6012.84668, -1238.41248, 8.18567,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(716, 6012.85400, -1258.49084, 8.18566,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(716, 5989.41748, -1158.60449, 8.15405,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(716, 5963.98096, -1158.60754, 8.14629,   0.00000, 0.00000, -269.99976, -1, -1, -1, 500);
	CreateDynamicObject(716, 5942.29443, -1158.60718, 8.14629,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(716, 5921.14307, -1158.66370, 8.14630,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(716, 5898.91309, -1158.68555, 8.14630,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(649, 5807.88037, -1483.78613, 8.06618,   0.00000, 0.00000, 191.25000, -1, -1, -1, 500);
	CreateDynamicObject(649, 5807.85010, -1481.12024, 8.06618,   0.00000, 0.00000, 191.24998, -1, -1, -1, 500);
	CreateDynamicObject(649, 5807.92480, -1486.48071, 8.09118,   0.00000, 0.00000, 191.25000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5810.42480, -1337.69128, 7.41427,   0.00000, 0.00000, 44.99999, -1, -1, -1, 500);
	CreateDynamicObject(620, 5679.30957, -1597.25952, 7.69361,   0.00000, 0.00000, 224.99995, -1, -1, -1, 500);
	CreateDynamicObject(620, 5712.16846, -1591.14197, 6.56861,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(620, 5724.33496, -1591.19885, 7.64361,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(620, 5679.28467, -1607.90417, 7.29361,   0.00000, 0.00000, 202.49991, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5527.26025, -1527.16089, 11.36247,   0.00000, 0.00000, -0.00015, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5521.17139, -1506.43225, 11.37179,   0.00000, 0.00000, -539.99988, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5716.63867, -1150.64587, 11.43151,   0.00000, 0.00000, -450.00006, -1, -1, -1, 500);
	CreateDynamicObject(1315, 5737.47754, -1144.43713, 11.43151,   0.00000, 0.00000, -629.99994, -1, -1, -1, 500);
	CreateDynamicObject(11417, 6012.28857, -1537.36292, 12.80258,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(1258, 5697.11670, -1157.89172, 8.66947,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1258, 5677.16895, -1157.87683, 8.66947,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5730.78760, -1278.84241, 12.67406,   0.00000, 0.00000, -12960.03125, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5723.19092, -1248.21106, 12.67406,   0.00000, 0.00000, -13140.03223, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5730.78369, -1217.90637, 12.55249,   0.00000, 0.00000, -13320.03223, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5723.22998, -1187.19446, 12.69618,   0.00000, 0.00000, -13500.03320, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5731.19434, -1158.58252, 12.67274,   0.00000, 0.00000, -13680.03320, -1, -1, -1, 500);
	CreateDynamicObject(620, 6012.87744, -1608.88184, 7.98554,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(620, 6012.90527, -1595.81873, 8.21769,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(620, 6012.90576, -1582.00928, 8.11054,   0.00000, 0.00000, 11.24997, -1, -1, -1, 500);
	CreateDynamicObject(620, 6013.03857, -1568.65344, 8.01054,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(620, 6012.93457, -1555.62585, 8.21054,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1432, 5961.87549, -1430.57507, 8.11168,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1432, 5970.47168, -1430.60547, 8.11168,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(1432, 5994.79199, -1430.53943, 8.11168,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(1432, 6004.01709, -1430.62708, 8.11168,   0.00000, 0.00000, 258.75000, -1, -1, -1, 500);
	CreateDynamicObject(1432, 5961.73438, -1398.04504, 8.11168,   0.00000, 0.00000, 281.25000, -1, -1, -1, 500);
	CreateDynamicObject(1432, 5971.06982, -1398.06653, 8.09730,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(1432, 5994.83008, -1398.11340, 8.09730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1432, 6003.66455, -1398.08191, 8.09730,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(6958, 5992.17969, -1527.63892, 16.54561,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 6012.39990, -1527.73083, 8.19775,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(11395, 5509.42627, -1441.89771, 15.95750,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1267, 5903.39355, -1505.62683, 23.55005,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(8328, 5902.61182, -1505.62024, 28.96157,   0.00000, 0.00000, 276.01608, -1, -1, -1, 500);
	CreateDynamicObject(1267, 5732.81299, -1635.32446, 23.87277,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(9184, 5736.24023, -1635.91663, 29.87893,   0.00000, 0.00000, 104.68777, -1, -1, -1, 500);
	CreateDynamicObject(1260, 5627.45850, -1540.51563, 3.17430,   0.00000, 180.09125, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1267, 5514.02002, -1639.57324, 24.07277,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(9187, 5513.45605, -1643.00806, 30.05392,   0.00000, 0.00000, 14.76507, -1, -1, -1, 500);
	CreateDynamicObject(1267, 5583.26904, -1157.75537, 24.07244,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(9186, 5586.70313, -1158.29102, 30.05361,   0.00000, 0.00000, 104.68770, -1, -1, -1, 500);
	CreateDynamicObject(1260, 5336.99365, -1144.97705, 16.12170,   0.00000, 0.00000, 134.99998, -1, -1, -1, 500);
	CreateDynamicObject(4238, 5336.64307, -1144.71191, 22.20634,   0.00000, 0.00000, 75.31221, -1, -1, -1, 500);
	CreateDynamicObject(1260, 5337.01025, -1748.57666, 16.21192,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(5811, 5354.06348, -1757.01917, 12.09838,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(4729, 5336.81543, -1748.93530, 22.25800,   0.00000, 0.00000, 64.92168, -1, -1, -1, 500);
	CreateDynamicObject(10281, 5839.86572, -1533.37048, 14.04937,   0.00000, 345.38959, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(10281, 5856.42334, -1533.32532, 14.00537,   0.00000, 345.38959, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(10281, 5823.23877, -1533.34656, 14.02439,   0.00000, 345.38959, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5818.48193, -1532.85779, 7.98660,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3593, 5799.63135, -1550.49878, 8.42052,   0.00000, 0.00000, 33.75004, -1, -1, -1, 500);
	CreateDynamicObject(910, 5787.11816, -1575.61072, 9.22950,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5787.13135, -1572.55603, 8.76856,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1267, 6012.61133, -1734.95142, 23.87504,   0.00000, 0.00000, 45.00001, -1, -1, -1, 500);
	CreateDynamicObject(4730, 6012.08252, -1735.84509, 29.23674,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(6056, 6012.29004, -1413.68945, 13.10233,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1267, 5786.81348, -1288.03699, 23.80520,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(9185, 5783.36182, -1287.47400, 29.78960,   0.00000, 0.00000, 284.68774, -1, -1, -1, 500);
	CreateDynamicObject(716, 5797.69238, -1287.11267, 8.13452,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(647, 5883.70068, -1290.82654, 9.37904,   0.00000, 0.00000, 258.75000, -1, -1, -1, 500);
	CreateDynamicObject(647, 5772.26855, -1342.92053, 9.35404,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(647, 5598.05127, -1223.30103, 9.23853,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(647, 5621.58545, -1347.88428, 9.39515,   0.00000, 0.00000, 258.75006, -1, -1, -1, 500);
	CreateDynamicObject(647, 5680.35889, -1612.76855, 9.15838,   0.00000, 0.00000, 45.00001, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5653.19922, -1727.36121, 9.28203,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5655.90771, -1724.76648, 9.28203,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5647.93408, -1727.35645, 9.28203,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5642.66260, -1727.35339, 9.28203,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5637.40723, -1727.34766, 9.28203,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5632.13379, -1727.35730, 9.28203,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5626.86865, -1727.35474, 9.28203,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5621.61572, -1727.36462, 9.28203,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5655.90918, -1719.49377, 9.28203,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5655.92090, -1714.22351, 9.28203,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5655.92822, -1708.97156, 9.28203,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5655.93262, -1703.70679, 9.28203,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5575.92139, -1643.97070, 9.28203,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5570.67529, -1643.96545, 9.28203,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5565.41895, -1643.95081, 9.28203,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5560.14502, -1643.95776, 9.28203,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5554.87158, -1643.95618, 9.28203,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5549.60693, -1643.96301, 9.28203,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5544.33691, -1643.95715, 9.28203,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5541.69238, -1646.62939, 9.28203,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5541.69287, -1651.90430, 9.28203,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5541.70215, -1657.16833, 9.28203,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5541.69238, -1662.44556, 9.28203,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5541.68115, -1667.69983, 9.28203,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(620, 5732.57666, -1723.15503, 7.80023,   0.00000, 0.00000, 191.25000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5732.53760, -1710.49878, 7.57523,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(620, 5732.50879, -1697.35315, 7.42523,   0.00000, 0.00000, 168.74995, -1, -1, -1, 500);
	CreateDynamicObject(620, 5732.55420, -1685.23718, 7.60023,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(620, 5732.57129, -1673.42981, 7.70023,   0.00000, 0.00000, 191.25000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5732.53223, -1660.30969, 7.77523,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(620, 5732.55273, -1648.93604, 7.60023,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(621, 5690.05518, -1704.10474, 7.63649,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5705.96094, -1704.15466, 7.68649,   0.00000, 0.00000, 101.24995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5721.17969, -1704.33020, 7.63649,   0.00000, 0.00000, 78.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5689.97461, -1667.37305, 7.56148,   0.00000, 0.00000, 78.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5705.79785, -1667.12805, 7.61149,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5721.01025, -1667.15955, 7.68649,   0.00000, 0.00000, 157.49997, -1, -1, -1, 500);
	CreateDynamicObject(716, 5841.76221, -1665.97034, 8.16098,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(716, 5841.77295, -1636.17395, 8.16098,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(716, 5812.34180, -1636.18604, 8.16098,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(716, 5841.83350, -1734.94312, 8.17047,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(716, 5841.81934, -1704.65881, 8.17046,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(716, 5811.32178, -1734.93359, 8.17046,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5803.47852, -1651.04126, 8.36832,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5803.47363, -1645.16394, 8.36832,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5803.49609, -1639.26099, 8.36832,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5838.85596, -1674.32910, 8.36832,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5826.29541, -1674.30591, 8.36832,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5832.60254, -1674.30347, 8.36832,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1267, 5510.91846, -1469.99463, 23.65179,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(7904, 5510.41992, -1473.44727, 29.65796,   0.00000, 0.00000, 15.54715, -1, -1, -1, 500);
	CreateDynamicObject(1259, 5506.70752, -1303.89172, 22.38977,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(7305, 5506.73682, -1288.18884, 28.83673,   0.00000, 0.00000, 134.99997, -1, -1, -1, 500);
	CreateDynamicObject(1259, 5506.71045, -1275.79968, 22.38317,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5561.07764, -1683.57397, 9.07076,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5561.09375, -1687.36926, 9.07076,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1334, 5761.67822, -1670.85815, 9.12090,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5761.62842, -1667.36658, 9.07076,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1333, 5761.58057, -1664.03845, 8.93014,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1440, 5745.54639, -1675.39575, 8.52719,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1441, 5779.63818, -1655.55518, 8.61861,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(647, 5635.14014, -1679.37207, 9.38999,   0.00000, 0.00000, 258.75006, -1, -1, -1, 500);
	CreateDynamicObject(647, 5635.61084, -1683.76318, 9.43999,   0.00000, 0.00000, 33.74998, -1, -1, -1, 500);
	CreateDynamicObject(647, 5635.60254, -1688.23499, 9.33999,   0.00000, 0.00000, 168.75002, -1, -1, -1, 500);
	CreateDynamicObject(800, 5600.68555, -1705.62659, 10.10197,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(647, 5605.80029, -1706.96021, 9.48999,   0.00000, 0.00000, 78.75002, -1, -1, -1, 500);
	CreateDynamicObject(647, 5614.72998, -1664.58838, 9.48999,   0.00000, 0.00000, 78.75002, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5592.51270, -1662.73999, 8.46393,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5593.51172, -1708.88867, 8.40943,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5589.37598, -1708.87842, 8.40943,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5585.25684, -1708.87659, 8.40943,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5602.05078, -1662.42993, 8.40943,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5606.41260, -1662.43689, 8.40943,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(6965, 5597.25000, -1684.29810, 11.64555,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(6964, 5597.22168, -1684.31433, 7.59697,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(7635, 5976.46777, -1695.00232, 17.01077,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7630, 5920.82373, -1686.85046, 16.96909,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7636, 5887.94385, -1663.11426, 16.99650,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1696, 6006.27783, -1714.38672, 15.33469,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1696, 6006.27588, -1719.41785, 15.33469,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1696, 6006.27783, -1724.47241, 15.33469,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5607.99463, -1684.36719, 8.40943,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5606.87158, -1689.01062, 8.40943,   0.00000, 0.00000, 154.92174, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5603.92920, -1692.66467, 8.40943,   0.00000, 0.00000, 128.98393, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5599.61279, -1694.63794, 8.40943,   0.00000, 0.00000, 103.90569, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5594.90137, -1694.69958, 8.40943,   0.00000, 0.00000, 77.96794, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5590.62305, -1692.61340, 8.40943,   0.00000, 0.00000, 52.03020, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5587.74707, -1688.89746, 8.40943,   0.00000, 0.00000, 26.09252, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5586.57031, -1684.33789, 8.40943,   0.00000, 0.00000, 0.15477, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5587.63525, -1679.65002, 8.40943,   0.00000, 0.00000, -25.78297, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5590.54443, -1676.01013, 8.40943,   0.00000, 0.00000, -50.86127, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5594.85059, -1673.91357, 8.40943,   0.00000, 0.00000, -75.93958, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5599.47168, -1673.86743, 8.40943,   0.00000, 0.00000, -102.73687, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5603.60400, -1675.84131, 8.40943,   0.00000, 0.00000, -128.67462, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5606.76416, -1679.65442, 8.40943,   0.00000, 0.00000, -153.75298, -1, -1, -1, 500);
	CreateDynamicObject(3660, 5742.60889, -1710.42883, 10.66114,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3660, 5742.60840, -1690.80286, 10.66114,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5742.90332, -1722.64807, 8.37799,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5742.96094, -1678.76660, 8.37799,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5937.98389, -1303.79639, 8.79211,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5937.96045, -1299.70667, 8.79211,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5940.90381, -1282.79626, 8.01014,   0.00000, 0.00000, 225.00003, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5879.72217, -1208.00549, 8.74872,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5882.69189, -1208.02087, 8.74872,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1346, 5863.37988, -1687.70776, 9.32745,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(716, 5864.02295, -1734.91016, 8.17047,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(716, 5864.03760, -1705.06555, 8.17047,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(716, 6011.82617, -1636.00415, 8.20437,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 6011.73486, -1685.87573, 8.20437,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 5981.75732, -1636.05786, 8.20437,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 5952.37988, -1636.01221, 8.20437,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(716, 5893.56934, -1734.87610, 8.19661,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(1346, 6009.88477, -1266.15967, 9.34265,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1346, 5707.82373, -1131.35828, 9.35876,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1346, 5728.11914, -1309.46533, 9.33923,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1346, 5549.27832, -1506.06763, 9.31309,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1346, 5499.89160, -1625.24438, 9.30794,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1342, 5503.29443, -1670.75427, 8.99063,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1340, 5503.38867, -1676.24133, 9.12790,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 6018.54199, -1550.29358, 8.56935,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1211, 6018.52148, -1227.18005, 8.53058,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5922.68359, -1142.27576, 8.53806,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5596.62354, -1152.76526, 8.57168,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5519.02979, -1425.02478, 8.53696,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5389.58447, -1142.32910, 8.53778,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7881, 5447.94824, -1904.32947, 8.42928,   0.85944, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3330, 5447.88721, -1904.27942, -0.27632,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(17472, 5310.25830, -1844.67261, 7.83253,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(17472, 5324.53613, -1801.61780, 0.33253,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(8040, 5397.92139, -1830.35205, 8.79284,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5361.25000, -1848.32593, 10.85156,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5366.51563, -1848.32019, 10.85156,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5371.78271, -1848.32422, 10.85156,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5377.03271, -1848.33801, 10.84368,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5382.30127, -1848.32568, 10.85156,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5387.54443, -1848.33374, 10.85156,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5392.80273, -1848.32446, 10.85156,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5398.06494, -1848.31726, 10.85156,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5403.35010, -1848.29590, 10.85156,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5408.61377, -1848.28198, 10.85156,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5413.88379, -1848.26294, 10.83981,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5419.14014, -1848.28723, 10.85156,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5424.41162, -1848.29968, 10.85156,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5429.68066, -1848.26392, 10.82375,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5434.94727, -1848.26404, 10.82656,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5437.60205, -1845.63501, 10.82656,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5444.15674, -1933.97815, 15.13831,   0.00000, 0.00000, -6660.01367, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5380.28662, -1830.25439, 8.76341,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5385.61523, -1830.26489, 8.76341,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5390.95068, -1830.27979, 8.76341,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5396.29102, -1830.27368, 8.76341,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5401.62988, -1830.23767, 8.76341,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5406.94824, -1830.26135, 8.76341,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5412.28564, -1830.21204, 8.76341,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5417.62744, -1830.25696, 8.76341,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(4857, 5493.83350, -1631.28894, 10.32738,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1346, 5437.26758, -1756.68604, 9.32344,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5334.10645, -1232.18591, 8.50666,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5334.11475, -1516.42017, 8.49494,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5334.07568, -1733.62170, 8.52488,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5612.80078, -1751.21155, 8.50925,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5747.73877, -1751.13757, 8.59134,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5973.41553, -1751.15857, 8.56154,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5519.06543, -1644.24609, 8.56707,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5529.41064, -1207.94275, 8.55900,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5644.08691, -1293.28748, 8.53941,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5806.55176, -1303.65540, 8.51669,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5870.73438, -1388.16248, 8.50443,   0.00000, 0.00000, 258.74997, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5718.69092, -1511.57300, 8.53540,   0.00000, 0.00000, 168.74994, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5935.61279, -1511.54126, 8.54435,   0.00000, 0.00000, 168.74994, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5855.51855, -1511.55481, 8.56154,   0.00000, 0.00000, 168.74994, -1, -1, -1, 500);
	CreateDynamicObject(1211, 5718.66846, -1511.56372, 8.53540,   0.00000, 0.00000, 168.74994, -1, -1, -1, 500);
	CreateDynamicObject(853, 5347.55518, -1108.32898, 8.29952,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5643.27490, -1345.81909, 8.61727,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5375.77441, -1129.50269, 8.26558,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5579.12744, -1287.79639, 8.31876,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5859.63428, -1219.10461, 7.58266,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(620, 5870.17334, -1218.82520, 8.00766,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(620, 5879.87988, -1218.92249, 7.38266,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5877.16699, -1158.89526, 7.83730,   0.00000, 0.00000, 33.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5854.58838, -1158.95496, 7.78730,   0.00000, 0.00000, 33.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5829.45117, -1158.94409, 7.83730,   0.00000, 0.00000, 33.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5803.42041, -1158.88892, 7.83730,   0.00000, 0.00000, 33.74997, -1, -1, -1, 500);
	CreateDynamicObject(620, 5773.74609, -1172.08936, 7.60104,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(647, 5739.28223, -1184.15076, 9.31465,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(800, 5744.06201, -1183.00977, 10.00162,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(647, 5774.56055, -1184.28992, 9.26353,   0.00000, 0.00000, 78.75002, -1, -1, -1, 500);
	CreateDynamicObject(652, 5753.60791, -1167.93225, 7.89638,   0.00000, 0.00000, -292.49969, -1, -1, -1, 500);
	CreateDynamicObject(652, 5764.30420, -1172.92175, 7.99638,   0.00000, 0.00000, -292.49969, -1, -1, -1, 500);
	CreateDynamicObject(3168, 5360.91602, -1309.77307, 7.88513,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3172, 5361.08496, -1200.70557, 7.87818,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3168, 5360.97607, -1208.64063, 7.88513,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3172, 5360.52930, -1217.16785, 7.87818,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3168, 5360.16504, -1226.19788, 7.88513,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3172, 5360.54736, -1235.00793, 7.87042,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3168, 5360.30811, -1243.67969, 7.87737,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3172, 5360.16113, -1252.12793, 7.87042,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3168, 5360.51074, -1260.00977, 7.90237,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3172, 5360.85107, -1268.07886, 7.89542,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3168, 5361.02832, -1276.52136, 7.87737,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3172, 5361.27100, -1285.27258, 7.89542,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3168, 5361.41846, -1293.54456, 7.89175,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3172, 5361.62061, -1301.52759, 7.90980,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(3168, 5361.04102, -1192.74170, 7.88513,   0.00000, 0.00000, 247.50003, -1, -1, -1, 500);
	CreateDynamicObject(621, 5499.54590, -1196.32043, 7.78389,   0.00000, 0.00000, 33.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5499.53857, -1221.73999, 7.83502,   0.00000, 0.00000, 33.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5499.51953, -1246.29065, 7.80889,   0.00000, 0.00000, 33.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5499.56299, -1271.01086, 7.75888,   0.00000, 0.00000, 33.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5499.52148, -1296.35632, 7.79050,   0.00000, 0.00000, 33.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5499.52832, -1322.30823, 7.76550,   0.00000, 0.00000, 33.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5446.80615, -1172.91382, 7.76002,   0.00000, 0.00000, 33.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5418.63574, -1172.91858, 7.76002,   0.00000, 0.00000, 33.74997, -1, -1, -1, 500);
	CreateDynamicObject(620, 5422.24365, -1347.21265, 7.82924,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5422.26367, -1366.65503, 8.00424,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5422.30615, -1386.78638, 8.00424,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5422.26611, -1407.22217, 7.75424,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5422.15430, -1426.97400, 7.72924,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5422.34570, -1446.83569, 7.90424,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5443.15234, -1347.04456, 7.55424,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5443.14990, -1367.23669, 7.65424,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5443.16699, -1387.50012, 7.77924,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5443.10986, -1407.47009, 7.87924,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5443.13086, -1427.27747, 7.52924,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5443.14844, -1446.84863, 7.80424,   0.00000, 0.00000, 315.00000, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5395.36572, -1465.14905, 8.39181,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5399.96924, -1422.18030, 8.30586,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5399.92188, -1389.21375, 8.30586,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5459.78223, -1422.34265, 8.30586,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5459.74707, -1388.79639, 8.30700,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5358.26318, -1422.25098, 8.30586,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5358.16211, -1388.71021, 8.30586,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5501.52539, -1422.18604, 8.30586,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5501.61865, -1388.75146, 8.30700,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5395.62500, -1502.62695, 8.99088,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5395.61523, -1500.03113, 8.99864,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5351.36572, -1129.11060, 10.51086,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5355.27490, -1129.12451, 10.49373,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5359.48730, -1129.13916, 10.49628,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5378.77930, -1129.10974, 10.52054,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5382.91553, -1129.12000, 10.52579,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1232, 5387.10254, -1129.15662, 10.51993,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1372, 5619.06787, -1208.25940, 8.13765,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1372, 5632.17285, -1208.23718, 8.13765,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5645.37061, -1208.83496, 8.03400,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1440, 5546.21826, -1228.26721, 8.47572,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1449, 5572.70264, -1171.97717, 8.52165,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(13591, 5612.36523, -1213.22717, 8.34388,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1372, 5545.91895, -1236.56628, 8.07875,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1358, 5571.75000, -1262.28125, 9.15239,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5543.39063, -1279.33447, 8.40471,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(910, 5575.72119, -1172.53711, 9.26915,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5567.31006, -1172.53918, 8.45585,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1334, 5373.72900, -1671.00757, 9.08527,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1334, 5373.76270, -1667.86438, 9.08527,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5371.99854, -1683.13135, 7.99869,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1372, 5418.34180, -1617.78760, 8.08022,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1372, 5418.32666, -1620.50391, 8.08022,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5418.29199, -1626.41882, 8.40618,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3660, 5802.20166, -1724.15942, 10.62951,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3660, 5811.66016, -1714.67395, 10.62951,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 5822.19775, -1704.16284, 10.62951,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3660, 5831.66113, -1694.65918, 10.62003,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5808.90088, -1720.90283, 8.77683,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5815.92822, -1720.92175, 8.77683,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5812.45117, -1726.99854, 8.77683,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5828.76416, -1707.42676, 8.76734,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5835.99121, -1707.37793, 8.77683,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5832.32129, -1701.19397, 8.77683,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8832, 5940.61719, -1698.42004, 2.88418,   0.00000, 352.26508, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8832, 6019.93896, -1693.41418, 2.90917,   0.00000, 352.26508, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(8832, 6035.71582, -1693.41089, 2.90917,   0.00000, 352.26508, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5961.72607, -1702.36194, 8.61700,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5968.21289, -1702.35913, 8.61464,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5974.74365, -1702.37891, 8.60036,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5981.24170, -1702.40417, 8.58380,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5987.72461, -1702.41931, 8.57539,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5994.20264, -1702.44592, 8.58545,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 6000.74072, -1702.43030, 8.58386,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 6007.17822, -1702.42981, 8.61393,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 6013.58496, -1702.44128, 8.62731,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5961.71289, -1688.25989, 8.56667,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5981.27100, -1688.28687, 8.59995,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5987.75146, -1688.28821, 8.61513,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5994.16309, -1688.28418, 8.63003,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 6001.59961, -1688.26599, 8.57467,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 6007.18115, -1688.29749, 8.57467,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 6013.58594, -1688.28845, 8.57467,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(13361, 5998.12305, -1659.87158, 14.90197,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8832, 5965.57275, -1648.72083, 2.90917,   0.00000, 352.26508, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8832, 5965.56006, -1630.15063, 2.90917,   0.00000, 352.26508, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8832, 5965.57080, -1616.19299, 2.93774,   0.00000, 352.26508, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5974.79541, -1688.27283, 8.57467,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5961.75439, -1681.89783, 8.61263,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5961.77930, -1675.40259, 8.62839,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5961.77100, -1668.91650, 8.63064,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5961.78369, -1662.38843, 8.64540,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5961.77881, -1655.92163, 8.61739,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5961.80713, -1649.32434, 8.65257,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5961.80469, -1643.82690, 8.64436,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5961.80322, -1636.41858, 8.68517,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5974.78662, -1681.90369, 8.57467,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5974.81445, -1675.37085, 8.62859,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5974.77490, -1668.95410, 8.64398,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5974.75391, -1662.37891, 8.61274,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5974.73438, -1655.92480, 8.62474,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5974.74170, -1649.34851, 8.63684,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5974.71582, -1643.84058, 8.64458,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5974.72852, -1636.41223, 8.65657,   0.00000, 0.00000, 101.25001, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5982.18506, -1667.63647, 8.81857,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5982.18311, -1664.43445, 8.81857,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5982.41357, -1645.56311, 8.46621,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(716, 5350.16113, -1561.08435, 8.14434,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(716, 5350.18701, -1592.45239, 8.13658,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(716, 5350.19775, -1625.22339, 8.13658,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(716, 5384.92285, -1527.72168, 8.14434,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(716, 5482.60254, -1527.76196, 8.14434,   0.00000, 0.00000, -449.99954, -1, -1, -1, 500);
	CreateDynamicObject(6965, 5597.25146, -1684.30945, 11.37490,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5604.14111, -1784.18848, 8.79280,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5600.79199, -1784.16931, 8.79280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5607.35352, -1757.70569, 8.02657,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5714.49658, -1759.16199, 7.86601,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5684.88477, -1759.33789, 7.92370,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5674.68115, -1759.43384, 7.86601,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5733.38086, -1759.34985, 7.91601,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5724.12451, -1759.36438, 7.90038,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5763.73877, -1759.30884, 7.87370,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5782.09424, -1759.41833, 7.82651,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5773.23730, -1759.51819, 7.80151,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5810.09082, -1759.35205, 7.72651,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5822.45996, -1759.45251, 7.77370,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5674.80811, -1775.29639, 7.69870,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5674.85059, -1827.36023, 7.84870,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5674.84961, -1843.42957, 7.70151,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5687.46680, -1843.50488, 7.89870,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5700.71436, -1843.46460, 7.84870,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5712.87793, -1843.35022, 7.80151,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5783.19580, -1843.30518, 7.74870,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5796.50635, -1843.41101, 7.80151,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5810.20410, -1843.33093, 7.80151,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5822.98926, -1843.18530, 7.75151,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5822.78418, -1827.56909, 7.75151,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(3509, 5822.53760, -1776.55322, 7.75151,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(5409, 5876.03857, -1708.31506, 12.35691,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1686, 5874.53564, -1731.11328, 7.98428,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1686, 5877.48633, -1731.08240, 7.95928,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1686, 5881.55420, -1731.10681, 7.98428,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1686, 5884.28076, -1731.10632, 7.95928,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1372, 5894.71045, -1689.09009, 8.09686,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1372, 5894.68018, -1691.99463, 8.13249,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5887.38672, -1708.61572, 8.02884,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(645, 5584.16260, -1795.51318, 9.19337,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(645, 5608.49756, -1795.48340, 9.46090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(645, 5584.01318, -1814.40344, 9.51940,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(645, 5608.42432, -1814.25012, 9.57044,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5584.15674, -1805.13696, 10.39485,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5592.43506, -1795.36035, 10.39679,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5600.16895, -1795.39380, 10.41185,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5608.51123, -1804.46167, 10.46346,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5593.79590, -1810.30493, 10.13711,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5599.07275, -1810.30554, 10.17928,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5593.80469, -1816.72925, 10.14482,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5599.05908, -1816.72168, 10.21997,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(1300, 5503.79785, -1756.51819, 8.37023,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5490.23340, -1824.89624, 9.26291,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5493.30176, -1828.05261, 8.22647,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(652, 5471.86279, -1765.32556, 7.78606,   0.00000, 0.00000, 292.50000, -1, -1, -1, 500);
	CreateDynamicObject(652, 5465.05322, -1780.64722, 7.86106,   0.00000, 0.00000, 292.50000, -1, -1, -1, 500);
	CreateDynamicObject(652, 5478.55664, -1809.47510, 7.83606,   0.00000, 0.00000, 292.50000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5474.73438, -1780.03149, 7.78959,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5473.49121, -1795.48413, 7.28959,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5463.75342, -1833.01855, 7.03959,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5475.93164, -1826.09131, 7.28959,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(652, 5466.56250, -1808.17407, 7.56106,   0.00000, 0.00000, 292.50000, -1, -1, -1, 500);
	CreateDynamicObject(1267, 5458.21533, -1847.08215, 23.91213,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(7903, 5458.82764, -1843.63965, 29.91298,   0.00000, 0.00000, 194.68781, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5480.63916, -1758.31799, 7.99869,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5391.52441, -1811.10071, 8.42829,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5412.96045, -1806.24792, 7.99869,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5427.70020, -1756.70068, 8.40896,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5407.78418, -1756.70959, 8.40896,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5387.76758, -1756.67773, 8.40896,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5367.97998, -1756.72668, 8.40896,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5339.51514, -1812.53442, 7.53959,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5350.24170, -1833.06274, 7.66459,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5477.42236, -1853.91260, 7.66618,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5499.70313, -1867.71045, 7.74119,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5532.44092, -1855.75085, 7.76618,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5555.10938, -1875.16565, 6.04931,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5604.84570, -1863.92676, 6.94264,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5631.89795, -1881.04688, 4.94600,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5648.80566, -1868.31897, 7.44264,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5708.06543, -1861.98340, 7.19264,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5727.74072, -1858.10352, 7.44264,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5766.04541, -1854.67761, 7.19264,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5817.81006, -1877.43933, 6.16623,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5872.54932, -1861.07080, 6.94264,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5909.38428, -1869.98071, 6.89150,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5924.73535, -1854.76404, 7.39150,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5974.39355, -1853.97424, 7.64150,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 6029.74463, -1874.50684, 6.73159,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 6068.87598, -1863.13757, 7.56650,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 6086.69092, -1872.57861, 7.43037,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 6108.79395, -1868.47498, 7.43037,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 6324.37500, -1860.15356, 7.18037,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 6352.33691, -1859.77051, 7.18036,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 6254.11768, -1861.74609, 6.93037,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 6159.47559, -1878.38037, 5.41023,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 6417.05615, -1823.13428, 7.80091,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6419.87646, -1796.47192, 7.80091,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6427.13135, -1767.17700, 7.72591,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6413.76709, -1745.27112, 7.60091,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6426.97461, -1740.91370, 7.50091,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6418.34619, -1664.44019, 7.67591,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6431.11768, -1621.34985, 6.47826,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6435.24463, -1639.84216, 5.14540,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6416.83203, -1560.85107, 7.50091,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6412.26416, -1458.31799, 7.56064,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6425.42871, -1446.27209, 7.46064,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6418.21924, -1411.46094, 7.51064,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6425.39844, -1356.88428, 7.53564,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6413.33350, -1329.90320, 7.58564,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6419.89844, -1323.19458, 7.76064,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6414.24609, -1306.08472, 7.56064,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6439.33984, -1260.27380, 3.53105,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6435.85889, -1227.68628, 4.84992,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6411.74072, -1209.14697, 7.57037,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6411.95898, -1088.97351, 7.64537,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6431.14307, -1080.78320, 6.18411,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6433.66260, -1089.71765, 5.47179,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6399.51221, -1061.50037, 7.68361,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6403.32959, -1034.78674, 5.44194,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6370.70801, -1037.89465, 6.00984,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6370.75879, -1029.66919, 3.61703,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6333.28711, -1036.80725, 5.40627,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6129.06201, -1049.85840, 7.13361,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6107.11572, -1038.39954, 6.09896,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6079.04346, -1051.77881, 7.40861,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6067.27979, -1031.73132, 3.82324,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(3569, 6058.44238, -1724.83569, 10.37397,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3568, 6058.41699, -1715.64709, 10.37397,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3569, 6058.42676, -1706.14832, 10.37397,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3566, 6058.43750, -1696.96826, 10.37397,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3799, 6145.18750, -1844.32300, 7.87377,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 6145.49805, -1839.29443, 7.87377,   0.00000, 0.00000, 337.50000, -1, -1, -1, 500);
	CreateDynamicObject(7102, 6070.76855, -1830.27454, 11.41973,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(7317, 6132.57275, -1836.39197, 14.03697,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3799, 6036.56104, -1780.76318, 7.87377,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 6037.04443, -1786.80261, 7.87377,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(3799, 6036.60693, -1797.10754, 7.87377,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 6041.26758, -1813.40564, 7.87377,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 6046.00488, -1814.05151, 7.87377,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 6078.44189, -1679.96887, 7.89215,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(3799, 6081.78418, -1672.85083, 7.89215,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1299, 6124.54053, -1686.93420, 8.51058,   0.00000, 0.00000, -67.50002, -1, -1, -1, 500);
	CreateDynamicObject(3570, 6400.30615, -1817.65625, 9.41956,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3570, 6400.08350, -1757.76819, 9.41956,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3571, 6400.33301, -1807.25879, 9.41956,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3572, 6400.12012, -1728.78882, 9.41956,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3571, 6400.09473, -1699.77405, 9.41956,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3572, 6400.07275, -1787.63489, 9.41956,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(18260, 6399.67480, -1715.45813, 9.64481,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1431, 6387.56152, -1791.20789, 8.61923,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3798, 6400.02930, -1800.72986, 8.06816,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 6400.08740, -1795.71606, 7.95342,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 6387.78125, -1731.83435, 8.06816,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 6387.86914, -1729.08813, 8.06816,   0.00000, 0.00000, 11.25003, -1, -1, -1, 500);
	CreateDynamicObject(3796, 6399.56738, -1779.79370, 8.07720,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 6399.51367, -1773.25696, 7.95342,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 6399.89746, -1765.14978, 7.95342,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3571, 6400.04395, -1747.50537, 9.41956,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3798, 6400.21191, -1741.27234, 8.06816,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3798, 6399.98584, -1737.45593, 8.06816,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(3800, 6399.71484, -1734.70972, 8.06816,   0.00000, 0.00000, 11.25003, -1, -1, -1, 500);
	CreateDynamicObject(1344, 6401.78027, -1841.49097, 8.87984,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1344, 6401.78516, -1844.99988, 8.87984,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 6401.75195, -1836.97693, 8.09787,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1448, 6402.42725, -1833.63660, 8.13900,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1449, 6402.89404, -1831.01086, 8.59327,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1372, 5351.52393, -1106.04248, 8.05375,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1372, 5354.28125, -1106.06274, 8.06151,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5384.59082, -1105.91577, 8.38746,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5501.83105, -1136.09119, 8.02624,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5505.31787, -1128.35547, 9.27395,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5505.30859, -1123.09399, 9.27395,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5505.32129, -1117.82971, 9.27395,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5505.31348, -1112.56177, 9.27395,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5505.31494, -1107.30249, 9.27395,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5505.31738, -1102.02966, 9.27395,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5505.31152, -1096.77515, 9.27395,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5505.31592, -1091.50745, 9.27395,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5505.30762, -1086.24268, 9.27395,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5505.31738, -1080.97534, 9.27395,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5505.31299, -1075.70410, 9.27395,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5505.30518, -1070.44006, 9.28171,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5507.94092, -1067.76526, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5513.21387, -1067.77441, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5518.48633, -1067.76660, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5523.74414, -1067.77795, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5529.01807, -1067.78113, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5534.27783, -1067.78894, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5539.55908, -1067.78857, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5544.84180, -1067.78662, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5550.10596, -1067.77869, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5555.35840, -1067.77466, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5560.61279, -1067.76990, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5565.87305, -1067.77661, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5571.13135, -1067.78101, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5576.38477, -1067.78455, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5581.63623, -1067.79736, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5586.90381, -1067.79041, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5592.16064, -1067.79321, 9.28171,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5597.48828, -1070.36340, 9.28171,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5597.49170, -1075.63110, 9.28171,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5597.50049, -1080.90576, 9.28171,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5597.49805, -1086.17969, 9.28171,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5597.50537, -1091.45398, 9.28171,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5597.49756, -1096.72131, 9.28171,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(850, 5595.89844, -1068.19604, 8.11924,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5597.36914, -1134.80359, 9.28171,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5597.36670, -1129.53650, 9.28171,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5597.37695, -1124.26489, 9.28171,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5597.37842, -1118.99231, 9.28171,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5594.65479, -1137.38989, 9.28171,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5589.39502, -1137.39697, 9.28171,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5584.11865, -1137.38965, 9.28171,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5578.84229, -1137.38623, 9.28171,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5573.59912, -1137.39221, 9.28171,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5568.34668, -1137.40283, 9.28171,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5563.14209, -1137.38354, 9.27395,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5551.50342, -1137.37463, 9.27395,   0.00000, 0.00000, -179.99983, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5546.24658, -1137.37878, 9.27395,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(737, 5587.09619, -1069.63599, 8.44427,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5578.02881, -1069.65430, 8.44427,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5569.10449, -1069.63989, 8.44427,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5560.39063, -1069.64417, 8.44427,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5551.65234, -1069.67957, 8.44427,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5542.76318, -1069.68677, 8.44427,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5534.07764, -1069.71509, 8.44427,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5525.51904, -1069.68457, 8.44427,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5516.60010, -1069.71497, 8.44427,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5507.53857, -1069.73755, 8.44427,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5582.51611, -1069.67126, 8.40911,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5573.66016, -1069.70789, 8.40911,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5564.91699, -1069.72388, 8.40911,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5555.92920, -1069.72083, 8.40911,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5547.13086, -1069.72034, 8.40911,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5538.32031, -1069.72510, 8.40911,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5529.70996, -1069.74536, 8.40911,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5511.93750, -1069.72937, 8.40911,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5520.75439, -1069.78772, 8.40911,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5545.97070, -1098.07031, 8.46361,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5570.50781, -1097.82153, 8.81597,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5570.52686, -1093.81104, 8.81597,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5535.75830, -1122.77954, 8.80821,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5535.75000, -1119.73035, 8.80821,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5602.77881, -1126.97180, 8.03400,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5815.12988, -1101.16248, 8.74210,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5818.26611, -1101.18958, 8.74210,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5836.23145, -1101.19434, 8.74210,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5804.18652, -1100.56873, 7.96014,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5831.59863, -1101.20300, 8.38974,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5844.97607, -1101.22729, 8.74210,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5848.45654, -1101.22192, 8.74210,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5884.94092, -1117.26184, 8.99658,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1333, 5884.88770, -1114.27466, 8.85595,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1334, 5884.85400, -1110.95642, 9.04672,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3568, 5908.58740, -1088.16406, 10.31590,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(3566, 5900.53613, -1088.14783, 10.29089,   0.00000, 0.00000, 146.25000, -1, -1, -1, 500);
	CreateDynamicObject(7317, 5993.07129, -1074.89526, 13.96280,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8077, 5935.20313, -1069.98462, 11.85817,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(10814, 5827.38086, -1087.55957, 11.84354,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5910.47070, -1107.17737, 7.97853,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 6027.38135, -1041.30322, 7.01977,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 6003.47168, -1031.61340, 3.80178,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5984.45313, -1052.77551, 6.86543,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5976.97705, -1062.92749, 7.36543,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5953.30225, -1055.86719, 7.36543,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5920.57813, -1052.56689, 7.36543,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5903.54639, -1044.18750, 7.11543,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5885.59814, -1055.00305, 7.11543,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5789.94287, -1054.85376, 7.33252,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5810.78320, -1048.34607, 7.45752,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5774.22119, -1050.78308, 7.98252,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5742.65039, -1044.82361, 7.85752,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5696.05957, -1057.42358, 6.83252,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5664.00439, -1049.66321, 7.08252,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5616.34326, -1051.09314, 7.20752,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(7952, 5653.96973, -1065.74622, 8.57709,   0.00000, 0.00000, 269.99991, -1, -1, -1, 500);
	CreateDynamicObject(7662, 5747.50830, -1065.73767, 8.62709,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(652, 5606.94873, -1065.80249, 7.94638,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5633.19775, -1065.88318, 7.92138,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5655.83545, -1065.83386, 7.97138,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5676.41748, -1065.86072, 8.04638,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5704.47998, -1065.82312, 7.99638,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5760.04053, -1065.89648, 7.99638,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5768.59033, -1065.91138, 8.02138,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5704.50146, -1086.63599, 7.59638,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5606.91943, -1086.66748, 8.02138,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5676.33203, -1086.61597, 8.09638,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5655.91211, -1086.71411, 7.99638,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5633.05176, -1086.69214, 7.94637,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5768.57959, -1100.34778, 7.99638,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5760.03906, -1100.33521, 8.09638,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5789.17334, -1066.03418, 7.97251,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5789.28027, -1100.28186, 7.92251,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(652, 5739.31885, -1066.01819, 8.04638,   0.00000, 0.00000, 11.25003, -1, -1, -1, 500);
	CreateDynamicObject(652, 5739.21191, -1100.37354, 7.99638,   0.00000, 0.00000, 348.74997, -1, -1, -1, 500);
	CreateDynamicObject(3660, 5788.75049, -1083.57666, 10.48695,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3660, 5737.71680, -1083.60498, 10.48695,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5692.79492, -1077.35205, 8.80813,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5682.37842, -1077.28113, 8.80813,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5671.05518, -1077.43884, 8.80813,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5660.66016, -1077.38770, 8.80813,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5650.44189, -1077.49866, 8.80813,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5640.14844, -1077.50305, 8.80813,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5626.28662, -1077.48596, 8.80813,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1281, 5615.86182, -1077.50159, 8.80813,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5780.39795, -1101.34192, 8.33524,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5784.20313, -1101.36548, 8.33524,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5776.52393, -1101.31714, 8.33524,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5772.51074, -1101.29419, 8.40911,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5755.86914, -1101.34644, 8.33524,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5751.68506, -1101.32483, 8.33411,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5747.50928, -1101.31567, 8.35911,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1280, 5743.58643, -1101.31421, 8.35911,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5764.43750, -1105.80432, 8.03400,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5629.36914, -1092.90894, 8.46361,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5681.42920, -1092.44458, 8.03400,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5581.27246, -1041.05005, 6.74723,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5537.00293, -1048.94800, 6.82208,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5505.11719, -1038.21423, 5.71459,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5472.54395, -1051.23816, 6.82208,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5441.08545, -1050.14209, 6.57208,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5399.75049, -1027.21667, 2.18347,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5386.02490, -1045.70886, 6.79708,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5371.17578, -1052.31348, 7.07208,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5350.79932, -1053.01440, 7.07207,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5312.78711, -1049.40173, 7.32208,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5477.81982, -1117.99402, 8.73982,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5474.89404, -1117.95508, 8.73982,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5495.19092, -1118.62805, 8.38746,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5290.08350, -1074.93701, 5.32459,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5296.20361, -1131.29041, 7.07173,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5310.26904, -1084.00562, 7.07173,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5287.85498, -1165.73096, 5.08321,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5271.11133, -1218.94385, 1.28715,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(7102, 5331.79834, -1096.91052, 11.22662,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8883, 5387.84863, -1070.08398, 11.25939,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8884, 5463.19385, -1069.40625, 11.28438,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(8335, 5431.77246, -1074.91919, 11.80475,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(8078, 5493.10303, -1075.07996, 11.85474,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5288.86719, -1218.85889, 5.43368,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5284.39355, -1266.45410, 4.70735,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5274.23145, -1302.18262, 3.20388,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5291.02051, -1357.14490, 6.85228,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5288.07275, -1391.58447, 5.44569,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5237.39746, -1312.33667, 6.55479,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5247.94824, -1368.41199, 4.29034,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5268.78955, -1400.92566, 0.84641,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5278.53027, -1481.22852, 2.06647,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5280.79248, -1495.50464, 3.05001,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5285.25000, -1504.14136, 4.04356,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5276.70557, -1438.54968, 1.68660,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5286.71484, -1547.12952, 5.27775,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5290.65674, -1600.39404, 6.57381,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5298.32910, -1623.43933, 7.59673,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5298.36182, -1643.27917, 7.33146,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5285.76123, -1694.17334, 4.66178,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5277.23877, -1730.19958, 2.53688,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5303.62939, -1764.72546, 7.08146,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5289.99463, -1794.61499, 5.87094,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5300.29297, -1818.08997, 7.08146,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5282.90967, -1832.45508, 4.02946,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5290.71533, -1868.62512, 5.86182,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5301.93604, -1904.63013, 6.83146,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(620, 5271.00244, -1933.22412, 6.38127,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(621, 5367.05664, -1876.73352, 5.53249,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5412.66650, -1857.17883, 6.70244,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5487.61230, -1862.75525, 6.95244,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5332.48291, -1862.39246, 6.95244,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(620, 5379.92822, -1856.45398, 7.11619,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5393.05957, -1856.10608, 6.86618,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5426.13770, -1876.14514, 6.16925,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5366.44482, -1935.15332, 6.98384,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5429.16113, -1934.11694, 6.92883,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5407.93555, -1937.65234, 8.09037,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(621, 5516.57422, -1861.55066, 6.95244,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5572.57422, -1871.72949, 6.52890,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5578.12207, -1857.25708, 7.52890,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5639.85596, -1873.21851, 6.86584,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5725.04004, -1878.74463, 5.04900,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(621, 5883.43799, -1863.99939, 7.02890,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5896.40088, -1858.93323, 6.72776,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5968.46387, -1876.76587, 5.54729,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6003.94922, -1868.64099, 6.72776,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6052.95557, -1869.53259, 6.97776,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6062.69385, -1879.31970, 5.85403,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6045.39160, -1881.60291, 4.78263,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6134.16406, -1866.60999, 6.51662,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6181.82813, -1864.44153, 6.26662,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6199.43896, -1875.86987, 5.95642,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6231.32764, -1858.07288, 7.01662,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6278.60107, -1857.25427, 7.26662,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6341.04004, -1871.32935, 6.76662,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6394.39990, -1863.11572, 7.01662,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6374.26855, -1875.17725, 6.02937,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6421.22607, -1804.06860, 7.01217,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6428.67920, -1778.60144, 6.91319,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6438.52246, -1797.60669, 3.13183,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6440.96973, -1843.96338, 3.04569,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6418.76465, -1707.00818, 7.01217,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6412.66016, -1695.82886, 7.01217,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6417.95898, -1534.59424, 6.51217,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6412.61572, -1518.58545, 6.76217,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6436.32666, -1533.55725, 3.88365,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6416.86133, -1383.65210, 6.94690,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6411.75049, -1366.48083, 6.89690,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6416.14355, -1274.59399, 6.49690,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6425.98584, -1270.07886, 6.74690,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6422.12646, -1291.90283, 6.99690,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6415.09082, -1175.67908, 6.23162,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6409.72949, -1115.40833, 6.98162,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6425.57520, -1117.71912, 6.73162,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6435.89014, -1137.00330, 3.82913,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6352.72852, -1036.18555, 5.71564,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6381.62207, -1021.54163, 1.97948,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6090.69580, -1036.94910, 5.24203,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6048.94824, -1029.00342, 2.48225,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5981.01318, -1033.75037, 4.35396,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5963.54492, -1047.13538, 6.45169,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5941.23438, -1049.79517, 6.70169,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5953.33447, -1021.82300, 1.51914,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5866.80127, -1027.44519, 2.38334,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5853.30664, -1053.55713, 6.95169,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5834.80957, -1041.34631, 6.95169,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5792.32227, -1031.25977, 3.73565,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5643.63086, -1049.26465, 6.66878,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5626.94189, -1032.61108, 3.47228,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5561.67285, -1055.10400, 7.15834,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5548.89258, -1045.10461, 6.40834,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5461.86377, -1045.43164, 6.40834,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5422.05518, -1050.55054, 6.40834,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5429.47559, -1029.17126, 2.90219,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5321.52148, -1032.80640, 2.99481,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5345.48242, -1032.19104, 4.05910,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5285.34082, -1051.44263, 4.34920,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5304.62842, -1107.13782, 6.90798,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5274.47852, -1111.87488, 1.51033,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5272.94727, -1251.98242, 1.00447,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5281.04199, -1286.35278, 3.20601,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5250.40576, -1318.64673, 6.72326,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5213.69580, -1306.50073, 4.44220,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5215.90283, -1365.85059, 4.99005,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5277.11230, -1369.32568, 3.80088,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5273.14453, -1410.97778, 1.30494,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5268.39893, -1468.62708, 0.62151,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5290.10498, -1662.70813, 6.19364,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5292.70020, -1741.06531, 6.66771,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5282.67822, -1708.43799, 3.97500,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5304.13037, -1779.76648, 6.91771,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5289.00146, -1771.99304, 5.86709,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5295.02100, -1886.22375, 6.66771,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5275.20898, -1918.54236, 2.19335,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(1374, 2885.41333, -1981.67615, 11.36141,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1374, 2885.41333, -1972.29980, 11.36141,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1374, 2873.56079, -1955.82581, 11.36141,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1250, 2873.39575, -1946.27063, 10.98983,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1374, 2873.56079, -1946.97498, 11.36141,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1250, 2873.39575, -1955.15979, 10.98983,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1250, 2885.58032, -1982.33484, 10.98983,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1250, 2885.58032, -1972.94092, 10.98983,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(8521, 5601.63916, -1964.26147, 10.81662,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8185, 5603.36035, -1944.12415, 9.04659,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5483.19141, -1964.45044, 15.75444,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5520.43750, -1964.45044, 15.75444,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5557.28809, -1964.45044, 15.75444,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5594.28516, -1964.45044, 15.75444,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1290, 5630.93750, -1964.45044, 15.75444,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5627.69043, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5630.43555, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5633.17188, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5635.91797, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5638.66211, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5641.41602, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5644.16260, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5646.91748, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5649.68750, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5652.46045, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5655.25635, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5655.19043, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5657.98926, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5660.73438, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5663.48633, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5666.24023, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5668.99121, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5671.77051, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5674.54541, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5677.31543, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5680.03955, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5682.81348, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5685.58936, -1979.44214, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5625.11377, -1980.02625, 10.34571,   0.00000, 0.00000, 26.66832, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5622.63477, -1981.25183, 10.34571,   0.00000, 0.00000, 26.66832, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5620.15967, -1982.47583, 10.34571,   0.00000, 0.00000, 26.66832, -1, -1, -1, 500);
	CreateDynamicObject(1434, 5618.29834, -1983.39917, 10.03030,   0.00000, 0.00000, 26.65961, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5627.69043, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5630.44141, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5633.16992, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5635.93262, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5638.69678, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5641.44580, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5644.19189, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5646.94385, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5649.68896, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5652.45117, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5655.21826, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5657.97217, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5660.73242, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5663.50732, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5666.27637, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5669.04297, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5671.79297, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5674.56592, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5677.36572, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5680.16357, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5682.91260, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5685.65869, -1949.21423, 10.34571,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5625.07764, -1948.64050, 10.34571,   0.00000, 0.00000, 153.59846, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5622.62402, -1947.42090, 10.34571,   0.00000, 0.00000, 153.59846, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5620.17090, -1946.20715, 10.34571,   0.00000, 0.00000, 153.59846, -1, -1, -1, 500);
	CreateDynamicObject(1422, 5617.70605, -1944.98853, 10.34571,   0.00000, 0.00000, 153.59846, -1, -1, -1, 500);
	CreateDynamicObject(1238, 5623.88770, -1979.28967, 10.30355,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, 5621.49219, -1980.41577, 10.33730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, 5618.99609, -1981.51636, 10.38854,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, 5616.95410, -1982.71655, 10.40604,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, 5616.95410, -1945.99036, 10.40604,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, 5618.99609, -1947.02515, 10.38854,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, 5621.49219, -1948.33691, 10.33730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, 5623.88770, -1949.46411, 10.30355,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, 5688.01904, -1949.26245, 10.30355,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3502, 5641.56104, -1981.80017, 11.75827,   15.42689, 359.74216, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3502, 5658.89111, -1981.80347, 10.63381,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3502, 5649.88916, -1981.80347, 10.63381,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3502, 5636.12158, -1946.71179, 11.35452,   12.16103, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(18248, 5663.98730, -1942.28833, 18.86194,   341.73691, 0.25783, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3864, 5684.38330, -1942.25989, 15.99245,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3864, 5618.25684, -1942.25989, 15.96745,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3864, 5652.25684, -1942.25989, 15.99245,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3864, 5652.25684, -1985.90955, 15.86745,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3864, 5619.00684, -1985.90955, 15.69249,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3864, 5684.25684, -1985.90955, 15.81746,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3502, 5667.32129, -1942.00378, 21.29751,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3529, 5636.03564, -1980.56140, 8.00764,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3529, 5636.03564, -1982.41199, 8.00764,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3529, 5633.45996, -1982.41199, 8.00764,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3529, 5631.11328, -1982.41199, 8.00764,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3529, 5633.50977, -1980.71204, 8.00764,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3529, 5630.90918, -1980.71204, 8.00764,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3529, 5628.83447, -1980.71204, 8.00764,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3529, 5628.83447, -1982.51306, 8.00764,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3631, 5625.09424, -1945.51538, 10.55416,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(925, 5622.89648, -1982.93274, 11.04206,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1388, 5637.54199, -1993.02942, 50.50491,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1391, 5637.54199, -1993.02136, 37.96738,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1387, 5637.52979, -1958.85278, 43.83875,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(18074, 5637.54004, -1958.82922, 49.62285,   91.18578, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(16303, 5623.51904, -1878.16003, 2.43354,   2.27751, 6.91841, 285.20313, -1, -1, -1, 500);
	CreateDynamicObject(16303, 5648.64453, -1878.16003, 2.43354,   2.27751, 6.91841, 285.20313, -1, -1, -1, 500);
	CreateDynamicObject(16303, 5648.82178, -1927.83936, 2.43354,   2.27751, 6.91841, 105.20315, -1, -1, -1, 500);
	CreateDynamicObject(16303, 5623.70410, -1927.83936, 2.43354,   2.27751, 6.91841, 105.20315, -1, -1, -1, 500);
	CreateDynamicObject(3276, 5621.66309, -1903.01648, 8.19493,   270.31836, 359.69919, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3276, 5623.36621, -1903.01648, 8.19493,   270.31836, 359.69919, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3276, 5625.14697, -1903.01648, 8.19493,   270.31836, 359.69919, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3276, 5646.57422, -1903.01648, 8.19493,   270.31836, 359.69919, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3276, 5648.37500, -1903.01648, 8.19493,   270.31836, 359.69919, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3276, 5650.17188, -1903.01648, 8.19493,   270.31836, 359.69919, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5384.84424, -1995.68201, 7.47447,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5436.86914, -1992.68201, 6.62447,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5567.11914, -1991.18201, 7.04947,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5411.01221, -2013.39685, 0.26530,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5479.26221, -2008.89685, 0.26530,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5598.01221, -2009.89685, 0.11530,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(622, 5509.87695, -1997.32434, 4.97703,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5415.66113, -1927.98376, 4.68177,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5488.16113, -1934.48376, 4.68177,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5527.91113, -1927.73376, 4.68177,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5565.16113, -1933.73376, 4.68177,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5595.66113, -1927.23376, 4.68177,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5680.28711, -2004.64685, 0.06530,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5697.33643, -1927.23376, 4.68177,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5756.08643, -1920.13293, 4.68177,   0.00000, 0.00000, 157.50005, -1, -1, -1, 500);
	CreateDynamicObject(8185, 5607.35254, -1984.15857, 9.07909,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3569, 5636.95117, -1976.16296, 12.42558,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(16337, 5658.20752, -1942.29517, 10.78559,   0.00000, 0.00000, 89.99992, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5511.69531, -1945.14905, 8.93802,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1894, 5401.61963, -1945.94409, 7.93002,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(981, 5462.05811, -1964.38794, 10.75446,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5718.00000, -1995.61658, 5.24390,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5748.55420, -1999.56274, 4.16353,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5814.57910, -1993.57690, 5.69992,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5843.26758, -1989.29126, 7.35008,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5897.18066, -2006.12781, 2.80917,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5987.30615, -1994.81348, 5.00713,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6009.21582, -1990.40234, 6.98050,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6080.88770, -2006.34741, 2.60192,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6117.99463, -2000.22510, 4.03633,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6171.20557, -1991.99146, 5.96910,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6222.18945, -2001.89856, 3.71898,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6272.17529, -2005.41797, 3.27863,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6318.31494, -1995.84802, 4.74997,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6292.83398, -1997.93896, 4.75711,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6305.22314, -2007.18286, 2.64230,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6383.12207, -2006.54773, 2.69475,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6376.08545, -1995.33691, 4.90909,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6097.65430, -2004.99475, 3.06006,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6107.35986, -1990.58215, 6.47075,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(621, 5921.10742, -2002.00171, 3.73309,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5938.86133, -2005.64929, 2.45855,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5851.90039, -2000.17505, 3.56514,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5696.21729, -1995.92578, 4.40832,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5706.53955, -2000.59167, 3.90409,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5733.74902, -1996.31763, 4.26919,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6142.67578, -1997.03198, 4.05040,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6151.39844, -1988.95630, 6.32111,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6169.27441, -2000.08423, 3.59444,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6338.64111, -1999.45691, 3.27786,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6409.91016, -1989.87195, 6.03870,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6404.27295, -2002.43689, 2.64333,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5781.26465, -1922.59668, 3.17290,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 5930.23828, -1922.85791, 3.25564,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6044.48047, -1926.73474, 3.99546,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6186.09814, -1918.36047, 2.57997,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6201.12500, -1926.81140, 4.41611,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6352.91260, -1926.57410, 4.16327,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(621, 6368.66309, -1922.40210, 3.32966,   0.00000, 0.00000, 303.74997, -1, -1, -1, 500);
	CreateDynamicObject(620, 5734.64063, -1926.24829, 3.82751,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5842.41699, -1930.12048, 5.22655,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5859.16846, -1920.89136, 2.99869,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5946.93262, -1918.56812, 2.55962,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 5963.34814, -1939.95898, 8.77899,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6022.52783, -1920.66345, 2.95225,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6063.89746, -1939.08411, 8.20922,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6134.13867, -1917.44946, 2.55616,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6116.01074, -1924.83215, 4.01209,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6284.04492, -1927.56628, 3.30068,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6263.56299, -1918.32703, 2.21068,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6230.05029, -1926.47681, 3.10159,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6339.60938, -1911.99585, 0.65341,   0.00000, 0.00000, 112.50005, -1, -1, -1, 500);
	CreateDynamicObject(3566, 5976.34033, -1081.92041, 10.29865,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3569, 5967.40283, -1081.77759, 10.29865,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3575, 5880.82227, -1073.65955, 10.57558,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5349.93896, -1665.58118, 8.40120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(737, 5349.96533, -1676.90906, 8.40896,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5959.28125, -1136.06543, 7.98628,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5734.22510, -1062.74451, 8.20714,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(1438, 6061.04248, -1123.34143, 7.98628,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(7555, 5924.33643, -1804.26196, 11.66934,   0.00000, 0.00000, -449.99973, -1, -1, -1, 500);
	CreateDynamicObject(8832, 5956.58740, -1754.23401, 2.86579,   0.00000, 352.26508, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8832, 5956.60791, -1733.65686, 2.87641,   0.00000, 352.26508, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5951.76172, -1789.21252, 8.58334,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5951.79150, -1782.79443, 8.59006,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5951.76953, -1776.25513, 8.60515,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5951.82715, -1769.55884, 8.62386,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5951.80615, -1763.15063, 8.57549,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5951.78467, -1756.69617, 8.58741,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5966.47461, -1789.26196, 8.56424,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5966.49072, -1782.80603, 8.58057,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5966.45898, -1776.28284, 8.59622,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5966.47705, -1769.60669, 8.57319,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5966.49170, -1763.11938, 8.58906,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5966.49072, -1756.67627, 8.60439,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5980.19482, -1839.12573, 15.76743,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5980.19873, -1834.05957, 15.75690,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5980.16553, -1816.65759, 15.83189,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5980.14355, -1811.58643, 15.83189,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5927.33252, -1794.71631, 15.41743,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5922.25342, -1794.73132, 15.41743,   0.00000, 0.00000, -269.99976, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5904.97217, -1794.83801, 15.41743,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5899.88672, -1794.83984, 15.41743,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5882.54639, -1794.93262, 15.41743,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5877.45898, -1794.94019, 15.41743,   0.00000, 0.00000, -269.99982, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5860.20020, -1814.03589, 15.41742,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5855.10254, -1814.05029, 15.41743,   0.00000, 0.00000, -269.99997, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5838.65576, -1824.79761, 15.41743,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(3458, 5838.66797, -1784.60974, 15.40582,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(620, 5921.76611, -1756.01990, 7.86975,   0.00000, 0.00000, 90.00011, -1, -1, -1, 500);
	CreateDynamicObject(620, 5932.85449, -1755.96558, 7.91975,   0.00000, 0.00000, 78.75008, -1, -1, -1, 500);
	CreateDynamicObject(620, 5943.39990, -1756.03064, 7.91975,   0.00000, 0.00000, 101.25014, -1, -1, -1, 500);
	CreateDynamicObject(620, 5973.54199, -1755.93115, 7.74475,   0.00000, 0.00000, 90.00011, -1, -1, -1, 500);
	CreateDynamicObject(620, 5983.51904, -1755.90051, 7.79475,   0.00000, 0.00000, 78.75008, -1, -1, -1, 500);
	CreateDynamicObject(620, 5993.49854, -1755.91748, 7.76975,   0.00000, 0.00000, 101.25014, -1, -1, -1, 500);
	CreateDynamicObject(620, 6003.66113, -1755.89771, 7.19475,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(620, 6013.77051, -1755.86072, 7.54475,   0.00000, 0.00000, 101.25008, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5970.14404, -1792.76123, 8.80018,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5973.51465, -1792.79285, 8.80018,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5993.85449, -1792.62000, 8.01821,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(13591, 6005.89063, -1807.29834, 8.40424,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10606, 5938.21973, -1112.18018, 16.75405,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(7317, 6008.12939, -1108.74048, 13.93780,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5956.77881, -1094.72107, 8.79664,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5956.78320, -1090.81592, 8.79664,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5930.76855, -1097.51050, 8.01468,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(762, 6026.58398, -1132.43176, 12.48409,   0.00000, 0.00000, 168.75002, -1, -1, -1, 500);
	CreateDynamicObject(762, 6026.20703, -1119.18213, 12.75909,   0.00000, 0.00000, 168.75002, -1, -1, -1, 500);
	CreateDynamicObject(762, 6026.88721, -1104.99048, 12.68409,   0.00000, 0.00000, 168.75002, -1, -1, -1, 500);
	CreateDynamicObject(762, 6026.31250, -1092.32788, 12.43408,   0.00000, 0.00000, 168.75000, -1, -1, -1, 500);
	CreateDynamicObject(762, 6026.65771, -1079.33582, 12.75909,   0.00000, 0.00000, 168.75011, -1, -1, -1, 500);
	CreateDynamicObject(800, 6029.81104, -1069.15955, 9.80392,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5921.40723, -1123.65991, 8.84962,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5928.05762, -1123.71533, 8.84962,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5934.81152, -1123.71912, 8.84962,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5941.42725, -1123.68030, 8.84962,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5948.08984, -1123.71082, 8.84962,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(1215, 5954.71484, -1123.76184, 8.84962,   0.00000, 0.00000, 123.75000, -1, -1, -1, 500);
	CreateDynamicObject(652, 5434.28271, -1792.11951, 7.56106,   0.00000, 0.00000, 292.50000, -1, -1, -1, 500);
	CreateDynamicObject(652, 5433.38232, -1807.88110, 7.86106,   0.00000, 0.00000, 292.50000, -1, -1, -1, 500);
	CreateDynamicObject(620, 5425.95459, -1794.32178, 7.66459,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(620, 5437.18311, -1774.02869, 7.66459,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8054, 5835.73145, -1964.33447, 10.82372,   0.00000, 0.00000, -810.00018, -1, -1, -1, 500);
	CreateDynamicObject(8185, 5782.38184, -1984.14648, 9.09299,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 5782.46094, -1944.11121, 9.07012,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(866, 5724.47217, -1981.81775, 9.95234,   0.00000, 0.00000, 56.25002, -1, -1, -1, 500);
	CreateDynamicObject(866, 5720.37305, -1981.64575, 10.00234,   0.00000, 0.00000, 56.25002, -1, -1, -1, 500);
	CreateDynamicObject(866, 5715.81934, -1981.72852, 9.97734,   0.00000, 0.00000, 112.49998, -1, -1, -1, 500);
	CreateDynamicObject(866, 5723.88965, -1965.01404, 10.00234,   0.00000, 0.00000, 112.49998, -1, -1, -1, 500);
	CreateDynamicObject(8185, 5961.44482, -1984.14575, 9.11754,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 5961.55127, -1944.10010, 9.05033,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 6140.46729, -1984.13940, 9.13507,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 6140.60254, -1944.09033, 9.05123,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 6316.33203, -1984.11523, 9.16097,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8185, 6316.32227, -1944.08093, 9.07555,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(6990, 5712.35303, -704.67328, 8.11626,   0.00000, 0.00000, -1259.99963, -1, -1, -1, 500);
	CreateDynamicObject(8441, 5727.01563, -922.17523, 8.10505,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5806.96338, -674.67523, 8.10739,   0.00000, 0.00000, -1620.00012, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5726.98877, -782.39362, 8.03248,   0.00000, 0.00000, -1529.99988, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5676.39355, -854.67346, 8.09014,   0.00000, 0.00000, -1620.00012, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5777.52686, -854.67383, 8.09014,   0.00000, 0.00000, -1620.00012, -1, -1, -1, 500);
	CreateDynamicObject(5166, 5823.79736, -576.91968, 2.89748,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5167, 5716.26904, -568.87622, 4.92876,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5160, 5823.86035, -576.94745, 2.90922,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5156, 5768.17188, -568.87329, 8.62164,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(5157, 5877.05420, -568.81458, 14.65095,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1432, 5985.89063, -1218.15222, 8.12345,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1432, 5985.88037, -1211.58936, 8.12345,   0.00000, 0.00000, 292.50000, -1, -1, -1, 500);
	CreateDynamicObject(1432, 5985.91846, -1204.97437, 8.12345,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(1432, 5985.93896, -1198.20630, 8.12345,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(1432, 5985.92139, -1191.70569, 8.12345,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1432, 5985.94385, -1184.91028, 8.12345,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(1346, 6009.89014, -1264.53918, 9.34265,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1346, 6009.87500, -1262.91687, 9.34265,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(5155, 5702.96240, -568.95593, 18.88330,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(5158, 5678.96582, -569.20966, 9.58101,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3724, 5751.34033, -568.55627, 26.91515,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3724, 5832.96973, -568.49768, 26.89583,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5154, 5792.09619, -568.63580, 13.41163,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3620, 5700.33984, -591.84375, 21.11367,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3620, 5863.85107, -591.70807, 21.09051,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(10831, 5842.88525, -640.25098, 12.90411,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8562, 5857.99219, -764.70490, 8.09010,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(5184, 5966.92676, -918.04852, 26.90775,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(5184, 6008.95947, -660.59229, 26.91327,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(5184, 5964.42188, -618.44116, 26.87366,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(5184, 5547.12695, -663.24609, 26.93359,   0.00000, 0.00000, -89.99985, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5831.64746, -819.02460, 7.73130,   0.00000, 0.00000, -899.99939, -1, -1, -1, 500);
	CreateDynamicObject(5004, 5862.68701, -706.65125, 7.69117,   0.00000, 0.00000, -1079.99976, -1, -1, -1, 500);
	CreateDynamicObject(7052, 5726.99805, -794.03778, 8.10718,   0.00000, 0.00000, -1529.99988, -1, -1, -1, 500);
	CreateDynamicObject(8562, 5633.44434, -764.66931, 8.10733,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(10831, 5802.82715, -640.17474, 12.90411,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10831, 5762.13867, -640.17316, 12.88948,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10831, 5722.24512, -640.16583, 12.88949,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10831, 5683.58789, -640.16528, 12.88949,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10831, 5644.91260, -640.15625, 13.06688,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3621, 5958.43018, -729.60925, 13.26420,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5730.84473, -915.03247, 12.70130,   0.00000, 0.00000, -14040.03516, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5723.22900, -884.31030, 12.55286,   0.00000, 0.00000, -14220.03516, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5730.82617, -839.88068, 12.55286,   0.00000, 0.00000, -14400.03516, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5723.22949, -803.04498, 12.54718,   0.00000, 0.00000, -14580.03516, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5730.79248, -773.31659, 12.69562,   0.00000, 0.00000, -14760.03613, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5723.21338, -744.33838, 12.67345,   0.00000, 0.00000, -14940.03613, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5730.83057, -715.00513, 12.67345,   0.00000, 0.00000, -15120.03711, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5723.23975, -684.90344, 12.67345,   0.00000, 0.00000, -15300.03711, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5747.89502, -850.85431, 12.53865,   0.00000, 0.00000, -15390.03809, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5778.25586, -858.45605, 12.53014,   0.00000, 0.00000, -15570.03809, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5808.58984, -850.85907, 12.53014,   0.00000, 0.00000, -15750.03906, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5837.64160, -858.45508, 12.50544,   0.00000, 0.00000, -15930.03906, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5858.28418, -850.92175, 12.68635,   0.00000, 0.00000, -16110.04004, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5891.76660, -844.43103, 12.53791,   0.00000, 0.00000, -16200.04004, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5884.21289, -814.35687, 12.68635,   0.00000, 0.00000, -16380.04004, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5891.80566, -785.02374, 12.68635,   0.00000, 0.00000, -16560.04102, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5884.23877, -764.33942, 12.68635,   0.00000, 0.00000, -16740.04102, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5891.79541, -735.01691, 12.68635,   0.00000, 0.00000, -16920.04297, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5884.16895, -704.34576, 12.68634,   0.00000, 0.00000, -17100.04297, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5857.63232, -678.51099, 12.68635,   0.00000, 0.00000, -17730.04492, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5827.89795, -670.89459, 12.69582,   0.00000, 0.00000, -17910.04492, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5787.25830, -678.46521, 12.69582,   0.00000, 0.00000, -18090.04492, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5747.89453, -670.86426, 12.67345,   0.00000, 0.00000, -18270.04492, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5707.35742, -678.47095, 12.67345,   0.00000, 0.00000, -18450.04688, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5665.98633, -670.87891, 12.67345,   0.00000, 0.00000, -18630.04688, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5623.08057, -678.44092, 12.70359,   0.00000, 0.00000, -18810.04688, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5599.63818, -685.00616, 12.55515,   0.00000, 0.00000, -18900.04688, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5607.23047, -715.03088, 12.70358,   0.00000, 0.00000, -19080.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5599.65137, -744.33490, 12.70358,   0.00000, 0.00000, -19260.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5607.24756, -775.03284, 12.70358,   0.00000, 0.00000, -19440.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5599.67871, -804.38086, 12.55515,   0.00000, 0.00000, -19620.04883, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5607.22607, -834.98340, 12.70358,   0.00000, 0.00000, -19800.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5716.82520, -858.46722, 12.53014,   0.00000, 0.00000, -19890.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5687.37549, -850.87769, 12.53014,   0.00000, 0.00000, -20070.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5653.13184, -858.48279, 12.70358,   0.00000, 0.00000, -20250.05078, -1, -1, -1, 500);
	CreateDynamicObject(1294, 5623.76563, -850.87354, 12.70358,   0.00000, 0.00000, -20430.05273, -1, -1, -1, 500);
	CreateDynamicObject(5313, 5846.56152, -724.37878, 20.47354,   0.00000, 0.00000, -359.99985, -1, -1, -1, 500);
	CreateDynamicObject(8058, 5818.35156, -787.47742, 12.93731,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8063, 5763.49854, -729.14777, 11.58703,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8254, 5560.12012, -766.01617, 12.63769,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(11461, 5902.95654, -696.41486, 7.31411,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18365, 5913.42920, -761.64050, 16.74773,   0.00000, 0.00000, 134.99998, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5632.41260, -649.85449, 10.06721,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(5260, 5691.63477, -632.42902, 9.77635,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(5262, 5653.80273, -632.54077, 11.02589,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5632.39697, -640.36212, 10.06721,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5632.38525, -630.51764, 10.06721,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5656.83691, -646.16406, 10.37489,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7102, 5556.13232, -656.35754, 11.49600,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(7104, 5959.65479, -650.11578, 11.34363,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(7317, 5952.53906, -846.49457, 13.96845,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3689, 5668.77490, -766.49603, 15.82385,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(8063, 5763.48975, -783.36249, 11.66978,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(11012, 5768.96387, -900.08850, 13.38025,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(13190, 5707.22607, -917.13306, 11.51869,   0.00000, 0.00000, -359.99963, -1, -1, -1, 500);
	CreateDynamicObject(11085, 5770.08057, -897.66290, 13.90632,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(11086, 5769.84912, -897.66290, 15.97055,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(5309, 5637.56201, -880.57178, 11.27869,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10844, 5824.28271, -880.54718, 10.91421,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(10844, 5860.83252, -880.56903, 10.91421,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(13190, 5702.22998, -881.81854, 11.57908,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(925, 5632.51709, -645.10962, 9.13014,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(930, 5632.57617, -626.95532, 8.54411,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(931, 5632.52148, -635.45032, 9.13014,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(944, 5671.91602, -627.95026, 8.95062,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(1271, 5637.56445, -627.08453, 8.41823,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1271, 5637.56055, -629.30896, 8.41823,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(1431, 5675.64697, -627.62390, 8.61345,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1685, 5695.26514, -651.86414, 8.81584,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3566, 5793.60645, -730.83209, 10.26818,   0.00000, 0.00000, 123.75002, -1, -1, -1, 500);
	CreateDynamicObject(3568, 5793.58496, -742.55597, 10.26818,   0.00000, 0.00000, 123.74996, -1, -1, -1, 500);
	CreateDynamicObject(3569, 5793.55127, -707.67059, 10.29318,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(3576, 5694.21143, -648.56635, 9.55851,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3577, 5694.66650, -644.46088, 8.84834,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3630, 5672.45850, -647.80090, 9.55846,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3633, 5676.25684, -653.05341, 8.54064,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5712.21484, -627.73041, 10.06802,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5732.42529, -627.71106, 10.06802,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3796, 5712.02051, -623.57007, 8.07142,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3798, 5733.87402, -651.53241, 8.06238,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3799, 5706.27686, -628.37225, 7.94764,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 5709.22754, -624.78577, 8.06238,   0.00000, 0.00000, 11.25003, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5671.95801, -636.69165, 10.37489,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(12930, 5712.70459, -654.18225, 8.89606,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5875.30566, -807.35303, 9.23964,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5870.03076, -807.34546, 9.23964,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5864.75635, -807.34760, 9.23964,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5859.48389, -807.35889, 9.23964,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5854.19824, -807.34985, 9.23964,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5848.93896, -807.35925, 9.23964,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5877.94189, -804.66553, 9.23964,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5877.93213, -799.42847, 9.23964,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5877.91455, -794.18018, 9.23964,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5877.90332, -788.91101, 9.23964,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5877.91064, -783.65997, 9.23964,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5877.89697, -778.39172, 9.23964,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5877.88330, -773.14648, 9.23964,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5877.88965, -767.89972, 9.23964,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5875.31104, -689.92059, 9.19950,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5877.97314, -692.54840, 9.19950,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5877.97266, -697.81342, 9.19950,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5877.98145, -703.08002, 9.19950,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5870.05176, -689.92932, 9.19950,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5864.80957, -689.92218, 9.19950,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5859.53955, -689.91675, 9.19950,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5854.27197, -689.91650, 9.19950,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5849.01318, -689.92358, 9.19950,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5791.17529, -758.87463, 9.25352,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5788.53076, -761.52960, 9.25352,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5796.44434, -758.88440, 9.25352,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5801.71729, -758.88861, 9.25352,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5806.97412, -758.87653, 9.25352,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5812.22852, -758.88043, 9.25352,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5817.49365, -758.86749, 9.25352,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5775.08447, -807.66113, 9.26127,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5780.32129, -807.65424, 9.26127,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5785.58789, -807.65851, 9.26127,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1412, 5751.22363, -756.18164, 9.25352,   0.00000, 0.00000, -269.99994, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5783.11670, -921.27942, 10.32475,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5801.12744, -918.12683, 10.01468,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5789.24658, -918.13885, 10.01468,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5789.09082, -875.83789, 10.01468,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5798.65283, -873.52081, 10.01468,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(1431, 5792.54785, -872.81067, 8.56331,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11007, 5780.45898, -897.65967, 13.28559,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3566, 5750.39941, -888.34442, 10.39576,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3569, 5742.08203, -888.37909, 10.39575,   0.00000, 0.00000, 180.00002, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5771.39063, -876.30090, 10.32475,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5775.22998, -919.38708, 10.01468,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5775.23438, -913.16479, 10.01468,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5775.22412, -906.94843, 10.01468,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5775.22705, -900.75714, 10.01468,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5775.22363, -894.55457, 10.01468,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5789.24854, -911.96039, 10.01468,   0.00000, 0.00000, -179.99989, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5771.65723, -918.92877, 10.02106,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5771.66504, -912.70862, 10.02106,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5771.42090, -898.91296, 10.32475,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5762.79443, -873.60254, 10.01468,   0.00000, 0.00000, -269.99988, -1, -1, -1, 500);
	CreateDynamicObject(1431, 5771.96729, -892.53485, 8.56331,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1431, 5768.02539, -872.78394, 8.56331,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(944, 5771.69287, -906.20435, 8.90049,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(944, 5792.90137, -921.74707, 8.90049,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1431, 5797.17822, -922.25323, 8.56331,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5774.28369, -874.31390, 8.47156,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5756.59180, -912.72266, 8.83691,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5785.64404, -873.36932, 8.04195,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3409, 5795.25000, -912.86957, 7.80407,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3409, 5795.18750, -908.14307, 7.77906,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3409, 5795.15186, -903.47369, 7.77906,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3409, 5795.05713, -898.64716, 7.82906,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3409, 5795.02686, -893.84528, 7.82906,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3409, 5795.01172, -889.30200, 7.82906,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3409, 5795.06104, -884.60651, 7.82906,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, 5797.15234, -910.42480, 8.40593,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(973, 5797.15918, -901.12561, 8.40593,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(973, 5797.17041, -891.83026, 8.40593,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(973, 5797.17725, -887.15033, 8.40593,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(973, 5793.06494, -910.44348, 8.45593,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, 5793.07471, -901.19250, 8.45593,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, 5793.08398, -891.85333, 8.45593,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(973, 5793.09424, -887.17108, 8.45593,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5759.99512, -890.59552, 8.04833,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5759.28076, -893.98108, 8.47794,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1431, 5787.01172, -886.34308, 8.56331,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(944, 5786.55078, -895.48517, 8.90049,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3578, 5540.80273, -725.62598, 8.77232,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3578, 5540.78076, -736.06116, 8.77232,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3578, 5540.75684, -746.47833, 8.77552,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3578, 5540.71533, -784.83923, 8.77232,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3578, 5540.70947, -795.32397, 8.77232,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3578, 5540.68994, -805.78174, 8.77232,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3569, 5793.60059, -719.38678, 10.29318,   0.00000, 0.00000, 123.74995, -1, -1, -1, 500);
	CreateDynamicObject(3568, 5565.24609, -802.90485, 10.43290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3568, 5565.23438, -794.86780, 10.43290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3566, 5565.20166, -786.55994, 10.48290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3569, 5565.18945, -740.59656, 10.43290,   0.00000, 0.00000, 89.99998, -1, -1, -1, 500);
	CreateDynamicObject(3566, 5565.20361, -731.01410, 10.45790,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7102, 5572.47754, -626.57123, 11.49600,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1218, 5713.62549, -637.66412, 8.55753,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(1218, 5712.30518, -637.73773, 8.55753,   0.00000, 0.00000, 22.49999, -1, -1, -1, 500);
	CreateDynamicObject(1218, 5710.89111, -637.74792, 8.55753,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1218, 5711.00293, -632.40857, 8.55753,   0.00000, 0.00000, 33.75002, -1, -1, -1, 500);
	CreateDynamicObject(1218, 5709.56348, -632.89050, 8.56073,   0.00000, 0.00000, 292.50000, -1, -1, -1, 500);
	CreateDynamicObject(1218, 5709.59668, -631.58893, 8.55753,   0.00000, 0.00000, 326.24997, -1, -1, -1, 500);
	CreateDynamicObject(13591, 5742.53760, -933.73865, 8.39441,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5716.59277, -704.48724, 22.16903,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5716.63184, -724.53784, 22.10840,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5716.66113, -744.45337, 22.16903,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5716.59961, -763.19086, 22.17679,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5716.66309, -783.18390, 22.17679,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5716.58691, -803.09961, 22.17679,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5716.55518, -823.94537, 22.17679,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5613.90381, -704.81714, 22.17679,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5613.84863, -724.89380, 22.16903,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5613.91113, -744.89899, 22.17679,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5613.82324, -764.79907, 22.17679,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5613.79736, -784.81982, 22.17679,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5613.83643, -804.85034, 22.17679,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1278, 5613.79102, -824.97687, 22.17679,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(7102, 5572.08398, -920.78217, 11.50847,   0.00000, 0.00000, 89.99992, -1, -1, -1, 500);
	CreateDynamicObject(3621, 5997.40186, -806.80682, 8.00875,   0.00000, 0.00000, 270.00006, -1, -1, -1, 500);
	CreateDynamicObject(7317, 5635.07373, -926.84247, 14.11308,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3574, 5571.00000, -670.29712, 10.75992,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3575, 5572.09277, -651.91705, 10.75993,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(8076, 5662.45654, -926.79956, 11.99488,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(8883, 5545.36914, -879.96588, 11.50848,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8884, 5946.83301, -617.59705, 11.45824,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(10814, 5869.25439, -896.28973, 11.85033,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(10814, 5823.58789, -896.43164, 11.85218,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(13190, 5918.80469, -881.69019, 11.61447,   0.00000, 0.00000, -89.99985, -1, -1, -1, 500);
	CreateDynamicObject(10814, 5913.83936, -896.24152, 11.78459,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5687.28223, -734.17444, 8.44317,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5907.17480, -743.98822, 8.76614,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5907.16895, -747.96796, 8.76614,   0.00000, 0.00000, 269.99997, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5907.07617, -764.20874, 7.98418,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5687.84131, -704.61108, 7.94518,   0.00000, 0.00000, 90.00004, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5649.66260, -774.38892, 8.01357,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5650.29248, -734.95404, 8.44317,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5687.22119, -817.80261, 8.44317,   0.00000, 0.00000, -89.99996, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5661.97998, -696.29932, 8.72715,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5657.40381, -696.30145, 8.72715,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1431, 5675.48193, -696.62292, 8.46654,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5661.95117, -836.83881, 8.79553,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5657.34326, -836.83124, 8.79553,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(1344, 5675.69678, -836.86438, 8.79553,   0.00000, 0.00000, -0.00004, -1, -1, -1, 500);
	CreateDynamicObject(910, 5680.06445, -836.84039, 9.25647,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5684.48926, -837.04480, 8.01357,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5696.10693, -870.49512, 9.05000,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5698.92041, -870.53577, 9.05000,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5787.37207, -805.01990, 9.05000,   0.00000, 0.00000, -90.00008, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5787.54053, -793.23755, 8.43542,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1431, 5907.91211, -778.83032, 8.50553,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5879.21777, -722.83185, 8.19447,   0.00000, 0.00000, 90.00004, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5655.45605, -870.73248, 8.44317,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1431, 5627.21094, -870.96399, 8.53493,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5631.20557, -870.24255, 8.01357,   0.00000, 0.00000, 180.00009, -1, -1, -1, 500);
	CreateDynamicObject(3574, 5957.11768, -642.51648, 10.68254,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(3573, 5977.53760, -640.16534, 10.72215,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(12860, 5994.41309, -890.94794, 7.97888,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(12861, 5894.33057, -630.03381, 7.97909,   0.00000, 0.00000, 179.99997, -1, -1, -1, 500);
	CreateDynamicObject(3565, 5617.95410, -629.05408, 9.41617,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3625, 5742.40137, -693.64111, 10.44310,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18451, 5913.48828, -688.95404, 8.43797,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3631, 5643.74756, -891.25110, 8.63861,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3630, 5610.50537, -891.74884, 9.55293,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5602.29199, -891.18555, 8.08656,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5656.14990, -890.64484, 8.51617,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3573, 5589.60596, -879.31012, 10.72239,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3574, 5568.04785, -876.90271, 10.77239,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3575, 5564.25879, -906.82001, 10.77239,   0.00000, 0.00000, -179.99994, -1, -1, -1, 500);
	CreateDynamicObject(3625, 5578.42676, -905.72717, 10.61588,   0.00000, 0.00000, -89.99991, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5577.64258, -691.40845, 8.52514,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5578.35693, -780.95947, 8.09553,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5570.68701, -809.94446, 9.13197,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(1332, 5566.58350, -809.93604, 9.13197,   0.00000, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(3575, 5629.54834, -738.62421, 10.59625,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3574, 5630.04736, -767.38934, 10.62901,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(3573, 5631.31055, -811.15698, 10.67900,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3574, 5701.85547, -721.22931, 10.55401,   0.00000, 0.00000, -90.00002, -1, -1, -1, 500);
	CreateDynamicObject(3575, 5701.83057, -767.24701, 10.57125,   0.00000, 0.00000, 0.00002, -1, -1, -1, 500);
	CreateDynamicObject(3573, 5700.60596, -796.11981, 10.62901,   0.00000, 0.00000, 270.00003, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5732.43115, -635.46399, 10.06482,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5732.45117, -643.25592, 10.06482,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5712.18115, -635.63031, 10.06802,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5712.21338, -643.23895, 10.06482,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3798, 5733.90625, -630.33148, 8.06238,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 5733.57178, -632.76483, 8.06238,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18260, 5774.25928, -623.98267, 9.64223,   0.00000, 0.00000, 0.00008, -1, -1, -1, 500);
	CreateDynamicObject(3631, 5691.56152, -640.13306, 8.64414,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5750.48828, -634.45361, 10.37489,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5750.50391, -646.32733, 10.37489,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5753.79736, -634.40558, 10.37489,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5753.78564, -646.32507, 10.37489,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5773.80859, -634.43219, 10.37809,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5773.82568, -645.77618, 10.37489,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5770.34863, -634.43042, 10.37809,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(5269, 5770.37256, -645.77710, 10.37489,   0.00000, 0.00000, 180.00003, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5812.91846, -632.48114, 10.02944,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5812.91016, -640.03186, 10.02944,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5812.87451, -647.78046, 10.02944,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5792.89502, -632.48853, 10.02944,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5792.88330, -640.23810, 10.02944,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5792.87207, -647.97522, 10.02944,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5832.69287, -632.43378, 10.02944,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5832.68213, -640.23669, 10.02944,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5832.70410, -648.03802, 10.02944,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5853.02344, -632.46454, 10.02944,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5853.01221, -640.15564, 10.02944,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(3761, 5852.99512, -648.05634, 10.02944,   0.00000, 0.00000, 90.00005, -1, -1, -1, 500);
	CreateDynamicObject(1438, 5855.10791, -655.26862, 8.05671,   0.00000, 0.00000, 0.00006, -1, -1, -1, 500);
	CreateDynamicObject(1299, 5747.38086, -652.74585, 8.52170,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 5852.69824, -634.74561, 8.02700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 5811.16162, -644.83197, 8.02700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 5853.94873, -637.31567, 8.02700,   0.00000, 0.00000, 337.50000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 5812.44287, -642.63403, 8.02700,   0.00000, 0.00000, 44.99999, -1, -1, -1, 500);
	CreateDynamicObject(3800, 5791.92285, -635.16705, 8.02700,   0.00000, 0.00000, 348.75003, -1, -1, -1, 500);
	CreateDynamicObject(3800, 5831.63867, -643.84601, 8.02700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3800, 5832.46143, -627.46008, 8.02700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(652, 5374.20898, -1992.21008, 6.81450,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 5406.14600, -1991.56848, 7.00276,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 5476.24707, -1935.76282, 7.68356,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 6204.38623, -1988.08679, 7.82444,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 6210.16797, -1997.14709, 4.68634,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 6247.00879, -1927.26477, 5.02599,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 6422.90283, -1600.56042, 7.44738,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(652, 6428.29297, -1587.53809, 7.03148,   357.42169, 0.00000, 179.99998, -1, -1, -1, 500);
	CreateDynamicObject(790, 4507.11572, -1580.32690, 4.18048,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, 4502.24707, -1561.62439, 4.18050,   0.00000, 0.00000, 18.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, 4501.35400, -1652.45691, 4.18050,   0.00000, 0.00000, 185.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, 4502.80908, -1670.45325, 4.18050,   0.00000, 0.00000, 185.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, 4651.39600, -1651.52173, 4.18048,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, 4648.35107, -1657.66980, 4.18050,   0.00000, 0.00000, 185.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, 4637.00977, -1652.12329, 4.18050,   0.00000, 0.00000, 185.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, 4655.87354, -1596.26587, 4.18050,   0.00000, 0.00000, 222.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, 4652.80566, -1602.99585, 4.18050,   0.00000, 0.00000, 222.00000, -1, -1, -1, 500);
	CreateDynamicObject(790, 4642.38477, -1606.79407, 4.18050,   0.00000, 0.00000, 251.00000, -1, -1, -1, 500);
//End 4-й город
//Start Дрифт-спираль
	ObjGam[34] = CreateObject(8040, -2970.482, -5914.829, 590.3666,   0.00000, 0.00000, -91.00000);

	CreateDynamicObject(8838, -2971.74, -6004.88, 588.075,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2976.74, -6004.93, 588.08,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2966.74, -6004.82, 588.08,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3437, -2977.558, -5989.358, 595.47,   0.00000, 0.00000, 6.00000, -1, -1, -1, 500);
	CreateDynamicObject(3437, -2966.037, -5989.199, 595.47,   0.00000, 0.00000, -5.00000, -1, -1, -1, 500);
//	CreateDynamicObject(8040, -2970.482, -5914.829, 590.3666,   0.00000, 0.00000, -91.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2971.53, -5971.44, 588.08,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2976.91, -6033.96, 578.15,   0.00000, 37.77230, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2981.43, -6039.81, 574.15,   0.00000, 38.00000, -74.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2984.99, -6046.59, 570.15,   0.00000, 38.00000, -62.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2987.773, -6054.241, 566.15,   0.00000, 38.00000, -54.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2988.8, -6061.81, 562.15,   0.00000, 38.00000, -46.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2988.6, -6069.46, 558.15,   0.00000, 38.00000, -34.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2987.54, -6076.89, 554.15,   0.00000, 38.00000, -24.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2985.01, -6083.91, 550.15,   0.00000, 38.00000, -16.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2981.7, -6090.48, 546.15,   0.00000, 38.00000, -8.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2977.23, -6096.33, 542.15,   0.00000, 38.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2972.36, -6101.77, 538.15,   0.00000, 38.00000, 8.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2966.77, -6106.3, 534.15,   0.00000, 38.00000, 14.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2960.54, -6110.07, 530.15,   0.00000, 38.00000, 22.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2953.64, -6112.9, 526.15,   0.00000, 38.00000, 28.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2946.36, -6115.05, 522.15,   0.00000, 38.00000, 36.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2938.97, -6116.03, 518.15,   0.00000, 38.00000, 46.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2931.73, -6115.74, 514.15,   0.00000, 38.00000, 52.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2924.55, -6114.52, 510.15,   0.00000, 38.00000, 62.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2917.28, -6112.39, 506.15,   0.00000, 38.00000, 68.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2910.57, -6109.28, 502.15,   0.00000, 38.00000, 78.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2904.38, -6105.18, 498.15,   0.00000, 38.00000, 86.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2898.73, -6100.34, 494.15,   0.00000, 38.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2893.98, -6094.96, 490.15,   0.00000, 38.00000, 102.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2889.885, -6088.711, 486.15,   0.00000, 38.00000, 106.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2886.78, -6082.37, 482.15,   0.00000, 38.00000, 118.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2884.7, -6075.41, 478.15,   0.00000, 38.00000, 126.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2883.62, -6068.33, 474.15,   0.00000, 38.00000, 134.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2883.7, -6061.13, 470.15,   0.00000, 38.00000, 140.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2884.51, -6053.82, 466.15,   0.00000, 38.00000, 144.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2885.92, -6046.86, 462.15,   0.00000, 38.00000, 154.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2888.56, -6040.34, 458.15,   0.00000, 38.00000, 160.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2891.91, -6034.08, 454.15,   0.00000, 38.00000, 166.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2895.78, -6028.79, 450.15,   0.00000, 38.00000, -182.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2900.51, -6023.56, 446.15,   0.00000, 38.00000, -171.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2906.34, -6019.23, 442.15,   0.00000, 38.00000, -162.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2912.88, -6015.98, 438.15,   0.00000, 38.00000, -154.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2919.7, -6013.81, 434.15,   0.00000, 38.00000, -146.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2926.744, -6012.659, 430.15,   0.00000, 38.00000, -137.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2934.12, -6012.75, 426.15,   0.00000, 38.00000, -127.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2941.35, -6014.17, 422.15,   0.00000, 38.00000, -115.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2947.56, -6017.09, 418.15,   0.00000, 38.00000, -102.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2953.74, -6021.24, 414.15,   0.00000, 38.00000, -95.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2959.05, -6026.19, 410.15,   0.00000, 38.00000, -84.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2963.18, -6031.9, 406.15,   0.00000, 38.00000, -73.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2966.47, -6038.38, 402.15,   0.00000, 38.00000, -62.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2916.68, -6100.63, 259.53,   0.00000, 0.00000, -48.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2962.66, -6027.88, 270.15,   0.00000, 38.00000, -76.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2945.45, -6015.45, 282.15,   0.00000, 38.00000, -115.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2964.44, -6056.12, 259.58,   0.00000, 0.00000, -46.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2931.15, -6013.74, 290.15,   0.00000, 38.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2965.71, -6034.16, 266.15,   0.00000, 38.00000, -60.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2916.77, -6017.1, 298.15,   0.00000, 38.00000, -155.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2980.65, -6048.45, 266.15,   0.00000, 38.00000, -36.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2958.03, -6022.54, 274.15,   0.00000, 38.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2952.32, -6018.14, 278.15,   0.00000, 38.00000, -100.00000, -1, -1, -1, 500);
	CreateDynamicObject(3437, -2945.45, -6059.46, 266.96,   0.00000, 0.00000, 38.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2968.74, -6045.13, 398.15,   0.00000, 38.00000, -50.00000, -1, -1, -1, 500);
	CreateDynamicObject(3437, -2954.71, -6068.93, 266.96,   0.00000, 0.00000, 48.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2938.36, -6014.01, 286.15,   0.00000, 38.00000, -127.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2969.63, -6052.56, 394.15,   0.00000, 38.00000, -44.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2968.69, -6036.02, 266.15,   0.00000, 38.00000, -56.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2971.91, -6038.41, 266.15,   0.00000, 38.00000, -50.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2975.03, -6041.34, 266.15,   0.00000, 38.00000, -46.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2969.19, -6059.7, 390.15,   0.00000, 38.00000, -32.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2967.33, -6066.77, 386.15,   0.00000, 38.00000, -24.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2955.95, -6047.96, 259.57,   0.00000, 0.00000, -52.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2964.34, -6073.52, 382.15,   0.00000, 38.00000, -12.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2960.1, -6078.95, 378.15,   0.00000, 38.00000, -2.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2955, -6083.59, 374.15,   0.00000, 38.00000, 9.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2938.82, -6076.09, 259.53,   0.00000, 0.00000, -48.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2948.99, -6087.48, 370.15,   0.00000, 38.00000, -343.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2923.79, -6014.84, 294.15,   0.00000, 38.00000, -145.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2977.927, -6044.865, 266.15,   0.00000, 38.00000, -42.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2942.61, -6090.38, 366.15,   0.00000, 38.00000, -332.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2959.2, -6050.74, 259.55,   0.00000, 0.00000, -50.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2962.25, -6053.72, 259.56,   0.00000, 0.00000, -48.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2935.71, -6091.78, 362.15,   0.00000, 38.00000, -320.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2966.25, -6058.51, 259.57,   0.00000, 0.00000, -38.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2928.84, -6092.41, 358.15,   0.00000, 38.00000, -310.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2904.51, -6024.82, 306.15,   0.00000, 38.00000, -175.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2921.72, -6091.5, 354.15,   0.00000, 38.00000, -302.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2915.12, -6089.5, 350.15,   0.00000, 38.00000, -295.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2910.24, -6020.65, 302.15,   0.00000, 38.00000, -166.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2909.03, -6086.5, 346.15,   0.00000, 38.00000, -281.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2903.42, -6082.18, 342.15,   0.00000, 38.00000, -273.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2898.45, -6077.16, 338.15,   0.00000, 38.00000, -259.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2899.55, -6030.54, 310.15,   0.00000, 38.00000, -186.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2895, -6071.14, 334.15,   0.00000, 38.00000, -248.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2892.81, -6064.54, 330.15,   0.00000, 38.00000, -236.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2893.36, -6043.51, 318.15,   0.00000, 38.00000, -205.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2891.68, -6057.31, 326.15,   0.00000, 38.00000, -228.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2891.86, -6050.24, 322.15,   0.00000, 38.00000, -217.00000, -1, -1, -1, 500);
	CreateDynamicObject(8838, -2896.06, -6036.78, 314.15,   0.00000, 38.00000, -200.00000, -1, -1, -1, 500);
	CreateDynamicObject(8040, -2878.673, -6142.638, 261.8308,   0.00000, 0.00000, 132.00000, -1, -1, -1, 500);
//End Дрифт-спираль
//Start Дрифт-восьмёрка - by EBGEHbI4)
	CreateDynamicObject(1238, -2044.38367, -205.72964, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2044.05249, -206.50833, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2043.42285, -207.09596, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2042.47217, -207.56944, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2041.38306, -207.73181, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2040.56372, -207.56769, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2039.70435, -207.22359, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2038.99170, -206.39113, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2038.50623, -205.43025, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2038.33911, -204.59387, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2038.48657, -203.72079, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2038.94324, -202.64986, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2039.61719, -201.85287, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2040.55054, -201.42043, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2041.46863, -201.22919, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2042.55212, -201.53438, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2043.47900, -202.05029, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2044.10559, -202.74638, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2044.52441, -203.53554, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2044.71497, -204.61981, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2050.33936, -211.52399, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2048.29028, -213.36711, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2044.93750, -215.20416, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2041.02795, -215.72836, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2038.13904, -215.30672, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2035.31824, -213.86000, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2032.59094, -211.20662, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2030.84033, -207.94293, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2030.33105, -204.83620, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2030.73926, -201.87190, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2032.28271, -198.25375, 34.31443,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2034.95178, -195.41948, 34.31443,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2038.02686, -193.91670, 34.31443,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2041.05725, -193.35703, 34.31443,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2050.18701, -197.18921, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2045.05408, -194.02658, 34.31443,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2048.47827, -195.88889, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2065.31470, -201.00156, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2065.44360, -200.25768, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2065.93628, -199.19562, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2066.71509, -198.44304, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2067.62695, -198.00493, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2068.52148, -197.83823, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2069.61499, -197.99406, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2070.65210, -198.62357, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2071.27246, -199.19183, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2071.62988, -199.98253, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2071.76587, -201.16408, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2071.55762, -202.28352, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2071.09644, -203.02309, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2070.56738, -203.59708, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2069.56909, -204.13181, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2068.46948, -204.23366, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2067.55664, -204.07721, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2066.82568, -203.73517, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2066.01221, -202.99361, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2065.64526, -202.12798, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2059.45996, -194.62633, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2062.14795, -191.84897, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2065.17993, -190.35153, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2068.25659, -189.86362, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2072.30273, -190.46829, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2075.85571, -192.52405, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2077.75537, -194.60385, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2079.26074, -197.34361, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2079.81665, -201.57198, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2078.93823, -205.38379, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2077.30396, -208.03773, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2075.43750, -209.95383, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2071.90820, -211.68130, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2068.08032, -212.29791, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2065.11206, -211.72060, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2062.29004, -210.33444, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2059.45386, -208.09940, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.67578, -211.69644, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.57764, -214.87498, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.46411, -218.12871, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.35400, -221.34276, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.79248, -221.19957, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.71924, -217.98540, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.70825, -214.75769, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.63135, -211.59828, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2058.25220, -208.37907, 34.31664,   0.00000, 0.00000, -0.24000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.81885, -195.97734, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.91040, -192.76907, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.86572, -189.41977, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.82935, -183.09431, 34.31664,   0.00000, 0.00000, 0.30000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.81250, -186.33238, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.90967, -179.86693, 34.31664,   0.00000, 0.00000, 0.30000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.63281, -194.41551, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.58789, -191.19368, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.47949, -184.88419, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.57227, -188.04497, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.48071, -181.72627, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.46875, -183.29930, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.45483, -180.05922, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.56689, -189.56776, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2043.08398, -193.64429, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2058.21387, -195.24628, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.78101, -194.34056, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.87817, -187.88683, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.90063, -191.09818, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.80371, -184.74046, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.83447, -181.43817, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.81836, -209.90457, 34.31664,   0.00000, 0.00000, -0.24000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.68237, -213.19139, 34.31664,   0.00000, 0.00000, -0.24000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.72559, -216.43201, 34.31664,   0.00000, 0.00000, -0.24000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.77856, -219.61664, 34.31664,   0.00000, 0.00000, -0.24000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.68945, -210.18427, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.58594, -213.35918, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.48218, -216.53416, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.39844, -219.73691, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.54053, -186.45631, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2057.62378, -192.73532, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2060.59937, -192.96159, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2063.52368, -190.98834, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2066.61670, -190.00328, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2070.19873, -190.04752, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2074.13989, -191.21895, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2079.76855, -199.57536, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2078.66772, -195.87560, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2076.82861, -193.42329, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2079.62158, -203.44305, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2078.43701, -206.79196, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2076.41675, -209.10988, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2073.79761, -211.14096, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2069.97070, -212.33856, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2066.50610, -212.18822, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2060.73657, -208.96593, 34.31664,   0.00000, 0.00000, 0.06000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.19995, -210.21098, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2049.52710, -212.53560, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2046.85254, -214.43352, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2043.06946, -215.75415, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2039.49475, -215.60963, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2036.53064, -214.70526, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2033.78235, -212.60771, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2031.50159, -209.66141, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2030.38599, -206.36850, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2030.37646, -203.13568, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2031.41162, -200.04330, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2033.46350, -196.51634, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2036.58789, -194.34433, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2039.47095, -193.57349, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2046.88745, -194.66826, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1238, -2051.33179, -197.54384, 34.31664,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19960, -2058.02515, -194.40402, 34.31295,   0.00000, 0.00000, 162.23993, -1, -1, -1, 500);
	CreateDynamicObject(19966, -2057.49487, -180.06670, 34.31664,   0.00000, 0.00000, 181.44017, -1, -1, -1, 500);
	CreateDynamicObject(19966, -2057.80347, -221.07724, 34.31664,   0.00000, 0.00000, 177.24016, -1, -1, -1, 500);
	CreateDynamicObject(11387, -2072.19409, -145.44960, 37.63080,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11391, -2089.74414, -137.68761, 35.50840,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11389, -2081.68799, -129.57390, 37.51640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11388, -2081.82129, -129.59740, 41.08330,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1676, -2060.14526, -143.15680, 35.96300,   0.00000, 0.00000, 89.28000, -1, -1, -1, 500);
	CreateDynamicObject(1676, -2060.05713, -140.36380, 35.96300,   0.00000, 0.00000, 89.28000, -1, -1, -1, 500);
	CreateDynamicObject(1676, -2059.88306, -138.32750, 35.96300,   0.00000, 0.00000, 89.28000, -1, -1, -1, 500);
	CreateDynamicObject(1676, -2059.93994, -135.74139, 35.96300,   0.00000, 0.00000, 89.28000, -1, -1, -1, 500);
	CreateDynamicObject(11393, -2077.07983, -134.82730, 35.87380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11360, -2072.05005, -125.81754, 36.33140,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(11359, -2086.05103, -145.68469, 36.34080,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
//End Дрифт-восьмёрка - by EBGEHbI4)
//Start Мото-паркур 1
	ObjGam[35] = CreateObject(8040, -8727.756835, 6127.045898, 26.940019, 0.000000, 0.000000, -91.959671);

	CreateDynamicObject(9907, -9389.976562, 6098.378906, 13.401720, 0.000000, 0.000000, 269.863128, -1, -1, -1, 500);
	CreateDynamicObject(8391, -9302.101562, 6037.171875, 21.260450, 0.000000, 0.000000, 44.794528, -1, -1, -1, 500);
	CreateDynamicObject(4602, -9220.113281, 6057.684570, 56.121780, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(6391, -9136.333984, 6100.143554, 18.457820, 0.000000, 0.000000, 9.453800, -1, -1, -1, 500);
	CreateDynamicObject(4585, -9009.743164, 6099.128906, -27.599029, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4564, -8918.021484, 6101.219726, -30.391729, 0.000000, 0.000000, 269.759124, -1, -1, -1, 500);
	CreateDynamicObject(4690, -8809.910156, 6095.015625, -85.528091, 0.000000, 0.859380, 179.622390, -1, -1, -1, 500);
	CreateDynamicObject(1655, -8800.424804, 6038.142578, 65.309272, -1.718870, 0.859380, 0.962740, -1, -1, -1, 500);
	CreateDynamicObject(4571, -8800.665039, 6020.233398, 0.411540, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4603, -8800.291015, 5933.230468, 16.042919, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8802.264648, 5996.373046, 64.627197, -3.437750, 0.000000, 0.103299, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8807.925781, 5913.362304, 40.203918, 0.000000, 0.000000, 15.573280, -1, -1, -1, 500);
	CreateDynamicObject(10948, -8812.456054, 5860.445800, -2.993319, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4558, -8692.525390, 5873.305664, 35.067619, 0.000000, 0.000000, 0.858690, -1, -1, -1, 500);
	CreateDynamicObject(1633, -8646.240234, 5860.556640, 27.702259, 0.000000, 0.000000, 91.958869, -1, -1, -1, 500);
	CreateDynamicObject(10619, -8582.275390, 5855.247558, 9.830149, 0.000000, 0.000000, 226.032028, -1, -1, -1, 500);
	CreateDynamicObject(1634, -8552.002929, 5919.648437, 33.166549, -9.453800, 0.000000, 174.465988, -1, -1, -1, 500);
	CreateDynamicObject(17533, -8565.521484, 5948.220703, -1.725090, 0.000000, 0.000000, 181.341308, -1, -1, -1, 500);
	CreateDynamicObject(4019, -8620.933593, 5965.700195, -7.317810, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(10948, -8734.872070, 5952.017578, -8.296990, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(1655, -8678.363281, 5960.218750, 33.977680, 0.000000, 0.000000, 272.337829, -1, -1, -1, 500);
	CreateDynamicObject(4006, -8728.412109, 6053.622070, 13.965519, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4563, -8702.495117, 5897.999023, 60.625209, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4563, -8917.814453, 6018.519531, 24.285820, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4563, -9106.589843, 6173.403320, 7.792729, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4563, -9385.513671, 6020.831054, 48.889938, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4571, -8885.805664, 5899.108398, 22.620010, 0.000000, 0.000000, 91.100227, -1, -1, -1, 500);
	CreateDynamicObject(4571, -8631.863281, 6076.027343, 23.351299, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4571, -9053.179687, 6009.057617, 21.721920, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4571, -9297.039062, 6122.738281, 11.537360, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4585, -8532.883789, 6017.834960, 26.348060, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4585, -8661.248046, 5754.092773, 35.635559, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4586, -8459.883789, 5852.312988, 51.280078, 0.000000, 0.000000, 90.240913, -1, -1, -1, 500);
	CreateDynamicObject(4586, -8827.227539, 5766.310058, 54.159790, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4602, -8895.796875, 6190.461425, 59.059341, 0.000000, 0.000000, 356.562286, -1, -1, -1, 500);
	CreateDynamicObject(4602, -9218.041992, 6184.804687, 59.661201, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4602, -9174.001953, 5978.401367, 60.065799, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4602, -9476.944335, 6147.649414, 60.218891, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(4603, -8717.558593, 6160.855468, 6.331809, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(1634, -8725.032226, 6089.905761, 27.139369, 0.000000, 0.000000, 180.482055, -1, -1, -1, 500);
//	CreateDynamicObject(8040, -8727.756835, 6127.045898, 26.940019, 0.000000, 0.000000, -91.959671, -1, -1, -1, 500);
	CreateDynamicObject(1634, -8725.091796, 6094.003417, 25.954359, -14.610420, 0.000000, 180.482055, -1, -1, -1, 500);
	CreateDynamicObject(1634, -8725.496093, 6034.933593, 27.864360, 0.000000, 0.000000, 181.341491, -1, -1, -1, 500);
	CreateDynamicObject(1634, -8725.337890, 6029.261718, 31.260360, 12.032110, 0.000000, 181.341491, -1, -1, -1, 500);
	CreateDynamicObject(1655, -8591.866210, 5961.668945, 31.402570, 0.000000, 0.000000, 271.478454, -1, -1, -1, 500);
	CreateDynamicObject(1633, -8702.179687, 5863.735351, 41.450710, 0.000000, 0.000000, 91.958869, -1, -1, -1, 500);
	CreateDynamicObject(1633, -8707.302734, 5863.564453, 43.963249, 14.610420, 0.000000, 91.958869, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8809.653320, 5919.554199, 44.142108, 17.188730, 0.000000, 15.573280, -1, -1, -1, 500);
	CreateDynamicObject(1634, -8653.373046, 5860.189453, 30.685180, 12.032110, 0.000000, 92.819107, -1, -1, -1, 500);
	CreateDynamicObject(1634, -8649.238281, 5860.383300, 28.317539, -2.578310, 0.000000, 92.819107, -1, -1, -1, 500);
	CreateDynamicObject(1633, -8703.439453, 5863.686523, 42.075851, 6.016059, 0.000000, 91.958869, -1, -1, -1, 500);
	CreateDynamicObject(1633, -8714.234375, 5863.342773, 48.230598, 16.329299, 0.000000, 91.958869, -1, -1, -1, 500);
	CreateDynamicObject(1633, -8721.580078, 5863.110351, 51.775669, 6.016059, 0.000000, 91.958869, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8812.418945, 5953.480468, 48.003959, 0.000000, 0.000000, 279.316925, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8805.577148, 5955.395996, 52.105358, 15.469860, -10.313240, 289.630096, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8800.327148, 5958.769042, 57.859558, 27.501970, -18.907609, 299.943237, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8811.162109, 5949.062988, 47.953948, 0.000000, 0.000000, 279.316925, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8804.149414, 5950.196289, 52.890308, 22.345350, 0.000000, 279.316925, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8808.614257, 5949.465820, 49.276058, 9.453800, 0.000000, 279.316925, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8799.052734, 5951.000000, 59.941051, 39.534088, 0.000000, 279.316925, -1, -1, -1, 500);
	CreateDynamicObject(1633, -8808.852539, 5954.352539, 50.252449, 14.610420, -7.734930, 284.472961, -1, -1, -1, 500);
	CreateDynamicObject(1633, -8802.287109, 5957.449218, 55.685588, 28.361410, -20.626480, 296.504974, -1, -1, -1, 500);
	CreateDynamicObject(3436, -8802.192382, 5982.075195, 58.682201, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(1633, -8782.944335, 5956.220214, 67.629112, -2.578310, -0.859440, 10.416029, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8777.642578, 5958.073242, 68.153961, 2.578310, 0.000000, 1.822180, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8777.755859, 5961.653808, 70.835792, 18.907609, 0.000000, 1.822180, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8792.273437, 5996.321289, 64.638061, -3.437750, 0.000000, 0.103299, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8782.375000, 5996.313476, 64.638061, -3.437750, 0.000000, 0.103299, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8812.113281, 5996.384277, 64.638061, -3.437750, 0.000000, 0.103299, -1, -1, -1, 500);
	CreateDynamicObject(1632, -8821.951171, 5996.360351, 64.638061, -3.437750, 0.000000, 0.103299, -1, -1, -1, 500);
	CreateDynamicObject(1655, -8809.125976, 6037.952636, 65.477256, -1.718870, 0.859380, 0.962740, -1, -1, -1, 500);
	CreateDynamicObject(1634, -8841.666992, 6100.794921, 62.946430, 0.000000, 0.000000, 90.240798, -1, -1, -1, 500);
	CreateDynamicObject(1634, -8849.664062, 6100.775390, 67.228340, 6.875490, 0.000000, 90.240798, -1, -1, -1, 500);
	CreateDynamicObject(1634, -8856.769531, 6100.761718, 72.781753, 18.907609, 0.000000, 90.240798, -1, -1, -1, 500);
	CreateDynamicObject(4585, -9048.349609, 6099.303710, -27.637220, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(6391, -9173.947265, 6100.452148, 18.450630, 0.000000, 0.000000, 9.453800, -1, -1, -1, 500);
	CreateDynamicObject(4571, -9238.478515, 6112.862304, -0.530049, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(1634, -8944.042968, 6101.177734, 79.972267, 0.000000, 0.000000, 88.520767, -1, -1, -1, 500);
	CreateDynamicObject(1634, -8951.492187, 6101.348632, 84.541732, 12.891550, 0.000000, 88.520767, -1, -1, -1, 500);
	CreateDynamicObject(1634, -9063.254882, 6098.540039, 73.703773, 5.156620, 0.000000, 90.239646, -1, -1, -1, 500);
	CreateDynamicObject(1632, -9181.950195, 6104.548828, 60.193531, 0.000000, 0.000000, 82.505867, -1, -1, -1, 500);
	CreateDynamicObject(1634, -9251.750000, 6115.617187, 64.582878, 0.000000, 0.000000, 84.224739, -1, -1, -1, 500);
	CreateDynamicObject(1634, -9258.638671, 6116.306152, 69.483177, 19.767040, 0.000000, 84.224739, -1, -1, -1, 500);
	CreateDynamicObject(1634, -9325.548828, 6112.235351, 76.600280, 0.000000, 0.000000, 97.975723, -1, -1, -1, 500);
	CreateDynamicObject(1634, -9410.658203, 6088.455078, 67.244338, 0.000000, 0.000000, 97.116287, -1, -1, -1, 500);
	CreateDynamicObject(1634, -9411.162109, 6092.562500, 67.244338, 0.000000, 0.000000, 97.116287, -1, -1, -1, 500);
	CreateDynamicObject(1634, -9416.941406, 6087.671875, 73.415367, 36.096340, 0.000000, 97.116287, -1, -1, -1, 500);
	CreateDynamicObject(1634, -9417.434570, 6091.816406, 73.437263, 36.096340, 0.000000, 97.116287, -1, -1, -1, 500);
	CreateDynamicObject(1634, -9413.702148, 6092.273437, 69.038642, 12.891550, 0.000000, 97.116287, -1, -1, -1, 500);
	CreateDynamicObject(1634, -9413.890625, 6088.072265, 69.535232, 17.188730, 0.000000, 97.116287, -1, -1, -1, 500);
	CreateDynamicObject(4564, -8991.152343, 6183.181640, 83.426979, 0.000000, 0.000000, 269.759124, -1, -1, -1, 500);
	CreateDynamicObject(4564, -8550.592773, 5760.825195, 97.966346, 0.000000, 0.000000, 286.088317, -1, -1, -1, 500);
	CreateDynamicObject(4571, -8806.400390, 6178.639648, 26.700630, 0.000000, 0.000000, 177.903732, -1, -1, -1, 500);
	CreateDynamicObject(4564, -9352.730468, 6190.817382, 100.562469, 0.000000, 0.000000, 269.759124, -1, -1, -1, 500);
	CreateDynamicObject(8040, -9476.424804, 6084.957519, 64.951797, 0.000000, 0.000000, 4.000000, -1, -1, -1, 500);
	CreateDynamicObject(4602, -9453.600585, 6047.689453, 60.218898, 0.000000, 0.000000, 4.000000, -1, -1, -1, 500);
	CreateDynamicObject(4602, -9494.167968, 6044.849121, 60.218898, 0.000000, 0.000000, 4.000000, -1, -1, -1, 500);
//End Мото-паркур 1
//Start Мото-паркур 2
	ObjGam[36] = CreateObject(8040, -8712.233398, 3339.016845, 25.253499, 0.000000, 0.000000, -88.000000);

	CreateDynamicObject(13641, -8711.299804, 3294.800048, 26.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(13641, -8710.200195, 3265.100097, 26.200000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8714.500000, 3257.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8711.400390, 3257.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8708.299804, 3257.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8705.200195, 3257.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8714.500000, 3250.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8711.399414, 3250.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8708.299804, 3250.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8705.200195, 3250.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8714.500000, 3243.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8711.399414, 3243.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8708.299804, 3243.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8705.200195, 3243.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(13641, -8710.099609, 3235.300048, 26.100000, 0.000000, 0.000000, 268.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8705.200195, 3199.399902, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8708.299804, 3199.399902, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8711.399414, 3199.399902, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8714.500000, 3192.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8714.500000, 3199.400390, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8711.399414, 3192.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8708.299804, 3192.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8705.200195, 3192.300048, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8705.200195, 3185.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8708.299804, 3185.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8711.399414, 3178.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8714.500000, 3185.199951, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8705.200195, 3178.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8708.299804, 3178.100097, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8711.399414, 3185.200195, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8824.500000, 2965.300048, 23.000000, 0.000000, 0.000000, 272.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8709.900390, 3156.899902, 23.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8709.900390, 3116.500000, 23.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8709.900390, 3076.100097, 23.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8717.280273, 3038.129882, 22.989999, 0.000000, 0.000000, 248.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8737.400390, 3004.600097, 23.000000, 0.000000, 0.000000, 230.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8767.200195, 2979.610107, 22.979999, 0.000000, 0.000000, 209.998992, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8802.599609, 2966.000000, 23.000000, 0.000000, 0.000000, 191.998001, -1, -1, -1, 500);
	CreateDynamicObject(3437, -8696.599609, 2997.000000, 35.700000, 0.000000, 50.000000, 211.432006, -1, -1, -1, 500);
	CreateDynamicObject(3437, -8709.200195, 2989.199951, 35.700000, 0.000000, 49.999000, 211.432006, -1, -1, -1, 500);
	CreateDynamicObject(3437, -8721.700195, 2981.500000, 35.700000, 0.000000, 49.999000, 211.432006, -1, -1, -1, 500);
	CreateDynamicObject(3437, -8721.900390, 2981.800048, 42.000000, 0.000000, 310.000000, 211.432006, -1, -1, -1, 500);
	CreateDynamicObject(3437, -8709.500000, 2989.300048, 42.000000, 0.000000, 309.996002, 211.425994, -1, -1, -1, 500);
	CreateDynamicObject(3437, -8697.099609, 2996.800048, 42.000000, 0.000000, 309.996002, 211.425994, -1, -1, -1, 500);
	CreateDynamicObject(13641, -8709.899414, 3206.700195, 26.100000, 0.000000, 0.000000, 87.995002, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8714.500000, 3178.100585, 23.100000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8824.400390, 2962.199951, 23.000000, 0.000000, 0.000000, 272.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8824.299804, 2959.100097, 23.000000, 0.000000, 0.000000, 272.000000, -1, -1, -1, 500);
	CreateDynamicObject(13641, -8832.099609, 2961.800048, 26.100000, 0.000000, 0.000000, 179.994995, -1, -1, -1, 500);
	CreateDynamicObject(13641, -8877.799804, 2960.399902, 26.100000, 0.000000, 0.000000, 359.994995, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8885.654296, 2960.129638, 23.000000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8885.654296, 2957.009521, 23.000000, 0.000000, 0.000000, 269.994995, -1, -1, -1, 500);
	CreateDynamicObject(2932, -8885.654296, 2963.257324, 23.000000, 0.000000, 0.000000, 269.994995, -1, -1, -1, 500);
	CreateDynamicObject(13645, -8949.598632, 3110.097656, 25.190799, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8960.961914, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8966.058593, 3110.927001, 23.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8971.037109, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8976.085937, 3110.927001, 23.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8981.112304, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8986.166015, 3110.927001, 23.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8991.201171, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8996.330078, 3110.927001, 23.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9001.391601, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9006.458984, 3110.927001, 23.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9011.491210, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9016.502929, 3110.927001, 23.200000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9021.491210, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3080, -9027.125000, 3107.805175, 25.500000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3080, -9027.125000, 3099.448242, 25.500000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3080, -9027.125000, 3124.243652, 25.500000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3080, -9027.125000, 3116.064697, 25.500000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9051.951171, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9057.076171, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9062.199218, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9067.316406, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9072.432617, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9077.547851, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9082.664062, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9087.781250, 3110.927001, 23.399999, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3374, -9088.385742, 3092.723632, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3374, -9088.385742, 3096.763916, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3374, -9088.385742, 3100.817626, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3374, -9088.385742, 3104.857666, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3374, -9088.385742, 3108.912597, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3374, -9088.385742, 3112.949707, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3374, -9088.385742, 3116.999023, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3374, -9088.385742, 3121.038330, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3374, -9088.385742, 3125.077636, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3374, -9088.385742, 3129.109619, 26.399999, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
//	CreateDynamicObject(8040, -8712.233398, 3339.016845, 25.253499, 0.000000, 0.000000, -88.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8909.367187, 2960.200195, 22.930000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8947.662109, 2953.457275, 22.920000, 0.000000, 0.000000, 200.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8981.337890, 2934.001953, 22.930000, 0.000000, 0.000000, 220.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9006.340820, 2904.222412, 22.920000, 0.000000, 0.000000, 240.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9019.673828, 2867.649414, 22.930000, 0.000000, 0.000000, 260.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9023.138671, 2828.040283, 22.920000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(13641, -9023.251953, 2803.751220, 26.100000, 0.000000, 0.000000, -92.000000, -1, -1, -1, 500);
	CreateDynamicObject(13641, -9023.251953, 2759.469482, 26.100000, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9023.299804, 2735.242187, 22.930000, 0.000000, 0.000000, 270.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9033.042968, 2698.846679, 22.920000, 0.000000, 0.000000, 240.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9059.677734, 2672.210937, 22.930000, 0.000000, 0.000000, 210.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9096.067382, 2662.462402, 22.920000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9184.015625, 2662.543457, 22.930000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(13641, -9120.284179, 2662.501464, 26.100000, 0.000000, 0.000000, 178.000000, -1, -1, -1, 500);
	CreateDynamicObject(13641, -9159.778320, 2662.501464, 26.100000, 0.000000, 0.000000, -2.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9220.421875, 2672.296386, 22.920000, 0.000000, 0.000000, 150.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9247.060546, 2698.953613, 22.930000, 0.000000, 0.000000, 120.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9256.814453, 2735.337402, 22.920000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9247.054687, 2771.734619, 22.930000, 0.000000, 0.000000, 60.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9220.409179, 2798.388671, 22.920000, 0.000000, 0.000000, 30.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9184.024414, 2808.148193, 22.930000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9147.650390, 2798.396484, 22.920000, 0.000000, 0.000000, -30.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9111.137695, 2785.105712, 22.930000, 0.000000, 0.000000, -10.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9072.578125, 2781.626953, 17.757499, 0.000000, 15.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -9034.236328, 2781.640380, 12.930000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8993.838867, 2781.640380, 12.930000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8955.485351, 2781.640380, 17.757499, 0.000000, -15.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8916.179687, 2781.640380, 22.930000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8875.781250, 2781.640380, 22.930000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(13641, -8851.511718, 2781.764648, 26.100000, 0.000000, 0.000000, -2.000000, -1, -1, -1, 500);
	CreateDynamicObject(13641, -8813.961914, 2781.764648, 26.100000, 0.000000, 0.000000, 178.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8789.718750, 2781.687255, 22.930000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8753.338867, 2791.444335, 22.920000, 0.000000, 0.000000, 30.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8730.082031, 2819.169677, 22.930000, 0.000000, 0.000000, 70.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8730.084960, 2855.362792, 22.920000, 0.000000, 0.000000, 110.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8753.340820, 2883.081298, 22.930000, 0.000000, 0.000000, 150.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8788.974609, 2889.372558, 22.920000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8854.839843, 2961.098144, 12.930000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8854.839843, 2922.735107, 17.757499, 0.000000, 15.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8854.839843, 2999.460449, 17.757499, 0.000000, -15.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8851.383789, 2884.207031, 22.930000, 0.000000, 0.000000, 100.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8828.752929, 2882.352539, 22.940000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8829.566406, 2887.317138, 22.920000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8830.448242, 2892.304931, 22.940000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8827.912109, 2877.400146, 22.920000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8827.028320, 2872.382812, 22.940000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8826.159179, 2867.374755, 22.920000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8831.339843, 2897.305908, 22.920000, 0.000000, 0.000000, 190.000000, -1, -1, -1, 500);
	CreateDynamicObject(978, -8845.632812, 2865.264160, 25.236200, 0.000000, 0.000000, -24.000000, -1, -1, -1, 500);
	CreateDynamicObject(978, -8836.768554, 2864.168945, 25.236200, 0.000000, 0.000000, 10.000000, -1, -1, -1, 500);
	CreateDynamicObject(978, -8850.697265, 2871.750488, 25.236200, 0.000000, 0.000000, -80.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8854.839843, 3038.747314, 22.930000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8864.603515, 3075.145263, 22.920000, 0.000000, 0.000000, 120.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8891.228515, 3101.766845, 22.930000, 0.000000, 0.000000, 150.000000, -1, -1, -1, 500);
	CreateDynamicObject(3458, -8927.622070, 3111.518310, 22.920000, 0.000000, 0.000000, 180.000000, -1, -1, -1, 500);
	CreateDynamicObject(13645, -8949.565429, 3112.931640, 25.190799, 0.000000, 0.000000, 88.000000, -1, -1, -1, 500);
	CreateDynamicObject(8040, -9130.292968, 3111.008300, 25.683500, 0.000000, 0.000000, 0.000000, -1, -1, -1, 500);
//End Мото-паркур 2
//Start Мото-паркур 3
	ObjGam[37] = CreateObject(18783, -8905.24121, -191.27246, 160.22000,   0.00000, 0.00000, 0.00000);

//	CreateDynamicObject(18783, -8905.24121, -191.27246, 160.22000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18786, -8905.26953, -173.05005, 164.96001,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18783, -8905.12988, -153.85010, 165.02000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8906.37988, -145.12988, 167.05000,   -8.00000, 0.00000, 178.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8905.28027, -84.51001, 179.91000,   16.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3502, -8966.10156, -115.36458, 187.13721,   20.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3502, -8974.39355, -115.36330, 190.15370,   20.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8914.54590, -192.12646, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8914.53418, -189.36377, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8914.54688, -186.48438, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8914.55762, -183.72437, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8909.11133, -200.53638, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8906.45996, -200.53394, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8903.65820, -200.57373, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8901.04590, -200.56055, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8898.49316, -200.55371, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8895.98242, -200.53516, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8895.97461, -197.96997, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8895.97559, -195.19873, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8895.96875, -192.37988, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8895.98535, -186.55542, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8914.52051, -194.88452, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8914.53906, -197.73071, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8895.95410, -189.49780, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8895.98633, -183.73145, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8911.91211, -200.55127, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18887, -8914.48242, -200.52441, 163.64999,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8905.42773, -53.75366, 176.45540,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(13638, -8956.48438, -49.71899, 173.36729,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18783, -8905.56250, -43.76050, 174.39751,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(13648, -8937.19434, -45.08569, 176.87489,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(13648, -8937.19434, -44.41284, 176.87489,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(13648, -8937.19434, -43.73950, 176.87489,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(13648, -8937.19434, -43.06665, 176.87489,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(13648, -8937.19434, -42.39087, 176.87489,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18856, -8946.85449, -57.49390, 169.44180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18856, -8946.33691, -98.12530, 174.40581,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(13638, -8954.15039, -112.71614, 178.35600,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18856, -8981.68555, -115.37668, 188.73689,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6052, -8999.80078, -108.39108, 187.49361,   0.00000, 0.00000, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(18856, -8986.69043, -115.38190, 188.73689,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(13648, -9006.98047, -79.37630, 184.93961,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(13648, -9007.65234, -79.37634, 184.93961,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(13648, -9008.32813, -79.37630, 184.93961,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18827, -9077.10645, 14.38410, 195.02840,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8040, -9076.77539, 104.28520, 190.98720,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18856, -8946.85254, -62.49463, 169.44180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18856, -8946.34082, -103.12890, 174.40581,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6052, -9015.48730, -52.52710, 189.55960,   0.00000, 0.00000, 192.00000, -1, -1, -1, 500);
	CreateDynamicObject(13648, -9045.52148, -45.89380, 190.15840,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(13648, -9045.52148, -45.21190, 190.15840,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18783, -9077.16699, -45.57330, 187.68401,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8945.34863, -64.99490, 170.49680,   -2.84000, 0.00000, 0.00000, -1, -1, -1, 500);
//End Мото-паркур 3
//Start Мото-паркур 4
	ObjGam[38] = CreateObject(18783, -8955.26074, -3241.27246, 10.22000,   0.00000, 0.00000, 0.00000);

//	CreateDynamicObject(18783, -8955.26074, -3241.27246, 10.22000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18786, -8955.26953, -3223.05005, 14.96001,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18783, -8955.25977, -3203.84009, 14.96000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8955.25586, -3195.27173, 17.05000,   -8.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8955.27539, -3134.51343, 29.96000,   16.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8955.22949, -3103.72363, 26.50540,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18856, -8955.15234, -3070.30688, 28.90170,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8040, -8926.79297, -3042.21436, 31.17050,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8945.29297, -3234.98804, 14.66490,   -58.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8945.29297, -3239.62207, 14.66490,   -58.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8945.29297, -3244.24707, 14.66490,   -58.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8945.29297, -3248.85571, 14.66490,   -58.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8947.99707, -3251.29443, 14.66490,   -58.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8952.85840, -3251.29443, 14.66490,   -58.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8957.66992, -3251.29443, 14.66490,   -58.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8962.55078, -3251.29443, 14.66490,   -58.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8965.24121, -3234.98022, 14.66490,   -58.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8965.24121, -3239.60376, 14.66490,   -58.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8965.24121, -3244.20947, 14.66490,   -58.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8965.24121, -3248.81128, 14.66490,   -58.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8955.21875, -3103.66357, 26.50540,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8912.45508, -3005.73511, 30.34730,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8915.61133, -3008.89404, 30.34730,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(18783, -8931.62109, -2988.89648, 29.45290,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(6052, -8939.59277, -2971.42407, 34.40300,   0.00000, 0.00000, 192.00000, -1, -1, -1, 500);
	CreateDynamicObject(6052, -8961.00195, -2957.48242, 34.40190,   0.00000, 0.00000, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6052, -8976.56836, -2942.09839, 34.40300,   0.00000, 0.00000, 192.00000, -1, -1, -1, 500);
	CreateDynamicObject(6052, -8997.97754, -2928.14429, 34.40190,   0.00000, 0.00000, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(6052, -9013.53418, -2912.69580, 34.40300,   0.00000, 0.00000, 192.00000, -1, -1, -1, 500);
	CreateDynamicObject(6052, -9050.50098, -2883.34180, 34.40300,   0.00000, 0.00000, 192.00000, -1, -1, -1, 500);
	CreateDynamicObject(6052, -9034.93945, -2898.75513, 34.40190,   0.00000, 0.00000, 12.00000, -1, -1, -1, 500);
	CreateDynamicObject(18856, -9063.66113, -2876.37891, 35.66630,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -9069.63867, -2909.73853, 33.27950,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(18856, -9068.65039, -2876.38354, 35.66630,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -9069.64551, -2909.82910, 33.27950,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -9069.65234, -2940.74414, 36.72890,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -9069.66504, -2971.65747, 40.18180,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -9069.66992, -3002.57153, 43.63930,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18783, -9069.69727, -3043.42139, 45.03260,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -9028.82324, -3043.41138, 43.63930,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -9028.74609, -3043.42749, 43.63930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8967.00195, -3043.41821, 43.63930,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8966.91504, -3043.43701, 43.63930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8905.18945, -3043.42358, 43.63930,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8905.08398, -3043.43311, 43.63930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8843.34082, -3043.42261, 43.63930,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18367, -8843.25098, -3043.42944, 43.63930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8810.08496, -3043.43115, 48.74190,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8040, -8817.25488, -2830.58643, 48.30090,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(18783, -8782.20996, -3043.43115, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8748.22266, -2995.31494, 48.73680,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(18783, -8748.23730, -2964.42700, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8793.45313, -2933.32324, 48.73680,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18783, -8827.85938, -2933.33545, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8858.99512, -2933.33911, 48.73680,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18783, -8895.96680, -2933.33545, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8912.94629, -2885.17554, 48.73680,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(18783, -8912.94727, -2847.63086, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(1697, -8881.76953, -2830.57837, 48.73680,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8748.31152, -3043.40479, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8748.22852, -3026.43652, 45.03830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8748.21777, -3009.45972, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8762.36328, -2933.32080, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8779.35742, -2933.31641, 45.03830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8912.92383, -2916.33276, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8912.95508, -2899.34204, 45.03830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8895.90332, -2830.59839, 45.04830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8765.24121, -3043.38232, 45.03830,   180.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8748.23730, -2947.47388, 45.03830,   180.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8844.81738, -2933.33472, 45.03830,   180.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8912.91211, -2933.33081, 45.03830,   180.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(18857, -8912.91504, -2830.66748, 45.03830,   180.00000, 0.00000, 45.00000, -1, -1, -1, 500);
//End Мото-паркур 4
#if (MOD11INS == 4)
//Start Стант-остров
	new TempObjectNumber;
	ObjGam[39] = CreateObject(19538, -132.50000, -5816.25000, 9.30770,   0.00000, 0.00000, 0.00000);

	CreateDynamicObject(19672, 331.91660, -5803.41602, 90.95990,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19532, 77.50000, -5630.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19542, 335.00000, -5630.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19540, 335.00000, -5442.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19532, 7.50000, -5700.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19535, 77.50000, -5777.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19532, 7.50000, -5560.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19532, -62.50000, -5630.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, 335.00000, -5536.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19533, 77.50000, -5521.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19533, 77.50000, -5738.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19542, 7.50000, -5365.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19533, -62.50000, -5521.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19531, -132.50000, -5630.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19538, -132.50000, -5521.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19532, -132.50000, -5700.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19534, -62.50000, -5700.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19534, -62.50000, -5560.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19541, -62.49980, -5365.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19541, 84.99970, -5372.50000, 9.30780,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19538, -132.50000, -5738.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19532, -132.50000, -5560.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19533, -62.50000, -5738.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19532, 7.50000, -5777.50000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19532, -132.50000, -5777.50000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
//	CreateDynamicObject(19538, -132.50000, -5816.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19542, -55.00000, -5972.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19545, -62.50000, -5816.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19543, -202.50000, -5816.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19533, -202.50000, -5738.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19541, 15.00010, -5847.50000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19541, 77.50000, -5365.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19541, -62.50000, -6035.00000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19542, -132.50000, -6035.00000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19541, -202.50000, -6035.00000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, -210.00000, -5816.25000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19541, -210.00000, -5777.50000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, -210.00000, -5738.75000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19541, -210.00000, -5700.00000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19532, -202.50000, -5630.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19533, -202.50000, -5521.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19542, -210.00000, -5630.00000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19541, -210.00000, -5560.00000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, -210.00000, -5521.25000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19541, -202.49980, -5490.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19540, 335.00000, -5942.50000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19546, 85.00000, -5847.50000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19547, -132.50000, -5910.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19546, -54.99990, -5847.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19543, -62.50000, -5878.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19543, -62.50000, -5941.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19536, -132.50000, -6003.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19543, -62.50000, -6003.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19540, -55.00000, -6035.00000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19542, -210.00000, -5910.00000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19543, -202.50000, -5878.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19543, -202.50000, -5941.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19543, -202.50000, -6003.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, -210.00000, -6003.75000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19546, 84.99990, -5442.50000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19532, 77.50000, -5427.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, 178.75000, -5442.50000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19540, 85.00000, -5365.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19540, -69.99980, -5365.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19546, -69.99980, -5490.00000, 9.30800,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19532, -62.49990, -5427.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, -163.74980, -5490.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, -69.99980, -5396.25000, 9.30770,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, 335.00000, -5473.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19529, 7.50000, -5630.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, 241.25000, -5442.50000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, 303.75000, -5442.50000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, 241.25000, -5942.50000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19539, 303.75000, -5942.50000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19535, -62.50000, -5777.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19535, -202.50000, -5777.50000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19535, -202.50000, -5700.00000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19535, -202.50000, -5560.00000, 9.30770,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19535, 77.50000, -5560.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 149.40990, -5777.50000, -35.29880,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19646, 300.08560, -5938.41602, 88.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19642, 124.18130, -5777.50000, 13.85210,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19647, 134.18130, -5777.50000, 13.85200,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19650, 96.91460, -5777.50000, 11.17170,   0.00000, -10.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19643, 114.18130, -5777.50000, 13.85210,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19659, -15.66020, -5517.92188, 34.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);

	TempObjectNumber = 	CreateDynamicObject(19665, 311.18570, -5668.97119, 91.77890,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19667, 305.63571, -5773.41602, 100.31240,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	CreateDynamicObject(19664, 70.00580, -5533.83789, 36.60380,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19663, 331.91660, -5818.41602, 86.23140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19661, 326.66711, -5782.75000, 88.48140,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19662, 337.76730, -5528.58789, 92.14120,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);

	TempObjectNumber = 	CreateDynamicObject(19651, 284.17010, -5923.41602, 78.48140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19652, 266.00110, -5793.41602, 58.48140,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	CreateDynamicObject(19660, 316.00110, -5954.08203, 88.48140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 188.55090, -5777.50000, 30.73000,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 203.53180, -5777.50000, 31.33250,   0.00000, 20.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19674, 200.63260, -5701.70898, 22.24810,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19676, 140.83389, -5701.70898, 17.00600,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19673, 231.61951, -5777.50000, 41.56680,   0.00000, 15.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19675, 144.53529, -5777.50000, 14.28900,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19678, 120.00570, -5502.00684, 56.55400,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19675, 154.94521, -5777.50000, 15.63830,   0.00000, 5.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19675, 165.19780, -5777.50000, 17.88970,   0.00000, 10.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19675, 175.21519, -5777.50000, 21.02620,   0.00000, 15.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 255.93390, -5777.50000, -2.41720,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19673, 241.17390, -5777.50000, 44.57920,   0.00000, 10.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19673, 250.95450, -5777.50000, 46.74740,   0.00000, 5.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19673, 260.88669, -5777.50000, 48.05490,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);

	TempObjectNumber = 	CreateDynamicObject(19652, 266.00110, -5793.41602, 78.48140,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	CreateDynamicObject(19649, 291.00110, -5777.50000, 88.48140,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 291.00110, -5777.50000, 38.45670,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19684, 314.63690, -5502.00684, 131.32430,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19682, 213.19569, -5482.25879, 34.35380,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(19681, 157.18700, -5531.41504, 34.35380,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19686, 260.63959, -5460.05615, 75.32980,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19685, 181.54930, -5502.00684, 63.82290,   0.00000, -30.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19663, 331.91660, -5868.41602, 86.23140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 331.91669, -5843.41602, 38.45670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19663, 331.91660, -5918.41602, 86.23140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19646, 300.08560, -5928.41602, 88.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 331.91660, -5893.41602, 38.45670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 300.08560, -5898.41602, 68.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 300.08560, -5848.41602, 68.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 300.08560, -5798.41602, 68.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 300.08551, -5843.41602, 18.45670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 300.08560, -5893.41602, 18.45670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 311.18570, -5748.41602, 68.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 311.18570, -5698.41602, 68.48140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 311.18570, -5733.41602, 18.45670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 311.18579, -5683.41602, 18.45670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 311.18570, -5624.75293, 92.14130,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19663, 311.18579, -5574.75293, 89.89120,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 311.18570, -5639.75293, 42.11660,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19661, 316.43530, -5539.08691, 92.14120,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 311.18570, -5574.75293, 37.61650,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);

	TempObjectNumber = 	CreateDynamicObject(19652, 358.93231, -5517.92188, 102.14120,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19652, 358.93231, -5517.92188, 122.14130,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19667, 95.00570, -5470.17822, 51.00540,   -90.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	CreateDynamicObject(19662, 337.76721, -5507.25684, 132.14120,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19684, 290.55759, -5502.00684, 124.87230,   0.00000, 15.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 257.70410, -5502.00684, 106.84760,   0.00000, -30.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 214.40280, -5502.00684, 81.84760,   0.00000, -30.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19685, 157.47009, -5502.00684, 57.37090,   0.00000, -15.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 149.85950, -5502.00684, 6.65640,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 343.01682, -5517.92188, 42.11650,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);

	TempObjectNumber = 	CreateDynamicObject(19667, 95.00570, -5470.17822, 39.90530,   -90.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19668, 124.65040, -5802.41016, 89.06440,   0.00000, 15.00000, -90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19666, 159.46140, -5786.53418, 113.99140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	CreateDynamicObject(19680, 70.00580, -5502.00684, 34.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 25.00580, -5502.00684, -15.67090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 20.00580, -5502.00684, 34.35390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19659, -15.66020, -5517.92188, 39.85380,   180.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 20.00580, -5533.83789, 34.35380,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 120.00580, -5533.83789, 34.35380,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 25.00580, -5533.83789, -15.67090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19664, 241.29240, -5520.75195, 36.60380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 185.19141, -5506.83691, 34.35380,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(19661, 236.04289, -5485.08594, 34.35380,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 125.00580, -5533.83789, -15.67090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19648, 241.29240, -5600.75195, 34.35380,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19644, 110.47990, -5701.70898, 16.56910,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 241.29240, -5520.75195, -11.17090,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19647, 241.29240, -5630.75195, 34.35390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19664, 241.29240, -5710.75195, 36.60380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 241.29240, -5710.75195, -11.17090,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19663, 241.29240, -5780.75195, 32.10380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19646, 241.29240, -5740.75195, 34.35380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19646, 241.29240, -5750.75195, 34.35380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19664, 241.29240, -5830.75195, 36.60380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 241.29240, -5830.75195, -11.17090,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19663, 241.29240, -5880.75195, 32.10380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19661, 236.04289, -5916.41797, 34.35380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19661, 235.96410, -5916.45508, 39.85380,   -180.00000, 0.00000, 179.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 200.37700, -5921.66699, 34.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);

	TempObjectNumber = 	CreateDynamicObject(19652, 175.37700, -5905.75195, 44.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19652, 175.37700, -5905.75195, 64.35381,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19652, 175.37691, -5905.75195, 84.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19652, 175.37700, -5905.75195, 49.85380,   180.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19652, 175.37691, -5905.75195, 104.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	CreateDynamicObject(19670, 185.37700, -5921.66699, -15.67090,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19661, 164.71100, -5916.41797, 114.35380,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 159.46140, -5880.75195, 114.35380,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 159.46140, -5830.75195, 114.35380,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 159.46140, -5835.75195, 64.32910,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);

	TempObjectNumber = 	CreateDynamicObject(19666, 159.46140, -5712.87207, 90.33160,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19666, 159.46140, -5639.20996, 66.67170,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	CreateDynamicObject(19670, 119.10040, -5814.20215, 3.02330,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);

	TempObjectNumber = 	CreateDynamicObject(19649, 159.46140, -5757.08984, 90.69400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	CreateDynamicObject(19684, 159.46140, -5532.51514, 86.69250,   0.00000, -30.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 159.46140, -5565.36816, 68.66780,   0.00000, 30.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19684, 159.46140, -5508.43604, 93.14450,   0.00000, -15.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19661, 164.71091, -5465.30615, 93.96140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 159.46140, -5485.97119, 43.93670,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19661, 283.76990, -5465.30615, 74.51280,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19684, 187.84120, -5460.05615, 93.14450,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 224.24040, -5460.05615, 84.23710,   0.00000, -15.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 273.10400, -5460.05615, 24.48810,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19646, 289.01941, -5480.97119, 74.51280,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19661, 283.76990, -5465.30615, 80.01280,   180.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19682, 286.59650, -5498.15186, 74.51280,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19681, 237.44090, -5554.16211, 74.51290,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 262.01871, -5526.15723, 74.51290,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 235.01801, -5591.34180, 74.51290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 235.01801, -5641.34180, 74.51290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19682, 232.59500, -5678.52393, 74.51290,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 130.20050, -5770.02295, 64.78850,   0.00000, -15.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19682, 208.29710, -5702.82080, 74.51290,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 171.11591, -5705.24512, 74.51290,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19646, 222.15939, -5692.38623, 74.51290,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19662, 135.45000, -5710.49414, 74.51290,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19684, 130.20039, -5733.62500, 73.69590,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 258.48318, -5529.69189, 24.48810,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19686, 108.00040, -5854.71924, 42.94020,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);

	TempObjectNumber = 	CreateDynamicObject(19649, 119.10040, -5818.31982, 51.84760,   0.00000, -15.00000, 90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19668, 113.55040, -5850.70703, 76.12350,   0.00000, 15.00000, -90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	CreateDynamicObject(19663, 108.00040, -5942.18408, 39.87330,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 130.20039, -5726.30176, 24.35350,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 108.00030, -5867.18311, -7.90140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 216.71550, -5777.50000, 40.95920,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 275.35599, -5780.54004, 55.15790,   0.00000, 0.00000, -36.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 281.13760, -5798.33301, 59.06880,   0.00000, 0.00000, 72.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 266.00110, -5809.33105, 63.02680,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 250.86450, -5798.33301, 66.82540,   0.00000, 0.00000, -72.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 256.64621, -5780.54004, 70.97310,   0.00000, 0.00000, -144.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 256.64621, -5780.54004, 90.76340,   0.00000, 0.00000, -144.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 275.35599, -5780.54004, 74.94820,   0.00000, 0.00000, -36.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 281.13760, -5798.33301, 78.85910,   0.00000, 0.00000, 72.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 266.00110, -5809.33105, 82.81710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 250.86450, -5798.33301, 86.61570,   0.00000, 0.00000, -72.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 276.00110, -5777.50000, 93.06730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 305.97531, -5777.50000, 93.06730,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 327.30688, -5782.10889, 92.95160,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19550, 7.50000, -5490.00000, 9.30770,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 331.91660, -5833.42285, 90.95990,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 331.91660, -5883.41602, 90.95990,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 331.91660, -5853.40820, 90.95990,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 331.91660, -5933.40820, 90.95990,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 331.91660, -5903.39990, 90.95990,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 327.30701, -5954.72217, 93.23360,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 304.69531, -5954.72119, 93.17570,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 297.04611, -5914.06104, 91.12500,   0.00000, 0.00000, 126.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 279.25201, -5908.27881, 87.07710,   0.00000, 0.00000, 16.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 268.25461, -5923.41602, 83.22850,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 279.25201, -5938.55176, 78.99120,   0.00000, 0.00000, -20.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 297.04599, -5932.77100, 75.21060,   0.00000, 0.00000, 54.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 300.08560, -5913.41602, 73.09760,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 300.08560, -5883.45215, 73.09760,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 300.00009, -5863.44922, 73.33250,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 300.00009, -5833.44092, 73.33250,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 300.00009, -5813.47021, 73.33250,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 300.00009, -5783.46484, 73.33250,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 311.18570, -5763.41602, 73.14640,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 311.18570, -5733.41113, 73.14640,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 311.18570, -5713.43506, 73.14640,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 311.18570, -5683.42822, 73.14640,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 311.18570, -5668.11377, 96.87540,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 311.18570, -5639.75781, 96.87540,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 311.18570, -5609.76709, 96.87540,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 311.18579, -5589.75293, 94.84440,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 311.18579, -5559.75586, 94.84440,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 315.79550, -5538.44678, 96.75840,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19540, 85.00000, -5942.50000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19540, -210.00000, -6035.00000, 9.30770,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19540, -210.00000, -5490.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 338.40710, -5529.22900, 96.86830,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 346.05640, -5508.56689, 98.95060,   0.00000, 0.00000, 54.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 363.85040, -5502.78613, 102.86250,   0.00000, 0.00000, -18.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 374.84781, -5517.92188, 106.82880,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 363.85049, -5533.05908, 110.87370,   0.00000, 0.00000, 18.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 346.05640, -5527.27686, 114.83700,   0.00000, 0.00000, -54.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 346.05640, -5527.27686, 134.78600,   0.00000, 0.00000, -54.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 363.85049, -5533.05908, 130.82260,   0.00000, 0.00000, 18.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 374.84781, -5517.92188, 126.77770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 363.85040, -5502.78613, 122.81150,   0.00000, 0.00000, -18.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 346.05640, -5508.56689, 118.89960,   0.00000, 0.00000, 54.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 338.40710, -5506.61719, 136.74500,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 311.75879, -5502.00684, 135.62219,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 287.12320, -5502.00684, 128.30020,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 269.32010, -5502.00684, 118.62220,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 243.36270, -5502.00684, 103.62120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 226.02580, -5502.00684, 93.60120,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 200.05980, -5502.00684, 78.68390,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 178.25110, -5502.00684, 67.42860,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 154.63580, -5502.00684, 61.66470,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 35.00580, -5502.00684, 39.02870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 5.01280, -5502.00684, 39.02870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 5.01280, -5533.83789, 39.02870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 35.00580, -5533.83789, 39.02870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 55.02360, -5533.83789, 41.03650,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 85.04160, -5533.83789, 41.03650,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 105.00830, -5533.83789, 39.02870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 134.98000, -5533.83789, 39.02870,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.45670, -5530.36914, 39.07260,   0.00000, 0.00000, 27.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 174.58479, -5517.44385, 39.11700,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 195.79800, -5496.22998, 39.11700,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 215.54060, -5481.39502, 38.97440,   0.00000, 0.00000, 18.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 234.73180, -5482.87598, 39.08090,   0.00000, 0.00000, -36.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5505.75195, 41.00420,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5535.73193, 41.00420,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5695.72900, 41.00420,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5725.76807, 41.00420,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5765.72314, 37.07110,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5795.74902, 37.07110,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5815.75000, 41.01400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5845.76221, 41.01400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5865.76807, 37.03210,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5895.76123, 36.99840,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 215.37700, -5921.66699, 38.88700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 185.36800, -5921.66699, 38.88700,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);

	TempObjectNumber = 	CreateDynamicObject(19652, 175.37700, -5905.75195, 69.85380,   180.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = 	CreateDynamicObject(19652, 175.37691, -5905.75195, 89.85380,   180.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	CreateDynamicObject(19672, 159.46140, -5895.75195, 119.03350,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 164.07111, -5917.05811, 118.96170,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 184.73180, -5918.62793, 117.02620,   0.00000, 0.00000, 36.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 190.51350, -5900.83398, 112.85240,   0.00000, 0.00000, -72.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 175.37691, -5889.83594, 108.85800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 160.24040, -5900.83398, 105.09330,   0.00000, 0.00000, 72.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 166.02200, -5918.62793, 100.97050,   0.00000, 0.00000, -36.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46140, -5865.76221, 119.03350,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46140, -5845.77295, 119.03350,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46140, -5815.73291, 119.03350,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46140, -5787.40723, 119.03350,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46140, -5713.75488, 95.45350,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46140, -5640.06982, 71.79210,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46140, -5620.23291, 49.22650,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46150, -5772.07813, 95.42960,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46150, -5742.11621, 95.42960,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46130, -5579.74805, 65.49870,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46130, -5553.72900, 80.51530,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46130, -5531.15918, 92.13380,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46130, -5506.21924, 98.13080,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 190.66840, -5460.05615, 97.33690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 210.45410, -5460.05615, 92.64010,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 239.43449, -5460.05615, 84.88740,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 263.40930, -5460.05615, 79.76070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 285.55011, -5500.42188, 79.13130,   0.00000, 0.00000, 63.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 272.62531, -5515.54980, 79.17230,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 251.41209, -5536.76318, 79.12610,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 236.57590, -5556.50586, 79.11490,   0.00000, 0.00000, 72.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 235.01801, -5576.34180, 79.21450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 235.01801, -5606.45508, 79.21450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 235.01801, -5626.40820, 79.21450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 235.01801, -5656.30176, 79.21450,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 231.54860, -5680.79297, 79.12950,   0.00000, 0.00000, 63.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 205.95219, -5703.68701, 79.17540,   0.00000, 0.00000, 18.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 186.14090, -5705.18311, 79.17540,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 156.09720, -5705.18311, 79.17540,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 134.81010, -5709.85400, 79.20670,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 130.20050, -5736.53076, 77.97500,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 130.20050, -5756.21582, 73.13490,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 130.20050, -5785.23291, 65.43080,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 129.90050, -5803.97803, 61.96080,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 119.10040, -5804.57715, 60.34370,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 119.10040, -5833.51514, 52.59580,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 118.80040, -5852.20898, 49.03400,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 108.00040, -5857.49805, 47.23260,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 108.00040, -5927.16699, 44.84130,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 108.00040, -5957.18604, 44.78320,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 241.29240, -5570.75195, 34.35380,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 241.29250, -5660.75195, 34.35390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19642, 241.29240, -5610.75195, 34.35390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19642, 241.29240, -5620.75195, 34.35390,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 241.78481, -5657.39990, -17.01660,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 241.29240, -5575.75195, -15.67090,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5675.72998, 39.04740,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5645.73486, 39.04740,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5585.78418, 39.04740,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 241.29240, -5555.73291, 39.04740,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);

	TempObjectNumber = 	CreateDynamicObject(19649, 159.46140, -5683.42822, 67.03400,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	CreateDynamicObject(19672, 159.46150, -5698.41602, 71.76970,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 159.46150, -5668.45410, 71.76970,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19685, 159.46140, -5622.30078, 44.19110,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19685, 159.46140, -5598.22217, 50.64310,   0.00000, 15.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19646, 159.46140, -5490.97119, 93.96140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19646, 159.46140, -5480.97119, 93.96140,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 235.01801, -5666.34180, 24.48810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 235.01801, -5586.34180, 24.48810,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 159.46140, -5752.08984, 40.66920,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 159.46140, -5678.42822, 17.00930,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 159.46140, -5629.91211, -6.52340,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19661, 164.71100, -5465.30615, 99.46140,   -180.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 316.00110, -5959.33105, 38.45670,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19550, 272.49979, -5630.00000, 9.30800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19550, 147.49969, -5630.00000, 9.30800,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19550, 272.49979, -5755.00000, 9.30800,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19550, 272.49979, -5880.00000, 9.30800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19549, 85.00020, -5926.25000, 9.30770,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19542, 334.99969, -5755.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19542, 334.99969, -5880.00000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19550, 147.49969, -5755.00000, 9.30800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19550, 147.49969, -5880.00000, 9.30800,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, 159.22960, -5835.84619, 13.06310,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 172.38280, -5669.00391, 9.11850,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 210.95940, -5567.90186, 9.11850,   0.00000, 0.00000, -81.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 216.57980, -5827.78223, 9.11850,   0.00000, 0.00000, -55.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 169.03729, -5955.95605, 9.11850,   0.00000, 0.00000, 21.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 348.54691, -5946.59277, 9.11850,   0.00000, 0.00000, 71.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, 159.77940, -5630.18799, 13.06310,   0.00000, 0.00000, 40.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, 311.51559, -5575.16211, 13.06310,   0.00000, 0.00000, 78.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, 298.85901, -5893.44189, 13.06310,   0.00000, 0.00000, 126.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, 24.26740, -5535.28906, 13.06310,   0.00000, 0.00000, 169.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, 159.52000, -5486.21094, 13.06310,   0.00000, 0.00000, -140.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, 290.41501, -5777.24414, 13.06310,   0.00000, 0.00000, -175.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, 240.06940, -5521.47900, 13.06310,   0.00000, 0.00000, 122.00000, -1, -1, -1, 500);
	CreateDynamicObject(762, 107.52170, -5906.12207, 14.06310,   0.00000, 0.00000, 50.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 60.24900, -5518.00684, 9.11850,   0.00000, 0.00000, 36.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 313.22198, -5520.63721, 9.11850,   0.00000, 0.00000, 82.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 267.05841, -5698.13818, 9.11850,   0.00000, 0.00000, 27.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 263.62671, -5919.11084, 9.11850,   0.00000, 0.00000, -52.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 318.71021, -5812.64990, 9.11850,   0.00000, 0.00000, 42.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 131.99519, -5559.49121, 9.11850,   0.00000, 0.00000, 121.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 87.80050, -5761.86523, 9.12660,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 87.80050, -5792.94189, 9.12660,   0.00000, 0.00000, 62.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 108.00040, -5892.18311, 42.12330,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19684, 139.83141, -5954.71924, 41.30630,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 139.83150, -5918.31982, 32.39890,   0.00000, -15.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19686, 139.83150, -5881.92090, 23.49160,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19661, 145.08099, -5748.79102, 22.67460,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 139.83150, -5844.45605, 22.67460,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 139.83150, -5794.45605, 22.67460,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19646, 139.83150, -5764.45605, 22.67460,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 180.74690, -5743.54102, 22.67460,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19662, 216.41290, -5738.29199, 22.67460,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19662, 216.41290, -5706.95898, 22.67460,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19646, 221.66240, -5722.62500, 22.67460,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19649, 170.85310, -5701.70898, 19.63230,   0.00000, -5.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19648, 130.47990, -5701.70898, 16.56910,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(19642, 120.48000, -5701.70898, 16.56910,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19650, 93.74240, -5701.70898, 11.99950,   0.00000, -19.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19534, 77.50000, -5700.00000, 9.30770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 87.80050, -5686.41309, 9.12660,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(3509, 87.80050, -5717.49023, 9.12660,   0.00000, 0.00000, 62.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 108.00040, -5877.18311, 46.82300,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 108.00040, -5907.18408, 46.82300,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 112.61000, -5978.48877, 46.81510,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 135.22160, -5978.48877, 46.81510,   0.00000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 139.83141, -5955.01709, 45.96820,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 139.83141, -5932.09521, 40.90770,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 139.83141, -5903.13818, 33.19140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 139.83141, -5882.17090, 28.25630,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 139.83141, -5859.45605, 27.42070,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 139.83141, -5829.42383, 27.42070,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 139.83141, -5809.45605, 27.42070,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 139.83141, -5779.45605, 27.42070,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 144.44110, -5748.14990, 27.42070,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 165.74690, -5743.54102, 27.42070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 195.74181, -5743.54102, 27.42070,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 217.05270, -5738.93115, 27.42070,   0.00000, 0.00000, 45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 217.05280, -5706.31982, 27.42070,   0.00000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 185.55850, -5701.70898, 25.48520,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19672, 155.65120, -5701.70898, 22.98670,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 108.00040, -5942.18408, -12.40140,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 139.83141, -5967.18408, -7.90150,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 139.83150, -5869.45605, -27.35010,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 139.83150, -5789.45605, -27.35010,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 185.74690, -5743.54102, -27.35010,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19670, 175.59441, -5701.70898, -29.96710,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19659, 123.91580, -5977.85010, 42.12330,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19542, 147.49969, -5942.50000, 9.30800,   0.00000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(19543, 77.50020, -5816.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19536, 7.50000, -5738.75000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19536, 7.50000, -5396.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19550, 147.49969, -5505.00000, 9.30800,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(19550, 272.49979, -5505.00000, 9.30800,   0.00000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(621, 236.09520, -5457.12695, 9.11850,   0.00000, 0.00000, 125.00000, -1, -1, -1, 500);
	CreateDynamicObject(19536, 7.50000, -5816.25000, 9.30770,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -123.54380, -5900.85742, 21.13690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -123.83350, -5900.85400, 21.09690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -124.13470, -5900.85986, 21.05690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -124.41940, -5900.85693, 21.01690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -123.68690, -5900.66113, 21.05690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -123.98970, -5900.66406, 21.01690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -124.30170, -5900.66699, 20.97690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -123.84210, -5900.45850, 20.95690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -124.14460, -5900.46436, 20.93690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -123.99730, -5900.27832, 20.87690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -123.67910, -5901.06494, 21.17690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -123.97060, -5901.07666, 21.13690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -124.27180, -5901.06201, 21.09690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -123.82310, -5901.27637, 21.19690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -124.13500, -5901.28125, 21.13690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(3461, -123.98990, -5901.44531, 21.15690,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
//End Стант-остров
#endif
//Start DriftBonus
	ObjGam[14] = CreateObject(8171,483.6884765625,-2151.4326171875,2.8148956298828,0,0,0);

//	CreateDynamicObject(8171,483.6884765625,-2151.4326171875,2.8148956298828,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(8171,512.95678710938,-2151.2529296875,2.9104156494141,0,0,179.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,512.32067871094,-2195.841796875,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,512.35681152344,-2186.9963378906,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,512.37170410156,-2178.6071777344,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,512.30682373047,-2169.3388671875,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,512.26971435547,-2160.1174316406,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,512.24896240234,-2150.8884277344,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,512.22125244141,-2141.5266113281,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,512.21105957031,-2132.3674316406,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,512.22808837891,-2123.1442871094,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,512.25201416016,-2114.0061035156,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,497.16903686523,-2103.6845703125,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,497.158203125,-2112.9108886719,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,497.13027954102,-2121.7761230469,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,497.14614868164,-2130.2331542969,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,497.1354675293,-2138.837890625,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,497.10668945313,-2148.0249023438,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,497.09057617188,-2157.2893066406,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,497.12203979492,-2166.3862304688,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,497.12561035156,-2175.2424316406,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(978,497.14453125,-2184.0617675781,3.7144131660461,0,0,89.994506835938, -1, -1, -1, 500);
	CreateDynamicObject(18275,478.8525390625,-2105.58984375,5.1828842163086,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(18275,472.87713623047,-2105.5849609375,5.0572395324707,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(978,492.19381713867,-2080.9401855469,3.7749352455139,0,0,179.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,483.45608520508,-2081.0266113281,3.7749352455139,0,0,179.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,475.25775146484,-2081.0078125,3.7749352455139,0,0,179.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,469.27374267578,-2081.0180664063,3.7749352455139,0,0,179.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,464.52487182617,-2085.8151855469,3.7749352455139,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,464.546875,-2095.0688476563,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.544921875,-2104.1240234375,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.56292724609,-2112.6984863281,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.53720092773,-2121.8823242188,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.50305175781,-2130.8161621094,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.50378417969,-2139.7387695313,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.49649047852,-2148.9770507813,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.50750732422,-2158.2390136719,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.54278564453,-2167.2087402344,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.56860351563,-2175.8676757813,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.56253051758,-2184.8469238281,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.55999755859,-2193.6889648438,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.54895019531,-2202.0285644531,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,464.51718139648,-2211.4096679688,3.7749352455139,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,469.31369018555,-2218.5307617188,3.7749352455139,0,0,359.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,478.5146484375,-2218.525390625,3.7749352455139,0,0,359.97802734375, -1, -1, -1, 500);
	CreateDynamicObject(978,487.56405639648,-2218.5163574219,3.7749352455139,0,0,359.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,496.72122192383,-2218.439453125,3.7749352455139,0,0,359.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,505.79205322266,-2218.3713378906,3.7144131660461,0,0,359.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,502.49505615234,-2080.8469238281,3.7749352455139,0,0,359.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,511.60046386719,-2081.1489257813,3.7144131660461,0,0,359.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,520.39343261719,-2081.1330566406,3.7144131660461,0,0,359.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,528.03729248047,-2081.0268554688,3.7144131660461,0,0,359.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,532.34912109375,-2085.7883300781,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.36364746094,-2094.9614257813,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.3408203125,-2103.810546875,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.28125,-2112.7915039063,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.32879638672,-2122.1491699219,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.30206298828,-2130.7177734375,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.33703613281,-2139.2570800781,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.2900390625,-2148.0227050781,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.1923828125,-2156.70703125,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.19458007813,-2165.4089355469,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.13824462891,-2173.6579589844,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.19744873047,-2182.4248046875,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.25756835938,-2191.4279785156,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.28955078125,-2199.1625976563,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.26715087891,-2209.0344238281,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,532.24310302734,-2214.2846679688,3.7144131660461,0,0,89.983520507813, -1, -1, -1, 500);
	CreateDynamicObject(978,516.86328125,-2218.8823242188,3.7144131660461,0,0,359.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,526.73565673828,-2219.0498046875,3.7144131660461,0,0,359.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(1262,475.91543579102,-2105.0778808594,5.3321013450623,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(1262,481.94580078125,-2105.0827636719,5.2319641113281,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(1262,469.91806030273,-2105.0776367188,5.1468505859375,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(967,465.61154174805,-2105.8684082031,2.8148956298828,0,0,268, -1, -1, -1, 500);
	CreateDynamicObject(967,467.1171875,-2105.900390625,2.8148956298828,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(967,468.6061706543,-2105.9035644531,2.8148956298828,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,482.27200317383,-2109.8154296875,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.30184936523,-2118.7165527344,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.28356933594,-2127.8247070313,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.26528930664,-2136.8278808594,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.30227661133,-2145.9448242188,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.32015991211,-2154.8352050781,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.31713867188,-2163.9196777344,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.26699829102,-2173.0283203125,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.29180908203,-2181.9006347656,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.29086303711,-2190.9392089844,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.3005065918,-2199.8020019531,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,496.9228515625,-2193.3662109375,3.7144131660461,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,496.94189453125,-2202.5109863281,3.7144131660461,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,496.93182373047,-2211.6918945313,3.7144131660461,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,512.10919189453,-2105.5959472656,3.7144131660461,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,512.05841064453,-2097.0129394531,3.7144131660461,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,512.09814453125,-2087.9252929688,3.7144131660461,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.28131103516,-2100.5861816406,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.26931762695,-2091.5634765625,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,482.39349365234,-2086.1596679688,3.6551156044006,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(18275,521.81579589844,-2104.5078125,5.1223621368408,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(967,517.61737060547,-2104.7810058594,2.8741931915283,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(967,516.15130615234,-2104.7834472656,2.8741931915283,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(967,514.68872070313,-2104.7729492188,2.8741936683655,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(967,513.21282958984,-2104.806640625,2.8741931915283,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(967,526.09747314453,-2104.1928710938,2.8741931915283,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(967,528.99542236328,-2104.220703125,2.8741931915283,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(967,530.4384765625,-2104.2397460938,2.8741931915283,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(967,531.95385742188,-2104.1791992188,2.8741931915283,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(967,527.54077148438,-2104.2036132813,2.8741936683655,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(1503,513.91760253906,-2083.880859375,2.8741931915283,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(1503,516.57708740234,-2083.9262695313,2.8741931915283,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(1503,519.31408691406,-2084.0173339844,2.8741931915283,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(1503,521.99499511719,-2084.0847167969,2.8741931915283,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(1503,524.72631835938,-2084.1489257813,2.8741931915283,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(1503,527.45495605469,-2084.1984863281,2.8741931915283,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(1503,530.08990478516,-2084.1650390625,2.8741931915283,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(2780,515.36614990234,-2082.4582519531,3.3429431915283,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(2780,528.78570556641,-2082.8081054688,3.3429431915283,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(2780,521.87982177734,-2082.3479003906,4.2067928314209,0,0,182, -1, -1, -1, 500);
	CreateDynamicObject(2780,523.37176513672,-2082.5324707031,3.3429431915283,0,0,181.99951171875, -1, -1, -1, 500);
//End DriftBonus
//Start Airaport LV
	CreateDynamicObject(978,1457.3966064453,1455.4138183594,10.660532951355,0,0,269.99996948242, -1, -1, -1, 500);
	CreateDynamicObject(978,1457.3081054688,1464.3446044922,10.660532951355,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1457.2944335938,1472.1185302734,10.660532951355,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1457.3001708984,1480.4384765625,10.660532951355,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1457.4361572266,1446.6273193359,10.660532951355,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1457.5330810547,1681.7895507813,10.652720451355,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1456.8570556641,1690.6782226563,10.660532951355,0,0,277.99444580078, -1, -1, -1, 500);
	CreateDynamicObject(978,1454.3564453125,1699.1774902344,10.660532951355,0,0,295.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1448.8430175781,1706.0643310547,10.660532951355,0,0,321.9921875, -1, -1, -1, 500);
	CreateDynamicObject(978,1440.7315673828,1710.6318359375,10.660532951355,0,0,339.9873046875, -1, -1, -1, 500);
	CreateDynamicObject(978,1431.9609375,1711.3801269531,10.660532951355,0,0,9.98291015625, -1, -1, -1, 500);
	CreateDynamicObject(978,1422.9490966797,1708.5538330078,10.660532951355,0,0,25.981079101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1416.0396728516,1703.4946289063,10.660532951355,0,0,45.977172851563, -1, -1, -1, 500);
	CreateDynamicObject(978,1411.6584472656,1696.1077880859,10.660532951355,0,0,69.972290039063, -1, -1, -1, 500);
	CreateDynamicObject(978,1409.9261474609,1687.2279052734,10.660532951355,0,0,87.971923828125, -1, -1, -1, 500);
	CreateDynamicObject(978,1453.3330078125,1748.3840332031,10.660532951355,0,0,341.99365234375, -1, -1, -1, 500);
	CreateDynamicObject(978,1444.9011230469,1750.9750976563,10.660532951355,0,0,345.99340820313, -1, -1, -1, 500);
	CreateDynamicObject(978,1435.6019287109,1752.6141357422,10.660532951355,0,0,355.99243164063, -1, -1, -1, 500);
	CreateDynamicObject(978,1426.3330078125,1752.3072509766,10.660532951355,0,0,7.989990234375, -1, -1, -1, 500);
	CreateDynamicObject(978,1417.2807617188,1750.2694091797,10.660532951355,0,0,15.987060546875, -1, -1, -1, 500);
	CreateDynamicObject(978,1408.9239501953,1747.4918212891,10.660532951355,0,0,19.987060546875, -1, -1, -1, 500);
	CreateDynamicObject(978,1400.8752441406,1743.6219482422,10.660532951355,0,0,31.984130859375, -1, -1, -1, 500);
	CreateDynamicObject(978,1393.1130371094,1738.5480957031,10.660532951355,0,0,33.981201171875, -1, -1, -1, 500);
	CreateDynamicObject(978,1386.5877685547,1733.0457763672,10.660532951355,0,0,43.980712890625, -1, -1, -1, 500);
	CreateDynamicObject(978,1380.6085205078,1726.3121337891,10.660532951355,0,0,53.978271484375, -1, -1, -1, 500);
	CreateDynamicObject(978,1376.0120849609,1718.8192138672,10.660532951355,0,0,63.975830078125, -1, -1, -1, 500);
	CreateDynamicObject(978,1372.5446777344,1710.3712158203,10.660532951355,0,0,71.973388671875, -1, -1, -1, 500);
	CreateDynamicObject(978,1370.4685058594,1702.1529541016,10.660532951355,0,0,79.971435546875, -1, -1, -1, 500);
	CreateDynamicObject(978,1408.8773193359,1446.9776611328,10.660532951355,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1408.9158935547,1456.1547851563,10.660532951355,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1408.9578857422,1465.3592529297,10.660532951355,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1408.9436035156,1474.5288085938,10.660532951355,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1408.9169921875,1483.7149658203,10.660532951355,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1369.5621337891,1303.6478271484,10.660532951355,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1369.8577880859,1294.4078369141,10.653180122375,0,0,273.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(978,1370.8739013672,1288.2027587891,10.660532951355,0,0,289.98962402344, -1, -1, -1, 500);
	CreateDynamicObject(978,1373.4342041016,1280.9488525391,10.660532951355,0,0,289.98962402344, -1, -1, -1, 500);
	CreateDynamicObject(978,1377.4775390625,1272.6853027344,10.660532951355,0,0,301.98962402344, -1, -1, -1, 500);
	CreateDynamicObject(978,1385.6025390625,1261.5052490234,10.660532951355,0,0,313.98669433594, -1, -1, -1, 500);
	CreateDynamicObject(978,1380.7705078125,1267.2685546875,10.660532951355,0,359.9990234375,305.98022460938, -1, -1, -1, 500);
	CreateDynamicObject(978,1391.4766845703,1255.4694824219,10.660532951355,0,0,313.98376464844, -1, -1, -1, 500);
	CreateDynamicObject(978,1397.4077148438,1250.8865966797,10.660532951355,0,0,331.98376464844, -1, -1, -1, 500);
	CreateDynamicObject(978,1405.6170654297,1246.4436035156,10.660532951355,0,0,331.97937011719, -1, -1, -1, 500);
	CreateDynamicObject(978,1411.4007568359,1244.1684570313,10.660532951355,0,0,341.97937011719, -1, -1, -1, 500);
	CreateDynamicObject(978,1420.291015625,1242.0277099609,10.660532951355,0,0,349.97692871094, -1, -1, -1, 500);
	CreateDynamicObject(978,1429.0780029297,1240.5327148438,10.660532951355,0,0,349.97497558594, -1, -1, -1, 500);
	CreateDynamicObject(978,1438.1379394531,1240.2811279297,10.660532951355,0,0,5.9749755859375, -1, -1, -1, 500);
	CreateDynamicObject(978,1445.0484619141,1240.9888916016,10.660532951355,0,0,5.9710693359375, -1, -1, -1, 500);
	CreateDynamicObject(978,1453.4548339844,1243.3621826172,10.660532951355,0,0,25.971069335938, -1, -1, -1, 500);
	CreateDynamicObject(978,1408.8109130859,1308.1472167969,10.660532951355,0,0,273.99353027344, -1, -1, -1, 500);
	CreateDynamicObject(978,1409.6987304688,1300.50390625,10.660532951355,0,0,277.99353027344, -1, -1, -1, 500);
	CreateDynamicObject(978,1412.5209960938,1292.1600341797,10.660532951355,0,0,297.99255371094, -1, -1, -1, 500);
	CreateDynamicObject(978,1418.2623291016,1286.1199951172,10.660532951355,0,0,325.98767089844, -1, -1, -1, 500);
	CreateDynamicObject(978,1426.0279541016,1281.8341064453,10.660532951355,0,0,335.986328125, -1, -1, -1, 500);
	CreateDynamicObject(978,1434.5788574219,1280.6569824219,10.660532951355,0,0,5.98388671875, -1, -1, -1, 500);
	CreateDynamicObject(978,1443.0849609375,1282.6619873047,10.660532951355,0,0,23.982055664063, -1, -1, -1, 500);
	CreateDynamicObject(978,1449.7712402344,1287.6857910156,10.660532951355,0,0,47.977661132813, -1, -1, -1, 500);
	CreateDynamicObject(978,1454.4173583984,1295.2808837891,10.660532951355,0,0,71.977294921875, -1, -1, -1, 500);
	CreateDynamicObject(18275,1464.9432373047,1222.7052001953,12.068481445313,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(18275,1489.9178466797,1222.7127685547,12.068481445313,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(979,1473.2150878906,1223.2188720703,10.660532951355,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(979,1481.732421875,1223.2587890625,10.660532951355,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(979,1472.9473876953,1222.7297363281,10.660532951355,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(979,1481.7377929688,1222.7700195313,10.660532951355,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(979,1457.3404541016,1240.5419921875,10.660532951355,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(979,1457.3056640625,1231.4409179688,10.660532951355,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(979,1458.8785400391,1226.0123291016,10.660532951355,0,0,303.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(979,1498.0992431641,1223.2984619141,10.64537525177,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(979,1507.4119873047,1223.2592773438,10.64537525177,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(979,1516.5610351563,1223.2351074219,10.64537525177,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(979,1525.3100585938,1223.3010253906,10.652720451355,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(979,1534.4678955078,1223.3690185547,10.652720451355,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(979,1539.2061767578,1223.4056396484,10.652720451355,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(2780,1477.4996337891,1224.3919677734,9.8281230926514,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(2780,1477.0330810547,1224.4797363281,9.8281230926514,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(2780,1473.3806152344,1224.6461181641,9.8203125,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(2780,1482.4484863281,1223.8342285156,9.8203125,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(1262,1461.8812255859,1222.2124023438,12.432552337646,0,0,174, -1, -1, -1, 500);
	CreateDynamicObject(1262,1492.8884277344,1222.2189941406,12.307109832764,0,0,173.99597167969, -1, -1, -1, 500);
	CreateDynamicObject(1262,1486.8502197266,1222.2191162109,12.245944023132,0,0,173.99597167969, -1, -1, -1, 500);
	CreateDynamicObject(1262,1467.8802490234,1222.2122802734,12.294589042664,0,0,173.99597167969, -1, -1, -1, 500);
//End Airaport LV
//Start DragNew
	CreateDynamicObject(18275,366.80700683594,-2012.7091064453,8.9200439453125,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(18275,372.81622314453,-2012.6921386719,8.9200439453125,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(18275,369.93725585938,-1671.8353271484,34.049488067627,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(983,363.7685546875,-1672.2802734375,32.493637084961,0,1.99951171875,270, -1, -1, -1, 500);
	CreateDynamicObject(983,376.54296875,-1671.283203125,32.519493103027,0,1.99951171875,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(983,376.5546875,-1672.2529296875,32.495964050293,0,1.99951171875,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(983,363.75775146484,-1671.4215087891,32.519493103027,0,1.99951171875,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(1262,369.74896240234,-2013.2019042969,9.2343168258667,0,0,182, -1, -1, -1, 500);
	CreateDynamicObject(1262,363.67953491211,-2013.2017822266,9.0701608657837,0,0,181.99951171875, -1, -1, -1, 500);
	CreateDynamicObject(1262,375.76617431641,-2013.1843261719,9.1551818847656,0,0,181.99951171875, -1, -1, -1, 500);
//End DragNew
//Start Airaport LS
	CreateDynamicObject(978,1308.7360839844,-2299.5310058594,13.383156776428,0,0,335.99645996094, -1, -1, -1, 500);
	CreateDynamicObject(978,1316.6313476563,-2303.6013183594,13.387095451355,0,0,325.99487304688, -1, -1, -1, 500);
	CreateDynamicObject(978,1322.5001220703,-2308.982421875,13.387095451355,0,0,311.99182128906, -1, -1, -1, 500);
	CreateDynamicObject(978,1301.2550048828,-2297.3911132813,13.340448379517,0,0,349.99487304688, -1, -1, -1, 500);
	CreateDynamicObject(978,1328.8966064453,-2316.0068359375,13.223032951355,0,0,311.98974609375, -1, -1, -1, 500);
	CreateDynamicObject(978,1335.1154785156,-2322.7668457031,13.223032951355,0,0,311.98974609375, -1, -1, -1, 500);
	CreateDynamicObject(978,1338.0510253906,-2330.1479492188,13.387095451355,0,0,269.98974609375, -1, -1, -1, 500);
	CreateDynamicObject(978,1338.0228271484,-2338.8151855469,13.387095451355,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1337.9057617188,-2347.4829101563,13.387095451355,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1337.8724365234,-2356.1696777344,13.387095451355,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1337.8062744141,-2363.3947753906,13.387095451355,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1337.7419433594,-2372.9089355469,13.387095451355,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1337.7738037109,-2382.1376953125,13.387095451355,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1337.6597900391,-2391.1782226563,13.387095451355,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1334.5556640625,-2399.3410644531,13.215220451355,0,0,225.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1329.2736816406,-2405.2470703125,13.222373008728,0,0,225.98876953125, -1, -1, -1, 500);
	CreateDynamicObject(978,1301.3775634766,-2316.5844726563,13.358298301697,0,0,349.99145507813, -1, -1, -1, 500);
	CreateDynamicObject(978,1308.3342285156,-2318.72265625,13.387095451355,0,0,335.99487304688, -1, -1, -1, 500);
	CreateDynamicObject(978,1315.0344238281,-2322.2819824219,13.387095451355,0,0,325.99182128906, -1, -1, -1, 500);
	CreateDynamicObject(978,1321.4080810547,-2327.5454101563,13.387095451355,0,0,311.98974609375, -1, -1, -1, 500);
	CreateDynamicObject(978,1324.7504882813,-2336.1081542969,13.387095451355,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1324.7797851563,-2345.0263671875,13.387095451355,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1324.8060302734,-2354.3129882813,13.387095451355,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1324.6419677734,-2363.6511230469,13.394289970398,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1322.7869873047,-2373.1003417969,13.387095451355,0,0,247.98908996582, -1, -1, -1, 500);
	CreateDynamicObject(978,1319.3259277344,-2381.5998535156,13.387095451355,0,0,247.98889160156, -1, -1, -1, 500);
	CreateDynamicObject(978,1316.1834716797,-2391.4245605469,13.376618385315,0,0,263.98889160156, -1, -1, -1, 500);
	CreateDynamicObject(978,1315.3260498047,-2400.583984375,13.379151344299,0,0,263.98498535156, -1, -1, -1, 500);
	CreateDynamicObject(978,1314.6845703125,-2411.1279296875,12.239426612854,0,10,267.98498535156, -1, -1, -1, 500);
	CreateDynamicObject(978,1314.7114257813,-2420.5454101563,10.713717460632,0,8,267.98400878906, -1, -1, -1, 500);
	CreateDynamicObject(978,1315.3735351563,-2429.9260253906,9.0258417129517,0,10,267.98400878906, -1, -1, -1, 500);
	CreateDynamicObject(978,1315.1872558594,-2440.1569824219,7.6683449745178,0,0,267.98400878906, -1, -1, -1, 500);
	CreateDynamicObject(978,1315.1060791016,-2448.578125,7.4964699745178,0,0,267.98400878906, -1, -1, -1, 500);
	CreateDynamicObject(978,1319.2901611328,-2454.224609375,7.4964699745178,0,0,179.98400878906, -1, -1, -1, 500);
	CreateDynamicObject(978,1327.9382324219,-2454.5725097656,7.6683449745178,0,0,179.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,1336.0819091797,-2454.5795898438,7.6741423606873,0,0,179.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,1345.0197753906,-2454.5412597656,7.6683449745178,0,0,179.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,1352.1473388672,-2454.6726074219,7.6683449745178,0,0,179.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,1360.4348144531,-2454.5068359375,7.4964699745178,0,0,179.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(978,1366.7459716797,-2454.7390136719,7.6741423606873,0,0,179.98352050781, -1, -1, -1, 500);
	CreateDynamicObject(972,1529.0009765625,-2289.642578125,-3.9921875,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(978,1315.396484375,-2478.435546875,8.3490982055664,0,350,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1315.380859375,-2486.8037109375,9.711256980896,0,349.99597167969,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1315.3675537109,-2496.7880859375,11.179261207581,0,348,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1315.7127685547,-2505.2531738281,12.557299613953,0,352,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1315.6512451172,-2514.9780273438,13.367994308472,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1318.7210693359,-2523.0236816406,13.215220451355,0,0,133.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1326.3762207031,-2526.9096679688,13.215220451355,0,0,169.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1334.1807861328,-2525.2778320313,13.215220451355,0,0,33.989013671875, -1, -1, -1, 500);
	CreateDynamicObject(978,1341.1109619141,-2520.4816894531,13.387095451355,0,0,213.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1347.8864746094,-2516.0317382813,13.215220451355,0,0,213.98620605469, -1, -1, -1, 500);
	CreateDynamicObject(978,1352.2629394531,-2509.5119628906,13.215220451355,0,0,83.986206054688, -1, -1, -1, 500);
	CreateDynamicObject(978,1350.9801025391,-2400.2353515625,13.215220451355,0,359.99597167969,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1351.1060791016,-2392.3393554688,13.215220451355,0,359.99450683594,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1350.9720458984,-2383.3122558594,13.215220451355,0,359.99450683594,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1351.0013427734,-2376.1103515625,13.215220451355,0,359.99450683594,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1350.9161376953,-2368.79296875,13.215220451355,0,359.99450683594,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1350.8455810547,-2360.4790039063,13.215220451355,0,359.99450683594,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1350.890625,-2351.6022949219,13.215220451355,0,359.99450683594,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1351.2535400391,-2342.9633789063,13.215220451355,0,359.99450683594,265.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1351.8505859375,-2335.5771484375,13.387095451355,0,359.99450683594,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1351.9609375,-2326.8742675781,13.387095451355,0,359.99450683594,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1352.1496582031,-2317.9143066406,13.658576011658,0,359.99450683594,261.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1354.2510986328,-2311.2534179688,13.387095451355,0,359.98901367188,249.98547363281, -1, -1, -1, 500);
	CreateDynamicObject(978,1359.1516113281,-2303.7250976563,13.387095451355,0,359.98352050781,227.98291015625, -1, -1, -1, 500);
	CreateDynamicObject(978,1366.0532226563,-2297.4118652344,13.387095451355,0,359.97802734375,215.98278808594, -1, -1, -1, 500);
	CreateDynamicObject(978,1373.5870361328,-2293.6293945313,13.393081665039,0,359.97802734375,197.98022460938, -1, -1, -1, 500);
	CreateDynamicObject(978,1381.4619140625,-2291.9016113281,13.317161560059,0,359.97802734375,181.97912597656, -1, -1, -1, 500);
	CreateDynamicObject(978,1338.1871337891,-2322.2880859375,13.387095451355,0,359.99450683594,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1337.9851074219,-2313.2568359375,13.387095451355,0,359.99450683594,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1338.9348144531,-2304.0314941406,13.387095451355,0,359.98901367188,261.98547363281, -1, -1, -1, 500);
	CreateDynamicObject(978,1343.4422607422,-2295.5776367188,13.223032951355,0,359.97802734375,227.98278808594, -1, -1, -1, 500);
	CreateDynamicObject(978,1350.5202636719,-2289.0612792969,13.223032951355,0,359.97802734375,215.98022460938, -1, -1, -1, 500);
	CreateDynamicObject(978,1358.7507324219,-2283.9907226563,13.387095451355,0,359.97802734375,205.97912597656, -1, -1, -1, 500);
	CreateDynamicObject(978,1367.4439697266,-2281.46875,13.223032951355,0,359.97802734375,181.9775390625, -1, -1, -1, 500);
	CreateDynamicObject(978,1384.755859375,-2281.224609375,13.331370353699,0,359.97802734375,181.9775390625, -1, -1, -1, 500);
	CreateDynamicObject(978,1375.7512207031,-2281.54296875,13.195140838623,0,359.97802734375,181.9775390625, -1, -1, -1, 500);
	CreateDynamicObject(978,1423.17578125,-2291.9794921875,13.223032951355,0,359.97802734375,181.97204589844, -1, -1, -1, 500);
	CreateDynamicObject(978,1436.7182617188,-2287.1162109375,13.387095451355,0,359.97802734375,267.9775390625, -1, -1, -1, 500);
	CreateDynamicObject(978,1432.1116943359,-2291.7866210938,13.223032951355,0,359.97802734375,181.9775390625, -1, -1, -1, 500);
	CreateDynamicObject(978,1483.6207275391,-2247.93359375,13.387095451355,0,359.97802734375,267.97302246094, -1, -1, -1, 500);
	CreateDynamicObject(978,1484.1120605469,-2239.0505371094,13.223032951355,0,359.97802734375,267.97302246094, -1, -1, -1, 500);
	CreateDynamicObject(978,1483.2509765625,-2257.2438964844,13.387095451355,0,359.97802734375,267.97302246094, -1, -1, -1, 500);
	CreateDynamicObject(978,1467.3900146484,-2191.287109375,13.223032951355,0,359.97802734375,267.97302246094, -1, -1, -1, 500);
	CreateDynamicObject(978,1467.0146484375,-2200.5590820313,13.223032951355,0,359.97802734375,267.97302246094, -1, -1, -1, 500);
	CreateDynamicObject(978,1466.4932861328,-2209.0556640625,13.387095451355,0,359.97802734375,267.97302246094, -1, -1, -1, 500);
	CreateDynamicObject(978,1466.1467285156,-2217.9560546875,13.33403301239,0,359.97802734375,267.97302246094, -1, -1, -1, 500);
	CreateDynamicObject(978,1465.7935791016,-2227.2644042969,13.387095451355,0,359.97802734375,267.97302246094, -1, -1, -1, 500);
	CreateDynamicObject(978,1436.9279785156,-2278.3332519531,13.387095451355,0,359.97802734375,267.97302246094, -1, -1, -1, 500);
	CreateDynamicObject(978,1438.8026123047,-2269.8647460938,13.387095451355,0,359.97802734375,247.97302246094, -1, -1, -1, 500);
	CreateDynamicObject(978,1443.9624023438,-2263.5114746094,13.387095451355,0,359.97802734375,215.97239685059, -1, -1, -1, 500);
	CreateDynamicObject(978,1471.6237792969,-2186.8173828125,13.387095451355,0,359.97802734375,175.96801757813, -1, -1, -1, 500);
	CreateDynamicObject(978,1480.83203125,-2187.4904785156,13.387095451355,0,359.97802734375,179.96801757813, -1, -1, -1, 500);
	CreateDynamicObject(18275,1583.263671875,-2375.1984863281,14.623168945313,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(18275,1583.2470703125,-2381.20703125,14.623168945313,0,0,269.98901367188, -1, -1, -1, 500);
	CreateDynamicObject(978,1579.6691894531,-2378.142578125,13.215220451355,0,359.97802734375,179.97204589844, -1, -1, -1, 500);
	CreateDynamicObject(978,1571.0830078125,-2378.1240234375,13.215220451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1583.6336669922,-2368.2939453125,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1575.3586425781,-2368.3491210938,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1566.9213867188,-2368.3356933594,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1557.9832763672,-2368.3347167969,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1548.8337402344,-2368.3486328125,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1529.6447753906,-2368.3974609375,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1520.2807617188,-2368.4157714844,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1510.9255371094,-2368.3864746094,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1502.0279541016,-2368.2895507813,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1493.0721435547,-2368.3327636719,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1483.7352294922,-2368.4138183594,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1474.6468505859,-2368.1430664063,13.223032951355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1465.2458496094,-2368.4187011719,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1456.4046630859,-2368.1486816406,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1447.3020019531,-2368.1633300781,13.387095451355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1459.7747802734,-2388.1865234375,13.394907951355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1450.9237060547,-2388.1735839844,13.394907951355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1441.8568115234,-2388.16015625,13.394907951355,0,359.97802734375,179.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1589.3240966797,-2370.1442871094,13.387095451355,0,359.97802734375,207.96704101563, -1, -1, -1, 500);
	CreateDynamicObject(978,1589.5701904297,-2386.4790039063,13.387095451355,0,359.97802734375,149.96566772461, -1, -1, -1, 500);
	CreateDynamicObject(972,1311.7449951172,-2465.8166503906,6.65625,0,0,1.9964599609375, -1, -1, -1, 500);
	CreateDynamicObject(980,1357.6027832031,-2474.3430175781,9.4514827728271,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(980,1358.0572509766,-2438.0681152344,9.6220836639404,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(1262,1583.7707519531,-2378.2934570313,14.816867828369,0,0,270, -1, -1, -1, 500);
	CreateDynamicObject(1262,1583.7536621094,-2384.3334960938,14.970602035522,0,0,269.99450683594, -1, -1, -1, 500);
	CreateDynamicObject(1262,1583.7708740234,-2372.3337402344,14.977765083313,0,0,269.99450683594, -1, -1, -1, 500);
//End Airaport LS
//Start Yxo
	CreateDynamicObject(7893,-306.95227050781,1402.8435058594,71.932899475098,0,0,12, -1, -1, -1, 500);
	CreateDynamicObject(978,-309.40182495117,1388.8596191406,72.170631408691,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(978,-300.42276000977,1390.7751464844,72.234085083008,0,0,24, -1, -1, -1, 500);
	CreateDynamicObject(978,-293.5068359375,1396.3572998047,72.227462768555,0,0,53.999633789063, -1, -1, -1, 500);
	CreateDynamicObject(978,-317.61108398438,1391.5170898438,71.941612243652,0,0,321.99774169922, -1, -1, -1, 500);
	CreateDynamicObject(7893,-330.72442626953,1325.1457519531,52.447448730469,0,355.998046875,11.996063232422, -1, -1, -1, 500);
	CreateDynamicObject(978,-349.99371337891,1467.8104248047,64.118225097656,0,2,147.99279785156, -1, -1, -1, 500);
	CreateDynamicObject(978,-358.51574707031,1470.5920410156,63.669467926025,0,4,175.99133300781, -1, -1, -1, 500);
	CreateDynamicObject(978,-367.72424316406,1470.3171386719,62.952327728271,0,5.9990234375,189.98999023438, -1, -1, -1, 500);
	CreateDynamicObject(978,-376.20562744141,1466.9832763672,62.106395721436,0,3.9935302734375,211.98559570313, -1, -1, -1, 500);
	CreateDynamicObject(978,-441.87030029297,1424.1734619141,32.755878448486,0,355.98803710938,211.98118591309, -1, -1, -1, 500);
	CreateDynamicObject(978,-433.38375854492,1430.404296875,33.164211273193,0,3.9830322265625,211.97570800781, -1, -1, -1, 500);
	CreateDynamicObject(978,-432.08401489258,1451.7243652344,33.940948486328,0,1.9830322265625,211.97570800781, -1, -1, -1, 500);
	CreateDynamicObject(978,-424.33963012695,1454.1256103516,34.325408935547,0,1.9830322265625,181.97570800781, -1, -1, -1, 500);
	CreateDynamicObject(7893,-424.5803527832,1436.4514160156,34.176879882813,0,3.9954833984375,213.99160766602, -1, -1, -1, 500);
	CreateDynamicObject(978,-393.99847412109,1745.4727783203,42.208938598633,0,1.9830322265625,241.97570800781, -1, -1, -1, 500);
	CreateDynamicObject(978,-456.11492919922,2036.9091796875,60.481380462646,0,1.9775390625,223.97387695313, -1, -1, -1, 500);
	CreateDynamicObject(978,-887.11926269531,1996.8559570313,60.207649230957,0,1.9720458984375,229.97277832031, -1, -1, -1, 500);
	CreateDynamicObject(978,-1200.9915771484,1811.8073730469,41.558971405029,0,1.966552734375,223.97131347656, -1, -1, -1, 500);
	CreateDynamicObject(978,-1194.3961181641,1818.2525634766,41.558971405029,0,1.9610595703125,223.96728515625, -1, -1, -1, 500);
	CreateDynamicObject(978,-1191.0501708984,1821.5684814453,41.867137908936,0,1.9610595703125,223.96728515625, -1, -1, -1, 500);
	CreateDynamicObject(978,-1186.8742675781,1820.0250244141,41.122287750244,0,1.9610595703125,281.96734619141, -1, -1, -1, 500);
	CreateDynamicObject(978,-1186.2794189453,1811.3973388672,40.853374481201,0,1.95556640625,265.96411132813, -1, -1, -1, 500);
	CreateDynamicObject(978,-1190.9761962891,1806.1387939453,41.589092254639,0,1.9500732421875,185.96246337891, -1, -1, -1, 500);
	CreateDynamicObject(978,-1199.7669677734,1807.0733642578,41.62113571167,0,1.9500732421875,163.96008300781, -1, -1, -1, 500);
	CreateDynamicObject(982,-1166.9846191406,1792.0509033203,39.826969146729,0,348,272, -1, -1, -1, 500);
	CreateDynamicObject(982,-1142.6079101563,1794.1401367188,40.372150421143,0,0,271.99951171875, -1, -1, -1, 500);
	CreateDynamicObject(982,-1196.3542480469,1793.0688476563,41.064880371094,0,0,259.99951171875, -1, -1, -1, 500);
	CreateDynamicObject(978,-1182.1115722656,1791.8126220703,40.558391571045,0,357.95007324219,185.9600982666, -1, -1, -1, 500);
	CreateDynamicObject(982,-1228.2866210938,1810.1536865234,40.917186737061,0,0,151.99691772461, -1, -1, -1, 500);
	CreateDynamicObject(982,-1221.2752685547,1796.6453857422,41.217910766602,0,0,81.995819091797, -1, -1, -1, 500);
	CreateDynamicObject(982,-1205.2993164063,1836.5607910156,41.402305603027,0,0,125.99584960938, -1, -1, -1, 500);
	CreateDynamicObject(982,-1189.9735107422,1848.1170654297,40.957313537598,0,0,125.9912109375, -1, -1, -1, 500);
	CreateDynamicObject(982,-1179.9174804688,1838.5104980469,41.371025085449,0,0,33.991180419922, -1, -1, -1, 500);
	CreateDynamicObject(981,-437.40911865234,1428.0072021484,33.821090698242,0,358,34, -1, -1, -1, 500);
	CreateDynamicObject(18275,-299.11724853516,1507.1201171875,76.615379333496,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(18275,-305.05059814453,1506.9544677734,76.621383666992,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(978,-314.75244140625,1507.3291015625,75.403747558594,0,0,359.99279785156, -1, -1, -1, 500);
	CreateDynamicObject(978,-292.81143188477,1511.5168457031,75.400352478027,0,0,49.989013671875, -1, -1, -1, 500);
	CreateDynamicObject(1262,-302.02597045898,1507.6273193359,76.386672973633,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(1262,-296.10342407227,1507.6271972656,76.404273986816,0,0,0, -1, -1, -1, 500);
	CreateDynamicObject(1262,-307.96017456055,1507.4616699219,76.443702697754,0,0,0, -1, -1, -1, 500);
//End Yxo

/*
CreateVehicle(493,-2119.36132812,1429.68164062,0.00000000,0.00000000,103,33,15); //Jetmax
CreateVehicle(484,-2103.44433594,1418.23925781,0.00000000,89.72534180,1,36,15); //Marquis
CreateVehicle(520,-2878.77954102,2417.91772461,201.80723572,0.00000000,-1,-1,15); //Hydra
CreateVehicle(519,-1267.08605957,-132.24523926,15.14850998,39.87994385,-1,-1,15); //Shamal
CreateVehicle(511,-1250.61779785,-114.29029083,15.65986347,43.85003662,24,65,15); //Beagle
CreateVehicle(460,-2108.49169922,1442.49707031,1.84999883,89.72985840,79,1,15); //Skimmer
CreateVehicle(476,-1272.48730469,-62.43284607,15.31634521,95.68481445,3,1,15); //Rustler
CreateVehicle(476,-1261.77075195,-76.16324615,15.31634521,95.68481445,6,1,15); //Rustler
CreateVehicle(469,-1237.85083008,-38.94616699,14.24843788,39.88000488,-1,-1,15); //Sparrow
CreateVehicle(487,-1186.90332031,24.08962250,14.41343784,39.88000488,103,1,15); //Maverick
CreateVehicle(411,-2084.30908203,1407.84997559,6.90156221,181.03588867,106,1,15); //Infernus
CreateVehicle(422,-1990.76086426,244.57569885,35.13110352,0.00000000,-1,-1,15); //Bobcat
CreateVehicle(451,-1957.47656250,301.94329834,35.23312378,121.75976562,-1,-1,15); //Turismo
CreateVehicle(541,-1956.30932617,293.90600586,35.16875076,51.88000488,65,1,15); //Bullet
CreateVehicle(409,-2063.77148438,1393.76306152,7.02566576,179.45959473,-1,-1,15); //Stretch
CreateVehicle(525,-1927.17248535,234.37858582,34.43249130,91.71484375,-1,-1,15); //Tow Truck
CreateVehicle(490,-2076.64648438,1369.61328125,7.42168903,268.33044434,-1,1,15); //FBI Rancher
CreateVehicle(490,-2086.31640625,1369.84606934,7.42168903,268.33007812,-1,1,15); //FBI Rancher
CreateVehicle(404,-2154.29833984,1063.21447754,79.83000183,270.67565918,-1,-1,15); //Perrenial
CreateVehicle(479,-2155.80761719,1044.42382812,79.90457916,266.25524902,-1,-1,15); //Regina
CreateVehicle(522,-2088.50683594,1409.72937012,6.76194000,178.51043701,-1,-1,15); //NRG-500
CreateVehicle(471,-2077.70434570,1406.15686035,6.67663574,188.66052246,6,1,15); //Quad
CreateVehicle(481,-2076.54785156,1409.51196289,6.71041203,272.30029297,-1,-1,15); //BMX
CreateVehicle(510,-2062.50732422,1434.82800293,6.79747772,210.72058105,-1,-1,15); //Mountain Bike
CreateVehicle(571,-2137.51757812,-87.67539978,34.65259552,316.33032227,-1,-1,15); //Kart
CreateVehicle(571,-2137.79418945,-90.41070557,34.65259552,316.32934570,-1,-1,15); //Kart
CreateVehicle(571,-2137.51196289,-93.14572144,34.65259552,316.32934570,-1,-1,15); //Kart
CreateVehicle(557,-2153.12353516,-106.79659271,36.19541168,264.31518555,-1,-1,15); //Monster B
CreateVehicle(557,-2152.86914062,-100.53089142,36.19541168,264.31457520,-1,-1,15); //Monster B
CreateVehicle(424,-2120.21240234,-83.61438751,35.16753769,93.78991699,-1,-1,15); //BF Injection
CreateVehicle(494,-1952.35705566,259.21267700,35.44392776,43.75976562,-1,-1,15); //Hotring
CreateVehicle(502,-1951.03601074,263.17370605,35.43824005,51.78979492,-1,-1,15); //Hotring Racer A
CreateVehicle(503,-1950.57336426,267.81250000,35.43824005,55.66967773,-1,-1,15); //Hotring Racer B
CreateVehicle(434,-1951.61108398,262.19821167,41.19632721,310.15014648,-1,-1,15); //Hotknife
CreateVehicle(462,-1957.50659180,306.17102051,40.71730042,230.39038086,-1,-1,15); //Faggio
CreateVehicle(463,-1951.30187988,293.37457275,40.66408157,0.00000000,-1,-1,15); //Freeway
CreateVehicle(468,-1953.16333008,307.21957397,40.80707932,89.59497070,-1,-1,15); //Sanchez
CreateVehicle(521,-1951.21960449,301.45806885,40.70745850,0.00000000,-1,-1,15); //FCR-900
CreateVehicle(567,-1952.15527344,270.90560913,41.03175354,232.42041016,-1,-1,15); //Savanna
CreateVehicle(510,-1958.77087402,289.04071045,40.74292374,0.00000000,-1,-1,15); //Mountain Bike
CreateVehicle(481,-1959.07763672,293.35110474,40.65585709,0.00000000,-1,-1,15); //BMX
CreateVehicle(402,-2071.95751953,1406.22790527,7.04163551,180.54052734,-1,1,15); //Buffalo
CreateVehicle(562,-2090.33251953,1394.71350098,6.78623581,268.69067383,1,1,15); //Elegy
CreateVehicle(562,-2090.47412109,1390.04394531,6.78623581,268.68713379,-1,-1,15); //Elegy

CreateStreamObject(16780,-1950.37841797,267.52728271,44.25432205,0.00000000,0.00000000,0.00000000,500); //object(ufo_light03) (1)
CreateStreamObject(16780,-1950.37792969,267.52636719,39.05423355,0.00000000,0.00000000,0.00000000,500); //object(ufo_light03) (2)
CreateStreamObject(7921,-1896.34912109,239.46054077,41.44421387,0.00000000,0.00000000,268.38500977,500); //object(vgwstnewall6904) (1)
CreateStreamObject(7921,-1899.52734375,239.53236389,41.44421387,0.00000000,0.00000000,268.38500977,500); //object(vgwstnewall6904) (2)
CreateStreamObject(7921,-1899.52978516,239.55711365,44.01921844,0.00000000,0.00000000,268.38500977,500); //object(vgwstnewall6904) (3)
CreateStreamObject(7921,-1896.20739746,239.49864197,44.01921844,0.00000000,0.00000000,268.38500977,500); //object(vgwstnewall6904) (4)
CreateStreamObject(1523,-1965.17456055,294.72244263,34.46875000,0.00000000,0.00000000,268.53527832,500); //object(gen_doorext10) (1)
CreateStreamObject(3488,-2071.59179688,1419.79199219,12.58601093,0.00000000,0.00000000,0.00000000,500); //object(vegasxrexhse07) (1)
CreateStreamObject(3446,-2087.25488281,1422.36914062,9.52872658,0.00000000,0.00000000,0.00000000,500); //object(vegasxrexhse10) (2)
CreateStreamObject(2114,-2078.18823242,1404.38781738,6.24794579,0.00000000,21.75000000,15.87988281,500); //object(basketball) (1)
CreateStreamObject(16151,-2086.39062500,1435.44824219,6.42656374,0.00000000,0.00000000,89.58801270,500); //object(ufo_bar) (1)
CreateStreamObject(1668,-2089.57128906,1434.87500000,7.19868565,0.00000000,0.00000000,0.00000000,500); //object(propvodkabotl1) (1)
CreateStreamObject(1543,-2088.74121094,1434.44396973,7.03198195,0.00000000,0.00000000,0.00000000,500); //object(cj_beer_b_2) (1)
CreateStreamObject(1486,-2086.51708984,1434.33630371,7.17693090,0.00000000,0.00000000,0.00000000,500); //object(dyn_beer_1) (1)
CreateStreamObject(2921,-2064.69921875,1414.79980469,10.10163593,0.00000000,0.00000000,92.34558105,500); //object(kmb_cam) (1)
CreateStreamObject(2922,-2065.31542969,1417.40234375,7.18444920,0.00000000,0.00000000,180.53833008,500); //object(kmb_keypad) (1)
CreateStreamObject(3115,-2106.00488281,1430.48144531,0.25000003,0.00000000,0.00000000,1.97753906,500); //object(carrier_lift1_sfse) (1)
CreateStreamObject(8887,-2106.77124023,1430.36572266,1.18061900,0.00000000,0.00000000,271.84790039,500); //object(bush08_lvs) (2)
CreateStreamObject(2453,-2089.79687500,1435.96972656,7.43033409,0.00000000,0.00000000,1.00000000,500); //object(cj_pizza_dispf) (1)
CreateStreamObject(632,-2093.52441406,1435.53710938,6.52656412,0.00000000,0.00000000,0.00000000,500); //object(veg_palmkb7) (1)
CreateStreamObject(640,-2068.49414062,1366.90820312,6.79769993,0.00000000,0.00000000,268.81347656,500); //object(kb_planter_bush2) (1)
CreateStreamObject(1428,-2078.87597656,1433.45593262,7.66949224,351.00000000,359.75000000,268.24005127,500); //object(dyn_ladder) (1)
CreateStreamObject(8613,-2100.39868164,1434.07580566,3.84806585,0.00000000,0.00000000,270.31530762,500); //object(vgssstairs03_lvs) (1)
CreateStreamObject(10183,-2091.92382812,1387.17492676,6.11350536,0.00000000,0.00000000,135.51998901,500); //object(ferspaces) (1)
CreateStreamObject(1290,-2080.15527344,1403.16406250,12.05005836,0.00000000,0.00000000,0.00000000,500); //object(lamppost2) (1)
CreateStreamObject(1297,-2093.61889648,1368.99963379,9.63642788,0.00000000,0.00000000,218.38806152,500); //object(lamppost1) (1)
CreateStreamObject(1297,-2061.95458984,1373.99694824,9.63642788,0.00000000,0.00000000,1.20849609,500); //object(lamppost1) (2)
CreateStreamObject(1257,-2070.55615234,1328.77868652,7.31825447,0.00000000,0.00000000,57.78997803,500); //object(bustopm) (1)
CreateStreamObject(1215,-2115.47363281,1438.63476562,0.90197951,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (1)
CreateStreamObject(1215,-2115.96362305,1430.47827148,0.90197951,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (2)
CreateStreamObject(1215,-2097.56933594,1421.82910156,0.90197951,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (3)
CreateStreamObject(1215,-2107.42944336,1421.43493652,0.90197951,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (4)
CreateStreamObject(1215,-2115.15478516,1421.94824219,0.90197951,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (6)
CreateStreamObject(1215,-2108.21923828,1438.81506348,0.90197951,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (7)
CreateStreamObject(1215,-2098.44018555,1439.28039551,0.90197951,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (8)
CreateStreamObject(1215,-2079.18652344,1435.53710938,6.67218971,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2095.31445312,1435.58300781,6.67218971,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (10)
CreateStreamObject(1223,-2095.68164062,1388.93554688,7.35156250,0.00000000,0.00000000,0.00000000,500); //object(lampost_coast) (1)
CreateStreamObject(1223,-2060.64672852,1387.54125977,6.77656507,0.00000000,0.00000000,183.24645996,500); //object(lampost_coast) (2)
CreateStreamObject(1432,-2082.81152344,1430.98730469,6.10156250,0.00000000,0.00000000,69.74121094,500); //object(dyn_table_2) (1)
CreateStreamObject(1670,-2082.88574219,1431.14062500,6.71690035,0.00000000,0.00000000,350.07507324,500); //object(propcollecttable) (1)
CreateStreamObject(1368,-2062.53955078,1401.58496094,6.79129887,0.00000000,0.00000000,320.12011719,500); //object(cj_blocker_bench) (1)
CreateStreamObject(1569,-2082.62329102,1428.65539551,6.21142292,0.00000000,0.00000000,179.36987305,500); //object(adam_v_door) (1)
CreateStreamObject(1472,-2096.07934570,1430.53173828,6.51672840,0.00000000,0.00000000,91.24505615,500); //object(dyn_porch_1) (1)
CreateStreamObject(1472,-2096.35156250,1430.57226562,6.74595928,0.00000000,0.00000000,90.76007080,500); //object(dyn_porch_1) (2)
CreateStreamObject(3850,-2096.13427734,1434.70715332,7.96242046,0.00000000,0.00000000,0.00000000,500); //object(carshowbann_sfsx) (1)
CreateStreamObject(3850,-2096.13256836,1427.28796387,7.96242046,0.00000000,0.00000000,0.00000000,500); //object(carshowbann_sfsx) (2)
CreateStreamObject(3850,-2096.12329102,1423.85437012,7.96242046,0.00000000,0.00000000,0.00000000,500); //object(carshowbann_sfsx) (3)
CreateStreamObject(3850,-2096.11499023,1420.41943359,7.96242046,0.00000000,0.00000000,0.00000000,500); //object(carshowbann_sfsx) (4)
CreateStreamObject(3850,-2096.05468750,1417.06347656,7.96242046,0.00000000,0.00000000,0.00000000,500); //object(carshowbann_sfsx) (5)
CreateStreamObject(8652,-2080.58203125,1366.45996094,6.94160271,0.00000000,0.00000000,357.60498047,500); //object(shbbyhswall12_lvs) (1)
CreateStreamObject(8652,-2080.58203125,1366.45996094,9.76657677,0.00000000,0.00000000,357.60498047,500); //object(shbbyhswall12_lvs) (5)
CreateStreamObject(8652,-2080.58203125,1366.45996094,10.69156265,0.00000000,0.00000000,357.60498047,500); //object(shbbyhswall12_lvs) (6)
CreateStreamObject(8652,-2095.81445312,1381.83984375,7.04249954,0.00000000,0.00000000,270.12634277,500); //object(shbbyhswall12_lvs) (7)
CreateStreamObject(8652,-2095.81445312,1381.83984375,8.04250240,0.00000000,0.00000000,270.12634277,500); //object(shbbyhswall12_lvs) (8)
CreateStreamObject(8652,-2095.81445312,1381.83984375,8.99248791,0.00000000,0.00000000,270.12634277,500); //object(shbbyhswall12_lvs) (9)
CreateStreamObject(8652,-2095.81445312,1381.83984375,9.96747303,0.00000000,0.00000000,270.12634277,500); //object(shbbyhswall12_lvs) (10)
CreateStreamObject(8652,-2095.81445312,1381.83984375,10.71746159,0.00000000,0.00000000,270.12634277,500); //object(shbbyhswall12_lvs) (12)
CreateStreamObject(8652,-2060.61621094,1380.59765625,7.04160309,0.00000000,0.00000000,270.17028809,500); //object(shbbyhswall12_lvs) (13)
CreateStreamObject(8652,-2060.61621094,1380.59765625,7.91660595,0.00000000,0.00000000,270.17028809,500); //object(shbbyhswall12_lvs) (14)
CreateStreamObject(8652,-2060.61621094,1380.59765625,8.89159298,0.00000000,0.00000000,270.17028809,500); //object(shbbyhswall12_lvs) (15)
CreateStreamObject(8652,-2060.61621094,1380.59765625,9.89157772,0.00000000,0.00000000,270.17028809,500); //object(shbbyhswall12_lvs) (16)
CreateStreamObject(8652,-2060.61621094,1380.59765625,10.64156628,0.00000000,0.00000000,270.17028809,500); //object(shbbyhswall12_lvs) (18)
CreateStreamObject(1290,-2075.24194336,1344.59948730,12.05005836,0.00000000,0.00000000,0.00000000,500); //object(lamppost2) (1)
CreateStreamObject(640,-2073.75830078,1367.01159668,6.79769993,0.00000000,0.00000000,268.81347656,500); //object(kb_planter_bush2) (1)
CreateStreamObject(640,-2079.04687500,1367.11450195,6.79769993,0.00000000,0.00000000,268.81347656,500); //object(kb_planter_bush2) (1)
CreateStreamObject(640,-2089.44335938,1367.32128906,6.79769993,0.00000000,0.00000000,268.81347656,500); //object(kb_planter_bush2) (1)
CreateStreamObject(640,-2084.18725586,1367.20556641,6.79769993,0.00000000,0.00000000,268.81347656,500); //object(kb_planter_bush2) (1)
CreateStreamObject(640,-2092.74926758,1367.37426758,6.79769993,0.00000000,0.00000000,268.81347656,500); //object(kb_planter_bush2) (1)
CreateStreamObject(8652,-2080.58203125,1366.45996094,7.94157648,0.00000000,0.00000000,357.59399414,500); //object(shbbyhswall12_lvs) (20)
CreateStreamObject(8652,-2080.58203125,1366.45996094,8.94158936,0.00000000,0.00000000,357.59948730,500); //object(shbbyhswall12_lvs) (21)
CreateStreamObject(8652,-2060.56738281,1388.26892090,6.96660233,0.00000000,0.00000000,270.17028809,500); //object(shbbyhswall12_lvs) (22)
CreateStreamObject(8652,-2060.56738281,1388.26855469,7.94160604,0.00000000,0.00000000,270.16479492,500); //object(shbbyhswall12_lvs) (23)
CreateStreamObject(8652,-2060.56738281,1388.26855469,8.81659412,0.00000000,0.00000000,270.17028809,500); //object(shbbyhswall12_lvs) (24)
CreateStreamObject(8652,-2060.56738281,1388.26855469,9.71658039,0.00000000,0.00000000,270.16479492,500); //object(shbbyhswall12_lvs) (25)
CreateStreamObject(8652,-2060.56738281,1388.26855469,10.66656590,0.00000000,0.00000000,270.17028809,500); //object(shbbyhswall12_lvs) (26)
CreateStreamObject(1215,-2066.59033203,1366.76293945,7.06560802,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2072.22070312,1366.93688965,7.06560802,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2080.32666016,1367.00683594,7.06560802,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2087.74609375,1367.40820312,7.06560802,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2094.82495117,1367.64355469,7.06560802,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2061.00927734,1372.22192383,6.66560650,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2061.33764648,1379.82934570,6.61560631,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2061.52709961,1387.56896973,6.61560631,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2061.49658203,1395.02099609,6.59060621,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2094.69531250,1396.15417480,6.59060621,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2094.80346680,1388.90173340,6.61560631,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2094.62768555,1381.13330078,6.64060640,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2095.33520508,1373.38781738,6.54060602,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2061.25366211,1402.30871582,6.59060621,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2097.20092773,1430.10363770,0.90197951,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (3)
CreateStreamObject(8652,-2095.86767578,1397.15234375,7.04249954,0.00000000,0.00000000,270.12634277,500); //object(shbbyhswall12_lvs) (27)
CreateStreamObject(8652,-2095.86718750,1397.15234375,7.96750259,0.00000000,0.00000000,270.12634277,500); //object(shbbyhswall12_lvs) (28)
CreateStreamObject(8652,-2095.86718750,1397.15234375,8.89248943,0.00000000,0.00000000,270.12634277,500); //object(shbbyhswall12_lvs) (29)
CreateStreamObject(8652,-2095.86718750,1397.15234375,9.86747456,0.00000000,0.00000000,270.12634277,500); //object(shbbyhswall12_lvs) (30)
CreateStreamObject(8652,-2095.86376953,1397.17565918,10.69246197,0.00000000,0.00000000,270.12634277,500); //object(shbbyhswall12_lvs) (31)
CreateStreamObject(1215,-2067.31713867,1365.25537109,6.66560650,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(1215,-2060.61328125,1365.53808594,6.69060659,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(8990,-2094.74707031,1400.20996094,6.80363417,0.00000000,0.00000000,89.59350586,500); //object(bush11_lvs) (1)
CreateStreamObject(8990,-2094.63940430,1386.50683594,6.80363417,0.00000000,0.00000000,89.59155273,500); //object(bush11_lvs) (2)
CreateStreamObject(8990,-2094.94140625,1373.89428711,6.80453062,0.00000000,0.00000000,269.63793945,500); //object(bush11_lvs) (3)
CreateStreamObject(8990,-2061.15991211,1373.08874512,6.80453062,0.00000000,0.00000000,269.62292480,500); //object(bush11_lvs) (4)
CreateStreamObject(8990,-2061.36767578,1387.10498047,6.80453062,0.00000000,0.00000000,269.62097168,500); //object(bush11_lvs) (5)
CreateStreamObject(8990,-2061.48461914,1397.16857910,6.80453062,0.00000000,0.00000000,271.60595703,500); //object(bush11_lvs) (6)
CreateStreamObject(3850,-2096.05761719,1413.64196777,7.96242046,0.00000000,0.00000000,0.00000000,500); //object(carshowbann_sfsx) (5)
CreateStreamObject(1215,-2095.31640625,1366.25195312,6.66560650,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (9)
CreateStreamObject(632,-2081.52709961,1429.86791992,6.52656412,0.00000000,0.00000000,177.15612793,500); //object(veg_palmkb7) (1)
CreateStreamObject(2434,-2089.77124023,1434.54235840,6.03337717,0.00000000,0.00000000,272.31530762,500); //object(cj_ff_conter_2b) (1)
CreateStreamObject(2435,-2089.81347656,1435.45812988,6.02547932,0.00000000,0.00000000,273.77026367,500); //object(cj_ff_conter_2) (1)
CreateStreamObject(2435,-2089.87768555,1436.33068848,6.02547932,0.00000000,0.00000000,274.75329590,500); //object(cj_ff_conter_2) (2)
CreateStreamObject(2435,-2088.63574219,1434.41687012,6.02547932,0.00000000,0.00000000,1.60766602,500); //object(cj_ff_conter_2) (4)
CreateStreamObject(2435,-2087.78417969,1434.43933105,6.02547932,0.00000000,0.00000000,1.35681152,500); //object(cj_ff_conter_2) (5)
CreateStreamObject(2435,-2086.87988281,1434.45227051,6.02547932,0.00000000,0.00000000,0.35681152,500); //object(cj_ff_conter_2) (6)
CreateStreamObject(2435,-2085.97900391,1434.45605469,6.02547932,0.00000000,0.00000000,0.33923340,500); //object(cj_ff_conter_2) (8)
CreateStreamObject(2435,-2085.14648438,1434.45288086,6.02547932,0.00000000,0.00000000,359.35168457,500); //object(cj_ff_conter_2) (9)
CreateStreamObject(2435,-2084.22460938,1434.44787598,6.02547932,0.00000000,0.00000000,359.36669922,500); //object(cj_ff_conter_2) (10)
CreateStreamObject(2434,-2083.30590820,1434.41430664,6.03337717,0.00000000,0.00000000,355.90722656,500); //object(cj_ff_conter_2b) (3)
CreateStreamObject(2435,-2083.05541992,1435.45812988,6.02656221,0.00000000,0.00000000,83.91992188,500); //object(cj_ff_conter_2) (11)
CreateStreamObject(2406,-2092.34204102,1436.29602051,7.35624838,0.00000000,0.00000000,0.00000000,500); //object(cj_surf_board3) (1)
CreateStreamObject(1461,-2115.95776367,1436.23876953,1.38759613,0.00000000,0.00000000,270.27026367,500); //object(dyn_life_p) (1)
CreateStreamObject(1461,-2115.81445312,1424.19335938,1.38759613,0.00000000,0.00000000,270.26916504,500); //object(dyn_life_p) (2)
CreateStreamObject(1432,-2087.10424805,1430.40637207,6.10156250,0.00000000,0.00000000,115.48608398,500); //object(dyn_table_2) (1)
CreateStreamObject(8990,-2088.03979492,1366.11169434,6.67863369,0.00000000,0.00000000,358.28173828,500); //object(bush11_lvs) (2)
CreateStreamObject(8990,-2074.06103516,1365.40551758,6.67863369,0.00000000,0.00000000,356.29565430,500); //object(bush11_lvs) (2)
CreateStreamObject(1215,-2062.20605469,1435.76525879,6.61595917,0.00000000,0.00000000,0.00000000,500); //object(bollardlight) (1)
AddAutoGate(988,-2063.2861328125,1365.9400634766,6.6015644073486,0.00000000,0.00000000,0.00000000, -2063.2861328125,1365.9400634766,1.6015644073486, "[DRC]", 4);
*/

KillTimer(timeobject);
	return 1;
}

public object22()
{
	//отключение трасс
	if(LineStat[1] == 0) { LineOff1(); }
	if(LineStat[2] == 0) { LineOff2(); }
	if(LineStat[3] == 0) { LineOff3(); }
	if(LineStat[4] == 0) { LineOff4(); }
	if(LineStat[5] == 0) { LineOff5(); }
	KillTimer(timeobject22);
	return 1;
}

